// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _010_Test_Oppgavetildeling_Arbeidsplan_GATP_1679
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v18_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AddMonroeRoleStep3
        /// </summary>
        public void AddMonroeRoleStep3()
        {
            #region Variable Declarations
            DXCell uIMonroeJamesCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpEmployeesDockPanel.UIControlContainer1Custom.UIEmployeeListViewCustom.UIGcEmployeesTable.UIMonroeJamesCell;
            #endregion

            // Double-Click 'Monroe, James' cell
            Mouse.DoubleClick(uIMonroeJamesCell, new Point(51, 12));
        }
        
        /// <summary>
        /// AddMultipleRolesRoleStep25
        /// </summary>
        public void AddMultipleRolesRoleStep25()
        {
            #region Variable Declarations
            DXButton uILeggtilButton = this.UIOppgavetildelingWindow.UIGcContentClient.UILeggtilButton;
            DXCell uIALLEMÅKRAVCell = this.UIVelgoppgaverWindow.UIGcRolesTable.UIALLEMÅKRAVCell;
            DXCell uIKONTERINGCell = this.UIVelgoppgaverWindow.UIGcRolesTable.UIKONTERINGCell;
            DXButton uIOKButton = this.UIVelgoppgaverWindow.UIOKButton;
            #endregion

            // Click 'Legg til' button
            Mouse.Click(uILeggtilButton, new Point(1, 1));

            // Click 'ALLE MÅ KRAV' cell
            Mouse.Click(uIALLEMÅKRAVCell, new Point(46, 9));

            // Click 'KONTERING' cell while pressing Control
            Mouse.Click(uIKONTERINGCell, MouseButtons.Left, ModifierKeys.Control, new Point(52, 5));

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// AddRoleRoleStep22
        /// </summary>
        public void AddRoleRoleStep22()
        {
            #region Variable Declarations
            DXButton uILeggtilButton = this.UIOppgavetildelingWindow.UIGcContentClient.UILeggtilButton;
            DXCell uIEKSKLKANIKKECell = this.UIVelgoppgaverWindow.UIGcRolesTable.UIEKSKLKANIKKECell;
            DXButton uIOKButton = this.UIVelgoppgaverWindow.UIOKButton;
            #endregion

            // Click 'Legg til' button
            Mouse.Click(uILeggtilButton, new Point(1, 1));

            // Click 'EKSKL KAN IKKE' cell
            Mouse.Click(uIEKSKLKANIKKECell, new Point(41, 9));

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// AddRoleStep24
        /// </summary>
        public void AddRoleStep24()
        {
            #region Variable Declarations
            DXButton uILeggtilButton = this.UIOppgavetildelingWindow.UIGcContentClient.UILeggtilButton;
            DXCell uIKOMPETANSEMÅCell = this.UIVelgoppgaverWindow.UIGcRolesTable.UIKOMPETANSEMÅCell;
            DXButton uIOKButton = this.UIVelgoppgaverWindow.UIOKButton;
            #endregion

            // Click 'Legg til' button
            Mouse.Click(uILeggtilButton, new Point(1, 1));

            // Click 'KOMPETANSE MÅ' cell
            Mouse.Click(uIKOMPETANSEMÅCell, new Point(59, 6));

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// AddRoleToAdamsStep_20
        /// </summary>
        public void AddRoleToAdamsStep_20()
        {
            #region Variable Declarations
            DXTestControl uILeftSeparator = this.UIOppgavetildelingWindow6.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UILeftSeparator;
            DXCell uIItemCell4 = this.UIOppgavetildelingWindow5.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell4;
            DXCell uIItem1AdamsJohnCell = this.UIOppgavetildelingWindow6.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpEmployeesDockPanel.UIControlContainer1Custom.UIEmployeeListViewCustom.UIGcEmployeesTable.UIItem1AdamsJohnCell;
            DXCell uIItemCell2 = this.UIOppgavetildelingWindow5.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell2;
            #endregion

            // Move 'Left' separator to cell
            uIItemCell4.EnsureClickable(new Point(209, 0));
            Mouse.StartDragging(uILeftSeparator, new Point(1, 60));
            Mouse.StopDragging(uIItemCell4, new Point(209, 0));

            // Move '1. Adams, John' cell to cell
            uIItemCell2.EnsureClickable(new Point(95, 7));
            Mouse.StartDragging(uIItem1AdamsJohnCell, new Point(63, 9));
            Mouse.StopDragging(uIItemCell2, new Point(95, 7));
        }
        
        /// <summary>
        /// AddRoleToPierceStep28
        /// </summary>
        public void AddRoleToPierceStep28()
        {
            #region Variable Declarations
            DXCell uIAJacksonAndrew150023Cell = this.UIOppgavetildelingWindow9.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIAJacksonAndrew150023Cell;
            DXCell uIItemCell = this.UIOppgavetildelingWindow5.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell;
            #endregion

            // Move '( )A - Jackson, Andrew (15:00 - 23:00)
            //( )A - Jefferson, Thomas (15:00 - 23:00)
            //( )D - Adams, John (08:00 - 16:00)
            //( )D - Adams, John Quincy (08:00 - 16:00)
            //( )D - Harrison, William H (08:00 - 16:00)
            //( )GV1 - Fillmore, Millard (08:00 - 16:00)
            //(x)KK1 - Pierce, Franklin (08:00 - 16:00)
            //( )KK1 - Pierce, Franklin (16:00 - 22:00)
            //( )KK1 - Pierce, Franklin (22:00 - 08:00)
            //( )N - Knox Polk, James (22:00 - 08:00)
            //( )OPPG1 - Madison, James (12:00 - 16:00)' cell to cell
            uIItemCell.EnsureClickable(new Point(102, 8));
            Mouse.StartDragging(uIAJacksonAndrew150023Cell, new Point(101, 118));
            Mouse.StopDragging(uIItemCell, new Point(102, 8));
        }
        
        /// <summary>
        /// AssignRolePatternToTaylorStep12
        /// </summary>
        public void AssignRolePatternToTaylorStep12()
        {
            #region Variable Declarations
            DXCell uID08001600Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600Cell;
            DXCell uIOVER4510Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpRoleCodePatternsDockPanel.UIDockPanel3_ContainerCustom.UIRoleCodePatternListVCustom.UIGcRoleCodePatternsTable.UIOVER4510Cell;
            DXButton uISimpleButtonButton = this.UIItemWindow.UIPanelControlClient.UIViewHostCustom.UIPanelControlClient.UIRoleCodePatternAssigCustom.UIPanelControlClient.UISimpleButtonButton;
            #endregion

            // Click '( )D (08:00 - 16:00)' cell
            Mouse.Click(uID08001600Cell, new Point(105, 10));

            // Double-Click 'OVER 4510' cell
            Mouse.DoubleClick(uIOVER4510Cell, new Point(30, 8));

            // Click 'SimpleButton' button
            Mouse.Click(uISimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// AssignRoleToAdamsStep10
        /// </summary>
        public void AssignRoleToAdamsStep10()
        {
            #region Variable Declarations
            DXCell uIItemCell2 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell2;
            DXCell uIAdamsJohnCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpEmployeesDockPanel.UIControlContainer1Custom.UIEmployeeListViewCustom.UIGcEmployeesTable.UIAdamsJohnCell;
            DXCell uIItemCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDpAssignmentDockPanel.UIControlContainer5Custom.UIAssignmentPropertiesCustom.UIVhContentCustom.UIPcViewClient.UICreateAssignmentsVieCustom.UIGcAssignmentPeriodsTable.UIItemCell;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell2, new Point(63, 11));

            // Click 'Adams, John' cell
            Mouse.Click(uIAdamsJohnCell, new Point(79, 9));

            // Click cell
            Mouse.Click(uIItemCell, new Point(16, 8));
        }
        
        /// <summary>
        /// AssignRoleToAdamsStep11
        /// </summary>
        public void AssignRoleToAdamsStep11()
        {
            #region Variable Declarations
            DXCell uIXDAdamsJohn10001200Cell = this.UIOppgavetildelingWindow4.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXDAdamsJohn10001200Cell;
            DXCell uIItemCell3 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell3;
            #endregion

            // Move '(x)D - Adams, John (10:00 - 12:00)' cell to cell
            uIItemCell3.EnsureClickable(new Point(95, 7));
            Mouse.StartDragging(uIXDAdamsJohn10001200Cell, new Point(89, 3));
            Mouse.StopDragging(uIItemCell3, new Point(95, 7));
        }
        
        /// <summary>
        /// AssignRoleToAdamsStep15
        /// </summary>
        public void AssignRoleToAdamsStep15()
        {
            #region Variable Declarations
            DXCell uID08001600Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600Cell1;
            DXCell uIKUNMANDAGCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpRoleCodesDockPanel.UIDockPanel2_ContainerCustom.UIRoleCodeListViewCustom.UIGcRoleCodesTable.UIKUNMANDAGCell;
            #endregion

            // Click '( )D (08:00 - 16:00)' cell
            Mouse.Click(uID08001600Cell1, new Point(105, 20));

            // Double-Click 'KUN MANDAG' cell
            Mouse.DoubleClick(uIKUNMANDAGCell, new Point(51, 9));
        }
        
        /// <summary>
        /// AssignRoleToAdamsStep9
        /// </summary>
        public void AssignRoleToAdamsStep9()
        {
            #region Variable Declarations
            DXCell uIItemCell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell1;
            DXCell uIAdamsJohnCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpEmployeesDockPanel.UIControlContainer1Custom.UIEmployeeListViewCustom.UIGcEmployeesTable.UIAdamsJohnCell;
            DXCell uIItemCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDpAssignmentDockPanel.UIControlContainer5Custom.UIAssignmentPropertiesCustom.UIVhContentCustom.UIPcViewClient.UICreateAssignmentsVieCustom.UIGcAssignmentPeriodsTable.UIItemCell;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell1, new Point(47, 7));

            // Click 'Adams, John' cell
            Mouse.Click(uIAdamsJohnCell, new Point(65, 10));

            // Click cell
            Mouse.Click(uIItemCell, new Point(17, 8));
        }
        
        /// <summary>
        /// AssignRoleToJacksonStep8
        /// </summary>
        public void AssignRoleToJacksonStep8()
        {
            #region Variable Declarations
            DXCell uIXAJacksonAndrew15002Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXAJacksonAndrew15002Cell;
            DXCell uIAJacksonAndrew150023Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIAJacksonAndrew150023Cell;
            #endregion

            // Move '(x)A - Jackson, Andrew (15:00 - 23:00)
            //( )A - Jefferson, Thomas (15:00 - 23:00)
            //( )D - Adams, John (08:00 - 16:00)
            //( )D - Adams, John Quincy (08:00 - 16:00)
            //( )D - Buchanan, James (08:00 - 16:00)
            //( )D - Harrison, William H (08:00 - 16:00)
            //( )D - Taylor, Zachary (08:00 - 16:00)
            //( )KK1 - Pierce, Franklin (08:00 - 16:00)
            //( )KK1 - Pierce, Franklin (16:00 - 22:00)
            //( )KK1 - Pierce, Franklin (22:00 - 08:00)
            //( )N - Knox Polk, James (22:00 - 08:00)
            //( )OPPG1 - Madison, James (12:00 - 16:00)' cell to '( )A - Jackson, Andrew (15:00 - 23:00)' cell
            uIAJacksonAndrew150023Cell.EnsureClickable(new Point(91, 10));
            Mouse.StartDragging(uIXAJacksonAndrew15002Cell, new Point(89, 11));
            Mouse.StopDragging(uIAJacksonAndrew150023Cell, new Point(91, 10));
        }
        
        /// <summary>
        /// AssignRoleToPolkStep19
        /// </summary>
        public void AssignRoleToPolkStep19()
        {
            #region Variable Declarations
            DXCell uIItemCell1 = this.UIOppgavetildelingWindow5.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell1;
            DXCell uIItem8KnoxPolkJamesCell = this.UIOppgavetildelingWindow6.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpEmployeesDockPanel.UIControlContainer1Custom.UIEmployeeListViewCustom.UIGcEmployeesTable.UIItem8KnoxPolkJamesCell;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell1, new Point(114, 10));

            // Double-Click '8. Knox Polk, James' cell
            Mouse.DoubleClick(uIItem8KnoxPolkJamesCell, new Point(65, 8));
        }
        
        /// <summary>
        /// ChangeGridHeight
        /// </summary>
        public void ChangeGridHeight()
        {
            #region Variable Declarations
            DXTestControl uITopSeparator = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UITopSeparator;
            DXColumnHeader uIItem02012024tirsdagColumnHeader = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem02012024tirsdagColumnHeader;
            DXTestControl uITopSeparator1 = this.UIOppgavetildelingWindow2.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UITopSeparator;
            DXCell uIAJacksonAndrew150023Cell = this.UIOppgavetildelingWindow3.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIAJacksonAndrew150023Cell;
            #endregion

            // Move 'Top' separator to '02.01.2024 tirsdag' column header
            uIItem02012024tirsdagColumnHeader.EnsureClickable(new Point(109, 19));
            Mouse.StartDragging(uITopSeparator, new Point(618, 2));
            Mouse.StopDragging(uIItem02012024tirsdagColumnHeader, new Point(109, 19));

            // Move 'Top' separator to '( )A - Jackson, Andrew (15:00 - 23:00)
            //( )A - Jefferson, Thomas (15:00 - 23:00)
            //( )D - Adams, John Quincy (08:00 - 16:00)
            //( )D - Buchanan, James (08:00 - 16:00)
            //( )D - Harrison, William H (08:00 - 16:00)
            //( )D - Taylor, Zachary (08:00 - 16:00)
            //( )GV1 - Fillmore, Millard (08:00 - 16:00)
            //( )KK1 - Pierce, Franklin (08:00 - 16:00)
            //( )KK1 - Pierce, Franklin (16:00 - 22:00)
            //( )KK1 - Pierce, Franklin (22:00 - 08:00)
            //( )N - Knox Polk, James (22:00 - 08:00)
            //( )OPPG1 - Madison, James (12:00 - 16:00)' cell
            uIAJacksonAndrew150023Cell.EnsureClickable(new Point(142, 6));
            Mouse.StartDragging(uITopSeparator1, new Point(652, 0));
            Mouse.StopDragging(uIAJacksonAndrew150023Cell, new Point(142, 6));
        }
        
        /// <summary>
        /// CheckAssignments010124Step31 - Use 'CheckAssignments010124Step31ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAssignments010124Step31()
        {
            #region Variable Declarations
            DXCell uIAJacksonAndrew150023Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIAJacksonAndrew150023Cell;
            DXCell uIItemCell2 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell2;
            DXCell uIItemCell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell1;
            DXCell uIInformationOppgaventCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell;
            DXCell uIInformationOppgaventCell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell1;
            DXCell uIItemCell3 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell3;
            DXCell uIWarningDubørjoværeleCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIWarningDubørjoværeleCell;
            DXCell uIInformationOppgaventCell2 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell2;
            DXCell uIInformationOppgaventCell3 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell3;
            DXCell uIItemCell4 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell4;
            DXCell uIDAdamsJohn08001000Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDAdamsJohn08001000Cell;
            DXCell uIDAdamsJohn12001300Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDAdamsJohn12001300Cell;
            DXCell uIDAdamsJohn13001500Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDAdamsJohn13001500Cell;
            DXCell uIDAdamsJohn15001600Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDAdamsJohn15001600Cell;
            DXCell uIInformationOppgaventCell4 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell4;
            DXCell uIInformationOppgaventCell5 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell5;
            DXCell uIDTaylorZachary080016Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDTaylorZachary080016Cell;
            DXCell uIDTaylorZachary080015Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDTaylorZachary080015Cell;
            DXCell uIInformationOppgaventCell6 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell6;
            DXCell uIInformationOppgaventCell7 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell7;
            DXCell uIInformationOppgaventCell8 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell8;
            DXCell uIInformationOppgaventCell9 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell9;
            DXCell uIDTaylorZachary080016Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDTaylorZachary080016Cell1;
            DXCell uIDTaylorZachary080015Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDTaylorZachary080015Cell1;
            DXCell uIInformationOppgaventCell10 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell10;
            DXCell uIInformationOppgaventCell11 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell11;
            DXCell uIXWarningDubørjoværelCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXWarningDubørjoværelCell;
            DXCell uIInformationOppgaventCell12 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell12;
            DXCell uIInformationOppgaventCell13 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell13;
            DXCell uIDTaylorZachary080016Cell2 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDTaylorZachary080016Cell2;
            #endregion

            // Verify that the 'Text' property of '( )A - Jackson, Andrew (15:00 - 23:00)' cell equals '( )A - Jackson, Andrew (15:00 - 23:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIAJacksonAndrew150023CellText, uIAJacksonAndrew150023Cell.Text);

            // Verify that the 'Text' property of cell equals '( )D - Adams, John (08:00 - 10:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIItemCell2Text, uIItemCell2.Text);

            // Verify that the 'Text' property of cell equals '( )D - Adams, John (12:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIItemCell1Text, uIItemCell1.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )OPPG2 - Monroe, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIInformationOppgaventCellText, uIInformationOppgaventCell.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )OPPG1 - Madison, James (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIInformationOppgaventCell1Text, uIInformationOppgaventCell1.Text);

            // Verify that the 'Text' property of cell equals '( )D - Adams, John (10:00 - 12:00)
            //( )D - Taylor, Zachary (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIItemCell3Text, uIItemCell3.Text);

            // Verify that the 'Text' property of '( )(Warning:Du bør jo være lege, ikke sant!)D - Taylor, Zachary (08:00 - 12:00)' cell equals '( )(Warning:Du bør jo være lege, ikke sant!)D - Taylor, Zachary (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIWarningDubørjoværeleCellText, uIWarningDubørjoværeleCell.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )OPPG2 - Monroe, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIInformationOppgaventCell2Text, uIInformationOppgaventCell2.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )OPPG1 - Madison, James (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIInformationOppgaventCell3Text, uIInformationOppgaventCell3.Text);

            // Verify that the 'Text' property of cell equals '( )D - Adams, John (10:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIItemCell4Text, uIItemCell4.Text);

            // Verify that the 'Text' property of '( )D - Adams, John (08:00 - 10:00)' cell equals '( )D - Adams, John (08:00 - 10:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIDAdamsJohn08001000CellText, uIDAdamsJohn08001000Cell.Text);

            // Verify that the 'Text' property of '( )D - Adams, John (12:00 - 13:00)' cell equals '( )D - Adams, John (12:00 - 13:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIDAdamsJohn12001300CellText, uIDAdamsJohn12001300Cell.Text);

            // Verify that the 'Text' property of '( )D - Adams, John (13:00 - 15:00)' cell equals '( )D - Adams, John (13:00 - 15:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIDAdamsJohn13001500CellText, uIDAdamsJohn13001500Cell.Text);

            // Verify that the 'Text' property of '( )D - Adams, John (15:00 - 16:00)' cell equals '( )D - Adams, John (15:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIDAdamsJohn15001600CellText, uIDAdamsJohn15001600Cell.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )OPPG2 - Monroe, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIInformationOppgaventCell4Text, uIInformationOppgaventCell4.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )OPPG1 - Madison, James (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIInformationOppgaventCell5Text, uIInformationOppgaventCell5.Text);

            // Verify that the 'Text' property of '( )D - Taylor, Zachary (08:00 - 16:00)' cell equals '( )D - Taylor, Zachary (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIDTaylorZachary080016CellText, uIDTaylorZachary080016Cell.Text);

            // Verify that the 'Text' property of '( )D - Taylor, Zachary (08:00 - 15:00)' cell equals '( )D - Taylor, Zachary (08:00 - 15:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIDTaylorZachary080015CellText, uIDTaylorZachary080015Cell.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )OPPG2 - Monroe, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIInformationOppgaventCell6Text, uIInformationOppgaventCell6.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )OPPG1 - Madison, James (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIInformationOppgaventCell7Text, uIInformationOppgaventCell7.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )OPPG2 - Monroe, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIInformationOppgaventCell8Text, uIInformationOppgaventCell8.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )OPPG1 - Madison, James (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIInformationOppgaventCell9Text, uIInformationOppgaventCell9.Text);

            // Verify that the 'Text' property of '( )D - Taylor, Zachary (08:00 - 16:00)' cell equals '( )D - Taylor, Zachary (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIDTaylorZachary080016Cell1Text, uIDTaylorZachary080016Cell1.Text);

            // Verify that the 'Text' property of '( )D - Taylor, Zachary (08:00 - 15:00)' cell equals '( )D - Taylor, Zachary (08:00 - 15:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIDTaylorZachary080015Cell1Text, uIDTaylorZachary080015Cell1.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )OPPG2 - Monroe, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIInformationOppgaventCell10Text, uIInformationOppgaventCell10.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )OPPG1 - Madison, James (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIInformationOppgaventCell11Text, uIInformationOppgaventCell11.Text);

            // Verify that the 'Text' property of '(x)(Warning:Du bør jo være lege, ikke sant!)KK1 - Pierce, Franklin (08:00 - 08:00)' cell equals '( )(Warning:Du bør jo være lege, ikke sant!)BV - Pierce, Franklin (22:00 - 08:00)
            //( )(Warning:Du bør jo være lege, ikke sant!)D - Pierce, Franklin (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIXWarningDubørjoværelCellText, uIXWarningDubørjoværelCell.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )OPPG2 - Monroe, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIInformationOppgaventCell12Text, uIInformationOppgaventCell12.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )OPPG1 - Madison, James (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIInformationOppgaventCell13Text, uIInformationOppgaventCell13.Text);

            // Verify that the 'Text' property of '( )D - Taylor, Zachary (08:00 - 16:00)' cell equals '( )D - Taylor, Zachary (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckAssignments010124Step31ExpectedValues.UIDTaylorZachary080016Cell2Text, uIDTaylorZachary080016Cell2.Text);
        }
        
        /// <summary>
        /// CheckAssignments311223Step31 - Use 'CheckAssignments311223Step31ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAssignments311223Step31()
        {
            #region Variable Declarations
            DXCell uINKnoxPolkJames220008Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UINKnoxPolkJames220008Cell1;
            #endregion

            // Verify that the 'Text' property of '( )N - Knox Polk, James (22:00 - 08:00)' cell equals '( )N - Knox Polk, James (22:00 - 08:00)
            //'
            Assert.AreEqual(this.CheckAssignments311223Step31ExpectedValues.UINKnoxPolkJames220008Cell1Text, uINKnoxPolkJames220008Cell1.Text);
        }
        
        /// <summary>
        /// CheckAssignmentsStep36 - Use 'CheckAssignmentsStep36ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAssignmentsStep36()
        {
            #region Variable Declarations
            DXGrid uIGcDragDropGridTable = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable;
            DXGrid uIGcEmployeesTable = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpEmployeesDockPanel.UIControlContainer1Custom.UIEmployeeListViewCustom.UIGcEmployeesTable;
            DXGrid uIGcDragDropGridTable1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable;
            DXGrid uIGcSumDemandTable = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable;
            DXTestControl uIFlowControlViewHost1Custom = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom;
            #endregion

            // Verify that the 'Name' property of 'gcDragDropGrid' table equals 'gcDragDropGrid'
            Assert.AreEqual(this.CheckAssignmentsStep36ExpectedValues.UIGcDragDropGridTableName, uIGcDragDropGridTable.Name);

            // Verify that the 'Name' property of 'gcEmployees' table equals 'gcEmployees'
            Assert.AreEqual(this.CheckAssignmentsStep36ExpectedValues.UIGcEmployeesTableName, uIGcEmployeesTable.Name);

            // Verify that the 'Name' property of 'gcDragDropGrid' table equals 'gcDragDropGrid'
            Assert.AreEqual(this.CheckAssignmentsStep36ExpectedValues.UIGcDragDropGridTableName1, uIGcDragDropGridTable1.Name);

            // Verify that the 'Name' property of 'gcSumDemand' table equals 'gcSumDemand'
            Assert.AreEqual(this.CheckAssignmentsStep36ExpectedValues.UIGcSumDemandTableName, uIGcSumDemandTable.Name);

            // Verify that the 'Name' property of 'flowControlViewHost1' custom control equals 'flowControlViewHost1'
            Assert.AreEqual(this.CheckAssignmentsStep36ExpectedValues.UIFlowControlViewHost1CustomName, uIFlowControlViewHost1Custom.Name);
        }
        
        /// <summary>
        /// CheckAssignmentsStep38 - Use 'CheckAssignmentsStep38ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAssignmentsStep38()
        {
            #region Variable Declarations
            DXGrid uIGcDragDropGridTable = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable;
            DXGrid uIGcEmployeesTable = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpEmployeesDockPanel.UIControlContainer1Custom.UIEmployeeListViewCustom.UIGcEmployeesTable;
            DXGrid uIGcDragDropGridTable1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable;
            DXGrid uIGcSumDemandTable = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable;
            #endregion

            // Verify that the 'Name' property of 'gcDragDropGrid' table equals 'gcDragDropGrid'
            Assert.AreEqual(this.CheckAssignmentsStep38ExpectedValues.UIGcDragDropGridTableName, uIGcDragDropGridTable.Name);

            // Verify that the 'Name' property of 'gcEmployees' table equals 'gcEmployees'
            Assert.AreEqual(this.CheckAssignmentsStep38ExpectedValues.UIGcEmployeesTableName, uIGcEmployeesTable.Name);

            // Verify that the 'Name' property of 'gcDragDropGrid' table equals 'gcDragDropGrid'
            Assert.AreEqual(this.CheckAssignmentsStep38ExpectedValues.UIGcDragDropGridTableName1, uIGcDragDropGridTable1.Name);

            // Verify that the 'Name' property of 'gcSumDemand' table equals 'gcSumDemand'
            Assert.AreEqual(this.CheckAssignmentsStep38ExpectedValues.UIGcSumDemandTableName, uIGcSumDemandTable.Name);
        }
        
        /// <summary>
        /// CheckAssignmentsWeek1Step37 - Use 'CheckAssignmentsWeek1Step37ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAssignmentsWeek1Step37()
        {
            #region Variable Declarations
            DXCell uINHarrisonWilliamH220Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UINHarrisonWilliamH220Cell;
            DXCell uIDBuchananJames080016Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDBuchananJames080016Cell;
            DXCell uIDBuchananJames080016Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDBuchananJames080016Cell1;
            DXCell uIBVJacksonAndrew22000Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIBVJacksonAndrew22000Cell;
            DXCell uIDJacksonAndrew080016Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDJacksonAndrew080016Cell;
            DXCell uIDBuchananJames080016Cell2 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDBuchananJames080016Cell;
            DXCell uIDFillmoreMillard0800Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDFillmoreMillard0800Cell;
            DXCell uIDFillmoreMillard0900Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDFillmoreMillard0900Cell;
            DXCell uIDFillmoreMillard1000Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDFillmoreMillard1000Cell;
            DXCell uIDFillmoreMillard1400Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDFillmoreMillard1400Cell;
            DXCell uIDFillmoreMillard1200Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDFillmoreMillard1200Cell;
            DXCell uIDJacksonAndrew080010Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDJacksonAndrew080010Cell;
            DXCell uINHarrisonWilliamH220Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UINHarrisonWilliamH220Cell1;
            DXCell uIDJacksonAndrew100016Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDJacksonAndrew100016Cell;
            DXCell uIWarningDubørjoværeleCell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIWarningDubørjoværeleCell1;
            DXCell uIDBuchananJames080016Cell11 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDBuchananJames080016Cell1;
            #endregion

            // Verify that the 'Text' property of '( )N - Harrison, William H (22:00 - 08:00)' cell equals '( )N - Harrison, William H (22:00 - 08:00)
            //'
            Assert.AreEqual(this.CheckAssignmentsWeek1Step37ExpectedValues.UINHarrisonWilliamH220CellText, uINHarrisonWilliamH220Cell.Text);

            // Verify that the 'Text' property of '( )D - Buchanan, James (08:00 - 16:00)' cell equals '( )D - Buchanan, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckAssignmentsWeek1Step37ExpectedValues.UIDBuchananJames080016CellText, uIDBuchananJames080016Cell.Text);

            // Verify that the 'Text' property of '( )D - Buchanan, James (08:00 - 16:00)' cell equals '( )D - Buchanan, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckAssignmentsWeek1Step37ExpectedValues.UIDBuchananJames080016Cell1Text, uIDBuchananJames080016Cell1.Text);

            // Verify that the 'Text' property of '( )BV - Jackson, Andrew (22:00 - 08:00)' cell equals '( )BV - Jackson, Andrew (22:00 - 08:00)
            //'
            Assert.AreEqual(this.CheckAssignmentsWeek1Step37ExpectedValues.UIBVJacksonAndrew22000CellText, uIBVJacksonAndrew22000Cell.Text);

            // Verify that the 'Text' property of '( )D - Jackson, Andrew (08:00 - 16:00)' cell equals '( )D - Jackson, Andrew (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckAssignmentsWeek1Step37ExpectedValues.UIDJacksonAndrew080016CellText, uIDJacksonAndrew080016Cell.Text);

            // Verify that the 'Text' property of '( )D - Buchanan, James (08:00 - 16:00)
            //( )D - Fillmore, Millard (08:00 - 16:00)' cell equals '( )D - Buchanan, James (08:00 - 16:00)
            //( )D - Fillmore, Millard (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckAssignmentsWeek1Step37ExpectedValues.UIDBuchananJames080016CellText1, uIDBuchananJames080016Cell2.Text);

            // Verify that the 'Text' property of '( )D - Fillmore, Millard (08:00 - 09:00)' cell equals '( )D - Fillmore, Millard (08:00 - 09:00)
            //'
            Assert.AreEqual(this.CheckAssignmentsWeek1Step37ExpectedValues.UIDFillmoreMillard0800CellText, uIDFillmoreMillard0800Cell.Text);

            // Verify that the 'Text' property of '( )D - Fillmore, Millard (09:00 - 10:00)' cell equals '( )D - Fillmore, Millard (09:00 - 10:00)
            //'
            Assert.AreEqual(this.CheckAssignmentsWeek1Step37ExpectedValues.UIDFillmoreMillard0900CellText, uIDFillmoreMillard0900Cell.Text);

            // Verify that the 'Text' property of '( )D - Fillmore, Millard (10:00 - 12:00)' cell equals '( )D - Fillmore, Millard (10:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckAssignmentsWeek1Step37ExpectedValues.UIDFillmoreMillard1000CellText, uIDFillmoreMillard1000Cell.Text);

            // Verify that the 'Text' property of '( )D - Fillmore, Millard (14:00 - 16:00)' cell equals '( )D - Fillmore, Millard (14:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckAssignmentsWeek1Step37ExpectedValues.UIDFillmoreMillard1400CellText, uIDFillmoreMillard1400Cell.Text);

            // Verify that the 'Text' property of '( )D - Fillmore, Millard (12:00 - 14:00)' cell equals '( )D - Fillmore, Millard (12:00 - 14:00)
            //'
            Assert.AreEqual(this.CheckAssignmentsWeek1Step37ExpectedValues.UIDFillmoreMillard1200CellText, uIDFillmoreMillard1200Cell.Text);

            // Verify that the 'Text' property of '( )D - Jackson, Andrew (08:00 - 10:00)' cell equals '( )D - Jackson, Andrew (08:00 - 10:00)
            //'
            Assert.AreEqual(this.CheckAssignmentsWeek1Step37ExpectedValues.UIDJacksonAndrew080010CellText, uIDJacksonAndrew080010Cell.Text);

            // Verify that the 'Text' property of '( )N - Harrison, William H (22:00 - 08:00)' cell equals '( )N - Harrison, William H (22:00 - 08:00)
            //'
            Assert.AreEqual(this.CheckAssignmentsWeek1Step37ExpectedValues.UINHarrisonWilliamH220Cell1Text, uINHarrisonWilliamH220Cell1.Text);

            // Verify that the 'Text' property of '( )D - Jackson, Andrew (10:00 - 16:00)' cell equals '( )D - Jackson, Andrew (10:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckAssignmentsWeek1Step37ExpectedValues.UIDJacksonAndrew100016CellText, uIDJacksonAndrew100016Cell.Text);

            // Verify that the 'Text' property of '( )(Warning:Du bør jo være lege, ikke sant!)BV - Jackson, Andrew (22:00 - 08:00)' cell equals '( )(Warning:Du bør jo være lege, ikke sant!)BV - Jackson, Andrew (22:00 - 08:00)
            //'
            Assert.AreEqual(this.CheckAssignmentsWeek1Step37ExpectedValues.UIWarningDubørjoværeleCell1Text, uIWarningDubørjoværeleCell1.Text);

            // Verify that the 'Text' property of '( )D - Buchanan, James (08:00 - 16:00)
            //( )D - Fillmore, Millard (08:00 - 16:00)' cell equals '( )D - Buchanan, James (08:00 - 16:00)
            //( )D - Fillmore, Millard (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckAssignmentsWeek1Step37ExpectedValues.UIDBuchananJames080016Cell1Text1, uIDBuchananJames080016Cell11.Text);
        }
        
        /// <summary>
        /// CheckAssignmentsWeek2Step37 - Use 'CheckAssignmentsWeek2Step37ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAssignmentsWeek2Step37()
        {
            #region Variable Declarations
            DXCell uINHarrisonWilliamH220Cell2 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UINHarrisonWilliamH220Cell2;
            DXCell uIKK1JacksonAndrew0800Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIKK1JacksonAndrew0800Cell;
            DXCell uIDBuchananJames080016Cell2 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDBuchananJames080016Cell2;
            DXCell uIDBuchananJames080015Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDBuchananJames080015Cell;
            DXCell uIBVJacksonAndrew22000Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIBVJacksonAndrew22000Cell1;
            DXCell uIDJacksonAndrew080016Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDJacksonAndrew080016Cell1;
            DXCell uIDBuchananJames150016Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDBuchananJames150016Cell;
            #endregion

            // Verify that the 'Text' property of '( )N - Harrison, William H (22:00 - 08:00)' cell equals '( )N - Harrison, William H (22:00 - 08:00)
            //'
            Assert.AreEqual(this.CheckAssignmentsWeek2Step37ExpectedValues.UINHarrisonWilliamH220Cell2Text, uINHarrisonWilliamH220Cell2.Text);

            // Verify that the 'Text' property of '( )KK1 - Jackson, Andrew (08:00 - 16:00)
            //( )KK1 - Jackson, Andrew (16:00 - 22:00)
            //( )KK1 - Jackson, Andrew (22:00 - 08:00)' cell equals '( )BV - Jackson, Andrew (22:00 - 08:00)
            //( )D - Jackson, Andrew (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckAssignmentsWeek2Step37ExpectedValues.UIKK1JacksonAndrew0800CellText, uIKK1JacksonAndrew0800Cell.Text);

            // Verify that the 'Text' property of '( )D - Buchanan, James (08:00 - 16:00)
            //( )D - Fillmore, Millard (08:00 - 16:00)' cell equals '( )D - Buchanan, James (08:00 - 16:00)
            //( )D - Fillmore, Millard (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckAssignmentsWeek2Step37ExpectedValues.UIDBuchananJames080016Cell2Text, uIDBuchananJames080016Cell2.Text);

            // Verify that the 'Text' property of '( )D - Buchanan, James (08:00 - 15:00)' cell equals '( )D - Buchanan, James (08:00 - 15:00)
            //'
            Assert.AreEqual(this.CheckAssignmentsWeek2Step37ExpectedValues.UIDBuchananJames080015CellText, uIDBuchananJames080015Cell.Text);

            // Verify that the 'Text' property of '( )BV - Jackson, Andrew (22:00 - 08:00)
            //( )N - Harrison, William H (22:00 - 08:00)' cell equals '( )BV - Jackson, Andrew (22:00 - 08:00)
            //( )N - Harrison, William H (22:00 - 08:00)
            //'
            Assert.AreEqual(this.CheckAssignmentsWeek2Step37ExpectedValues.UIBVJacksonAndrew22000Cell1Text, uIBVJacksonAndrew22000Cell1.Text);

            // Verify that the 'Text' property of '( )D - Jackson, Andrew (08:00 - 16:00)' cell equals '( )D - Jackson, Andrew (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckAssignmentsWeek2Step37ExpectedValues.UIDJacksonAndrew080016Cell1Text, uIDJacksonAndrew080016Cell1.Text);

            // Verify that the 'Text' property of '( )D - Buchanan, James (15:00 - 16:00)
            //( )D - Fillmore, Millard (08:00 - 16:00)' cell equals '( )D - Buchanan, James (15:00 - 16:00)
            //( )D - Fillmore, Millard (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckAssignmentsWeek2Step37ExpectedValues.UIDBuchananJames150016CellText, uIDBuchananJames150016Cell.Text);
        }
        
        /// <summary>
        /// CheckCompStep27 - Use 'CheckCompStep27ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCompStep27()
        {
            #region Variable Declarations
            DXCell uISPESLEGSpesialistlegCell = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UITabControlViewHost1TabList.UIViewTabPageClient.UIHostedCompetenceCompCustom.UIVhCompetenceCustom.UIPcViewClient.UICompetenceComparisonCustom.UIGcCompetenceComparisTable.UISPESLEGSpesialistlegCell;
            #endregion

            // Verify that the 'Text' property of 'SPESLEG - Spesialistlege' cell equals 'SPESLEG - Spesialistlege'
            Assert.AreEqual(this.CheckCompStep27ExpectedValues.UISPESLEGSpesialistlegCellText, uISPESLEGSpesialistlegCell.Text);
        }
        
        /// <summary>
        /// CheckContStep27 - Use 'CheckContStep27ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckContStep27()
        {
            #region Variable Declarations
            DXLookUpEdit uILeCostPlaceLookUpEdit = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UITabControlViewHost1TabList.UIViewTabPageClient1.UIRoleAccountingViewCustom.UILeCostPlaceLookUpEdit;
            DXLookUpEdit uILeProjectLookUpEdit = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UITabControlViewHost1TabList.UIViewTabPageClient1.UIRoleAccountingViewCustom.UILeProjectLookUpEdit;
            #endregion

            // Verify that the 'Text' property of 'leCostPlace' LookUpEdit equals '5000 - ARBEIDSPLANKLINIKKEN'
            Assert.AreEqual(this.CheckContStep27ExpectedValues.UILeCostPlaceLookUpEditText, uILeCostPlaceLookUpEdit.Text);

            // Verify that the 'Text' property of 'leProject' LookUpEdit equals 'P3 - Prosjekt 3'
            Assert.AreEqual(this.CheckContStep27ExpectedValues.UILeProjectLookUpEditText, uILeProjectLookUpEdit.Text);
        }
        
        /// <summary>
        /// CheckEmpInPlanStep1 - Use 'CheckEmpInPlanStep1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckEmpInPlanStep1()
        {
            #region Variable Declarations
            DXCell uIAdamsJohnSpeslegCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIAdamsJohnSpeslegCell;
            DXCell uIAdamsJohnQuincyCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIAdamsJohnQuincyCell;
            DXCell uIBuchananJamesStlegCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIBuchananJamesStlegCell;
            DXCell uIFillmoreMillardCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIFillmoreMillardCell;
            DXCell uIHarrisonWilliamHCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIHarrisonWilliamHCell;
            DXCell uIJacksonAndrewCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIJacksonAndrewCell;
            DXCell uIJeffersonThomasCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIJeffersonThomasCell;
            DXCell uIKnoxPolkJamesCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIKnoxPolkJamesCell;
            DXCell uIMadisonJamesCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIMadisonJamesCell;
            DXCell uIMonroeJamesCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIMonroeJamesCell;
            DXCell uIPierceFranklinCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIPierceFranklinCell;
            DXCell uITaylorZacharyCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UITaylorZacharyCell;
            DXCell uITaylorZacharyCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UITaylorZacharyCell1;
            #endregion

            // Verify that the 'Text' property of 'Adams, John Spesleg' cell equals 'Adams, John Spesleg'
            Assert.AreEqual(this.CheckEmpInPlanStep1ExpectedValues.UIAdamsJohnSpeslegCellText, uIAdamsJohnSpeslegCell.Text);

            // Verify that the 'Text' property of 'Adams, John Quincy' cell equals 'Adams, John Quincy'
            Assert.AreEqual(this.CheckEmpInPlanStep1ExpectedValues.UIAdamsJohnQuincyCellText, uIAdamsJohnQuincyCell.Text);

            // Verify that the 'Text' property of 'Buchanan, James Stleg' cell equals 'Buchanan, James Stleg'
            Assert.AreEqual(this.CheckEmpInPlanStep1ExpectedValues.UIBuchananJamesStlegCellText, uIBuchananJamesStlegCell.Text);

            // Verify that the 'Text' property of 'Fillmore, Millard' cell equals 'Fillmore, Millard'
            Assert.AreEqual(this.CheckEmpInPlanStep1ExpectedValues.UIFillmoreMillardCellText, uIFillmoreMillardCell.Text);

            // Verify that the 'Text' property of 'Harrison, William H' cell equals 'Harrison, William H'
            Assert.AreEqual(this.CheckEmpInPlanStep1ExpectedValues.UIHarrisonWilliamHCellText, uIHarrisonWilliamHCell.Text);

            // Verify that the 'Text' property of 'Jackson, Andrew' cell equals 'Jackson, Andrew'
            Assert.AreEqual(this.CheckEmpInPlanStep1ExpectedValues.UIJacksonAndrewCellText, uIJacksonAndrewCell.Text);

            // Verify that the 'Text' property of 'Jefferson, Thomas' cell equals 'Jefferson, Thomas'
            Assert.AreEqual(this.CheckEmpInPlanStep1ExpectedValues.UIJeffersonThomasCellText, uIJeffersonThomasCell.Text);

            // Verify that the 'Text' property of 'Knox Polk, James' cell equals 'Knox Polk, James'
            Assert.AreEqual(this.CheckEmpInPlanStep1ExpectedValues.UIKnoxPolkJamesCellText, uIKnoxPolkJamesCell.Text);

            // Verify that the 'Text' property of 'Madison, James' cell equals 'Madison, James'
            Assert.AreEqual(this.CheckEmpInPlanStep1ExpectedValues.UIMadisonJamesCellText, uIMadisonJamesCell.Text);

            // Verify that the 'Text' property of 'Monroe, James' cell equals 'Monroe, James'
            Assert.AreEqual(this.CheckEmpInPlanStep1ExpectedValues.UIMonroeJamesCellText, uIMonroeJamesCell.Text);

            // Verify that the 'Text' property of 'Pierce, Franklin' cell equals 'Pierce, Franklin'
            Assert.AreEqual(this.CheckEmpInPlanStep1ExpectedValues.UIPierceFranklinCellText, uIPierceFranklinCell.Text);

            // Verify that the 'Text' property of 'Taylor, Zachary' cell equals 'Taylor, Zachary'
            Assert.AreEqual(this.CheckEmpInPlanStep1ExpectedValues.UITaylorZacharyCellText, uITaylorZacharyCell.Text);

            // Verify that the 'Text' property of 'Taylor, Zachary' cell equals 'Taylor, Zachary'
            Assert.AreEqual(this.CheckEmpInPlanStep1ExpectedValues.UITaylorZacharyCell1Text, uITaylorZacharyCell1.Text);
        }
        
        /// <summary>
        /// CheckKK1AssignmentsErrorStep37 - Use 'CheckKK1AssignmentsErrorStep37ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckKK1AssignmentsErrorStep37()
        {
            #region Variable Declarations
            DXCell uIKK1JacksonAndrew1600Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIKK1JacksonAndrew1600Cell;
            DXCell uIKK1JacksonAndrew1600Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIKK1JacksonAndrew1600Cell1;
            DXCell uIKK1JacksonAndrew0800Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIKK1JacksonAndrew0800Cell;
            DXCell uIKK1JacksonAndrew1600Cell2 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIKK1JacksonAndrew1600Cell2;
            #endregion

            // Verify that the 'Text' property of '( )KK1 - Jackson, Andrew (16:00 - 22:00)' cell equals '( )KK1 - Jackson, Andrew (16:00 - 22:00)
            //'
            Assert.AreEqual(this.CheckKK1AssignmentsErrorStep37ExpectedValues.UIKK1JacksonAndrew1600CellText, uIKK1JacksonAndrew1600Cell.Text);

            // Verify that the 'Text' property of '( )KK1 - Jackson, Andrew (16:00 - 22:00)' cell equals '( )KK1 - Jackson, Andrew (16:00 - 22:00)
            //'
            Assert.AreEqual(this.CheckKK1AssignmentsErrorStep37ExpectedValues.UIKK1JacksonAndrew1600Cell1Text, uIKK1JacksonAndrew1600Cell1.Text);

            // Verify that the 'Text' property of '( )KK1 - Jackson, Andrew (08:00 - 16:00)
            //( )KK1 - Jackson, Andrew (16:00 - 22:00)
            //( )KK1 - Jackson, Andrew (22:00 - 08:00)' cell equals '( )KK1 - Jackson, Andrew (08:00 - 16:00)
            //( )KK1 - Jackson, Andrew (16:00 - 22:00)
            //( )KK1 - Jackson, Andrew (22:00 - 08:00)
            //'
            Assert.AreEqual(this.CheckKK1AssignmentsErrorStep37ExpectedValues.UIKK1JacksonAndrew0800CellText, uIKK1JacksonAndrew0800Cell.Text);

            // Verify that the 'Text' property of '( )KK1 - Jackson, Andrew (16:00 - 22:00)' cell equals '( )KK1 - Jackson, Andrew (16:00 - 22:00)
            //'
            Assert.AreEqual(this.CheckKK1AssignmentsErrorStep37ExpectedValues.UIKK1JacksonAndrew1600Cell2Text, uIKK1JacksonAndrew1600Cell2.Text);
        }
        
        /// <summary>
        /// CheckMonroeDispMondayDeletedStep5 - Use 'CheckMonroeDispMondayDeletedStep5ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckMonroeDispMondayDeletedStep5()
        {
            #region Variable Declarations
            DXCell uIItemCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell;
            #endregion

            // Verify that the 'Text' property of cell equals ''
            Assert.AreEqual(this.CheckMonroeDispMondayDeletedStep5ExpectedValues.UIItemCellText, uIItemCell.Text);
        }
        
        /// <summary>
        /// CheckOldRoleMessageStep25_1 - Use 'CheckOldRoleMessageStep25_1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckOldRoleMessageStep25_1()
        {
            #region Variable Declarations
            WinToolTip uIDukanBAREutføredenneToolTip = this.UIItemWindow1.UIDukanBAREutføredenneToolTip;
            #endregion

            // Verify that the 'Name' property of 'Du kan BARE utføre denne oppgaven!.' tooltip equals 'Du kan BARE utføre denne oppgaven!. '
            Assert.AreEqual(this.CheckOldRoleMessageStep25_1ExpectedValues.UIDukanBAREutføredenneToolTipName, uIDukanBAREutføredenneToolTip.Name);
        }
        
        /// <summary>
        /// CheckOldRoleMessageStep25_2 - Use 'CheckOldRoleMessageStep25_2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckOldRoleMessageStep25_2()
        {
            #region Variable Declarations
            WinToolTip uIOppgaveKOMPETANSEMÅoToolTip = this.UIItemWindow5.UIOppgaveKOMPETANSEMÅoToolTip;
            #endregion

            // Verify that the 'Name' property of 'Oppgave KOMPETANSE MÅ overlapper med allerede tild...' tooltip equals 'Oppgave KOMPETANSE MÅ overlapper med allerede tildelt eksklusiv oppgave ALLE MÅ KRAV. '
            Assert.AreEqual(this.CheckOldRoleMessageStep25_2ExpectedValues.UIOppgaveKOMPETANSEMÅoToolTipName, uIOppgaveKOMPETANSEMÅoToolTip.Name);
        }
        
        /// <summary>
        /// CheckPeriod2Step27 - Use 'CheckPeriod2Step27ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckPeriod2Step27()
        {
            #region Variable Declarations
            DXTextEdit uISteFromTimeEdit = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UISteFromTimeEdit;
            DXTextEdit uISteToTimeEdit = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UISteToTimeEdit;
            #endregion

            // Verify that the 'Text' property of 'steFromTime' text box equals '08:00'
            Assert.AreEqual(this.CheckPeriod2Step27ExpectedValues.UISteFromTimeEditText, uISteFromTimeEdit.Text);

            // Verify that the 'Text' property of 'steToTime' text box equals '10:00'
            Assert.AreEqual(this.CheckPeriod2Step27ExpectedValues.UISteToTimeEditText, uISteToTimeEdit.Text);
        }
        
        /// <summary>
        /// CheckPeriod3Step27 - Use 'CheckPeriod3Step27ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckPeriod3Step27()
        {
            #region Variable Declarations
            DXTextEdit uISteFromTimeEdit = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UISteFromTimeEdit;
            DXTextEdit uISteToTimeEdit = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UISteToTimeEdit;
            #endregion

            // Verify that the 'Text' property of 'steFromTime' text box equals '10:00'
            Assert.AreEqual(this.CheckPeriod3Step27ExpectedValues.UISteFromTimeEditText, uISteFromTimeEdit.Text);

            // Verify that the 'Text' property of 'steToTime' text box equals '12:00'
            Assert.AreEqual(this.CheckPeriod3Step27ExpectedValues.UISteToTimeEditText, uISteToTimeEdit.Text);
        }
        
        /// <summary>
        /// CheckPeriod4Step27 - Use 'CheckPeriod4Step27ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckPeriod4Step27()
        {
            #region Variable Declarations
            DXTextEdit uISteFromTimeEdit = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UISteFromTimeEdit;
            DXTextEdit uISteToTimeEdit = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UISteToTimeEdit;
            #endregion

            // Verify that the 'Text' property of 'steFromTime' text box equals '12:00'
            Assert.AreEqual(this.CheckPeriod4Step27ExpectedValues.UISteFromTimeEditText, uISteFromTimeEdit.Text);

            // Verify that the 'Text' property of 'steToTime' text box equals '13:00'
            Assert.AreEqual(this.CheckPeriod4Step27ExpectedValues.UISteToTimeEditText, uISteToTimeEdit.Text);
        }
        
        /// <summary>
        /// CheckPeriod5AndContStep27 - Use 'CheckPeriod5AndContStep27ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckPeriod5AndContStep27()
        {
            #region Variable Declarations
            DXTextEdit uISteFromTimeEdit = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UISteFromTimeEdit;
            DXTextEdit uISteToTimeEdit = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UISteToTimeEdit;
            DXLookUpEdit uILeCostPlaceLookUpEdit = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UITabControlViewHost1TabList.UIViewTabPageClient1.UIRoleAccountingViewCustom.UILeCostPlaceLookUpEdit;
            DXLookUpEdit uILeProjectLookUpEdit = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UITabControlViewHost1TabList.UIViewTabPageClient1.UIRoleAccountingViewCustom.UILeProjectLookUpEdit;
            #endregion

            // Verify that the 'Text' property of 'steFromTime' text box equals '15:00'
            Assert.AreEqual(this.CheckPeriod5AndContStep27ExpectedValues.UISteFromTimeEditText, uISteFromTimeEdit.Text);

            // Verify that the 'Text' property of 'steToTime' text box equals '16:00'
            Assert.AreEqual(this.CheckPeriod5AndContStep27ExpectedValues.UISteToTimeEditText, uISteToTimeEdit.Text);

            // Verify that the 'Text' property of 'leCostPlace' LookUpEdit equals '4510 - Anestesi'
            Assert.AreEqual(this.CheckPeriod5AndContStep27ExpectedValues.UILeCostPlaceLookUpEditText, uILeCostPlaceLookUpEdit.Text);

            // Verify that the 'Text' property of 'leProject' LookUpEdit equals 'P1 - Prosjekt 1'
            Assert.AreEqual(this.CheckPeriod5AndContStep27ExpectedValues.UILeProjectLookUpEditText, uILeProjectLookUpEdit.Text);
        }
        
        /// <summary>
        /// CheckPeriodStep27 - Use 'CheckPeriodStep27ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckPeriodStep27()
        {
            #region Variable Declarations
            DXTextEdit uISteFromTimeEdit = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UISteFromTimeEdit;
            DXTextEdit uISteToTimeEdit = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UISteToTimeEdit;
            #endregion

            // Verify that the 'Text' property of 'steFromTime' text box equals '13:00'
            Assert.AreEqual(this.CheckPeriodStep27ExpectedValues.UISteFromTimeEditText, uISteFromTimeEdit.Text);

            // Verify that the 'Text' property of 'steToTime' text box equals '15:00'
            Assert.AreEqual(this.CheckPeriodStep27ExpectedValues.UISteToTimeEditText, uISteToTimeEdit.Text);
        }
        
        /// <summary>
        /// CheckRoleCompStep24 - Use 'CheckRoleCompStep24ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleCompStep24()
        {
            #region Variable Declarations
            DXCell uISPESLEGSpesialistlegCell = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UITabControlViewHost1TabList.UIViewTabPageClient.UIHostedCompetenceCompCustom.UIVhCompetenceCustom.UIPcViewClient.UICompetenceComparisonCustom.UIGcCompetenceComparisTable.UISPESLEGSpesialistlegCell;
            #endregion

            // Verify that the 'Text' property of 'SPESLEG - Spesialistlege' cell equals 'SPESLEG - Spesialistlege'
            Assert.AreEqual(this.CheckRoleCompStep24ExpectedValues.UISPESLEGSpesialistlegCellText, uISPESLEGSpesialistlegCell.Text);
        }
        
        /// <summary>
        /// CheckRoleMessageStep25_1 - Use 'CheckRoleMessageStep25_1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleMessageStep25_1()
        {
            #region Variable Declarations
            WinToolTip uIOppgaveKONTERINGoverToolTip = this.UIItemWindow3.UIOppgaveKONTERINGoverToolTip;
            #endregion

            // Verify that the 'Name' property of 'Oppgave KONTERING overlapper med allerede tildelt ...' tooltip equals 'Oppgave KONTERING overlapper med allerede tildelt eksklusiv oppgave EKSKL KAN IKKE. '
            Assert.AreEqual(this.CheckRoleMessageStep25_1ExpectedValues.UIOppgaveKONTERINGoverToolTipName, uIOppgaveKONTERINGoverToolTip.Name);
        }
        
        /// <summary>
        /// CheckRoleMessageStep25_2 - Use 'CheckRoleMessageStep25_2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleMessageStep25_2()
        {
            #region Variable Declarations
            WinToolTip uINeineineiKunentingavToolTip = this.UIItemWindow4.UINeineineiKunentingavToolTip;
            #endregion

            // Verify that the 'Name' property of 'Nei, nei, nei!! Kun en ting av gangen!!.' tooltip equals 'Nei, nei, nei!! Kun en ting av gangen!!. '
            Assert.AreEqual(this.CheckRoleMessageStep25_2ExpectedValues.UINeineineiKunentingavToolTipName, uINeineineiKunentingavToolTip.Name);
        }
        
        /// <summary>
        /// CheckRolePeriodStep23 - Use 'CheckRolePeriodStep23ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRolePeriodStep23()
        {
            #region Variable Declarations
            DXTextEdit uISteFromTimeEdit = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UISteFromTimeEdit;
            DXTextEdit uISteToTimeEdit = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UISteToTimeEdit;
            #endregion

            // Verify that the 'Text' property of 'steFromTime' text box equals '08:00'
            Assert.AreEqual(this.CheckRolePeriodStep23ExpectedValues.UISteFromTimeEditText, uISteFromTimeEdit.Text);

            // Verify that the 'Text' property of 'steToTime' text box equals '10:00'
            Assert.AreEqual(this.CheckRolePeriodStep23ExpectedValues.UISteToTimeEditText, uISteToTimeEdit.Text);
        }
        
        /// <summary>
        /// CheckRolePeriodStep24 - Use 'CheckRolePeriodStep24ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRolePeriodStep24()
        {
            #region Variable Declarations
            DXTextEdit uISteFromTimeEdit = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UISteFromTimeEdit;
            DXTextEdit uISteToTimeEdit = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UISteToTimeEdit;
            #endregion

            // Verify that the 'Text' property of 'steFromTime' text box equals '12:00'
            Assert.AreEqual(this.CheckRolePeriodStep24ExpectedValues.UISteFromTimeEditText, uISteFromTimeEdit.Text);

            // Verify that the 'Text' property of 'steToTime' text box equals '13:00'
            Assert.AreEqual(this.CheckRolePeriodStep24ExpectedValues.UISteToTimeEditText, uISteToTimeEdit.Text);
        }
        
        /// <summary>
        /// CheckRolesMonroeMadisonStep2 - Use 'CheckRolesMonroeMadisonStep2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRolesMonroeMadisonStep2()
        {
            #region Variable Declarations
            DXCell uIInformationOppgaventCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell;
            DXCell uIInformationOppgaventCell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell1;
            DXCell uIInformationOppgaventCell2 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell2;
            DXCell uIInformationOppgaventCell3 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell3;
            DXCell uIInformationOppgaventCell4 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell4;
            DXCell uIInformationOppgaventCell5 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell5;
            DXCell uIInformationOppgaventCell6 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell6;
            DXCell uIInformationOppgaventCell7 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell7;
            DXCell uIInformationOppgaventCell8 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell8;
            DXCell uIInformationOppgaventCell9 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell9;
            DXCell uIInformationOppgaventCell10 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell10;
            DXCell uIInformationOppgaventCell11 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell11;
            DXCell uIInformationOppgaventCell12 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell12;
            DXCell uIInformationOppgaventCell13 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell13;
            DXCell uIInformationOppgaventCell14 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell14;
            DXCell uIInformationOppgaventCell15 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell15;
            DXCell uIInformationOppgaventCell16 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell16;
            DXCell uIInformationOppgaventCell17 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell17;
            DXCell uIInformationOppgaventCell18 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell18;
            DXCell uIInformationOppgaventCell19 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell19;
            DXCell uIInformationOppgaventCell20 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell20;
            DXCell uIInformationOppgaventCell21 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell21;
            DXCell uIInformationOppgaventCell22 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell22;
            DXCell uIInformationOppgaventCell23 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell23;
            DXCell uIInformationOppgaventCell24 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell24;
            DXCell uIInformationOppgaventCell25 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell25;
            DXCell uIInformationOppgaventCell26 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell26;
            DXCell uIInformationOppgaventCell27 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell27;
            DXCell uIInformationOppgaventCell28 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell28;
            DXCell uIInformationOppgaventCell29 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell29;
            DXCell uIInformationOppgaventCell30 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell30;
            DXCell uIInformationOppgaventCell31 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell31;
            #endregion

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCellText, uIInformationOppgaventCell.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell1Text, uIInformationOppgaventCell1.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell2Text, uIInformationOppgaventCell2.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell3Text, uIInformationOppgaventCell3.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell4Text, uIInformationOppgaventCell4.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell5Text, uIInformationOppgaventCell5.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell6Text, uIInformationOppgaventCell6.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell7Text, uIInformationOppgaventCell7.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell8Text, uIInformationOppgaventCell8.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell9Text, uIInformationOppgaventCell9.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell10Text, uIInformationOppgaventCell10.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell11Text, uIInformationOppgaventCell11.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell12Text, uIInformationOppgaventCell12.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell13Text, uIInformationOppgaventCell13.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell14Text, uIInformationOppgaventCell14.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell15Text, uIInformationOppgaventCell15.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell16Text, uIInformationOppgaventCell16.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell17Text, uIInformationOppgaventCell17.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell18Text, uIInformationOppgaventCell18.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell19Text, uIInformationOppgaventCell19.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell20Text, uIInformationOppgaventCell20.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell21Text, uIInformationOppgaventCell21.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell22Text, uIInformationOppgaventCell22.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell23Text, uIInformationOppgaventCell23.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell24Text, uIInformationOppgaventCell24.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell25Text, uIInformationOppgaventCell25.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell26Text, uIInformationOppgaventCell26.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell27Text, uIInformationOppgaventCell27.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell28Text, uIInformationOppgaventCell28.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell29Text, uIInformationOppgaventCell29.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell30Text, uIInformationOppgaventCell30.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckRolesMonroeMadisonStep2ExpectedValues.UIInformationOppgaventCell31Text, uIInformationOppgaventCell31.Text);
        }
        
        /// <summary>
        /// CheckRolesStep25_1 - Use 'CheckRolesStep25_1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRolesStep25_1()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell2 = this.UIOppgavetildelingWindow8.UIGcContentClient.UISchedulerControl1List4.UIAppointmentCell2;
            #endregion

            // Verify that the 'Name' property of 'Appointment' cell equals '8:00 a.m.  to 4:00 p.m.  onsdag, januar 3, 2024, Subject KONTERING, Time Ledig, 2 of 6'
            Assert.AreEqual(this.CheckRolesStep25_1ExpectedValues.UIAppointmentCell2Name, uIAppointmentCell2.Name);
        }
        
        /// <summary>
        /// CheckRolesStep25_2 - Use 'CheckRolesStep25_2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRolesStep25_2()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell = this.UIOppgavetildelingWindow8.UIGcContentClient.UISchedulerControl1List4.UIAppointmentCell;
            #endregion

            // Verify that the 'Name' property of 'Appointment' cell equals '12:00 p.m.  to 2:00 p.m.  onsdag, januar 3, 2024, Subject ALLE MÅ KRAV, Time Ledig, 5 of 6'
            Assert.AreEqual(this.CheckRolesStep25_2ExpectedValues.UIAppointmentCellName, uIAppointmentCell.Name);
        }
        
        /// <summary>
        /// CheckRoleStep28 - Use 'CheckRoleStep28ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleStep28()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell = this.UIOppgavetildelingWindow8.UIGcContentClient.UISchedulerControl1List5.UIAppointmentCell;
            DXTextEdit uISteFromTimeEdit = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UISteFromTimeEdit;
            DXTextEdit uISteToTimeEdit = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UISteToTimeEdit;
            #endregion

            // Verify that the 'Name' property of 'Appointment' cell equals 'Dagvisning, 2 total events 8:00 a.m.  to 12:00 p.m.  søndag, januar 7, 2024, Subject KOMPETANSE BØR, Time Ledig, 2 of 2'
            Assert.AreEqual(this.CheckRoleStep28ExpectedValues.UIAppointmentCellName, uIAppointmentCell.Name);

            // Verify that the 'Text' property of 'steFromTime' text box equals '08:00'
            Assert.AreEqual(this.CheckRoleStep28ExpectedValues.UISteFromTimeEditText, uISteFromTimeEdit.Text);

            // Verify that the 'Text' property of 'steToTime' text box equals '12:00'
            Assert.AreEqual(this.CheckRoleStep28ExpectedValues.UISteToTimeEditText, uISteToTimeEdit.Text);
        }
        
        /// <summary>
        /// CheckRoleValuesStep3 - Use 'CheckRoleValuesStep3ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleValuesStep3()
        {
            #region Variable Declarations
            DXCell uIItemCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell;
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UISpecificationItemVieCustom.UILblContentLabel;
            #endregion

            // Verify that the 'Text' property of cell equals '(x)(Critical:Oppgave DISPONIBEL overlapper med allerede tildelt eksklusiv oppgave OPPG PÅ VAKTKODE EKSKL)OPPG2 - 10. Monroe, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRoleValuesStep3ExpectedValues.UIItemCellText, uIItemCell.Text);

            // Verify that the 'Text' property of 'lblContent' label equals 'Oppgave DISPONIBEL overlapper med allerede tildelt eksklusiv oppgave OPPG PÅ VAKTKODE EKSKL'
            Assert.AreEqual(this.CheckRoleValuesStep3ExpectedValues.UILblContentLabelText, uILblContentLabel.Text);
        }
        
        /// <summary>
        /// CheckRoleValuesStep3_2 - Use 'CheckRoleValuesStep3_2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleValuesStep3_2()
        {
            #region Variable Declarations
            DXCell uIInformationOppgaventCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell;
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UISpecificationItemVieCustom.UILblContentLabel;
            #endregion

            // Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '(x)(Critical:Nei, oppgaven kan ikke kombineres med andre oppgaver!)OPPG2 - 10. Monroe, James (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRoleValuesStep3_2ExpectedValues.UIInformationOppgaventCellText, uIInformationOppgaventCell.Text);

            // Verify that the 'Text' property of 'lblContent' label equals 'Nei, oppgaven kan ikke kombineres med andre oppgaver!'
            Assert.AreEqual(this.CheckRoleValuesStep3_2ExpectedValues.UILblContentLabelText, uILblContentLabel.Text);
        }
        
        /// <summary>
        /// CheckSaveButtonDisabledStep4 - Use 'CheckSaveButtonDisabledStep4ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSaveButtonDisabledStep4()
        {
            #region Variable Declarations
            DXRibbonButtonItem uILagreRibbonBaseButtonItem = this.UIOppgavetildelingWindow.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgActionsRibbonPageGroup.UILagreRibbonBaseButtonItem;
            #endregion

            // Verify that the 'Enabled' property of 'Lagre' RibbonBaseButtonItem equals 'False'
            Assert.AreEqual(this.CheckSaveButtonDisabledStep4ExpectedValues.UILagreRibbonBaseButtonItemEnabled, uILagreRibbonBaseButtonItem.Enabled);
        }
        
        /// <summary>
        /// CheckSaveButtonEnabledStep5 - Use 'CheckSaveButtonEnabledStep5ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSaveButtonEnabledStep5()
        {
            #region Variable Declarations
            DXRibbonButtonItem uILagreRibbonBaseButtonItem = this.UIOppgavetildelingWindow.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgActionsRibbonPageGroup.UILagreRibbonBaseButtonItem;
            #endregion

            // Verify that the 'Enabled' property of 'Lagre' RibbonBaseButtonItem equals 'True'
            Assert.AreEqual(this.CheckSaveButtonEnabledStep5ExpectedValues.UILagreRibbonBaseButtonItemEnabled, uILagreRibbonBaseButtonItem.Enabled);
        }
        
        /// <summary>
        /// CheckSpecsStep12 - Use 'CheckSpecsStep12ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSpecsStep12()
        {
            #region Variable Declarations
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIPcHeaderClient.UILblContentLabel;
            DXTestControl uILblContentLabel1 = this.UIOppgavetildelingWindow6.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UISpecificationItemVieCustom.UILblContentLabel;
            DXTestControl uILblNameLabel = this.UIOppgavetildelingWindow6.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UIEmployeeSpecificatioCustom.UIPcNameClient.UILblNameLabel;
            DXTestControl uILblEmploymentLabel = this.UIOppgavetildelingWindow6.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UIEmployeeSpecificatioCustom.UILblEmploymentLabel;
            #endregion

            // Verify that the 'Text' property of 'lblContent' label equals 'KOMPETANSE BØR'
            Assert.AreEqual(this.CheckSpecsStep12ExpectedValues.UILblContentLabelText, uILblContentLabel.Text);

            // Verify that the 'Text' property of 'lblContent' label equals 'Du bør jo være lege, ikke sant!'
            Assert.AreEqual(this.CheckSpecsStep12ExpectedValues.UILblContentLabelText1, uILblContentLabel1.Text);

            // Verify that the 'Text' property of 'lblName' label equals '12. Taylor, Zachary'
            Assert.AreEqual(this.CheckSpecsStep12ExpectedValues.UILblNameLabelText, uILblNameLabel.Text);

            // Verify that the 'Text' property of 'lblEmployment' label equals 'S - Sykepleier'
            Assert.AreEqual(this.CheckSpecsStep12ExpectedValues.UILblEmploymentLabelText, uILblEmploymentLabel.Text);
        }
        
        /// <summary>
        /// CheckStep13 - Use 'CheckStep13ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep13()
        {
            #region Variable Declarations
            DXCell uID08001600Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600Cell;
            DXCell uIItemCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell;
            DXCell uIItemCell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell1;
            #endregion

            // Verify that the 'Text' property of '( )D (08:00 - 16:00)' cell equals ''
            Assert.AreEqual(this.CheckStep13ExpectedValues.UID08001600CellText, uID08001600Cell.Text);

            // Verify that the 'Text' property of cell equals ''
            Assert.AreEqual(this.CheckStep13ExpectedValues.UIItemCellText, uIItemCell.Text);

            // Verify that the 'Text' property of cell equals ''
            Assert.AreEqual(this.CheckStep13ExpectedValues.UIItemCell1Text, uIItemCell1.Text);
        }
        
        /// <summary>
        /// CheckStep14 - Use 'CheckStep14ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep14()
        {
            #region Variable Declarations
            DXCell uID08001600Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600Cell;
            DXCell uIItemCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell;
            DXCell uIItemCell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell1;
            #endregion

            // Verify that the 'Text' property of '( )D (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
            //( )OVER (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckStep14ExpectedValues.UID08001600CellText, uID08001600Cell.Text);

            // Verify that the 'Text' property of cell equals '( )D (08:00 - 16:00)
            //( )(Warning:Du bør jo være lege, ikke sant!)KOMPETANSE BØR (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckStep14ExpectedValues.UIItemCellText, uIItemCell.Text);

            // Verify that the 'Text' property of cell equals '( )D (08:00 - 16:00)
            //( )OVER (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckStep14ExpectedValues.UIItemCell1Text, uIItemCell1.Text);
        }
        
        /// <summary>
        /// CheckStep15 - Use 'CheckStep15ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep15()
        {
            #region Variable Declarations
            DXCell uID08001600Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600Cell1;
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow6.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UISpecificationItemVieCustom.UILblContentLabel;
            DXTestControl uILblNameLabel = this.UIOppgavetildelingWindow6.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UIEmployeeSpecificatioCustom.UIPcNameClient.UILblNameLabel;
            #endregion

            // Verify that the 'Text' property of '( )D (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
            //(x)(Critical:Oppgave KUN MANDAG kan ikke tildeles på ugyldig ukedag (tirsdag).)KUN MANDAG (12:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckStep15ExpectedValues.UID08001600Cell1Text, uID08001600Cell1.Text);

            // Verify that the 'Text' property of 'lblContent' label equals 'Oppgave KUN MANDAG kan ikke tildeles på ugyldig ukedag (tirsdag).'
            Assert.AreEqual(this.CheckStep15ExpectedValues.UILblContentLabelText, uILblContentLabel.Text);

            // Verify that the 'Text' property of 'lblName' label equals '1. Adams, John'
            Assert.AreEqual(this.CheckStep15ExpectedValues.UILblNameLabelText, uILblNameLabel.Text);
        }
        
        /// <summary>
        /// CheckStep16 - Use 'CheckStep16ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep16()
        {
            #region Variable Declarations
            DXCell uID08001600Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600Cell1;
            #endregion

            // Verify that the 'Text' property of '( )D (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckStep16ExpectedValues.UID08001600Cell1Text, uID08001600Cell1.Text);
        }
        
        /// <summary>
        /// CheckStep21 - Use 'CheckStep21ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep21()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell = this.UIOppgavetildelingWindow8.UIGcContentClient.UISchedulerControl1List.UIAppointmentCell;
            #endregion

            // Verify that the 'Name' property of 'Appointment' cell equals 'Dagvisning, 2 total events 10:00 a.m.  to 12:00 p.m.  onsdag, januar 3, 2024, Subject PRIO HØY, Time Ledig, 2 of 2'
            Assert.AreEqual(this.CheckStep21ExpectedValues.UIAppointmentCellName, uIAppointmentCell.Name);
        }
        
        /// <summary>
        /// CheckStep22_1 - Use 'CheckStep22_1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep22_1()
        {
            #region Variable Declarations
            WinToolTip uIDukanBAREutføredenneToolTip = this.UIItemWindow1.UIDukanBAREutføredenneToolTip;
            #endregion

            // Verify that the 'Name' property of 'Du kan BARE utføre denne oppgaven!.' tooltip equals 'Du kan BARE utføre denne oppgaven!. '
            Assert.AreEqual(this.CheckStep22_1ExpectedValues.UIDukanBAREutføredenneToolTipName, uIDukanBAREutføredenneToolTip.Name);
        }
        
        /// <summary>
        /// CheckStep22_2 - Use 'CheckStep22_2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep22_2()
        {
            #region Variable Declarations
            WinToolTip uIOppgavePRIOHØYoverlaToolTip = this.UIItemWindow2.UIOppgavePRIOHØYoverlaToolTip;
            #endregion

            // Verify that the 'Name' property of 'Oppgave PRIO HØY overlapper med allerede tildelt e...' tooltip equals 'Oppgave PRIO HØY overlapper med allerede tildelt eksklusiv oppgave EKSKL KAN IKKE. '
            Assert.AreEqual(this.CheckStep22_2ExpectedValues.UIOppgavePRIOHØYoverlaToolTipName, uIOppgavePRIOHØYoverlaToolTip.Name);
        }
        
        /// <summary>
        /// CheckStep26 - Use 'CheckStep26ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep26()
        {
            #region Variable Declarations
            DXLookUpEdit uILeCostPlaceLookUpEdit = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UITabControlViewHost1TabList.UIViewTabPageClient1.UIRoleAccountingViewCustom.UILeCostPlaceLookUpEdit;
            DXLookUpEdit uILeProjectLookUpEdit = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UITabControlViewHost1TabList.UIViewTabPageClient1.UIRoleAccountingViewCustom.UILeProjectLookUpEdit;
            #endregion

            // Verify that the 'Text' property of 'leCostPlace' LookUpEdit equals '4510 - Anestesi'
            Assert.AreEqual(this.CheckStep26ExpectedValues.UILeCostPlaceLookUpEditText, uILeCostPlaceLookUpEdit.Text);

            // Verify that the 'Text' property of 'leProject' LookUpEdit equals 'P1 - Prosjekt 1'
            Assert.AreEqual(this.CheckStep26ExpectedValues.UILeProjectLookUpEditText, uILeProjectLookUpEdit.Text);
        }
        
        /// <summary>
        /// CheckStep29 - Use 'CheckStep29ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep29()
        {
            #region Variable Declarations
            DXCell uIItemCell = this.UIOppgavetildelingWindow5.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell;
            DXCell uIAJacksonAndrew150023Cell = this.UIOppgavetildelingWindow9.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIAJacksonAndrew150023Cell;
            #endregion

            // Verify that the 'Text' property of cell equals '( )(Warning:Du bør jo være lege, ikke sant!)KK1 - 11. Pierce, Franklin (08:00 - 08:00)
            //'
            Assert.AreEqual(this.CheckStep29ExpectedValues.UIItemCellText, uIItemCell.Text);

            // Verify that the 'Text' property of '( )A - Jackson, Andrew (15:00 - 23:00)
            //( )A - Jefferson, Thomas (15:00 - 23:00)
            //( )D - Adams, John (08:00 - 16:00)
            //( )D - Adams, John Quincy (08:00 - 16:00)
            //( )D - Harrison, William H (08:00 - 16:00)
            //( )GV1 - Fillmore, Millard (08:00 - 16:00)
            //(x)KK1 - Pierce, Franklin (08:00 - 16:00)
            //( )KK1 - Pierce, Franklin (16:00 - 22:00)
            //( )KK1 - Pierce, Franklin (22:00 - 08:00)
            //( )N - Knox Polk, James (22:00 - 08:00)
            //( )OPPG1 - Madison, James (12:00 - 16:00)' cell equals '( )A - 6. Jackson, Andrew (15:00 - 23:00)
            //( )A - 7. Jefferson, Thomas (15:00 - 23:00)
            //( )D - 2. Adams, John Quincy (08:00 - 16:00)
            //( )D - 3. Buchanan, James (08:00 - 16:00)
            //( )D - 5. Harrison, William H (08:00 - 16:00)
            //( )GV1 - 4. Fillmore, Millard (08:00 - 16:00)
            //( )N - 8. Knox Polk, James (22:00 - 08:00)
            //( )OPPG1 - 9. Madison, James (12:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckStep29ExpectedValues.UIAJacksonAndrew150023CellText, uIAJacksonAndrew150023Cell.Text);
        }
        
        /// <summary>
        /// CheckStep7 - Use 'CheckStep7ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep7()
        {
            #region Variable Declarations
            DXCell uIItem4040Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell;
            DXCell uIItem4040Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell1;
            DXCell uIItem4040Cell2 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell2;
            DXCell uIItem4040Cell3 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell3;
            DXCell uIItem4040Cell4 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell4;
            DXCell uIItem4040Cell5 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell5;
            DXCell uIItem4040Cell6 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell6;
            DXCell uIItem4040Cell7 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell7;
            DXCell uIItem4040Cell8 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell8;
            DXCell uIItem4040Cell9 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell9;
            DXCell uIItem4040Cell10 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell10;
            DXCell uIItem4040Cell11 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell11;
            DXCell uIItem4040Cell12 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell12;
            DXCell uIItem4040Cell13 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell13;
            DXCell uIItem4040Cell14 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell14;
            DXCell uIItem4040Cell15 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell15;
            DXCell uIItem4040Cell16 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell16;
            DXCell uIItem4040Cell17 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell17;
            DXCell uIItem4040Cell18 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell18;
            DXCell uIItem4040Cell19 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell19;
            DXCell uIItem4040Cell20 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell20;
            DXCell uIItem4040Cell21 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell21;
            DXCell uIItem4040Cell22 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell22;
            DXCell uIItem4040Cell23 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell23;
            DXCell uIItem4040Cell24 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell24;
            DXCell uIItem4040Cell25 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell25;
            DXCell uIItem4040Cell26 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell26;
            DXCell uIItem4040Cell27 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell27;
            #endregion

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040CellText, uIItem4040Cell.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell1Text, uIItem4040Cell1.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell2Text, uIItem4040Cell2.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell3Text, uIItem4040Cell3.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell4Text, uIItem4040Cell4.Text);

            // Verify that the 'ClassName' property of '4,0 / 4,0' cell equals 'GridControlCell'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell5ClassName, uIItem4040Cell5.ClassName);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell6Text, uIItem4040Cell6.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell7Text, uIItem4040Cell7.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell8Text, uIItem4040Cell8.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell9Text, uIItem4040Cell9.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell10Text, uIItem4040Cell10.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell11Text, uIItem4040Cell11.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell12Text, uIItem4040Cell12.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell13Text, uIItem4040Cell13.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell14Text, uIItem4040Cell14.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell15Text, uIItem4040Cell15.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell16Text, uIItem4040Cell16.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell17Text, uIItem4040Cell17.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell18Text, uIItem4040Cell18.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell19Text, uIItem4040Cell19.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell20Text, uIItem4040Cell20.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell21Text, uIItem4040Cell21.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell22Text, uIItem4040Cell22.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell23Text, uIItem4040Cell23.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell24Text, uIItem4040Cell24.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell25Text, uIItem4040Cell25.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell26Text, uIItem4040Cell26.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep7ExpectedValues.UIItem4040Cell27Text, uIItem4040Cell27.Text);
        }
        
        /// <summary>
        /// CheckStep9 - Use 'CheckStep9ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep9()
        {
            #region Variable Declarations
            DXCell uIItemCell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell1;
            #endregion

            // Verify that the 'Text' property of cell equals '( )D - 1. Adams, John (12:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckStep9ExpectedValues.UIItemCell1Text, uIItemCell1.Text);
        }
        
        /// <summary>
        /// CheckValuesStep12 - Use 'CheckValuesStep12ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep12()
        {
            #region Variable Declarations
            DXCell uID08001600Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600Cell;
            DXCell uID08001600WarningDubøCell = this.UIOppgavetildelingWindow5.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600WarningDubøCell;
            DXCell uID08001600OVER0800160Cell = this.UIOppgavetildelingWindow5.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600OVER0800160Cell;
            DXCell uID08001600KL081508001Cell = this.UIOppgavetildelingWindow5.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600KL081508001Cell;
            DXCell uID08001600OVER0800160Cell1 = this.UIOppgavetildelingWindow5.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600OVER0800160Cell1;
            DXCell uID08001600KL081508001Cell1 = this.UIOppgavetildelingWindow5.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600KL081508001Cell1;
            DXCell uID08001600OVER0800160Cell2 = this.UIOppgavetildelingWindow5.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600OVER0800160Cell2;
            #endregion

            // Verify that the 'Text' property of '( )D (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
            //( )OVER (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckValuesStep12ExpectedValues.UID08001600CellText, uID08001600Cell.Text);

            // Verify that the 'Text' property of '( )D (08:00 - 16:00)
            //( )(Warning:Du bør jo være lege, ikke sant!)KOMPETANSE BØR (08:00 - 12:00)' cell equals '( )D (08:00 - 16:00)
            //( )(Warning:Du bør jo være lege, ikke sant!)KOMPETANSE BØR (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckValuesStep12ExpectedValues.UID08001600WarningDubøCellText, uID08001600WarningDubøCell.Text);

            // Verify that the 'Text' property of '( )D (08:00 - 16:00)
            //( )OVER (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
            //( )OVER (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckValuesStep12ExpectedValues.UID08001600OVER0800160CellText, uID08001600OVER0800160Cell.Text);

            // Verify that the 'Text' property of '( )D (08:00 - 16:00)
            //( )KL.08-15 (08:00 - 15:00)' cell equals '( )D (08:00 - 16:00)
            //( )KL.08-15 (08:00 - 15:00)
            //'
            Assert.AreEqual(this.CheckValuesStep12ExpectedValues.UID08001600KL081508001CellText, uID08001600KL081508001Cell.Text);

            // Verify that the 'Text' property of '( )D (08:00 - 16:00)
            //( )OVER (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
            //( )OVER (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckValuesStep12ExpectedValues.UID08001600OVER0800160Cell1Text, uID08001600OVER0800160Cell1.Text);

            // Verify that the 'Text' property of '( )D (08:00 - 16:00)
            //( )KL.08-15 (08:00 - 15:00)' cell equals '( )D (08:00 - 16:00)
            //( )KL.08-15 (08:00 - 15:00)
            //'
            Assert.AreEqual(this.CheckValuesStep12ExpectedValues.UID08001600KL081508001Cell1Text, uID08001600KL081508001Cell1.Text);

            // Verify that the 'Text' property of '( )D (08:00 - 16:00)
            //( )OVER (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
            //( )OVER (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckValuesStep12ExpectedValues.UID08001600OVER0800160Cell2Text, uID08001600OVER0800160Cell2.Text);
        }
        
        /// <summary>
        /// CheckValuesStep19 - Use 'CheckValuesStep19ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep19()
        {
            #region Variable Declarations
            DXCell uINKnoxPolkJames220008Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UINKnoxPolkJames220008Cell;
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow6.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIPcHeaderClient.UILblContentLabel;
            DXTestControl uILblNameLabel = this.UIOppgavetildelingWindow6.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UIEmployeeSpecificatioCustom.UIPcNameClient.UILblNameLabel;
            #endregion

            // Verify that the 'Text' property of '( )N - Knox Polk, James (22:00 - 08:00)' cell equals '(x)N - 8. Knox Polk, James (22:00 - 08:00)
            //'
            Assert.AreEqual(this.CheckValuesStep19ExpectedValues.UINKnoxPolkJames220008CellText, uINKnoxPolkJames220008Cell.Text);

            // Verify that the 'Text' property of 'lblContent' label equals 'KL.22-08'
            Assert.AreEqual(this.CheckValuesStep19ExpectedValues.UILblContentLabelText, uILblContentLabel.Text);

            // Verify that the 'Text' property of 'lblName' label equals '8. Knox Polk, James'
            Assert.AreEqual(this.CheckValuesStep19ExpectedValues.UILblNameLabelText, uILblNameLabel.Text);
        }
        
        /// <summary>
        /// CheckValuesStep2 - Use 'CheckValuesStep2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep2()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIOppgavevisningRibbonBaseButtonItem = this.UIOppgavetildelingWindow.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgViewRibbonPageGroup.UIOppgavevisningRibbonBaseButtonItem;
            DXDockPanel uIDpDisponibleDockPanel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel;
            DXCell uIValgtansattCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIValgtansattCell;
            DXCell uIAnsatteCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIAnsatteCell;
            DXCell uIItem4510AnestesiCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItem4510AnestesiCell;
            #endregion

            // Verify that the 'Checked' property of 'Oppgavevisning' RibbonBaseButtonItem equals 'True'
            Assert.AreEqual(this.CheckValuesStep2ExpectedValues.UIOppgavevisningRibbonBaseButtonItemChecked, uIOppgavevisningRibbonBaseButtonItem.Checked);

            // Verify that the 'Visible' property of 'dpDisponible' DockPanel equals 'True'
            Assert.AreEqual(this.CheckValuesStep2ExpectedValues.UIDpDisponibleDockPanelVisible, uIDpDisponibleDockPanel.Visible);

            // Verify that the 'Text' property of 'Valgt ansatt' cell equals 'Valgt ansatt'
            Assert.AreEqual(this.CheckValuesStep2ExpectedValues.UIValgtansattCellText, uIValgtansattCell.Text);

            // Verify that the 'Text' property of 'Ansatte' cell equals 'Ansatte'
            Assert.AreEqual(this.CheckValuesStep2ExpectedValues.UIAnsatteCellText, uIAnsatteCell.Text);

            // Verify that the 'Text' property of '4510 - Anestesi' cell equals '4510 - Anestesi'
            Assert.AreEqual(this.CheckValuesStep2ExpectedValues.UIItem4510AnestesiCellText, uIItem4510AnestesiCell.Text);
        }
        
        /// <summary>
        /// CheckValuesStep32 - Use 'CheckValuesStep32ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep32()
        {
            #region Variable Declarations
            DXCell uIItem4040Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell;
            DXCell uIItem4040Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell1;
            DXCell uIItem4040Cell2 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell2;
            DXCell uIItem4040Cell3 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell3;
            DXCell uIItem4040Cell4 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell4;
            DXCell uIItem4040Cell5 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell5;
            DXCell uIItem4040Cell6 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell6;
            #endregion

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckValuesStep32ExpectedValues.UIItem4040CellText, uIItem4040Cell.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckValuesStep32ExpectedValues.UIItem4040Cell1Text, uIItem4040Cell1.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckValuesStep32ExpectedValues.UIItem4040Cell2Text, uIItem4040Cell2.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckValuesStep32ExpectedValues.UIItem4040Cell3Text, uIItem4040Cell3.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckValuesStep32ExpectedValues.UIItem4040Cell4Text, uIItem4040Cell4.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckValuesStep32ExpectedValues.UIItem4040Cell5Text, uIItem4040Cell5.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckValuesStep32ExpectedValues.UIItem4040Cell6Text, uIItem4040Cell6.Text);
        }
        
        /// <summary>
        /// CheckValuesStep33 - Use 'CheckValuesStep33ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep33()
        {
            #region Variable Declarations
            DXCell uIItemCell3 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell3;
            #endregion

            // Verify that the 'Text' property of cell equals '( )D - Adams, John (10:00 - 12:00)
            //( )D - Taylor, Zachary (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckValuesStep33ExpectedValues.UIItemCell3Text, uIItemCell3.Text);
        }
        
        /// <summary>
        /// CheckValuesStep34 - Use 'CheckValuesStep34ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep34()
        {
            #region Variable Declarations
            DXLookUpEdit uILeCostPlaceLookUpEdit = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UITabControlViewHost1TabList.UIViewTabPageClient1.UIRoleAccountingViewCustom.UILeCostPlaceLookUpEdit;
            DXLookUpEdit uILeProjectLookUpEdit = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UITabControlViewHost1TabList.UIViewTabPageClient1.UIRoleAccountingViewCustom.UILeProjectLookUpEdit;
            #endregion

            // Verify that the 'Text' property of 'leCostPlace' LookUpEdit equals '4510 - Anestesi'
            Assert.AreEqual(this.CheckValuesStep34ExpectedValues.UILeCostPlaceLookUpEditText, uILeCostPlaceLookUpEdit.Text);

            // Verify that the 'Text' property of 'leProject' LookUpEdit equals 'P1 - Prosjekt 1'
            Assert.AreEqual(this.CheckValuesStep34ExpectedValues.UILeProjectLookUpEditText, uILeProjectLookUpEdit.Text);
        }
        
        /// <summary>
        /// CheckValuesStep34_2 - Use 'CheckValuesStep34_2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep34_2()
        {
            #region Variable Declarations
            DXLookUpEdit uILeCostPlaceLookUpEdit = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UITabControlViewHost1TabList.UIViewTabPageClient1.UIRoleAccountingViewCustom.UILeCostPlaceLookUpEdit;
            DXLookUpEdit uILeProjectLookUpEdit = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UITabControlViewHost1TabList.UIViewTabPageClient1.UIRoleAccountingViewCustom.UILeProjectLookUpEdit;
            #endregion

            // Verify that the 'Text' property of 'leCostPlace' LookUpEdit equals '5000 - ARBEIDSPLANKLINIKKEN'
            Assert.AreEqual(this.CheckValuesStep34_2ExpectedValues.UILeCostPlaceLookUpEditText, uILeCostPlaceLookUpEdit.Text);

            // Verify that the 'Text' property of 'leProject' LookUpEdit equals 'P3 - Prosjekt 3'
            Assert.AreEqual(this.CheckValuesStep34_2ExpectedValues.UILeProjectLookUpEditText, uILeProjectLookUpEdit.Text);
        }
        
        /// <summary>
        /// ClickHeader
        /// </summary>
        public void ClickHeader()
        {
            #region Variable Declarations
            DXTestControl uIOppgavetildelingWindowTitleBar = this.UIOppgavetildelingWindow.UIOppgavetildelingWindowTitleBar;
            #endregion

            // Click 'Oppgavetildeling' WindowTitleBar
            Mouse.Click(uIOppgavetildelingWindowTitleBar, new Point(100, 14));
        }
        
        /// <summary>
        /// DecreaseTaskViewTab
        /// </summary>
        public void DecreaseTaskViewTab()
        {
            #region Variable Declarations
            DXTestControl uILeftSeparator = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UILeftSeparator;
            DXGrid uIGcRoleCodePatternsTable = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpRoleCodePatternsDockPanel.UIDockPanel3_ContainerCustom.UIRoleCodePatternListVCustom.UIGcRoleCodePatternsTable;
            #endregion

            // Move 'Left' separator to 'gcRoleCodePatterns' table
            uIGcRoleCodePatternsTable.EnsureClickable(new Point(125, 154));
            Mouse.StartDragging(uILeftSeparator, new Point(1, 218));
            Mouse.StopDragging(uIGcRoleCodePatternsTable, new Point(125, 154));
        }
        
        /// <summary>
        /// DeleteMonroeDispMonday - Use 'DeleteMonroeDispMondayParams' to pass parameters into this method.
        /// </summary>
        public void DeleteMonroeDispMonday()
        {
            #region Variable Declarations
            DXCell uIItemCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell;
            DXGrid uIGcDragDropGridTable = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell, new Point(103, 11));

            // Type '{Delete}' in 'gcDragDropGrid' table
            Keyboard.SendKeys(uIGcDragDropGridTable, this.DeleteMonroeDispMondayParams.UIGcDragDropGridTableSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// DeletePierceRoleSunday - Use 'DeletePierceRoleSundayParams' to pass parameters into this method.
        /// </summary>
        public void DeletePierceRoleSunday()
        {
            #region Variable Declarations
            DXScrollBar uIHCrkScrollBarScrollBarControl = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIHCrkScrollBarScrollBarControl;
            DXCell uIXWarningDubørjoværelCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXWarningDubørjoværelCell;
            DXGrid uIGcDragDropGridTable = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable;
            #endregion

            // Type '911' in 'HCrkScrollBar' ScrollBarControl
            //ValueAsString
            uIHCrkScrollBarScrollBarControl.ValueAsString = this.DeletePierceRoleSundayParams.UIHCrkScrollBarScrollBarControlValueAsString;

            // Click '(x)(Warning:Du bør jo være lege, ikke sant!)KK1 - Pierce, Franklin (08:00 - 08:00)' cell
            Mouse.Click(uIXWarningDubørjoværelCell, new Point(99, 12));

            // Type '{Delete}' in 'gcDragDropGrid' table
            Keyboard.SendKeys(uIGcDragDropGridTable, this.DeletePierceRoleSundayParams.UIGcDragDropGridTableSendKeys, ModifierKeys.None);

            // Type '0' in 'HCrkScrollBar' ScrollBarControl
            //ValueAsString
            uIHCrkScrollBarScrollBarControl.ValueAsString = this.DeletePierceRoleSundayParams.UIHCrkScrollBarScrollBarControlValueAsString1;
        }
        
        /// <summary>
        /// DeleteTaylorOverSunday - Use 'DeleteTaylorOverSundayParams' to pass parameters into this method.
        /// </summary>
        public void DeleteTaylorOverSunday()
        {
            #region Variable Declarations
            DXScrollBar uIHCrkScrollBarScrollBarControl = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UIHCrkScrollBarScrollBarControl;
            DXCell uID08001600xOVER080016Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600xOVER080016Cell;
            DXGrid uIGcDragDropGridTable = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable;
            #endregion

            // Type '505' in 'HCrkScrollBar' ScrollBarControl
            //ValueAsString
            uIHCrkScrollBarScrollBarControl.ValueAsString = this.DeleteTaylorOverSundayParams.UIHCrkScrollBarScrollBarControlValueAsString;

            // Click '( )D (08:00 - 16:00)
            //(x)OVER (08:00 - 16:00)' cell
            Mouse.Click(uID08001600xOVER080016Cell, new Point(122, 28));

            // Type '{Delete}' in 'gcDragDropGrid' table
            Keyboard.SendKeys(uIGcDragDropGridTable, this.DeleteTaylorOverSundayParams.UIGcDragDropGridTableSendKeys, ModifierKeys.None);

            // Type '0' in 'HCrkScrollBar' ScrollBarControl
            //ValueAsString
            uIHCrkScrollBarScrollBarControl.ValueAsString = this.DeleteTaylorOverSundayParams.UIHCrkScrollBarScrollBarControlValueAsString1;
        }
        
        /// <summary>
        /// DoubleClickMadisonRoleTuesdayStep6
        /// </summary>
        public void DoubleClickMadisonRoleTuesdayStep6()
        {
            #region Variable Declarations
            DXCell uIInformationOppgaventCell3 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell3;
            #endregion

            // Double-Click '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell
            Mouse.DoubleClick(uIInformationOppgaventCell3, new Point(94, 7));
        }
        
        /// <summary>
        /// EditRoleCostDepStep27
        /// </summary>
        public void EditRoleCostDepStep27()
        {
            #region Variable Declarations
            DXCell uIItem5000ARBEIDSPLANKCell = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UITabControlViewHost1TabList.UIViewTabPageClient1.UIRoleAccountingViewCustom.UILeCostPlaceLookUpEdit.UIPopupSearchLookUpEdiWindow.UISearchEditLookUpPopuCustom.UILCCustom.UILcMainLayoutGroup.UILciGridLayoutControlItem.UIGridControlTable.UIItem5000ARBEIDSPLANKCell;
            DXCell uIP3Prosjekt3Cell = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UITabControlViewHost1TabList.UIViewTabPageClient1.UIRoleAccountingViewCustom.UILeProjectLookUpEdit.UIPopupSearchLookUpEdiWindow.UISearchEditLookUpPopuCustom.UILCCustom.UILcMainLayoutGroup.UILciGridLayoutControlItem.UIGridControlTable.UIP3Prosjekt3Cell;
            #endregion

            // Click '5000 - ARBEIDSPLANKLINIKKEN' cell
            Mouse.Click(uIItem5000ARBEIDSPLANKCell, new Point(108, 9));

            // Click 'P3 - Prosjekt 3' cell
            Mouse.Click(uIP3Prosjekt3Cell, new Point(67, 4));
        }
        
        /// <summary>
        /// EditRolePeriod1WithDragStep24
        /// </summary>
        public void EditRolePeriod1WithDragStep24()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell = this.UIOppgavetildelingWindow8.UIGcContentClient.UISchedulerControl1List2.UIAppointmentCell;
            #endregion

            // Move 'Appointment' cell
            Mouse.StartDragging(uIAppointmentCell, new Point(55, 1));
            Mouse.StopDragging(uIAppointmentCell, 0, 180);
        }
        
        /// <summary>
        /// EditRolePeriodWithDragStep23
        /// </summary>
        public void EditRolePeriodWithDragStep23()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell2 = this.UIOppgavetildelingWindow8.UIGcContentClient.UISchedulerControl1List1.UIAppointmentCell2;
            #endregion

            // Move 'Appointment' cell
            Mouse.StartDragging(uIAppointmentCell2, new Point(57, 351));
            Mouse.StopDragging(uIAppointmentCell2, 0, -280);
        }
        
        /// <summary>
        /// EditTaylorRosterLineStep13 - Use 'EditTaylorRosterLineStep13Params' to pass parameters into this method.
        /// </summary>
        public void EditTaylorRosterLineStep13()
        {
            #region Variable Declarations
            DXCell uIDCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIDCell;
            DXGrid uIGcRosterPlanTable = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable;
            DXButton uIJAButton = this.UIGT4001InformasjonWindow.UIJAButton;
            #endregion

            // Click 'D' cell
            Mouse.Click(uIDCell, new Point(26, 10));

            // Type 'Shift + {Right}' in 'gcRosterPlan' table
            Keyboard.SendKeys(uIGcRosterPlanTable, this.EditTaylorRosterLineStep13Params.UIGcRosterPlanTableSendKeys, ModifierKeys.Shift);

            // Type 'Shift + {Right}' in 'gcRosterPlan' table
            Keyboard.SendKeys(uIGcRosterPlanTable, this.EditTaylorRosterLineStep13Params.UIGcRosterPlanTableSendKeys1, ModifierKeys.Shift);

            // Type '{Delete}' in 'gcRosterPlan' table
            Keyboard.SendKeys(uIGcRosterPlanTable, this.EditTaylorRosterLineStep13Params.UIGcRosterPlanTableSendKeys2, ModifierKeys.None);

            // Click '&Ja' button
            Mouse.Click(uIJAButton, new Point(1, 1));
        }
        
        /// <summary>
        /// MoveSliderRight - Use 'MoveSliderRightParams' to pass parameters into this method.
        /// </summary>
        public void MoveSliderRight()
        {
            #region Variable Declarations
            DXScrollBar uIHCrkScrollBarScrollBarControl = this.UIOppgavetildelingWindow5.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIHCrkScrollBarScrollBarControl;
            #endregion

            // Type '242' in 'HCrkScrollBar' ScrollBarControl
            //ValueAsString
            uIHCrkScrollBarScrollBarControl.ValueAsString = this.MoveSliderRightParams.UIHCrkScrollBarScrollBarControlValueAsString;
        }
        
        /// <summary>
        /// OpenAdamsRoleStep27
        /// </summary>
        public void OpenAdamsRoleStep27()
        {
            #region Variable Declarations
            DXCell uIItemCell4 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell4;
            #endregion

            // Double-Click cell
            Mouse.DoubleClick(uIItemCell4, new Point(93, 8));
        }
        
        /// <summary>
        /// OpenAdamsRoleStep34
        /// </summary>
        public void OpenAdamsRoleStep34()
        {
            #region Variable Declarations
            DXCell uIDAdamsJohn15001600Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDAdamsJohn15001600Cell;
            #endregion

            // Double-Click '( )D - Adams, John (15:00 - 16:00)' cell
            Mouse.DoubleClick(uIDAdamsJohn15001600Cell, new Point(93, 8));
        }
        
        /// <summary>
        /// OpenErrorMessageStep22_1
        /// </summary>
        public void OpenErrorMessageStep22_1()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell = this.UIOppgavetildelingWindow8.UIGcContentClient.UISchedulerControl1List1.UIAppointmentCell;
            #endregion

            // Mouse hover 'Appointment' cell at (13, 10)
            Mouse.Hover(uIAppointmentCell, new Point(13, 10));
        }
        
        /// <summary>
        /// OpenErrorMessageStep22_2
        /// </summary>
        public void OpenErrorMessageStep22_2()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell1 = this.UIOppgavetildelingWindow8.UIGcContentClient.UISchedulerControl1List1.UIAppointmentCell1;
            #endregion

            // Mouse hover 'Appointment' cell at (15, 10)
            Mouse.Hover(uIAppointmentCell1, new Point(15, 10));
        }
        
        /// <summary>
        /// OpenErrorMessageStep25_1
        /// </summary>
        public void OpenErrorMessageStep25_1()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell1 = this.UIOppgavetildelingWindow8.UIGcContentClient.UISchedulerControl1List4.UIAppointmentCell1;
            #endregion

            // Mouse hover 'Appointment' cell at (13, 14)
            Mouse.Hover(uIAppointmentCell1, new Point(13, 14));
        }
        
        /// <summary>
        /// OpenErrorMessageStep25_2
        /// </summary>
        public void OpenErrorMessageStep25_2()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell3 = this.UIOppgavetildelingWindow8.UIGcContentClient.UISchedulerControl1List4.UIAppointmentCell3;
            #endregion

            // Mouse hover 'Appointment' cell at (12, 12)
            Mouse.Hover(uIAppointmentCell3, new Point(12, 12));
        }
        
        /// <summary>
        /// OpenOldRoleStep25_1
        /// </summary>
        public void OpenOldRoleStep25_1()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell4 = this.UIOppgavetildelingWindow8.UIGcContentClient.UISchedulerControl1List4.UIAppointmentCell4;
            #endregion

            // Mouse hover 'Appointment' cell at (12, 9)
            Mouse.Hover(uIAppointmentCell4, new Point(12, 9));
        }
        
        /// <summary>
        /// OpenOldRoleStep25_2
        /// </summary>
        public void OpenOldRoleStep25_2()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell5 = this.UIOppgavetildelingWindow8.UIGcContentClient.UISchedulerControl1List4.UIAppointmentCell5;
            #endregion

            // Mouse hover 'Appointment' cell at (15, 10)
            Mouse.Hover(uIAppointmentCell5, new Point(15, 10));
        }
        
        /// <summary>
        /// SelectAlleMaaKravStep34
        /// </summary>
        public void SelectAlleMaaKravStep34()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell12 = this.UIOppgavetildelingWindow8.UIGcContentClient.UISchedulerControl1List4.UIAppointmentCell12;
            #endregion

            // Click 'Appointment' cell
            Mouse.Click(uIAppointmentCell12, new Point(104, 40));
        }
        
        /// <summary>
        /// SelectCompMustRoleStep27
        /// </summary>
        public void SelectCompMustRoleStep27()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell10 = this.UIOppgavetildelingWindow8.UIGcContentClient.UISchedulerControl1List4.UIAppointmentCell10;
            #endregion

            // Click 'Appointment' cell
            Mouse.Click(uIAppointmentCell10, new Point(115, 22));
        }
        
        /// <summary>
        /// SelectContRoleStep27
        /// </summary>
        public void SelectContRoleStep27()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell11 = this.UIOppgavetildelingWindow8.UIGcContentClient.UISchedulerControl1List4.UIAppointmentCell11;
            #endregion

            // Click 'Appointment' cell
            Mouse.Click(uIAppointmentCell11, new Point(124, 22));
        }
        
        /// <summary>
        /// SelectEkslRoleStep27
        /// </summary>
        public void SelectEkslRoleStep27()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell8 = this.UIOppgavetildelingWindow8.UIGcContentClient.UISchedulerControl1List4.UIAppointmentCell8;
            #endregion

            // Click 'Appointment' cell
            Mouse.Click(uIAppointmentCell8, new Point(111, 42));
        }
        
        /// <summary>
        /// SelectMonroeDispMondayStep3
        /// </summary>
        public void SelectMonroeDispMondayStep3()
        {
            #region Variable Declarations
            DXCell uIItemCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell, new Point(95, 11));
        }
        
        /// <summary>
        /// SelectMonroeEsclMondayStep3
        /// </summary>
        public void SelectMonroeEsclMondayStep3()
        {
            #region Variable Declarations
            DXCell uIInformationOppgaventCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaventCell;
            #endregion

            // Click '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell
            Mouse.Click(uIInformationOppgaventCell, new Point(90, 9));
        }
        
        /// <summary>
        /// SelectPrioHighRoleStep27
        /// </summary>
        public void SelectPrioHighRoleStep27()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell9 = this.UIOppgavetildelingWindow8.UIGcContentClient.UISchedulerControl1List4.UIAppointmentCell9;
            #endregion

            // Click 'Appointment' cell
            Mouse.Click(uIAppointmentCell9, new Point(124, 43));
        }
        
        /// <summary>
        /// SelectRoleAdamsStep15
        /// </summary>
        public void SelectRoleAdamsStep15()
        {
            #region Variable Declarations
            DXCell uID08001600Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600Cell1;
            #endregion

            // Click '( )D (08:00 - 16:00)' cell
            Mouse.Click(uID08001600Cell1, new Point(106, 29));
        }
        
        /// <summary>
        /// SelectRoleCellMondayStep3
        /// </summary>
        public void SelectRoleCellMondayStep3()
        {
            #region Variable Declarations
            DXCell uIItemCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell, new Point(84, 10));
        }
        
        /// <summary>
        /// SelectRolePolktep19
        /// </summary>
        public void SelectRolePolktep19()
        {
            #region Variable Declarations
            DXCell uIItemCell1 = this.UIOppgavetildelingWindow5.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell1;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell1, new Point(93, 10));
        }
        
        /// <summary>
        /// SelectRoleStep27
        /// </summary>
        public void SelectRoleStep27()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell7 = this.UIOppgavetildelingWindow8.UIGcContentClient.UISchedulerControl1List4.UIAppointmentCell7;
            #endregion

            // Click 'Appointment' cell
            Mouse.Click(uIAppointmentCell7, new Point(112, 42));
        }
        
        /// <summary>
        /// SelectTaylorTuesday
        /// </summary>
        public void SelectTaylorTuesday()
        {
            #region Variable Declarations
            DXCell uID08001600WarningDubøCell = this.UIOppgavetildelingWindow5.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600WarningDubøCell;
            #endregion

            // Click '( )D (08:00 - 16:00)
            //( )(Warning:Du bør jo være lege, ikke sant!)KOMPETANSE BØR (08:00 - 12:00)' cell
            Mouse.Click(uID08001600WarningDubøCell, new Point(98, 30));
        }
        
        /// <summary>
        /// CheckStep8 - Use 'CheckStep8ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep8()
        {
            #region Variable Declarations
            DXCell uIA6JacksonAndrew15002Cell = this.UIOppgavetildelingWindow5.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIA6JacksonAndrew15002Cell;
            DXCell uIAJeffersonThomas1500Cell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIAJeffersonThomas1500Cell;
            #endregion

            // Verify that the 'Text' property of '( )A - 6. Jackson, Andrew (15:00 - 23:00)' cell equals '( )A - 6. Jackson, Andrew (15:00 - 23:00)
            //'
            Assert.AreEqual(this.CheckStep8ExpectedValues.UIA6JacksonAndrew15002CellText, uIA6JacksonAndrew15002Cell.Text);

            // Verify that the 'Text' property of '( )A - Jefferson, Thomas (15:00 - 23:00)
            //( )D - Adams, John (08:00 - 16:00)
            //( )D - Adams, John Quincy (08:00 - 16:00)
            //( )D - Buchanan, James (08:00 - 16:00)
            //( )D - Harrison, William H (08:00 - 16:00)
            //( )D - Taylor, Zachary (08:00 - 16:00)
            //( )KK1 - Pierce, Franklin (08:00 - 16:00)
            //( )KK1 - Pierce, Franklin (16:00 - 22:00)
            //( )KK1 - Pierce, Franklin (22:00 - 08:00)
            //( )N - Knox Polk, James (22:00 - 08:00)
            //( )OPPG1 - Madison, James (12:00 - 16:00)' cell equals '( )A - 7. Jefferson, Thomas (15:00 - 23:00)
            //( )D - 1. Adams, John (08:00 - 16:00)
            //( )D - 12. Taylor, Zachary (08:00 - 16:00)
            //( )D - 2. Adams, John Quincy (08:00 - 16:00)
            //( )D - 5. Harrison, William H (08:00 - 16:00)
            //( )KK1 - 11. Pierce, Franklin (08:00 - 16:00)
            //( )KK1 - 11. Pierce, Franklin (16:00 - 22:00)
            //( )KK1 - 11. Pierce, Franklin (22:00 - 08:00)
            //( )N - 8. Knox Polk, James (22:00 - 08:00)
            //( )OPPG1 - 9. Madison, James (12:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckStep8ExpectedValues.UIAJeffersonThomas1500CellText, uIAJeffersonThomas1500Cell.Text);
        }
        
        /// <summary>
        /// CheckStep10 - Use 'CheckStep10ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep10()
        {
            #region Variable Declarations
            DXCell uID1AdamsJohn08001000Cell = this.UIOppgavetildelingWindow5.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UID1AdamsJohn08001000Cell;
            #endregion

            // Verify that the 'Text' property of '( )D - 1. Adams, John (08:00 - 10:00)' cell equals '( )D - 1. Adams, John (08:00 - 10:00)
            //'
            Assert.AreEqual(this.CheckStep10ExpectedValues.UID1AdamsJohn08001000CellText, uID1AdamsJohn08001000Cell.Text);
        }
        
        /// <summary>
        /// CheckStep11 - Use 'CheckStep11ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep11()
        {
            #region Variable Declarations
            DXCell uID1AdamsJohn10001200Cell = this.UIOppgavetildelingWindow5.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UID1AdamsJohn10001200Cell;
            #endregion

            // Verify that the 'Text' property of '( )D - 1. Adams, John (10:00 - 12:00)' cell equals '( )D - 1. Adams, John (10:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckStep11ExpectedValues.UID1AdamsJohn10001200CellText, uID1AdamsJohn10001200Cell.Text);
        }
        
        #region Properties
        public virtual CheckAssignments010124Step31ExpectedValues CheckAssignments010124Step31ExpectedValues
        {
            get
            {
                if ((this.mCheckAssignments010124Step31ExpectedValues == null))
                {
                    this.mCheckAssignments010124Step31ExpectedValues = new CheckAssignments010124Step31ExpectedValues();
                }
                return this.mCheckAssignments010124Step31ExpectedValues;
            }
        }
        
        public virtual CheckAssignments311223Step31ExpectedValues CheckAssignments311223Step31ExpectedValues
        {
            get
            {
                if ((this.mCheckAssignments311223Step31ExpectedValues == null))
                {
                    this.mCheckAssignments311223Step31ExpectedValues = new CheckAssignments311223Step31ExpectedValues();
                }
                return this.mCheckAssignments311223Step31ExpectedValues;
            }
        }
        
        public virtual CheckAssignmentsStep36ExpectedValues CheckAssignmentsStep36ExpectedValues
        {
            get
            {
                if ((this.mCheckAssignmentsStep36ExpectedValues == null))
                {
                    this.mCheckAssignmentsStep36ExpectedValues = new CheckAssignmentsStep36ExpectedValues();
                }
                return this.mCheckAssignmentsStep36ExpectedValues;
            }
        }
        
        public virtual CheckAssignmentsStep38ExpectedValues CheckAssignmentsStep38ExpectedValues
        {
            get
            {
                if ((this.mCheckAssignmentsStep38ExpectedValues == null))
                {
                    this.mCheckAssignmentsStep38ExpectedValues = new CheckAssignmentsStep38ExpectedValues();
                }
                return this.mCheckAssignmentsStep38ExpectedValues;
            }
        }
        
        public virtual CheckAssignmentsWeek1Step37ExpectedValues CheckAssignmentsWeek1Step37ExpectedValues
        {
            get
            {
                if ((this.mCheckAssignmentsWeek1Step37ExpectedValues == null))
                {
                    this.mCheckAssignmentsWeek1Step37ExpectedValues = new CheckAssignmentsWeek1Step37ExpectedValues();
                }
                return this.mCheckAssignmentsWeek1Step37ExpectedValues;
            }
        }
        
        public virtual CheckAssignmentsWeek2Step37ExpectedValues CheckAssignmentsWeek2Step37ExpectedValues
        {
            get
            {
                if ((this.mCheckAssignmentsWeek2Step37ExpectedValues == null))
                {
                    this.mCheckAssignmentsWeek2Step37ExpectedValues = new CheckAssignmentsWeek2Step37ExpectedValues();
                }
                return this.mCheckAssignmentsWeek2Step37ExpectedValues;
            }
        }
        
        public virtual CheckCompStep27ExpectedValues CheckCompStep27ExpectedValues
        {
            get
            {
                if ((this.mCheckCompStep27ExpectedValues == null))
                {
                    this.mCheckCompStep27ExpectedValues = new CheckCompStep27ExpectedValues();
                }
                return this.mCheckCompStep27ExpectedValues;
            }
        }
        
        public virtual CheckContStep27ExpectedValues CheckContStep27ExpectedValues
        {
            get
            {
                if ((this.mCheckContStep27ExpectedValues == null))
                {
                    this.mCheckContStep27ExpectedValues = new CheckContStep27ExpectedValues();
                }
                return this.mCheckContStep27ExpectedValues;
            }
        }
        
        public virtual CheckEmpInPlanStep1ExpectedValues CheckEmpInPlanStep1ExpectedValues
        {
            get
            {
                if ((this.mCheckEmpInPlanStep1ExpectedValues == null))
                {
                    this.mCheckEmpInPlanStep1ExpectedValues = new CheckEmpInPlanStep1ExpectedValues();
                }
                return this.mCheckEmpInPlanStep1ExpectedValues;
            }
        }
        
        public virtual CheckKK1AssignmentsErrorStep37ExpectedValues CheckKK1AssignmentsErrorStep37ExpectedValues
        {
            get
            {
                if ((this.mCheckKK1AssignmentsErrorStep37ExpectedValues == null))
                {
                    this.mCheckKK1AssignmentsErrorStep37ExpectedValues = new CheckKK1AssignmentsErrorStep37ExpectedValues();
                }
                return this.mCheckKK1AssignmentsErrorStep37ExpectedValues;
            }
        }
        
        public virtual CheckMonroeDispMondayDeletedStep5ExpectedValues CheckMonroeDispMondayDeletedStep5ExpectedValues
        {
            get
            {
                if ((this.mCheckMonroeDispMondayDeletedStep5ExpectedValues == null))
                {
                    this.mCheckMonroeDispMondayDeletedStep5ExpectedValues = new CheckMonroeDispMondayDeletedStep5ExpectedValues();
                }
                return this.mCheckMonroeDispMondayDeletedStep5ExpectedValues;
            }
        }
        
        public virtual CheckOldRoleMessageStep25_1ExpectedValues CheckOldRoleMessageStep25_1ExpectedValues
        {
            get
            {
                if ((this.mCheckOldRoleMessageStep25_1ExpectedValues == null))
                {
                    this.mCheckOldRoleMessageStep25_1ExpectedValues = new CheckOldRoleMessageStep25_1ExpectedValues();
                }
                return this.mCheckOldRoleMessageStep25_1ExpectedValues;
            }
        }
        
        public virtual CheckOldRoleMessageStep25_2ExpectedValues CheckOldRoleMessageStep25_2ExpectedValues
        {
            get
            {
                if ((this.mCheckOldRoleMessageStep25_2ExpectedValues == null))
                {
                    this.mCheckOldRoleMessageStep25_2ExpectedValues = new CheckOldRoleMessageStep25_2ExpectedValues();
                }
                return this.mCheckOldRoleMessageStep25_2ExpectedValues;
            }
        }
        
        public virtual CheckPeriod2Step27ExpectedValues CheckPeriod2Step27ExpectedValues
        {
            get
            {
                if ((this.mCheckPeriod2Step27ExpectedValues == null))
                {
                    this.mCheckPeriod2Step27ExpectedValues = new CheckPeriod2Step27ExpectedValues();
                }
                return this.mCheckPeriod2Step27ExpectedValues;
            }
        }
        
        public virtual CheckPeriod3Step27ExpectedValues CheckPeriod3Step27ExpectedValues
        {
            get
            {
                if ((this.mCheckPeriod3Step27ExpectedValues == null))
                {
                    this.mCheckPeriod3Step27ExpectedValues = new CheckPeriod3Step27ExpectedValues();
                }
                return this.mCheckPeriod3Step27ExpectedValues;
            }
        }
        
        public virtual CheckPeriod4Step27ExpectedValues CheckPeriod4Step27ExpectedValues
        {
            get
            {
                if ((this.mCheckPeriod4Step27ExpectedValues == null))
                {
                    this.mCheckPeriod4Step27ExpectedValues = new CheckPeriod4Step27ExpectedValues();
                }
                return this.mCheckPeriod4Step27ExpectedValues;
            }
        }
        
        public virtual CheckPeriod5AndContStep27ExpectedValues CheckPeriod5AndContStep27ExpectedValues
        {
            get
            {
                if ((this.mCheckPeriod5AndContStep27ExpectedValues == null))
                {
                    this.mCheckPeriod5AndContStep27ExpectedValues = new CheckPeriod5AndContStep27ExpectedValues();
                }
                return this.mCheckPeriod5AndContStep27ExpectedValues;
            }
        }
        
        public virtual CheckPeriodStep27ExpectedValues CheckPeriodStep27ExpectedValues
        {
            get
            {
                if ((this.mCheckPeriodStep27ExpectedValues == null))
                {
                    this.mCheckPeriodStep27ExpectedValues = new CheckPeriodStep27ExpectedValues();
                }
                return this.mCheckPeriodStep27ExpectedValues;
            }
        }
        
        public virtual CheckRoleCompStep24ExpectedValues CheckRoleCompStep24ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleCompStep24ExpectedValues == null))
                {
                    this.mCheckRoleCompStep24ExpectedValues = new CheckRoleCompStep24ExpectedValues();
                }
                return this.mCheckRoleCompStep24ExpectedValues;
            }
        }
        
        public virtual CheckRoleMessageStep25_1ExpectedValues CheckRoleMessageStep25_1ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleMessageStep25_1ExpectedValues == null))
                {
                    this.mCheckRoleMessageStep25_1ExpectedValues = new CheckRoleMessageStep25_1ExpectedValues();
                }
                return this.mCheckRoleMessageStep25_1ExpectedValues;
            }
        }
        
        public virtual CheckRoleMessageStep25_2ExpectedValues CheckRoleMessageStep25_2ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleMessageStep25_2ExpectedValues == null))
                {
                    this.mCheckRoleMessageStep25_2ExpectedValues = new CheckRoleMessageStep25_2ExpectedValues();
                }
                return this.mCheckRoleMessageStep25_2ExpectedValues;
            }
        }
        
        public virtual CheckRolePeriodStep23ExpectedValues CheckRolePeriodStep23ExpectedValues
        {
            get
            {
                if ((this.mCheckRolePeriodStep23ExpectedValues == null))
                {
                    this.mCheckRolePeriodStep23ExpectedValues = new CheckRolePeriodStep23ExpectedValues();
                }
                return this.mCheckRolePeriodStep23ExpectedValues;
            }
        }
        
        public virtual CheckRolePeriodStep24ExpectedValues CheckRolePeriodStep24ExpectedValues
        {
            get
            {
                if ((this.mCheckRolePeriodStep24ExpectedValues == null))
                {
                    this.mCheckRolePeriodStep24ExpectedValues = new CheckRolePeriodStep24ExpectedValues();
                }
                return this.mCheckRolePeriodStep24ExpectedValues;
            }
        }
        
        public virtual CheckRolesMonroeMadisonStep2ExpectedValues CheckRolesMonroeMadisonStep2ExpectedValues
        {
            get
            {
                if ((this.mCheckRolesMonroeMadisonStep2ExpectedValues == null))
                {
                    this.mCheckRolesMonroeMadisonStep2ExpectedValues = new CheckRolesMonroeMadisonStep2ExpectedValues();
                }
                return this.mCheckRolesMonroeMadisonStep2ExpectedValues;
            }
        }
        
        public virtual CheckRolesStep25_1ExpectedValues CheckRolesStep25_1ExpectedValues
        {
            get
            {
                if ((this.mCheckRolesStep25_1ExpectedValues == null))
                {
                    this.mCheckRolesStep25_1ExpectedValues = new CheckRolesStep25_1ExpectedValues();
                }
                return this.mCheckRolesStep25_1ExpectedValues;
            }
        }
        
        public virtual CheckRolesStep25_2ExpectedValues CheckRolesStep25_2ExpectedValues
        {
            get
            {
                if ((this.mCheckRolesStep25_2ExpectedValues == null))
                {
                    this.mCheckRolesStep25_2ExpectedValues = new CheckRolesStep25_2ExpectedValues();
                }
                return this.mCheckRolesStep25_2ExpectedValues;
            }
        }
        
        public virtual CheckRoleStep28ExpectedValues CheckRoleStep28ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleStep28ExpectedValues == null))
                {
                    this.mCheckRoleStep28ExpectedValues = new CheckRoleStep28ExpectedValues();
                }
                return this.mCheckRoleStep28ExpectedValues;
            }
        }
        
        public virtual CheckRoleValuesStep3ExpectedValues CheckRoleValuesStep3ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleValuesStep3ExpectedValues == null))
                {
                    this.mCheckRoleValuesStep3ExpectedValues = new CheckRoleValuesStep3ExpectedValues();
                }
                return this.mCheckRoleValuesStep3ExpectedValues;
            }
        }
        
        public virtual CheckRoleValuesStep3_2ExpectedValues CheckRoleValuesStep3_2ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleValuesStep3_2ExpectedValues == null))
                {
                    this.mCheckRoleValuesStep3_2ExpectedValues = new CheckRoleValuesStep3_2ExpectedValues();
                }
                return this.mCheckRoleValuesStep3_2ExpectedValues;
            }
        }
        
        public virtual CheckSaveButtonDisabledStep4ExpectedValues CheckSaveButtonDisabledStep4ExpectedValues
        {
            get
            {
                if ((this.mCheckSaveButtonDisabledStep4ExpectedValues == null))
                {
                    this.mCheckSaveButtonDisabledStep4ExpectedValues = new CheckSaveButtonDisabledStep4ExpectedValues();
                }
                return this.mCheckSaveButtonDisabledStep4ExpectedValues;
            }
        }
        
        public virtual CheckSaveButtonEnabledStep5ExpectedValues CheckSaveButtonEnabledStep5ExpectedValues
        {
            get
            {
                if ((this.mCheckSaveButtonEnabledStep5ExpectedValues == null))
                {
                    this.mCheckSaveButtonEnabledStep5ExpectedValues = new CheckSaveButtonEnabledStep5ExpectedValues();
                }
                return this.mCheckSaveButtonEnabledStep5ExpectedValues;
            }
        }
        
        public virtual CheckSpecsStep12ExpectedValues CheckSpecsStep12ExpectedValues
        {
            get
            {
                if ((this.mCheckSpecsStep12ExpectedValues == null))
                {
                    this.mCheckSpecsStep12ExpectedValues = new CheckSpecsStep12ExpectedValues();
                }
                return this.mCheckSpecsStep12ExpectedValues;
            }
        }
        
        public virtual CheckStep13ExpectedValues CheckStep13ExpectedValues
        {
            get
            {
                if ((this.mCheckStep13ExpectedValues == null))
                {
                    this.mCheckStep13ExpectedValues = new CheckStep13ExpectedValues();
                }
                return this.mCheckStep13ExpectedValues;
            }
        }
        
        public virtual CheckStep14ExpectedValues CheckStep14ExpectedValues
        {
            get
            {
                if ((this.mCheckStep14ExpectedValues == null))
                {
                    this.mCheckStep14ExpectedValues = new CheckStep14ExpectedValues();
                }
                return this.mCheckStep14ExpectedValues;
            }
        }
        
        public virtual CheckStep15ExpectedValues CheckStep15ExpectedValues
        {
            get
            {
                if ((this.mCheckStep15ExpectedValues == null))
                {
                    this.mCheckStep15ExpectedValues = new CheckStep15ExpectedValues();
                }
                return this.mCheckStep15ExpectedValues;
            }
        }
        
        public virtual CheckStep16ExpectedValues CheckStep16ExpectedValues
        {
            get
            {
                if ((this.mCheckStep16ExpectedValues == null))
                {
                    this.mCheckStep16ExpectedValues = new CheckStep16ExpectedValues();
                }
                return this.mCheckStep16ExpectedValues;
            }
        }
        
        public virtual CheckStep21ExpectedValues CheckStep21ExpectedValues
        {
            get
            {
                if ((this.mCheckStep21ExpectedValues == null))
                {
                    this.mCheckStep21ExpectedValues = new CheckStep21ExpectedValues();
                }
                return this.mCheckStep21ExpectedValues;
            }
        }
        
        public virtual CheckStep22_1ExpectedValues CheckStep22_1ExpectedValues
        {
            get
            {
                if ((this.mCheckStep22_1ExpectedValues == null))
                {
                    this.mCheckStep22_1ExpectedValues = new CheckStep22_1ExpectedValues();
                }
                return this.mCheckStep22_1ExpectedValues;
            }
        }
        
        public virtual CheckStep22_2ExpectedValues CheckStep22_2ExpectedValues
        {
            get
            {
                if ((this.mCheckStep22_2ExpectedValues == null))
                {
                    this.mCheckStep22_2ExpectedValues = new CheckStep22_2ExpectedValues();
                }
                return this.mCheckStep22_2ExpectedValues;
            }
        }
        
        public virtual CheckStep26ExpectedValues CheckStep26ExpectedValues
        {
            get
            {
                if ((this.mCheckStep26ExpectedValues == null))
                {
                    this.mCheckStep26ExpectedValues = new CheckStep26ExpectedValues();
                }
                return this.mCheckStep26ExpectedValues;
            }
        }
        
        public virtual CheckStep29ExpectedValues CheckStep29ExpectedValues
        {
            get
            {
                if ((this.mCheckStep29ExpectedValues == null))
                {
                    this.mCheckStep29ExpectedValues = new CheckStep29ExpectedValues();
                }
                return this.mCheckStep29ExpectedValues;
            }
        }
        
        public virtual CheckStep7ExpectedValues CheckStep7ExpectedValues
        {
            get
            {
                if ((this.mCheckStep7ExpectedValues == null))
                {
                    this.mCheckStep7ExpectedValues = new CheckStep7ExpectedValues();
                }
                return this.mCheckStep7ExpectedValues;
            }
        }
        
        public virtual CheckStep9ExpectedValues CheckStep9ExpectedValues
        {
            get
            {
                if ((this.mCheckStep9ExpectedValues == null))
                {
                    this.mCheckStep9ExpectedValues = new CheckStep9ExpectedValues();
                }
                return this.mCheckStep9ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep12ExpectedValues CheckValuesStep12ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep12ExpectedValues == null))
                {
                    this.mCheckValuesStep12ExpectedValues = new CheckValuesStep12ExpectedValues();
                }
                return this.mCheckValuesStep12ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep19ExpectedValues CheckValuesStep19ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep19ExpectedValues == null))
                {
                    this.mCheckValuesStep19ExpectedValues = new CheckValuesStep19ExpectedValues();
                }
                return this.mCheckValuesStep19ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep2ExpectedValues CheckValuesStep2ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep2ExpectedValues == null))
                {
                    this.mCheckValuesStep2ExpectedValues = new CheckValuesStep2ExpectedValues();
                }
                return this.mCheckValuesStep2ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep32ExpectedValues CheckValuesStep32ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep32ExpectedValues == null))
                {
                    this.mCheckValuesStep32ExpectedValues = new CheckValuesStep32ExpectedValues();
                }
                return this.mCheckValuesStep32ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep33ExpectedValues CheckValuesStep33ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep33ExpectedValues == null))
                {
                    this.mCheckValuesStep33ExpectedValues = new CheckValuesStep33ExpectedValues();
                }
                return this.mCheckValuesStep33ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep34ExpectedValues CheckValuesStep34ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep34ExpectedValues == null))
                {
                    this.mCheckValuesStep34ExpectedValues = new CheckValuesStep34ExpectedValues();
                }
                return this.mCheckValuesStep34ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep34_2ExpectedValues CheckValuesStep34_2ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep34_2ExpectedValues == null))
                {
                    this.mCheckValuesStep34_2ExpectedValues = new CheckValuesStep34_2ExpectedValues();
                }
                return this.mCheckValuesStep34_2ExpectedValues;
            }
        }
        
        public virtual DeleteMonroeDispMondayParams DeleteMonroeDispMondayParams
        {
            get
            {
                if ((this.mDeleteMonroeDispMondayParams == null))
                {
                    this.mDeleteMonroeDispMondayParams = new DeleteMonroeDispMondayParams();
                }
                return this.mDeleteMonroeDispMondayParams;
            }
        }
        
        public virtual DeletePierceRoleSundayParams DeletePierceRoleSundayParams
        {
            get
            {
                if ((this.mDeletePierceRoleSundayParams == null))
                {
                    this.mDeletePierceRoleSundayParams = new DeletePierceRoleSundayParams();
                }
                return this.mDeletePierceRoleSundayParams;
            }
        }
        
        public virtual DeleteTaylorOverSundayParams DeleteTaylorOverSundayParams
        {
            get
            {
                if ((this.mDeleteTaylorOverSundayParams == null))
                {
                    this.mDeleteTaylorOverSundayParams = new DeleteTaylorOverSundayParams();
                }
                return this.mDeleteTaylorOverSundayParams;
            }
        }
        
        public virtual EditTaylorRosterLineStep13Params EditTaylorRosterLineStep13Params
        {
            get
            {
                if ((this.mEditTaylorRosterLineStep13Params == null))
                {
                    this.mEditTaylorRosterLineStep13Params = new EditTaylorRosterLineStep13Params();
                }
                return this.mEditTaylorRosterLineStep13Params;
            }
        }
        
        public virtual MoveSliderRightParams MoveSliderRightParams
        {
            get
            {
                if ((this.mMoveSliderRightParams == null))
                {
                    this.mMoveSliderRightParams = new MoveSliderRightParams();
                }
                return this.mMoveSliderRightParams;
            }
        }
        
        public virtual CheckStep8ExpectedValues CheckStep8ExpectedValues
        {
            get
            {
                if ((this.mCheckStep8ExpectedValues == null))
                {
                    this.mCheckStep8ExpectedValues = new CheckStep8ExpectedValues();
                }
                return this.mCheckStep8ExpectedValues;
            }
        }
        
        public virtual CheckStep10ExpectedValues CheckStep10ExpectedValues
        {
            get
            {
                if ((this.mCheckStep10ExpectedValues == null))
                {
                    this.mCheckStep10ExpectedValues = new CheckStep10ExpectedValues();
                }
                return this.mCheckStep10ExpectedValues;
            }
        }
        
        public virtual CheckStep11ExpectedValues CheckStep11ExpectedValues
        {
            get
            {
                if ((this.mCheckStep11ExpectedValues == null))
                {
                    this.mCheckStep11ExpectedValues = new CheckStep11ExpectedValues();
                }
                return this.mCheckStep11ExpectedValues;
            }
        }
        
        public UIProgramManagerWindow UIProgramManagerWindow
        {
            get
            {
                if ((this.mUIProgramManagerWindow == null))
                {
                    this.mUIProgramManagerWindow = new UIProgramManagerWindow();
                }
                return this.mUIProgramManagerWindow;
            }
        }
        
        public UIArbeidsplanWindow UIArbeidsplanWindow
        {
            get
            {
                if ((this.mUIArbeidsplanWindow == null))
                {
                    this.mUIArbeidsplanWindow = new UIArbeidsplanWindow();
                }
                return this.mUIArbeidsplanWindow;
            }
        }
        
        public UIOppgavetildelingWindow UIOppgavetildelingWindow
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow == null))
                {
                    this.mUIOppgavetildelingWindow = new UIOppgavetildelingWindow();
                }
                return this.mUIOppgavetildelingWindow;
            }
        }
        
        public UIOppgavetildelingWindow1 UIOppgavetildelingWindow1
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow1 == null))
                {
                    this.mUIOppgavetildelingWindow1 = new UIOppgavetildelingWindow1();
                }
                return this.mUIOppgavetildelingWindow1;
            }
        }
        
        public UIOppgavetildelingWindow2 UIOppgavetildelingWindow2
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow2 == null))
                {
                    this.mUIOppgavetildelingWindow2 = new UIOppgavetildelingWindow2();
                }
                return this.mUIOppgavetildelingWindow2;
            }
        }
        
        public UIOppgavetildelingWindow3 UIOppgavetildelingWindow3
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow3 == null))
                {
                    this.mUIOppgavetildelingWindow3 = new UIOppgavetildelingWindow3();
                }
                return this.mUIOppgavetildelingWindow3;
            }
        }
        
        public UIOppgavetildelingWindow4 UIOppgavetildelingWindow4
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow4 == null))
                {
                    this.mUIOppgavetildelingWindow4 = new UIOppgavetildelingWindow4();
                }
                return this.mUIOppgavetildelingWindow4;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIOppgavetildelingWindow5 UIOppgavetildelingWindow5
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow5 == null))
                {
                    this.mUIOppgavetildelingWindow5 = new UIOppgavetildelingWindow5();
                }
                return this.mUIOppgavetildelingWindow5;
            }
        }
        
        public UIOppgavetildelingWindow6 UIOppgavetildelingWindow6
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow6 == null))
                {
                    this.mUIOppgavetildelingWindow6 = new UIOppgavetildelingWindow6();
                }
                return this.mUIOppgavetildelingWindow6;
            }
        }
        
        public UIGT4001InformasjonWindow UIGT4001InformasjonWindow
        {
            get
            {
                if ((this.mUIGT4001InformasjonWindow == null))
                {
                    this.mUIGT4001InformasjonWindow = new UIGT4001InformasjonWindow();
                }
                return this.mUIGT4001InformasjonWindow;
            }
        }
        
        public UIGT4003InformasjonWindow UIGT4003InformasjonWindow
        {
            get
            {
                if ((this.mUIGT4003InformasjonWindow == null))
                {
                    this.mUIGT4003InformasjonWindow = new UIGT4003InformasjonWindow();
                }
                return this.mUIGT4003InformasjonWindow;
            }
        }
        
        public UIOppgavetildelingWindow7 UIOppgavetildelingWindow7
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow7 == null))
                {
                    this.mUIOppgavetildelingWindow7 = new UIOppgavetildelingWindow7();
                }
                return this.mUIOppgavetildelingWindow7;
            }
        }
        
        public UIOppgavetildelingWindow8 UIOppgavetildelingWindow8
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow8 == null))
                {
                    this.mUIOppgavetildelingWindow8 = new UIOppgavetildelingWindow8();
                }
                return this.mUIOppgavetildelingWindow8;
            }
        }
        
        public UIVelgoppgaverWindow UIVelgoppgaverWindow
        {
            get
            {
                if ((this.mUIVelgoppgaverWindow == null))
                {
                    this.mUIVelgoppgaverWindow = new UIVelgoppgaverWindow();
                }
                return this.mUIVelgoppgaverWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1();
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2();
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow3 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow3();
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIItemWindow4 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow4();
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIItemWindow5 UIItemWindow5
        {
            get
            {
                if ((this.mUIItemWindow5 == null))
                {
                    this.mUIItemWindow5 = new UIItemWindow5();
                }
                return this.mUIItemWindow5;
            }
        }
        
        public UIOppgavetildelingWindow9 UIOppgavetildelingWindow9
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow9 == null))
                {
                    this.mUIOppgavetildelingWindow9 = new UIOppgavetildelingWindow9();
                }
                return this.mUIOppgavetildelingWindow9;
            }
        }
        #endregion
        
        #region Fields
        private CheckAssignments010124Step31ExpectedValues mCheckAssignments010124Step31ExpectedValues;
        
        private CheckAssignments311223Step31ExpectedValues mCheckAssignments311223Step31ExpectedValues;
        
        private CheckAssignmentsStep36ExpectedValues mCheckAssignmentsStep36ExpectedValues;
        
        private CheckAssignmentsStep38ExpectedValues mCheckAssignmentsStep38ExpectedValues;
        
        private CheckAssignmentsWeek1Step37ExpectedValues mCheckAssignmentsWeek1Step37ExpectedValues;
        
        private CheckAssignmentsWeek2Step37ExpectedValues mCheckAssignmentsWeek2Step37ExpectedValues;
        
        private CheckCompStep27ExpectedValues mCheckCompStep27ExpectedValues;
        
        private CheckContStep27ExpectedValues mCheckContStep27ExpectedValues;
        
        private CheckEmpInPlanStep1ExpectedValues mCheckEmpInPlanStep1ExpectedValues;
        
        private CheckKK1AssignmentsErrorStep37ExpectedValues mCheckKK1AssignmentsErrorStep37ExpectedValues;
        
        private CheckMonroeDispMondayDeletedStep5ExpectedValues mCheckMonroeDispMondayDeletedStep5ExpectedValues;
        
        private CheckOldRoleMessageStep25_1ExpectedValues mCheckOldRoleMessageStep25_1ExpectedValues;
        
        private CheckOldRoleMessageStep25_2ExpectedValues mCheckOldRoleMessageStep25_2ExpectedValues;
        
        private CheckPeriod2Step27ExpectedValues mCheckPeriod2Step27ExpectedValues;
        
        private CheckPeriod3Step27ExpectedValues mCheckPeriod3Step27ExpectedValues;
        
        private CheckPeriod4Step27ExpectedValues mCheckPeriod4Step27ExpectedValues;
        
        private CheckPeriod5AndContStep27ExpectedValues mCheckPeriod5AndContStep27ExpectedValues;
        
        private CheckPeriodStep27ExpectedValues mCheckPeriodStep27ExpectedValues;
        
        private CheckRoleCompStep24ExpectedValues mCheckRoleCompStep24ExpectedValues;
        
        private CheckRoleMessageStep25_1ExpectedValues mCheckRoleMessageStep25_1ExpectedValues;
        
        private CheckRoleMessageStep25_2ExpectedValues mCheckRoleMessageStep25_2ExpectedValues;
        
        private CheckRolePeriodStep23ExpectedValues mCheckRolePeriodStep23ExpectedValues;
        
        private CheckRolePeriodStep24ExpectedValues mCheckRolePeriodStep24ExpectedValues;
        
        private CheckRolesMonroeMadisonStep2ExpectedValues mCheckRolesMonroeMadisonStep2ExpectedValues;
        
        private CheckRolesStep25_1ExpectedValues mCheckRolesStep25_1ExpectedValues;
        
        private CheckRolesStep25_2ExpectedValues mCheckRolesStep25_2ExpectedValues;
        
        private CheckRoleStep28ExpectedValues mCheckRoleStep28ExpectedValues;
        
        private CheckRoleValuesStep3ExpectedValues mCheckRoleValuesStep3ExpectedValues;
        
        private CheckRoleValuesStep3_2ExpectedValues mCheckRoleValuesStep3_2ExpectedValues;
        
        private CheckSaveButtonDisabledStep4ExpectedValues mCheckSaveButtonDisabledStep4ExpectedValues;
        
        private CheckSaveButtonEnabledStep5ExpectedValues mCheckSaveButtonEnabledStep5ExpectedValues;
        
        private CheckSpecsStep12ExpectedValues mCheckSpecsStep12ExpectedValues;
        
        private CheckStep13ExpectedValues mCheckStep13ExpectedValues;
        
        private CheckStep14ExpectedValues mCheckStep14ExpectedValues;
        
        private CheckStep15ExpectedValues mCheckStep15ExpectedValues;
        
        private CheckStep16ExpectedValues mCheckStep16ExpectedValues;
        
        private CheckStep21ExpectedValues mCheckStep21ExpectedValues;
        
        private CheckStep22_1ExpectedValues mCheckStep22_1ExpectedValues;
        
        private CheckStep22_2ExpectedValues mCheckStep22_2ExpectedValues;
        
        private CheckStep26ExpectedValues mCheckStep26ExpectedValues;
        
        private CheckStep29ExpectedValues mCheckStep29ExpectedValues;
        
        private CheckStep7ExpectedValues mCheckStep7ExpectedValues;
        
        private CheckStep9ExpectedValues mCheckStep9ExpectedValues;
        
        private CheckValuesStep12ExpectedValues mCheckValuesStep12ExpectedValues;
        
        private CheckValuesStep19ExpectedValues mCheckValuesStep19ExpectedValues;
        
        private CheckValuesStep2ExpectedValues mCheckValuesStep2ExpectedValues;
        
        private CheckValuesStep32ExpectedValues mCheckValuesStep32ExpectedValues;
        
        private CheckValuesStep33ExpectedValues mCheckValuesStep33ExpectedValues;
        
        private CheckValuesStep34ExpectedValues mCheckValuesStep34ExpectedValues;
        
        private CheckValuesStep34_2ExpectedValues mCheckValuesStep34_2ExpectedValues;
        
        private DeleteMonroeDispMondayParams mDeleteMonroeDispMondayParams;
        
        private DeletePierceRoleSundayParams mDeletePierceRoleSundayParams;
        
        private DeleteTaylorOverSundayParams mDeleteTaylorOverSundayParams;
        
        private EditTaylorRosterLineStep13Params mEditTaylorRosterLineStep13Params;
        
        private MoveSliderRightParams mMoveSliderRightParams;
        
        private CheckStep8ExpectedValues mCheckStep8ExpectedValues;
        
        private CheckStep10ExpectedValues mCheckStep10ExpectedValues;
        
        private CheckStep11ExpectedValues mCheckStep11ExpectedValues;
        
        private UIProgramManagerWindow mUIProgramManagerWindow;
        
        private UIArbeidsplanWindow mUIArbeidsplanWindow;
        
        private UIOppgavetildelingWindow mUIOppgavetildelingWindow;
        
        private UIOppgavetildelingWindow1 mUIOppgavetildelingWindow1;
        
        private UIOppgavetildelingWindow2 mUIOppgavetildelingWindow2;
        
        private UIOppgavetildelingWindow3 mUIOppgavetildelingWindow3;
        
        private UIOppgavetildelingWindow4 mUIOppgavetildelingWindow4;
        
        private UIItemWindow mUIItemWindow;
        
        private UIOppgavetildelingWindow5 mUIOppgavetildelingWindow5;
        
        private UIOppgavetildelingWindow6 mUIOppgavetildelingWindow6;
        
        private UIGT4001InformasjonWindow mUIGT4001InformasjonWindow;
        
        private UIGT4003InformasjonWindow mUIGT4003InformasjonWindow;
        
        private UIOppgavetildelingWindow7 mUIOppgavetildelingWindow7;
        
        private UIOppgavetildelingWindow8 mUIOppgavetildelingWindow8;
        
        private UIVelgoppgaverWindow mUIVelgoppgaverWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIItemWindow3 mUIItemWindow3;
        
        private UIItemWindow4 mUIItemWindow4;
        
        private UIItemWindow5 mUIItemWindow5;
        
        private UIOppgavetildelingWindow9 mUIOppgavetildelingWindow9;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAssignments010124Step31'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckAssignments010124Step31ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )A - Jackson, Andrew (15:00 - 23:00)' cell equals '( )A - Jackson, Andrew (15:00 - 23:00)
        ///'
        /// </summary>
        public string UIAJacksonAndrew150023CellText = "( )A - Jackson, Andrew (15:00 - 23:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of cell equals '( )D - Adams, John (08:00 - 10:00)
        ///'
        /// </summary>
        public string UIItemCell2Text = "( )D - Adams, John (08:00 - 10:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of cell equals '( )D - Adams, John (12:00 - 16:00)
        ///'
        /// </summary>
        public string UIItemCell1Text = "( )D - Adams, John (12:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )OPPG2 - Monroe, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCellText = "( )OPPG2 - Monroe, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )OPPG1 - Madison, James (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell1Text = "( )OPPG1 - Madison, James (08:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of cell equals '( )D - Adams, John (10:00 - 12:00)
        ///( )D - Taylor, Zachary (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIItemCell3Text = "( )D - Adams, John (10:00 - 12:00)\r\n( )D - Taylor, Zachary (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Warning:Du bør jo være lege, ikke sant!)D - Taylor, Zachary (08:00 - 12:00)' cell equals '( )(Warning:Du bør jo være lege, ikke sant!)D - Taylor, Zachary (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIWarningDubørjoværeleCellText = "( )(Warning:Du bør jo være lege, ikke sant!)D - Taylor, Zachary (08:00 - 12:00)\r\n" +
            "";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )OPPG2 - Monroe, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell2Text = "( )OPPG2 - Monroe, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )OPPG1 - Madison, James (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell3Text = "( )OPPG1 - Madison, James (08:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of cell equals '( )D - Adams, John (10:00 - 12:00)
        ///'
        /// </summary>
        public string UIItemCell4Text = "( )D - Adams, John (10:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Adams, John (08:00 - 10:00)' cell equals '( )D - Adams, John (08:00 - 10:00)
        ///'
        /// </summary>
        public string UIDAdamsJohn08001000CellText = "( )D - Adams, John (08:00 - 10:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Adams, John (12:00 - 13:00)' cell equals '( )D - Adams, John (12:00 - 13:00)
        ///'
        /// </summary>
        public string UIDAdamsJohn12001300CellText = "( )D - Adams, John (12:00 - 13:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Adams, John (13:00 - 15:00)' cell equals '( )D - Adams, John (13:00 - 15:00)
        ///'
        /// </summary>
        public string UIDAdamsJohn13001500CellText = "( )D - Adams, John (13:00 - 15:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Adams, John (15:00 - 16:00)' cell equals '( )D - Adams, John (15:00 - 16:00)
        ///'
        /// </summary>
        public string UIDAdamsJohn15001600CellText = "( )D - Adams, John (15:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )OPPG2 - Monroe, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell4Text = "( )OPPG2 - Monroe, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )OPPG1 - Madison, James (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell5Text = "( )OPPG1 - Madison, James (08:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Taylor, Zachary (08:00 - 16:00)' cell equals '( )D - Taylor, Zachary (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIDTaylorZachary080016CellText = "( )D - Taylor, Zachary (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Taylor, Zachary (08:00 - 15:00)' cell equals '( )D - Taylor, Zachary (08:00 - 15:00)
        ///'
        /// </summary>
        public string UIDTaylorZachary080015CellText = "( )D - Taylor, Zachary (08:00 - 15:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )OPPG2 - Monroe, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell6Text = "( )OPPG2 - Monroe, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )OPPG1 - Madison, James (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell7Text = "( )OPPG1 - Madison, James (08:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )OPPG2 - Monroe, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell8Text = "( )OPPG2 - Monroe, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )OPPG1 - Madison, James (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell9Text = "( )OPPG1 - Madison, James (08:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Taylor, Zachary (08:00 - 16:00)' cell equals '( )D - Taylor, Zachary (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIDTaylorZachary080016Cell1Text = "( )D - Taylor, Zachary (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Taylor, Zachary (08:00 - 15:00)' cell equals '( )D - Taylor, Zachary (08:00 - 15:00)
        ///'
        /// </summary>
        public string UIDTaylorZachary080015Cell1Text = "( )D - Taylor, Zachary (08:00 - 15:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )OPPG2 - Monroe, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell10Text = "( )OPPG2 - Monroe, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )OPPG1 - Madison, James (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell11Text = "( )OPPG1 - Madison, James (08:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '(x)(Warning:Du bør jo være lege, ikke sant!)KK1 - Pierce, Franklin (08:00 - 08:00)' cell equals '( )(Warning:Du bør jo være lege, ikke sant!)BV - Pierce, Franklin (22:00 - 08:00)
        ///( )(Warning:Du bør jo være lege, ikke sant!)D - Pierce, Franklin (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIXWarningDubørjoværelCellText = "( )(Warning:Du bør jo være lege, ikke sant!)BV - Pierce, Franklin (22:00 - 08:00)" +
            "\r\n( )(Warning:Du bør jo være lege, ikke sant!)D - Pierce, Franklin (08:00 - 16:0" +
            "0)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )OPPG2 - Monroe, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell12Text = "( )OPPG2 - Monroe, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )OPPG1 - Madison, James (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell13Text = "( )OPPG1 - Madison, James (08:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Taylor, Zachary (08:00 - 16:00)' cell equals '( )D - Taylor, Zachary (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIDTaylorZachary080016Cell2Text = "( )D - Taylor, Zachary (08:00 - 16:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAssignments311223Step31'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckAssignments311223Step31ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )N - Knox Polk, James (22:00 - 08:00)' cell equals '( )N - Knox Polk, James (22:00 - 08:00)
        ///'
        /// </summary>
        public string UINKnoxPolkJames220008Cell1Text = "( )N - Knox Polk, James (22:00 - 08:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAssignmentsStep36'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckAssignmentsStep36ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'gcDragDropGrid' table equals 'gcDragDropGrid'
        /// </summary>
        public string UIGcDragDropGridTableName = "gcDragDropGrid";
        
        /// <summary>
        /// Verify that the 'Name' property of 'gcEmployees' table equals 'gcEmployees'
        /// </summary>
        public string UIGcEmployeesTableName = "gcEmployees";
        
        /// <summary>
        /// Verify that the 'Name' property of 'gcDragDropGrid' table equals 'gcDragDropGrid'
        /// </summary>
        public string UIGcDragDropGridTableName1 = "gcDragDropGrid";
        
        /// <summary>
        /// Verify that the 'Name' property of 'gcSumDemand' table equals 'gcSumDemand'
        /// </summary>
        public string UIGcSumDemandTableName = "gcSumDemand";
        
        /// <summary>
        /// Verify that the 'Name' property of 'flowControlViewHost1' custom control equals 'flowControlViewHost1'
        /// </summary>
        public string UIFlowControlViewHost1CustomName = "flowControlViewHost1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAssignmentsStep38'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckAssignmentsStep38ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'gcDragDropGrid' table equals 'gcDragDropGrid'
        /// </summary>
        public string UIGcDragDropGridTableName = "gcDragDropGrid";
        
        /// <summary>
        /// Verify that the 'Name' property of 'gcEmployees' table equals 'gcEmployees'
        /// </summary>
        public string UIGcEmployeesTableName = "gcEmployees";
        
        /// <summary>
        /// Verify that the 'Name' property of 'gcDragDropGrid' table equals 'gcDragDropGrid'
        /// </summary>
        public string UIGcDragDropGridTableName1 = "gcDragDropGrid";
        
        /// <summary>
        /// Verify that the 'Name' property of 'gcSumDemand' table equals 'gcSumDemand'
        /// </summary>
        public string UIGcSumDemandTableName = "gcSumDemand";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAssignmentsWeek1Step37'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckAssignmentsWeek1Step37ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )N - Harrison, William H (22:00 - 08:00)' cell equals '( )N - Harrison, William H (22:00 - 08:00)
        ///'
        /// </summary>
        public string UINHarrisonWilliamH220CellText = "( )N - Harrison, William H (22:00 - 08:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Buchanan, James (08:00 - 16:00)' cell equals '( )D - Buchanan, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIDBuchananJames080016CellText = "( )D - Buchanan, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Buchanan, James (08:00 - 16:00)' cell equals '( )D - Buchanan, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIDBuchananJames080016Cell1Text = "( )D - Buchanan, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )BV - Jackson, Andrew (22:00 - 08:00)' cell equals '( )BV - Jackson, Andrew (22:00 - 08:00)
        ///'
        /// </summary>
        public string UIBVJacksonAndrew22000CellText = "( )BV - Jackson, Andrew (22:00 - 08:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Jackson, Andrew (08:00 - 16:00)' cell equals '( )D - Jackson, Andrew (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIDJacksonAndrew080016CellText = "( )D - Jackson, Andrew (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Buchanan, James (08:00 - 16:00)
        ///( )D - Fillmore, Millard (08:00 - 16:00)' cell equals '( )D - Buchanan, James (08:00 - 16:00)
        ///( )D - Fillmore, Millard (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIDBuchananJames080016CellText1 = "( )D - Buchanan, James (08:00 - 16:00)\r\n( )D - Fillmore, Millard (08:00 - 16:00)\r" +
            "\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Fillmore, Millard (08:00 - 09:00)' cell equals '( )D - Fillmore, Millard (08:00 - 09:00)
        ///'
        /// </summary>
        public string UIDFillmoreMillard0800CellText = "( )D - Fillmore, Millard (08:00 - 09:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Fillmore, Millard (09:00 - 10:00)' cell equals '( )D - Fillmore, Millard (09:00 - 10:00)
        ///'
        /// </summary>
        public string UIDFillmoreMillard0900CellText = "( )D - Fillmore, Millard (09:00 - 10:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Fillmore, Millard (10:00 - 12:00)' cell equals '( )D - Fillmore, Millard (10:00 - 12:00)
        ///'
        /// </summary>
        public string UIDFillmoreMillard1000CellText = "( )D - Fillmore, Millard (10:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Fillmore, Millard (14:00 - 16:00)' cell equals '( )D - Fillmore, Millard (14:00 - 16:00)
        ///'
        /// </summary>
        public string UIDFillmoreMillard1400CellText = "( )D - Fillmore, Millard (14:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Fillmore, Millard (12:00 - 14:00)' cell equals '( )D - Fillmore, Millard (12:00 - 14:00)
        ///'
        /// </summary>
        public string UIDFillmoreMillard1200CellText = "( )D - Fillmore, Millard (12:00 - 14:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Jackson, Andrew (08:00 - 10:00)' cell equals '( )D - Jackson, Andrew (08:00 - 10:00)
        ///'
        /// </summary>
        public string UIDJacksonAndrew080010CellText = "( )D - Jackson, Andrew (08:00 - 10:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )N - Harrison, William H (22:00 - 08:00)' cell equals '( )N - Harrison, William H (22:00 - 08:00)
        ///'
        /// </summary>
        public string UINHarrisonWilliamH220Cell1Text = "( )N - Harrison, William H (22:00 - 08:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Jackson, Andrew (10:00 - 16:00)' cell equals '( )D - Jackson, Andrew (10:00 - 16:00)
        ///'
        /// </summary>
        public string UIDJacksonAndrew100016CellText = "( )D - Jackson, Andrew (10:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Warning:Du bør jo være lege, ikke sant!)BV - Jackson, Andrew (22:00 - 08:00)' cell equals '( )(Warning:Du bør jo være lege, ikke sant!)BV - Jackson, Andrew (22:00 - 08:00)
        ///'
        /// </summary>
        public string UIWarningDubørjoværeleCell1Text = "( )(Warning:Du bør jo være lege, ikke sant!)BV - Jackson, Andrew (22:00 - 08:00)\r" +
            "\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Buchanan, James (08:00 - 16:00)
        ///( )D - Fillmore, Millard (08:00 - 16:00)' cell equals '( )D - Buchanan, James (08:00 - 16:00)
        ///( )D - Fillmore, Millard (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIDBuchananJames080016Cell1Text1 = "( )D - Buchanan, James (08:00 - 16:00)\r\n( )D - Fillmore, Millard (08:00 - 16:00)\r" +
            "\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAssignmentsWeek2Step37'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckAssignmentsWeek2Step37ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )N - Harrison, William H (22:00 - 08:00)' cell equals '( )N - Harrison, William H (22:00 - 08:00)
        ///'
        /// </summary>
        public string UINHarrisonWilliamH220Cell2Text = "( )N - Harrison, William H (22:00 - 08:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )KK1 - Jackson, Andrew (08:00 - 16:00)
        ///( )KK1 - Jackson, Andrew (16:00 - 22:00)
        ///( )KK1 - Jackson, Andrew (22:00 - 08:00)' cell equals '( )BV - Jackson, Andrew (22:00 - 08:00)
        ///( )D - Jackson, Andrew (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIKK1JacksonAndrew0800CellText = "( )BV - Jackson, Andrew (22:00 - 08:00)\r\n( )D - Jackson, Andrew (08:00 - 16:00)\r\n" +
            "";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Buchanan, James (08:00 - 16:00)
        ///( )D - Fillmore, Millard (08:00 - 16:00)' cell equals '( )D - Buchanan, James (08:00 - 16:00)
        ///( )D - Fillmore, Millard (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIDBuchananJames080016Cell2Text = "( )D - Buchanan, James (08:00 - 16:00)\r\n( )D - Fillmore, Millard (08:00 - 16:00)\r" +
            "\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Buchanan, James (08:00 - 15:00)' cell equals '( )D - Buchanan, James (08:00 - 15:00)
        ///'
        /// </summary>
        public string UIDBuchananJames080015CellText = "( )D - Buchanan, James (08:00 - 15:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )BV - Jackson, Andrew (22:00 - 08:00)
        ///( )N - Harrison, William H (22:00 - 08:00)' cell equals '( )BV - Jackson, Andrew (22:00 - 08:00)
        ///( )N - Harrison, William H (22:00 - 08:00)
        ///'
        /// </summary>
        public string UIBVJacksonAndrew22000Cell1Text = "( )BV - Jackson, Andrew (22:00 - 08:00)\r\n( )N - Harrison, William H (22:00 - 08:0" +
            "0)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Jackson, Andrew (08:00 - 16:00)' cell equals '( )D - Jackson, Andrew (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIDJacksonAndrew080016Cell1Text = "( )D - Jackson, Andrew (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Buchanan, James (15:00 - 16:00)
        ///( )D - Fillmore, Millard (08:00 - 16:00)' cell equals '( )D - Buchanan, James (15:00 - 16:00)
        ///( )D - Fillmore, Millard (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIDBuchananJames150016CellText = "( )D - Buchanan, James (15:00 - 16:00)\r\n( )D - Fillmore, Millard (08:00 - 16:00)\r" +
            "\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCompStep27'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCompStep27ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'SPESLEG - Spesialistlege' cell equals 'SPESLEG - Spesialistlege'
        /// </summary>
        public string UISPESLEGSpesialistlegCellText = "SPESLEG - Spesialistlege";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckContStep27'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckContStep27ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'leCostPlace' LookUpEdit equals '5000 - ARBEIDSPLANKLINIKKEN'
        /// </summary>
        public string UILeCostPlaceLookUpEditText = "5000 - ARBEIDSPLANKLINIKKEN";
        
        /// <summary>
        /// Verify that the 'Text' property of 'leProject' LookUpEdit equals 'P3 - Prosjekt 3'
        /// </summary>
        public string UILeProjectLookUpEditText = "P3 - Prosjekt 3";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckEmpInPlanStep1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckEmpInPlanStep1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Adams, John Spesleg' cell equals 'Adams, John Spesleg'
        /// </summary>
        public string UIAdamsJohnSpeslegCellText = "Adams, John Spesleg";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Adams, John Quincy' cell equals 'Adams, John Quincy'
        /// </summary>
        public string UIAdamsJohnQuincyCellText = "Adams, John Quincy";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Buchanan, James Stleg' cell equals 'Buchanan, James Stleg'
        /// </summary>
        public string UIBuchananJamesStlegCellText = "Buchanan, James Stleg";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Fillmore, Millard' cell equals 'Fillmore, Millard'
        /// </summary>
        public string UIFillmoreMillardCellText = "Fillmore, Millard";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Harrison, William H' cell equals 'Harrison, William H'
        /// </summary>
        public string UIHarrisonWilliamHCellText = "Harrison, William H";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Jackson, Andrew' cell equals 'Jackson, Andrew'
        /// </summary>
        public string UIJacksonAndrewCellText = "Jackson, Andrew";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Jefferson, Thomas' cell equals 'Jefferson, Thomas'
        /// </summary>
        public string UIJeffersonThomasCellText = "Jefferson, Thomas";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Knox Polk, James' cell equals 'Knox Polk, James'
        /// </summary>
        public string UIKnoxPolkJamesCellText = "Knox Polk, James";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Madison, James' cell equals 'Madison, James'
        /// </summary>
        public string UIMadisonJamesCellText = "Madison, James";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Monroe, James' cell equals 'Monroe, James'
        /// </summary>
        public string UIMonroeJamesCellText = "Monroe, James";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Pierce, Franklin' cell equals 'Pierce, Franklin'
        /// </summary>
        public string UIPierceFranklinCellText = "Pierce, Franklin";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Taylor, Zachary' cell equals 'Taylor, Zachary'
        /// </summary>
        public string UITaylorZacharyCellText = "Taylor, Zachary";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Taylor, Zachary' cell equals 'Taylor, Zachary'
        /// </summary>
        public string UITaylorZacharyCell1Text = "Taylor, Zachary";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckKK1AssignmentsErrorStep37'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckKK1AssignmentsErrorStep37ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )KK1 - Jackson, Andrew (16:00 - 22:00)' cell equals '( )KK1 - Jackson, Andrew (16:00 - 22:00)
        ///'
        /// </summary>
        public string UIKK1JacksonAndrew1600CellText = "( )KK1 - Jackson, Andrew (16:00 - 22:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )KK1 - Jackson, Andrew (16:00 - 22:00)' cell equals '( )KK1 - Jackson, Andrew (16:00 - 22:00)
        ///'
        /// </summary>
        public string UIKK1JacksonAndrew1600Cell1Text = "( )KK1 - Jackson, Andrew (16:00 - 22:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )KK1 - Jackson, Andrew (08:00 - 16:00)
        ///( )KK1 - Jackson, Andrew (16:00 - 22:00)
        ///( )KK1 - Jackson, Andrew (22:00 - 08:00)' cell equals '( )KK1 - Jackson, Andrew (08:00 - 16:00)
        ///( )KK1 - Jackson, Andrew (16:00 - 22:00)
        ///( )KK1 - Jackson, Andrew (22:00 - 08:00)
        ///'
        /// </summary>
        public string UIKK1JacksonAndrew0800CellText = "( )KK1 - Jackson, Andrew (08:00 - 16:00)\r\n( )KK1 - Jackson, Andrew (16:00 - 22:00" +
            ")\r\n( )KK1 - Jackson, Andrew (22:00 - 08:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )KK1 - Jackson, Andrew (16:00 - 22:00)' cell equals '( )KK1 - Jackson, Andrew (16:00 - 22:00)
        ///'
        /// </summary>
        public string UIKK1JacksonAndrew1600Cell2Text = "( )KK1 - Jackson, Andrew (16:00 - 22:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckMonroeDispMondayDeletedStep5'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckMonroeDispMondayDeletedStep5ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of cell equals ''
        /// </summary>
        public string UIItemCellText = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckOldRoleMessageStep25_1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckOldRoleMessageStep25_1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Du kan BARE utføre denne oppgaven!.' tooltip equals 'Du kan BARE utføre denne oppgaven!. '
        /// </summary>
        public string UIDukanBAREutføredenneToolTipName = "Du kan BARE utføre denne oppgaven!. ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckOldRoleMessageStep25_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckOldRoleMessageStep25_2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Oppgave KOMPETANSE MÅ overlapper med allerede tild...' tooltip equals 'Oppgave KOMPETANSE MÅ overlapper med allerede tildelt eksklusiv oppgave ALLE MÅ KRAV. '
        /// </summary>
        public string UIOppgaveKOMPETANSEMÅoToolTipName = "Oppgave KOMPETANSE MÅ overlapper med allerede tildelt eksklusiv oppgave ALLE MÅ K" +
            "RAV. ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckPeriod2Step27'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckPeriod2Step27ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'steFromTime' text box equals '08:00'
        /// </summary>
        public string UISteFromTimeEditText = "08:00";
        
        /// <summary>
        /// Verify that the 'Text' property of 'steToTime' text box equals '10:00'
        /// </summary>
        public string UISteToTimeEditText = "10:00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckPeriod3Step27'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckPeriod3Step27ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'steFromTime' text box equals '10:00'
        /// </summary>
        public string UISteFromTimeEditText = "10:00";
        
        /// <summary>
        /// Verify that the 'Text' property of 'steToTime' text box equals '12:00'
        /// </summary>
        public string UISteToTimeEditText = "12:00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckPeriod4Step27'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckPeriod4Step27ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'steFromTime' text box equals '12:00'
        /// </summary>
        public string UISteFromTimeEditText = "12:00";
        
        /// <summary>
        /// Verify that the 'Text' property of 'steToTime' text box equals '13:00'
        /// </summary>
        public string UISteToTimeEditText = "13:00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckPeriod5AndContStep27'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckPeriod5AndContStep27ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'steFromTime' text box equals '15:00'
        /// </summary>
        public string UISteFromTimeEditText = "15:00";
        
        /// <summary>
        /// Verify that the 'Text' property of 'steToTime' text box equals '16:00'
        /// </summary>
        public string UISteToTimeEditText = "16:00";
        
        /// <summary>
        /// Verify that the 'Text' property of 'leCostPlace' LookUpEdit equals '4510 - Anestesi'
        /// </summary>
        public string UILeCostPlaceLookUpEditText = "4510 - Anestesi";
        
        /// <summary>
        /// Verify that the 'Text' property of 'leProject' LookUpEdit equals 'P1 - Prosjekt 1'
        /// </summary>
        public string UILeProjectLookUpEditText = "P1 - Prosjekt 1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckPeriodStep27'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckPeriodStep27ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'steFromTime' text box equals '13:00'
        /// </summary>
        public string UISteFromTimeEditText = "13:00";
        
        /// <summary>
        /// Verify that the 'Text' property of 'steToTime' text box equals '15:00'
        /// </summary>
        public string UISteToTimeEditText = "15:00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleCompStep24'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleCompStep24ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'SPESLEG - Spesialistlege' cell equals 'SPESLEG - Spesialistlege'
        /// </summary>
        public string UISPESLEGSpesialistlegCellText = "SPESLEG - Spesialistlege";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleMessageStep25_1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleMessageStep25_1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Oppgave KONTERING overlapper med allerede tildelt ...' tooltip equals 'Oppgave KONTERING overlapper med allerede tildelt eksklusiv oppgave EKSKL KAN IKKE. '
        /// </summary>
        public string UIOppgaveKONTERINGoverToolTipName = "Oppgave KONTERING overlapper med allerede tildelt eksklusiv oppgave EKSKL KAN IKK" +
            "E. ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleMessageStep25_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleMessageStep25_2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Nei, nei, nei!! Kun en ting av gangen!!.' tooltip equals 'Nei, nei, nei!! Kun en ting av gangen!!. '
        /// </summary>
        public string UINeineineiKunentingavToolTipName = "Nei, nei, nei!! Kun en ting av gangen!!. ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRolePeriodStep23'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRolePeriodStep23ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'steFromTime' text box equals '08:00'
        /// </summary>
        public string UISteFromTimeEditText = "08:00";
        
        /// <summary>
        /// Verify that the 'Text' property of 'steToTime' text box equals '10:00'
        /// </summary>
        public string UISteToTimeEditText = "10:00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRolePeriodStep24'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRolePeriodStep24ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'steFromTime' text box equals '12:00'
        /// </summary>
        public string UISteFromTimeEditText = "12:00";
        
        /// <summary>
        /// Verify that the 'Text' property of 'steToTime' text box equals '13:00'
        /// </summary>
        public string UISteToTimeEditText = "13:00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRolesMonroeMadisonStep2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRolesMonroeMadisonStep2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCellText = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell1Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell2Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell3Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell4Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell5Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell6Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell7Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell8Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell9Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell10Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell11Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell12Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell13Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell14Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell15Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell16Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell17Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell18Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell19Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell20Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell21Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell22Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell23Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell24Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell25Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell26Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell27Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell28Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell29Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell30Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG2 - 10. Monroe, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - Madison, James (08:00 - 12:00)' cell equals '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCell31Text = "( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved ive" +
            "rksetting.)OPPG1 - 9. Madison, James (08:00 - 12:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRolesStep25_1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRolesStep25_1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Appointment' cell equals '8:00 a.m.  to 4:00 p.m.  onsdag, januar 3, 2024, Subject KONTERING, Time Ledig, 2 of 6'
        /// </summary>
        public string UIAppointmentCell2Name = "8:00 a.m.  to 4:00 p.m.  onsdag, januar 3, 2024, Subject KONTERING, Time Ledig, 2" +
            " of 6";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRolesStep25_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRolesStep25_2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Appointment' cell equals '12:00 p.m.  to 2:00 p.m.  onsdag, januar 3, 2024, Subject ALLE MÅ KRAV, Time Ledig, 5 of 6'
        /// </summary>
        public string UIAppointmentCellName = "12:00 p.m.  to 2:00 p.m.  onsdag, januar 3, 2024, Subject ALLE MÅ KRAV, Time Ledi" +
            "g, 5 of 6";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleStep28'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleStep28ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Appointment' cell equals 'Dagvisning, 2 total events 8:00 a.m.  to 12:00 p.m.  søndag, januar 7, 2024, Subject KOMPETANSE BØR, Time Ledig, 2 of 2'
        /// </summary>
        public string UIAppointmentCellName = "Dagvisning, 2 total events 8:00 a.m.  to 12:00 p.m.  søndag, januar 7, 2024, Subj" +
            "ect KOMPETANSE BØR, Time Ledig, 2 of 2";
        
        /// <summary>
        /// Verify that the 'Text' property of 'steFromTime' text box equals '08:00'
        /// </summary>
        public string UISteFromTimeEditText = "08:00";
        
        /// <summary>
        /// Verify that the 'Text' property of 'steToTime' text box equals '12:00'
        /// </summary>
        public string UISteToTimeEditText = "12:00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleValuesStep3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleValuesStep3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of cell equals '(x)(Critical:Oppgave DISPONIBEL overlapper med allerede tildelt eksklusiv oppgave OPPG PÅ VAKTKODE EKSKL)OPPG2 - 10. Monroe, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIItemCellText = "(x)(Critical:Oppgave DISPONIBEL overlapper med allerede tildelt eksklusiv oppgave" +
            " OPPG PÅ VAKTKODE EKSKL)OPPG2 - 10. Monroe, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Oppgave DISPONIBEL overlapper med allerede tildelt eksklusiv oppgave OPPG PÅ VAKTKODE EKSKL'
        /// </summary>
        public string UILblContentLabelText = "Oppgave DISPONIBEL overlapper med allerede tildelt eksklusiv oppgave OPPG PÅ VAKT" +
            "KODE EKSKL";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleValuesStep3_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleValuesStep3_2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgaven tilhører vaktkoden og vil blir opprettet på vakt ved iverksetting.)OPPG2 - Monroe, James (08:00 - 16:00)' cell equals '(x)(Critical:Nei, oppgaven kan ikke kombineres med andre oppgaver!)OPPG2 - 10. Monroe, James (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationOppgaventCellText = "(x)(Critical:Nei, oppgaven kan ikke kombineres med andre oppgaver!)OPPG2 - 10. Mo" +
            "nroe, James (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Nei, oppgaven kan ikke kombineres med andre oppgaver!'
        /// </summary>
        public string UILblContentLabelText = "Nei, oppgaven kan ikke kombineres med andre oppgaver!";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSaveButtonDisabledStep4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckSaveButtonDisabledStep4ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'Lagre' RibbonBaseButtonItem equals 'False'
        /// </summary>
        public bool UILagreRibbonBaseButtonItemEnabled = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSaveButtonEnabledStep5'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckSaveButtonEnabledStep5ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'Lagre' RibbonBaseButtonItem equals 'True'
        /// </summary>
        public bool UILagreRibbonBaseButtonItemEnabled = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSpecsStep12'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckSpecsStep12ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'KOMPETANSE BØR'
        /// </summary>
        public string UILblContentLabelText = "KOMPETANSE BØR";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Du bør jo være lege, ikke sant!'
        /// </summary>
        public string UILblContentLabelText1 = "Du bør jo være lege, ikke sant!";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblName' label equals '12. Taylor, Zachary'
        /// </summary>
        public string UILblNameLabelText = "12. Taylor, Zachary";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblEmployment' label equals 'S - Sykepleier'
        /// </summary>
        public string UILblEmploymentLabelText = "S - Sykepleier";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep13'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep13ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )D (08:00 - 16:00)' cell equals ''
        /// </summary>
        public string UID08001600CellText = "";
        
        /// <summary>
        /// Verify that the 'Text' property of cell equals ''
        /// </summary>
        public string UIItemCellText = "";
        
        /// <summary>
        /// Verify that the 'Text' property of cell equals ''
        /// </summary>
        public string UIItemCell1Text = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep14'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep14ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )D (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
        ///( )OVER (08:00 - 16:00)
        ///'
        /// </summary>
        public string UID08001600CellText = "( )D (08:00 - 16:00)\r\n( )OVER (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of cell equals '( )D (08:00 - 16:00)
        ///( )(Warning:Du bør jo være lege, ikke sant!)KOMPETANSE BØR (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIItemCellText = "( )D (08:00 - 16:00)\r\n( )(Warning:Du bør jo være lege, ikke sant!)KOMPETANSE BØR " +
            "(08:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of cell equals '( )D (08:00 - 16:00)
        ///( )OVER (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIItemCell1Text = "( )D (08:00 - 16:00)\r\n( )OVER (08:00 - 16:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep15'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep15ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )D (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
        ///(x)(Critical:Oppgave KUN MANDAG kan ikke tildeles på ugyldig ukedag (tirsdag).)KUN MANDAG (12:00 - 16:00)
        ///'
        /// </summary>
        public string UID08001600Cell1Text = "( )D (08:00 - 16:00)\r\n(x)(Critical:Oppgave KUN MANDAG kan ikke tildeles på ugyldi" +
            "g ukedag (tirsdag).)KUN MANDAG (12:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Oppgave KUN MANDAG kan ikke tildeles på ugyldig ukedag (tirsdag).'
        /// </summary>
        public string UILblContentLabelText = "Oppgave KUN MANDAG kan ikke tildeles på ugyldig ukedag (tirsdag).";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblName' label equals '1. Adams, John'
        /// </summary>
        public string UILblNameLabelText = "1. Adams, John";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep16'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep16ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )D (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
        ///'
        /// </summary>
        public string UID08001600Cell1Text = "( )D (08:00 - 16:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep21'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep21ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Appointment' cell equals 'Dagvisning, 2 total events 10:00 a.m.  to 12:00 p.m.  onsdag, januar 3, 2024, Subject PRIO HØY, Time Ledig, 2 of 2'
        /// </summary>
        public string UIAppointmentCellName = "Dagvisning, 2 total events 10:00 a.m.  to 12:00 p.m.  onsdag, januar 3, 2024, Sub" +
            "ject PRIO HØY, Time Ledig, 2 of 2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep22_1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep22_1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Du kan BARE utføre denne oppgaven!.' tooltip equals 'Du kan BARE utføre denne oppgaven!. '
        /// </summary>
        public string UIDukanBAREutføredenneToolTipName = "Du kan BARE utføre denne oppgaven!. ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep22_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep22_2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Oppgave PRIO HØY overlapper med allerede tildelt e...' tooltip equals 'Oppgave PRIO HØY overlapper med allerede tildelt eksklusiv oppgave EKSKL KAN IKKE. '
        /// </summary>
        public string UIOppgavePRIOHØYoverlaToolTipName = "Oppgave PRIO HØY overlapper med allerede tildelt eksklusiv oppgave EKSKL KAN IKKE" +
            ". ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep26'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep26ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'leCostPlace' LookUpEdit equals '4510 - Anestesi'
        /// </summary>
        public string UILeCostPlaceLookUpEditText = "4510 - Anestesi";
        
        /// <summary>
        /// Verify that the 'Text' property of 'leProject' LookUpEdit equals 'P1 - Prosjekt 1'
        /// </summary>
        public string UILeProjectLookUpEditText = "P1 - Prosjekt 1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep29'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep29ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of cell equals '( )(Warning:Du bør jo være lege, ikke sant!)KK1 - 11. Pierce, Franklin (08:00 - 08:00)
        ///'
        /// </summary>
        public string UIItemCellText = "( )(Warning:Du bør jo være lege, ikke sant!)KK1 - 11. Pierce, Franklin (08:00 - 0" +
            "8:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )A - Jackson, Andrew (15:00 - 23:00)
        ///( )A - Jefferson, Thomas (15:00 - 23:00)
        ///( )D - Adams, John (08:00 - 16:00)
        ///( )D - Adams, John Quincy (08:00 - 16:00)
        ///( )D - Harrison, William H (08:00 - 16:00)
        ///( )GV1 - Fillmore, Millard (08:00 - 16:00)
        ///(x)KK1 - Pierce, Franklin (08:00 - 16:00)
        ///( )KK1 - Pierce, Franklin (16:00 - 22:00)
        ///( )KK1 - Pierce, Franklin (22:00 - 08:00)
        ///( )N - Knox Polk, James (22:00 - 08:00)
        ///( )OPPG1 - Madison, James (12:00 - 16:00)' cell equals '( )A - 6. Jackson, Andrew (15:00 - 23:00)
        ///( )A - 7. Jefferson, Thomas (15:00 - 23:00)
        ///( )D - 2. Adams, John Quincy (08:00 - 16:00)
        ///( )D - 3. Buchanan, James (08:00 - 16:00)
        ///( )D - 5. Harrison, William H (08:00 - 16:00)
        ///( )GV1 - 4. Fillmore, Millard (08:00 - 16:00)
        ///( )N - 8. Knox Polk, James (22:00 - 08:00)
        ///( )OPPG1 - 9. Madison, James (12:00 - 16:00)
        ///'
        /// </summary>
        public string UIAJacksonAndrew150023CellText = @"( )A - 6. Jackson, Andrew (15:00 - 23:00)
( )A - 7. Jefferson, Thomas (15:00 - 23:00)
( )D - 2. Adams, John Quincy (08:00 - 16:00)
( )D - 3. Buchanan, James (08:00 - 16:00)
( )D - 5. Harrison, William H (08:00 - 16:00)
( )GV1 - 4. Fillmore, Millard (08:00 - 16:00)
( )N - 8. Knox Polk, James (22:00 - 08:00)
( )OPPG1 - 9. Madison, James (12:00 - 16:00)
";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep7'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep7ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040CellText = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell1Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell2Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell3Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell4Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'ClassName' property of '4,0 / 4,0' cell equals 'GridControlCell'
        /// </summary>
        public string UIItem4040Cell5ClassName = "GridControlCell";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell6Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell7Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell8Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell9Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell10Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell11Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell12Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell13Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell14Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell15Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell16Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell17Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell18Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell19Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell20Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell21Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell22Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell23Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell24Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell25Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell26Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell27Text = "4,0 / 4,0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep9'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep9ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of cell equals '( )D - 1. Adams, John (12:00 - 16:00)
        ///'
        /// </summary>
        public string UIItemCell1Text = "( )D - 1. Adams, John (12:00 - 16:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep12'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep12ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )D (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
        ///( )OVER (08:00 - 16:00)
        ///'
        /// </summary>
        public string UID08001600CellText = "( )D (08:00 - 16:00)\r\n( )OVER (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D (08:00 - 16:00)
        ///( )(Warning:Du bør jo være lege, ikke sant!)KOMPETANSE BØR (08:00 - 12:00)' cell equals '( )D (08:00 - 16:00)
        ///( )(Warning:Du bør jo være lege, ikke sant!)KOMPETANSE BØR (08:00 - 12:00)
        ///'
        /// </summary>
        public string UID08001600WarningDubøCellText = "( )D (08:00 - 16:00)\r\n( )(Warning:Du bør jo være lege, ikke sant!)KOMPETANSE BØR " +
            "(08:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D (08:00 - 16:00)
        ///( )OVER (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
        ///( )OVER (08:00 - 16:00)
        ///'
        /// </summary>
        public string UID08001600OVER0800160CellText = "( )D (08:00 - 16:00)\r\n( )OVER (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D (08:00 - 16:00)
        ///( )KL.08-15 (08:00 - 15:00)' cell equals '( )D (08:00 - 16:00)
        ///( )KL.08-15 (08:00 - 15:00)
        ///'
        /// </summary>
        public string UID08001600KL081508001CellText = "( )D (08:00 - 16:00)\r\n( )KL.08-15 (08:00 - 15:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D (08:00 - 16:00)
        ///( )OVER (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
        ///( )OVER (08:00 - 16:00)
        ///'
        /// </summary>
        public string UID08001600OVER0800160Cell1Text = "( )D (08:00 - 16:00)\r\n( )OVER (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D (08:00 - 16:00)
        ///( )KL.08-15 (08:00 - 15:00)' cell equals '( )D (08:00 - 16:00)
        ///( )KL.08-15 (08:00 - 15:00)
        ///'
        /// </summary>
        public string UID08001600KL081508001Cell1Text = "( )D (08:00 - 16:00)\r\n( )KL.08-15 (08:00 - 15:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D (08:00 - 16:00)
        ///( )OVER (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
        ///( )OVER (08:00 - 16:00)
        ///'
        /// </summary>
        public string UID08001600OVER0800160Cell2Text = "( )D (08:00 - 16:00)\r\n( )OVER (08:00 - 16:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep19'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep19ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )N - Knox Polk, James (22:00 - 08:00)' cell equals '(x)N - 8. Knox Polk, James (22:00 - 08:00)
        ///'
        /// </summary>
        public string UINKnoxPolkJames220008CellText = "(x)N - 8. Knox Polk, James (22:00 - 08:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'KL.22-08'
        /// </summary>
        public string UILblContentLabelText = "KL.22-08";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblName' label equals '8. Knox Polk, James'
        /// </summary>
        public string UILblNameLabelText = "8. Knox Polk, James";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Checked' property of 'Oppgavevisning' RibbonBaseButtonItem equals 'True'
        /// </summary>
        public bool UIOppgavevisningRibbonBaseButtonItemChecked = true;
        
        /// <summary>
        /// Verify that the 'Visible' property of 'dpDisponible' DockPanel equals 'True'
        /// </summary>
        public bool UIDpDisponibleDockPanelVisible = true;
        
        /// <summary>
        /// Verify that the 'Text' property of 'Valgt ansatt' cell equals 'Valgt ansatt'
        /// </summary>
        public string UIValgtansattCellText = "Valgt ansatt";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Ansatte' cell equals 'Ansatte'
        /// </summary>
        public string UIAnsatteCellText = "Ansatte";
        
        /// <summary>
        /// Verify that the 'Text' property of '4510 - Anestesi' cell equals '4510 - Anestesi'
        /// </summary>
        public string UIItem4510AnestesiCellText = "4510 - Anestesi";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep32'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep32ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040CellText = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell1Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell2Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell3Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell4Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell5Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell6Text = "4,0 / 4,0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep33'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep33ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of cell equals '( )D - Adams, John (10:00 - 12:00)
        ///( )D - Taylor, Zachary (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIItemCell3Text = "( )D - Adams, John (10:00 - 12:00)\r\n( )D - Taylor, Zachary (08:00 - 16:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep34'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep34ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'leCostPlace' LookUpEdit equals '4510 - Anestesi'
        /// </summary>
        public string UILeCostPlaceLookUpEditText = "4510 - Anestesi";
        
        /// <summary>
        /// Verify that the 'Text' property of 'leProject' LookUpEdit equals 'P1 - Prosjekt 1'
        /// </summary>
        public string UILeProjectLookUpEditText = "P1 - Prosjekt 1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep34_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep34_2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'leCostPlace' LookUpEdit equals '5000 - ARBEIDSPLANKLINIKKEN'
        /// </summary>
        public string UILeCostPlaceLookUpEditText = "5000 - ARBEIDSPLANKLINIKKEN";
        
        /// <summary>
        /// Verify that the 'Text' property of 'leProject' LookUpEdit equals 'P3 - Prosjekt 3'
        /// </summary>
        public string UILeProjectLookUpEditText = "P3 - Prosjekt 3";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'DeleteMonroeDispMonday'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class DeleteMonroeDispMondayParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{Delete}' in 'gcDragDropGrid' table
        /// </summary>
        public string UIGcDragDropGridTableSendKeys = "{Delete}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'DeletePierceRoleSunday'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class DeletePierceRoleSundayParams
    {
        
        #region Fields
        /// <summary>
        /// Type '911' in 'HCrkScrollBar' ScrollBarControl
        /// </summary>
        public string UIHCrkScrollBarScrollBarControlValueAsString = "911";
        
        /// <summary>
        /// Type '{Delete}' in 'gcDragDropGrid' table
        /// </summary>
        public string UIGcDragDropGridTableSendKeys = "{Delete}";
        
        /// <summary>
        /// Type '0' in 'HCrkScrollBar' ScrollBarControl
        /// </summary>
        public string UIHCrkScrollBarScrollBarControlValueAsString1 = "0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'DeleteTaylorOverSunday'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class DeleteTaylorOverSundayParams
    {
        
        #region Fields
        /// <summary>
        /// Type '505' in 'HCrkScrollBar' ScrollBarControl
        /// </summary>
        public string UIHCrkScrollBarScrollBarControlValueAsString = "505";
        
        /// <summary>
        /// Type '{Delete}' in 'gcDragDropGrid' table
        /// </summary>
        public string UIGcDragDropGridTableSendKeys = "{Delete}";
        
        /// <summary>
        /// Type '0' in 'HCrkScrollBar' ScrollBarControl
        /// </summary>
        public string UIHCrkScrollBarScrollBarControlValueAsString1 = "0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditTaylorRosterLineStep13'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class EditTaylorRosterLineStep13Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'Shift + {Right}' in 'gcRosterPlan' table
        /// </summary>
        public string UIGcRosterPlanTableSendKeys = "{Right}";
        
        /// <summary>
        /// Type 'Shift + {Right}' in 'gcRosterPlan' table
        /// </summary>
        public string UIGcRosterPlanTableSendKeys1 = "{Right}";
        
        /// <summary>
        /// Type '{Delete}' in 'gcRosterPlan' table
        /// </summary>
        public string UIGcRosterPlanTableSendKeys2 = "{Delete}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'MoveSliderRight'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class MoveSliderRightParams
    {
        
        #region Fields
        /// <summary>
        /// Type '242' in 'HCrkScrollBar' ScrollBarControl
        /// </summary>
        public string UIHCrkScrollBarScrollBarControlValueAsString = "242";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep8'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep8ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )A - 6. Jackson, Andrew (15:00 - 23:00)' cell equals '( )A - 6. Jackson, Andrew (15:00 - 23:00)
        ///'
        /// </summary>
        public string UIA6JacksonAndrew15002CellText = "( )A - 6. Jackson, Andrew (15:00 - 23:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )A - Jefferson, Thomas (15:00 - 23:00)
        ///( )D - Adams, John (08:00 - 16:00)
        ///( )D - Adams, John Quincy (08:00 - 16:00)
        ///( )D - Buchanan, James (08:00 - 16:00)
        ///( )D - Harrison, William H (08:00 - 16:00)
        ///( )D - Taylor, Zachary (08:00 - 16:00)
        ///( )KK1 - Pierce, Franklin (08:00 - 16:00)
        ///( )KK1 - Pierce, Franklin (16:00 - 22:00)
        ///( )KK1 - Pierce, Franklin (22:00 - 08:00)
        ///( )N - Knox Polk, James (22:00 - 08:00)
        ///( )OPPG1 - Madison, James (12:00 - 16:00)' cell equals '( )A - 7. Jefferson, Thomas (15:00 - 23:00)
        ///( )D - 1. Adams, John (08:00 - 16:00)
        ///( )D - 12. Taylor, Zachary (08:00 - 16:00)
        ///( )D - 2. Adams, John Quincy (08:00 - 16:00)
        ///( )D - 5. Harrison, William H (08:00 - 16:00)
        ///( )KK1 - 11. Pierce, Franklin (08:00 - 16:00)
        ///( )KK1 - 11. Pierce, Franklin (16:00 - 22:00)
        ///( )KK1 - 11. Pierce, Franklin (22:00 - 08:00)
        ///( )N - 8. Knox Polk, James (22:00 - 08:00)
        ///( )OPPG1 - 9. Madison, James (12:00 - 16:00)
        ///'
        /// </summary>
        public string UIAJeffersonThomas1500CellText = @"( )A - 7. Jefferson, Thomas (15:00 - 23:00)
( )D - 1. Adams, John (08:00 - 16:00)
( )D - 12. Taylor, Zachary (08:00 - 16:00)
( )D - 2. Adams, John Quincy (08:00 - 16:00)
( )D - 5. Harrison, William H (08:00 - 16:00)
( )KK1 - 11. Pierce, Franklin (08:00 - 16:00)
( )KK1 - 11. Pierce, Franklin (16:00 - 22:00)
( )KK1 - 11. Pierce, Franklin (22:00 - 08:00)
( )N - 8. Knox Polk, James (22:00 - 08:00)
( )OPPG1 - 9. Madison, James (12:00 - 16:00)
";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep10'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep10ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )D - 1. Adams, John (08:00 - 10:00)' cell equals '( )D - 1. Adams, John (08:00 - 10:00)
        ///'
        /// </summary>
        public string UID1AdamsJohn08001000CellText = "( )D - 1. Adams, John (08:00 - 10:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep11'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep11ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )D - 1. Adams, John (10:00 - 12:00)' cell equals '( )D - 1. Adams, John (10:00 - 12:00)
        ///'
        /// </summary>
        public string UID1AdamsJohn10001200CellText = "( )D - 1. Adams, John (10:00 - 12:00)\r\n";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIProgramManagerWindow : WinWindow
    {
        
        public UIProgramManagerWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Program Manager";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Progman";
            this.WindowTitles.Add("Program Manager");
            #endregion
        }
        
        #region Properties
        public UIDesktopList UIDesktopList
        {
            get
            {
                if ((this.mUIDesktopList == null))
                {
                    this.mUIDesktopList = new UIDesktopList(this);
                }
                return this.mUIDesktopList;
            }
        }
        #endregion
        
        #region Fields
        private UIDesktopList mUIDesktopList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDesktopList : WinList
    {
        
        public UIDesktopList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Desktop";
            this.WindowTitles.Add("Program Manager");
            #endregion
        }
        
        #region Properties
        public WinListItem UIGATRunDFORelease2019ListItem
        {
            get
            {
                if ((this.mUIGATRunDFORelease2019ListItem == null))
                {
                    this.mUIGATRunDFORelease2019ListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIGATRunDFORelease2019ListItem.SearchProperties[WinListItem.PropertyNames.Name] = "GATRun DFO - Release 2019.1.9x";
                    this.mUIGATRunDFORelease2019ListItem.WindowTitles.Add("Program Manager");
                    #endregion
                }
                return this.mUIGATRunDFORelease2019ListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIGATRunDFORelease2019ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIArbeidsplanWindow : DXWindow
    {
        
        public UIArbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlRosterPlanClient : DXTestControl
    {
        
        public UIPnlRosterPlanClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRosterPlanGrid1Custom UIRosterPlanGrid1Custom
        {
            get
            {
                if ((this.mUIRosterPlanGrid1Custom == null))
                {
                    this.mUIRosterPlanGrid1Custom = new UIRosterPlanGrid1Custom(this);
                }
                return this.mUIRosterPlanGrid1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIRosterPlanGrid1Custom mUIRosterPlanGrid1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRosterPlanGrid1Custom : DXTestControl
    {
        
        public UIRosterPlanGrid1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rosterPlanGrid1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RosterPlanGrid";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRosterPlanTable : DXGrid
    {
        
        public UIGcRosterPlanTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIAdamsJohnSpeslegCell
        {
            get
            {
                if ((this.mUIAdamsJohnSpeslegCell == null))
                {
                    this.mUIAdamsJohnSpeslegCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIAdamsJohnSpeslegCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]ColumnHandle1";
                    this.mUIAdamsJohnSpeslegCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIAdamsJohnSpeslegCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIAdamsJohnSpeslegCell;
            }
        }
        
        public DXCell UIAdamsJohnQuincyCell
        {
            get
            {
                if ((this.mUIAdamsJohnQuincyCell == null))
                {
                    this.mUIAdamsJohnQuincyCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIAdamsJohnQuincyCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]ColumnHandle1";
                    this.mUIAdamsJohnQuincyCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIAdamsJohnQuincyCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIAdamsJohnQuincyCell;
            }
        }
        
        public DXCell UIBuchananJamesStlegCell
        {
            get
            {
                if ((this.mUIBuchananJamesStlegCell == null))
                {
                    this.mUIBuchananJamesStlegCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBuchananJamesStlegCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]ColumnHandle1";
                    this.mUIBuchananJamesStlegCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBuchananJamesStlegCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIBuchananJamesStlegCell;
            }
        }
        
        public DXCell UIFillmoreMillardCell
        {
            get
            {
                if ((this.mUIFillmoreMillardCell == null))
                {
                    this.mUIFillmoreMillardCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIFillmoreMillardCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]3[Column]ColumnHandle1";
                    this.mUIFillmoreMillardCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIFillmoreMillardCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIFillmoreMillardCell;
            }
        }
        
        public DXCell UIHarrisonWilliamHCell
        {
            get
            {
                if ((this.mUIHarrisonWilliamHCell == null))
                {
                    this.mUIHarrisonWilliamHCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIHarrisonWilliamHCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]ColumnHandle1";
                    this.mUIHarrisonWilliamHCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIHarrisonWilliamHCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIHarrisonWilliamHCell;
            }
        }
        
        public DXCell UIJacksonAndrewCell
        {
            get
            {
                if ((this.mUIJacksonAndrewCell == null))
                {
                    this.mUIJacksonAndrewCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIJacksonAndrewCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]ColumnHandle1";
                    this.mUIJacksonAndrewCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIJacksonAndrewCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIJacksonAndrewCell;
            }
        }
        
        public DXCell UIJeffersonThomasCell
        {
            get
            {
                if ((this.mUIJeffersonThomasCell == null))
                {
                    this.mUIJeffersonThomasCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIJeffersonThomasCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]6[Column]ColumnHandle1";
                    this.mUIJeffersonThomasCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIJeffersonThomasCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIJeffersonThomasCell;
            }
        }
        
        public DXCell UIKnoxPolkJamesCell
        {
            get
            {
                if ((this.mUIKnoxPolkJamesCell == null))
                {
                    this.mUIKnoxPolkJamesCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIKnoxPolkJamesCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]7[Column]ColumnHandle1";
                    this.mUIKnoxPolkJamesCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIKnoxPolkJamesCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIKnoxPolkJamesCell;
            }
        }
        
        public DXCell UIMadisonJamesCell
        {
            get
            {
                if ((this.mUIMadisonJamesCell == null))
                {
                    this.mUIMadisonJamesCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIMadisonJamesCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]8[Column]ColumnHandle1";
                    this.mUIMadisonJamesCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIMadisonJamesCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIMadisonJamesCell;
            }
        }
        
        public DXCell UIMonroeJamesCell
        {
            get
            {
                if ((this.mUIMonroeJamesCell == null))
                {
                    this.mUIMonroeJamesCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIMonroeJamesCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]ColumnHandle1";
                    this.mUIMonroeJamesCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIMonroeJamesCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIMonroeJamesCell;
            }
        }
        
        public DXCell UIPierceFranklinCell
        {
            get
            {
                if ((this.mUIPierceFranklinCell == null))
                {
                    this.mUIPierceFranklinCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIPierceFranklinCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]10[Column]ColumnHandle1";
                    this.mUIPierceFranklinCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIPierceFranklinCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIPierceFranklinCell;
            }
        }
        
        public DXCell UITaylorZacharyCell
        {
            get
            {
                if ((this.mUITaylorZacharyCell == null))
                {
                    this.mUITaylorZacharyCell = new DXCell(this);
                    #region Search Criteria
                    this.mUITaylorZacharyCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]11[Column]ColumnHandle1";
                    this.mUITaylorZacharyCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUITaylorZacharyCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUITaylorZacharyCell;
            }
        }
        
        public DXCell UITaylorZacharyCell1
        {
            get
            {
                if ((this.mUITaylorZacharyCell1 == null))
                {
                    this.mUITaylorZacharyCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUITaylorZacharyCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]12[Column]ColumnHandle1";
                    this.mUITaylorZacharyCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUITaylorZacharyCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUITaylorZacharyCell1;
            }
        }
        
        public DXCell UIDCell
        {
            get
            {
                if ((this.mUIDCell == null))
                {
                    this.mUIDCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]11[Column]RosterCell_0";
                    this.mUIDCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIDCell;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]11[Column]RosterCell_2";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXTextEdit UIRow11ColumnRosterCelEdit
        {
            get
            {
                if ((this.mUIRow11ColumnRosterCelEdit == null))
                {
                    this.mUIRow11ColumnRosterCelEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow11ColumnRosterCelEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]11[Column]RosterCell_0";
                    this.mUIRow11ColumnRosterCelEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow11ColumnRosterCelEdit.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow11ColumnRosterCelEdit;
            }
        }
        
        public DXTextEdit UIRow11ColumnRosterCelEdit1
        {
            get
            {
                if ((this.mUIRow11ColumnRosterCelEdit1 == null))
                {
                    this.mUIRow11ColumnRosterCelEdit1 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow11ColumnRosterCelEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan[View]gvRosterPlan[Row]11[Column]RosterCell_0";
                    this.mUIRow11ColumnRosterCelEdit1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow11ColumnRosterCelEdit1;
            }
        }
        
        public DXTextEdit UIRow11ColumnRosterCelEdit2
        {
            get
            {
                if ((this.mUIRow11ColumnRosterCelEdit2 == null))
                {
                    this.mUIRow11ColumnRosterCelEdit2 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow11ColumnRosterCelEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan[View]gvRosterPlan[Row]11[Column]RosterCell_1";
                    this.mUIRow11ColumnRosterCelEdit2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow11ColumnRosterCelEdit2;
            }
        }
        
        public DXTextEdit UIRow11ColumnRosterCelEdit11
        {
            get
            {
                if ((this.mUIRow11ColumnRosterCelEdit11 == null))
                {
                    this.mUIRow11ColumnRosterCelEdit11 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow11ColumnRosterCelEdit11.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan[View]gvRosterPlan[Row]11[Column]RosterCell_2";
                    this.mUIRow11ColumnRosterCelEdit11.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow11ColumnRosterCelEdit11;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIAdamsJohnSpeslegCell;
        
        private DXCell mUIAdamsJohnQuincyCell;
        
        private DXCell mUIBuchananJamesStlegCell;
        
        private DXCell mUIFillmoreMillardCell;
        
        private DXCell mUIHarrisonWilliamHCell;
        
        private DXCell mUIJacksonAndrewCell;
        
        private DXCell mUIJeffersonThomasCell;
        
        private DXCell mUIKnoxPolkJamesCell;
        
        private DXCell mUIMadisonJamesCell;
        
        private DXCell mUIMonroeJamesCell;
        
        private DXCell mUIPierceFranklinCell;
        
        private DXCell mUITaylorZacharyCell;
        
        private DXCell mUITaylorZacharyCell1;
        
        private DXCell mUIDCell;
        
        private DXCell mUIItemCell1;
        
        private DXTextEdit mUIRow11ColumnRosterCelEdit;
        
        private DXTextEdit mUIRow11ColumnRosterCelEdit1;
        
        private DXTextEdit mUIRow11ColumnRosterCelEdit2;
        
        private DXTextEdit mUIRow11ColumnRosterCelEdit11;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow : DXWindow
    {
        
        public UIOppgavetildelingWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        
        public UIVhContentCustom UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        
        public UIGcContentClient UIGcContentClient
        {
            get
            {
                if ((this.mUIGcContentClient == null))
                {
                    this.mUIGcContentClient = new UIGcContentClient(this);
                }
                return this.mUIGcContentClient;
            }
        }
        
        public DXTestControl UIOppgavetildelingWindowTitleBar
        {
            get
            {
                if ((this.mUIOppgavetildelingWindowTitleBar == null))
                {
                    this.mUIOppgavetildelingWindowTitleBar = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIOppgavetildelingWindowTitleBar.SearchProperties[DXTestControl.PropertyNames.Name] = "WindowTitleBar";
                    this.mUIOppgavetildelingWindowTitleBar.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleBar";
                    this.mUIOppgavetildelingWindowTitleBar.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIOppgavetildelingWindowTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon mUIRcMenuRibbon;
        
        private UIVhContentCustom mUIVhContentCustom;
        
        private UIGcContentClient mUIGcContentClient;
        
        private DXTestControl mUIOppgavetildelingWindowTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRcMenuRibbon : DXRibbon
    {
        
        public UIRcMenuRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRpgHomeRibbonPage UIRpgHomeRibbonPage
        {
            get
            {
                if ((this.mUIRpgHomeRibbonPage == null))
                {
                    this.mUIRpgHomeRibbonPage = new UIRpgHomeRibbonPage(this);
                }
                return this.mUIRpgHomeRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgHomeRibbonPage mUIRpgHomeRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgHomeRibbonPage : DXRibbonPage
    {
        
        public UIRpgHomeRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgHome";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRpgViewRibbonPageGroup UIRpgViewRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgViewRibbonPageGroup == null))
                {
                    this.mUIRpgViewRibbonPageGroup = new UIRpgViewRibbonPageGroup(this);
                }
                return this.mUIRpgViewRibbonPageGroup;
            }
        }
        
        public UIRpgActionsRibbonPageGroup UIRpgActionsRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgActionsRibbonPageGroup == null))
                {
                    this.mUIRpgActionsRibbonPageGroup = new UIRpgActionsRibbonPageGroup(this);
                }
                return this.mUIRpgActionsRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgViewRibbonPageGroup mUIRpgViewRibbonPageGroup;
        
        private UIRpgActionsRibbonPageGroup mUIRpgActionsRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgViewRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgViewRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIOppgavevisningRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIOppgavevisningRibbonBaseButtonItem == null))
                {
                    this.mUIOppgavevisningRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIOppgavevisningRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bciRoleView";
                    this.mUIOppgavevisningRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIOppgavevisningRibbonBaseButtonItem.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIOppgavevisningRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIOppgavevisningRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgActionsRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgActionsRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgActions";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UILagreRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUILagreRibbonBaseButtonItem == null))
                {
                    this.mUILagreRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUILagreRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiSave";
                    this.mUILagreRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUILagreRibbonBaseButtonItem.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUILagreRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUILagreRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom : DXTestControl
    {
        
        public UIVhContentCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient : DXTestControl
    {
        
        public UIPcViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleAssignmentOverviCustom UIRoleAssignmentOverviCustom
        {
            get
            {
                if ((this.mUIRoleAssignmentOverviCustom == null))
                {
                    this.mUIRoleAssignmentOverviCustom = new UIRoleAssignmentOverviCustom(this);
                }
                return this.mUIRoleAssignmentOverviCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleAssignmentOverviCustom mUIRoleAssignmentOverviCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleAssignmentOverviCustom : DXTestControl
    {
        
        public UIRoleAssignmentOverviCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAssignmentOverviewView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleAssignmentOverviewView";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDpDisponibleDockPanel UIDpDisponibleDockPanel
        {
            get
            {
                if ((this.mUIDpDisponibleDockPanel == null))
                {
                    this.mUIDpDisponibleDockPanel = new UIDpDisponibleDockPanel(this);
                }
                return this.mUIDpDisponibleDockPanel;
            }
        }
        
        public UIVhContentCustom1 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom1(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        
        public UIPanelContainer2DockPanel UIPanelContainer2DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer2DockPanel == null))
                {
                    this.mUIPanelContainer2DockPanel = new UIPanelContainer2DockPanel(this);
                }
                return this.mUIPanelContainer2DockPanel;
            }
        }
        
        public UIDpSummaryDockPanel UIDpSummaryDockPanel
        {
            get
            {
                if ((this.mUIDpSummaryDockPanel == null))
                {
                    this.mUIDpSummaryDockPanel = new UIDpSummaryDockPanel(this);
                }
                return this.mUIDpSummaryDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpDisponibleDockPanel mUIDpDisponibleDockPanel;
        
        private UIVhContentCustom1 mUIVhContentCustom;
        
        private UIPanelContainer2DockPanel mUIPanelContainer2DockPanel;
        
        private UIDpSummaryDockPanel mUIDpSummaryDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpDisponibleDockPanel : DXDockPanel
    {
        
        public UIDpDisponibleDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpDisponible";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer4Custom UIControlContainer4Custom
        {
            get
            {
                if ((this.mUIControlContainer4Custom == null))
                {
                    this.mUIControlContainer4Custom = new UIControlContainer4Custom(this);
                }
                return this.mUIControlContainer4Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer4Custom mUIControlContainer4Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer4Custom : DXTestControl
    {
        
        public UIControlContainer4Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDispGridViewCustom UIDispGridViewCustom
        {
            get
            {
                if ((this.mUIDispGridViewCustom == null))
                {
                    this.mUIDispGridViewCustom = new UIDispGridViewCustom(this);
                }
                return this.mUIDispGridViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDispGridViewCustom mUIDispGridViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDispGridViewCustom : DXTestControl
    {
        
        public UIDispGridViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DispGridView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DispGridView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIIgAvailabilityCustom UIIgAvailabilityCustom
        {
            get
            {
                if ((this.mUIIgAvailabilityCustom == null))
                {
                    this.mUIIgAvailabilityCustom = new UIIgAvailabilityCustom(this);
                }
                return this.mUIIgAvailabilityCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIIgAvailabilityCustom mUIIgAvailabilityCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIgAvailabilityCustom : DXTestControl
    {
        
        public UIIgAvailabilityCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "igAvailability";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom : DXTestControl
    {
        
        public UIDdGridControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable : DXGrid
    {
        
        public UIGcDragDropGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIValgtansattCell
        {
            get
            {
                if ((this.mUIValgtansattCell == null))
                {
                    this.mUIValgtansattCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtansattCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]bgcDisp";
                    this.mUIValgtansattCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtansattCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIValgtansattCell;
            }
        }
        
        public DXCell UIAnsatteCell
        {
            get
            {
                if ((this.mUIAnsatteCell == null))
                {
                    this.mUIAnsatteCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIAnsatteCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]bgcDisp";
                    this.mUIAnsatteCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIAnsatteCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAnsatteCell;
            }
        }
        
        public DXCell UIItem4510AnestesiCell
        {
            get
            {
                if ((this.mUIItem4510AnestesiCell == null))
                {
                    this.mUIItem4510AnestesiCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4510AnestesiCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]bgcDepartment";
                    this.mUIItem4510AnestesiCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4510AnestesiCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4510AnestesiCell;
            }
        }
        
        public DXCell UIXAJacksonAndrew15002Cell
        {
            get
            {
                if ((this.mUIXAJacksonAndrew15002Cell == null))
                {
                    this.mUIXAJacksonAndrew15002Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIXAJacksonAndrew15002Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col01.01.2024";
                    this.mUIXAJacksonAndrew15002Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXAJacksonAndrew15002Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIXAJacksonAndrew15002Cell;
            }
        }
        
        public DXCell UIKK1JacksonAndrew1600Cell
        {
            get
            {
                if ((this.mUIKK1JacksonAndrew1600Cell == null))
                {
                    this.mUIKK1JacksonAndrew1600Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIKK1JacksonAndrew1600Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col06.03.2024";
                    this.mUIKK1JacksonAndrew1600Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIKK1JacksonAndrew1600Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIKK1JacksonAndrew1600Cell;
            }
        }
        
        public DXCell UIKK1JacksonAndrew1600Cell1
        {
            get
            {
                if ((this.mUIKK1JacksonAndrew1600Cell1 == null))
                {
                    this.mUIKK1JacksonAndrew1600Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIKK1JacksonAndrew1600Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col10.03.2024";
                    this.mUIKK1JacksonAndrew1600Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIKK1JacksonAndrew1600Cell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIKK1JacksonAndrew1600Cell1;
            }
        }
        
        public DXCell UIKK1JacksonAndrew0800Cell
        {
            get
            {
                if ((this.mUIKK1JacksonAndrew0800Cell == null))
                {
                    this.mUIKK1JacksonAndrew0800Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIKK1JacksonAndrew0800Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col12.03.2024";
                    this.mUIKK1JacksonAndrew0800Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIKK1JacksonAndrew0800Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIKK1JacksonAndrew0800Cell;
            }
        }
        
        public DXCell UIKK1JacksonAndrew1600Cell2
        {
            get
            {
                if ((this.mUIKK1JacksonAndrew1600Cell2 == null))
                {
                    this.mUIKK1JacksonAndrew1600Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIKK1JacksonAndrew1600Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col17.03.2024";
                    this.mUIKK1JacksonAndrew1600Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIKK1JacksonAndrew1600Cell2.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIKK1JacksonAndrew1600Cell2;
            }
        }
        
        public DXCell UIDBuchananJames080016Cell
        {
            get
            {
                if ((this.mUIDBuchananJames080016Cell == null))
                {
                    this.mUIDBuchananJames080016Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDBuchananJames080016Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col06.03.2024";
                    this.mUIDBuchananJames080016Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDBuchananJames080016Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDBuchananJames080016Cell;
            }
        }
        
        public DXCell UIDBuchananJames080016Cell1
        {
            get
            {
                if ((this.mUIDBuchananJames080016Cell1 == null))
                {
                    this.mUIDBuchananJames080016Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIDBuchananJames080016Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col10.03.2024";
                    this.mUIDBuchananJames080016Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDBuchananJames080016Cell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDBuchananJames080016Cell1;
            }
        }
        
        public DXCell UIDBuchananJames080016Cell2
        {
            get
            {
                if ((this.mUIDBuchananJames080016Cell2 == null))
                {
                    this.mUIDBuchananJames080016Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIDBuchananJames080016Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col12.03.2024";
                    this.mUIDBuchananJames080016Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDBuchananJames080016Cell2.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDBuchananJames080016Cell2;
            }
        }
        
        public DXCell UIDBuchananJames150016Cell
        {
            get
            {
                if ((this.mUIDBuchananJames150016Cell == null))
                {
                    this.mUIDBuchananJames150016Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDBuchananJames150016Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col17.03.2024";
                    this.mUIDBuchananJames150016Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDBuchananJames150016Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDBuchananJames150016Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIValgtansattCell;
        
        private DXCell mUIAnsatteCell;
        
        private DXCell mUIItem4510AnestesiCell;
        
        private DXCell mUIXAJacksonAndrew15002Cell;
        
        private DXCell mUIKK1JacksonAndrew1600Cell;
        
        private DXCell mUIKK1JacksonAndrew1600Cell1;
        
        private DXCell mUIKK1JacksonAndrew0800Cell;
        
        private DXCell mUIKK1JacksonAndrew1600Cell2;
        
        private DXCell mUIDBuchananJames080016Cell;
        
        private DXCell mUIDBuchananJames080016Cell1;
        
        private DXCell mUIDBuchananJames080016Cell2;
        
        private DXCell mUIDBuchananJames150016Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom1 : DXTestControl
    {
        
        public UIVhContentCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient1 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient1(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient1 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient1 : DXTestControl
    {
        
        public UIPcViewClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleFocusedManageVieCustom UIRoleFocusedManageVieCustom
        {
            get
            {
                if ((this.mUIRoleFocusedManageVieCustom == null))
                {
                    this.mUIRoleFocusedManageVieCustom = new UIRoleFocusedManageVieCustom(this);
                }
                return this.mUIRoleFocusedManageVieCustom;
            }
        }
        
        public UIEmployeeFocusedManagCustom UIEmployeeFocusedManagCustom
        {
            get
            {
                if ((this.mUIEmployeeFocusedManagCustom == null))
                {
                    this.mUIEmployeeFocusedManagCustom = new UIEmployeeFocusedManagCustom(this);
                }
                return this.mUIEmployeeFocusedManagCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleFocusedManageVieCustom mUIRoleFocusedManageVieCustom;
        
        private UIEmployeeFocusedManagCustom mUIEmployeeFocusedManagCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleFocusedManageVieCustom : DXTestControl
    {
        
        public UIRoleFocusedManageVieCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleFocusedManageView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleFocusedManageView";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIIgContentCustom UIIgContentCustom
        {
            get
            {
                if ((this.mUIIgContentCustom == null))
                {
                    this.mUIIgContentCustom = new UIIgContentCustom(this);
                }
                return this.mUIIgContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIIgContentCustom mUIIgContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIgContentCustom : DXTestControl
    {
        
        public UIIgContentCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "igContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom1 UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom1(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom1 mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom1 : DXTestControl
    {
        
        public UIDdGridControlCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable1 UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable1(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable1 mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable1 : DXGrid
    {
        
        public UIGcDragDropGridTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIInformationOppgaventCell
        {
            get
            {
                if ((this.mUIInformationOppgaventCell == null))
                {
                    this.mUIInformationOppgaventCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]14[Column]col01.01.2024";
                    this.mUIInformationOppgaventCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell;
            }
        }
        
        public DXCell UIInformationOppgaventCell1
        {
            get
            {
                if ((this.mUIInformationOppgaventCell1 == null))
                {
                    this.mUIInformationOppgaventCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]15[Column]col01.01.2024";
                    this.mUIInformationOppgaventCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell1;
            }
        }
        
        public DXCell UIInformationOppgaventCell2
        {
            get
            {
                if ((this.mUIInformationOppgaventCell2 == null))
                {
                    this.mUIInformationOppgaventCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]14[Column]col02.01.2024";
                    this.mUIInformationOppgaventCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell2.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell2;
            }
        }
        
        public DXCell UIInformationOppgaventCell3
        {
            get
            {
                if ((this.mUIInformationOppgaventCell3 == null))
                {
                    this.mUIInformationOppgaventCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]15[Column]col02.01.2024";
                    this.mUIInformationOppgaventCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell3.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell3;
            }
        }
        
        public DXCell UIInformationOppgaventCell4
        {
            get
            {
                if ((this.mUIInformationOppgaventCell4 == null))
                {
                    this.mUIInformationOppgaventCell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]14[Column]col03.01.2024";
                    this.mUIInformationOppgaventCell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell4.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell4;
            }
        }
        
        public DXCell UIInformationOppgaventCell5
        {
            get
            {
                if ((this.mUIInformationOppgaventCell5 == null))
                {
                    this.mUIInformationOppgaventCell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]15[Column]col03.01.2024";
                    this.mUIInformationOppgaventCell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell5.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell5;
            }
        }
        
        public DXCell UIInformationOppgaventCell6
        {
            get
            {
                if ((this.mUIInformationOppgaventCell6 == null))
                {
                    this.mUIInformationOppgaventCell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]14[Column]col04.01.2024";
                    this.mUIInformationOppgaventCell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell6.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell6;
            }
        }
        
        public DXCell UIInformationOppgaventCell7
        {
            get
            {
                if ((this.mUIInformationOppgaventCell7 == null))
                {
                    this.mUIInformationOppgaventCell7 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]15[Column]col04.01.2024";
                    this.mUIInformationOppgaventCell7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell7.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell7;
            }
        }
        
        public DXCell UIInformationOppgaventCell8
        {
            get
            {
                if ((this.mUIInformationOppgaventCell8 == null))
                {
                    this.mUIInformationOppgaventCell8 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell8.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]14[Column]col05.01.2024";
                    this.mUIInformationOppgaventCell8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell8.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell8;
            }
        }
        
        public DXCell UIInformationOppgaventCell9
        {
            get
            {
                if ((this.mUIInformationOppgaventCell9 == null))
                {
                    this.mUIInformationOppgaventCell9 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell9.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]15[Column]col05.01.2024";
                    this.mUIInformationOppgaventCell9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell9.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell9;
            }
        }
        
        public DXCell UIInformationOppgaventCell10
        {
            get
            {
                if ((this.mUIInformationOppgaventCell10 == null))
                {
                    this.mUIInformationOppgaventCell10 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell10.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]14[Column]col06.01.2024";
                    this.mUIInformationOppgaventCell10.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell10.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell10;
            }
        }
        
        public DXCell UIInformationOppgaventCell11
        {
            get
            {
                if ((this.mUIInformationOppgaventCell11 == null))
                {
                    this.mUIInformationOppgaventCell11 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell11.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]15[Column]col06.01.2024";
                    this.mUIInformationOppgaventCell11.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell11.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell11;
            }
        }
        
        public DXCell UIInformationOppgaventCell12
        {
            get
            {
                if ((this.mUIInformationOppgaventCell12 == null))
                {
                    this.mUIInformationOppgaventCell12 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell12.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]14[Column]col07.01.2024";
                    this.mUIInformationOppgaventCell12.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell12.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell12;
            }
        }
        
        public DXCell UIInformationOppgaventCell13
        {
            get
            {
                if ((this.mUIInformationOppgaventCell13 == null))
                {
                    this.mUIInformationOppgaventCell13 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell13.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]15[Column]col07.01.2024";
                    this.mUIInformationOppgaventCell13.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell13.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell13;
            }
        }
        
        public DXCell UIInformationOppgaventCell14
        {
            get
            {
                if ((this.mUIInformationOppgaventCell14 == null))
                {
                    this.mUIInformationOppgaventCell14 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell14.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]14[Column]col08.01.2024";
                    this.mUIInformationOppgaventCell14.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell14.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell14;
            }
        }
        
        public DXCell UIInformationOppgaventCell15
        {
            get
            {
                if ((this.mUIInformationOppgaventCell15 == null))
                {
                    this.mUIInformationOppgaventCell15 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell15.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]15[Column]col08.01.2024";
                    this.mUIInformationOppgaventCell15.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell15.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell15;
            }
        }
        
        public DXCell UIInformationOppgaventCell16
        {
            get
            {
                if ((this.mUIInformationOppgaventCell16 == null))
                {
                    this.mUIInformationOppgaventCell16 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell16.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]14[Column]col09.01.2024";
                    this.mUIInformationOppgaventCell16.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell16.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell16;
            }
        }
        
        public DXCell UIInformationOppgaventCell17
        {
            get
            {
                if ((this.mUIInformationOppgaventCell17 == null))
                {
                    this.mUIInformationOppgaventCell17 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell17.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]15[Column]col09.01.2024";
                    this.mUIInformationOppgaventCell17.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell17.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell17;
            }
        }
        
        public DXCell UIInformationOppgaventCell18
        {
            get
            {
                if ((this.mUIInformationOppgaventCell18 == null))
                {
                    this.mUIInformationOppgaventCell18 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell18.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]14[Column]col10.01.2024";
                    this.mUIInformationOppgaventCell18.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell18.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell18;
            }
        }
        
        public DXCell UIInformationOppgaventCell19
        {
            get
            {
                if ((this.mUIInformationOppgaventCell19 == null))
                {
                    this.mUIInformationOppgaventCell19 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell19.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]15[Column]col10.01.2024";
                    this.mUIInformationOppgaventCell19.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell19.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell19;
            }
        }
        
        public DXCell UIInformationOppgaventCell20
        {
            get
            {
                if ((this.mUIInformationOppgaventCell20 == null))
                {
                    this.mUIInformationOppgaventCell20 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell20.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]14[Column]col11.01.2024";
                    this.mUIInformationOppgaventCell20.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell20.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell20;
            }
        }
        
        public DXCell UIInformationOppgaventCell21
        {
            get
            {
                if ((this.mUIInformationOppgaventCell21 == null))
                {
                    this.mUIInformationOppgaventCell21 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell21.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]15[Column]col11.01.2024";
                    this.mUIInformationOppgaventCell21.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell21.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell21;
            }
        }
        
        public DXCell UIInformationOppgaventCell22
        {
            get
            {
                if ((this.mUIInformationOppgaventCell22 == null))
                {
                    this.mUIInformationOppgaventCell22 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell22.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]14[Column]col12.01.2024";
                    this.mUIInformationOppgaventCell22.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell22.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell22;
            }
        }
        
        public DXCell UIInformationOppgaventCell23
        {
            get
            {
                if ((this.mUIInformationOppgaventCell23 == null))
                {
                    this.mUIInformationOppgaventCell23 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell23.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]15[Column]col12.01.2024";
                    this.mUIInformationOppgaventCell23.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell23.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell23;
            }
        }
        
        public DXCell UIInformationOppgaventCell24
        {
            get
            {
                if ((this.mUIInformationOppgaventCell24 == null))
                {
                    this.mUIInformationOppgaventCell24 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell24.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]14[Column]col13.01.2024";
                    this.mUIInformationOppgaventCell24.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell24.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell24;
            }
        }
        
        public DXCell UIInformationOppgaventCell25
        {
            get
            {
                if ((this.mUIInformationOppgaventCell25 == null))
                {
                    this.mUIInformationOppgaventCell25 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell25.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]15[Column]col13.01.2024";
                    this.mUIInformationOppgaventCell25.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell25.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell25;
            }
        }
        
        public DXCell UIInformationOppgaventCell26
        {
            get
            {
                if ((this.mUIInformationOppgaventCell26 == null))
                {
                    this.mUIInformationOppgaventCell26 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell26.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]14[Column]col14.01.2024";
                    this.mUIInformationOppgaventCell26.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell26.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell26;
            }
        }
        
        public DXCell UIInformationOppgaventCell27
        {
            get
            {
                if ((this.mUIInformationOppgaventCell27 == null))
                {
                    this.mUIInformationOppgaventCell27 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell27.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]15[Column]col14.01.2024";
                    this.mUIInformationOppgaventCell27.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell27.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell27;
            }
        }
        
        public DXCell UIInformationOppgaventCell28
        {
            get
            {
                if ((this.mUIInformationOppgaventCell28 == null))
                {
                    this.mUIInformationOppgaventCell28 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell28.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]14[Column]col21.01.2024";
                    this.mUIInformationOppgaventCell28.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell28.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell28;
            }
        }
        
        public DXCell UIInformationOppgaventCell29
        {
            get
            {
                if ((this.mUIInformationOppgaventCell29 == null))
                {
                    this.mUIInformationOppgaventCell29 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell29.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]15[Column]col21.01.2024";
                    this.mUIInformationOppgaventCell29.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell29.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell29;
            }
        }
        
        public DXCell UIInformationOppgaventCell30
        {
            get
            {
                if ((this.mUIInformationOppgaventCell30 == null))
                {
                    this.mUIInformationOppgaventCell30 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell30.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]14[Column]col28.01.2024";
                    this.mUIInformationOppgaventCell30.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell30.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell30;
            }
        }
        
        public DXCell UIInformationOppgaventCell31
        {
            get
            {
                if ((this.mUIInformationOppgaventCell31 == null))
                {
                    this.mUIInformationOppgaventCell31 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaventCell31.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]15[Column]col28.01.2024";
                    this.mUIInformationOppgaventCell31.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaventCell31.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaventCell31;
            }
        }
        
        public DXScrollBar UIHCrkScrollBarScrollBarControl
        {
            get
            {
                if ((this.mUIHCrkScrollBarScrollBarControl == null))
                {
                    this.mUIHCrkScrollBarScrollBarControl = new DXScrollBar(this);
                    #region Search Criteria
                    this.mUIHCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridHCrkScrollBar";
                    this.mUIHCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.ClassName] = "HCrkScrollBar";
                    this.mUIHCrkScrollBarScrollBarControl.WindowTitles.Add("Oppgavetildeling");
                    this.mUIHCrkScrollBarScrollBarControl.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIHCrkScrollBarScrollBarControl;
            }
        }
        
        public DXCell UIXWarningDubørjoværelCell
        {
            get
            {
                if ((this.mUIXWarningDubørjoværelCell == null))
                {
                    this.mUIXWarningDubørjoværelCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIXWarningDubørjoværelCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]11[Column]col07.01.2024";
                    this.mUIXWarningDubørjoværelCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXWarningDubørjoværelCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIXWarningDubørjoværelCell;
            }
        }
        
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]9[Column]col01.01.2024";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIAJacksonAndrew150023Cell
        {
            get
            {
                if ((this.mUIAJacksonAndrew150023Cell == null))
                {
                    this.mUIAJacksonAndrew150023Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIAJacksonAndrew150023Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col01.01.2024";
                    this.mUIAJacksonAndrew150023Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIAJacksonAndrew150023Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAJacksonAndrew150023Cell;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]8[Column]col01.01.2024";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]5[Column]col01.01.2024";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        
        public DXCell UIItemCell3
        {
            get
            {
                if ((this.mUIItemCell3 == null))
                {
                    this.mUIItemCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]18[Column]col01.01.2024";
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell3.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell3;
            }
        }
        
        public DXCell UINKnoxPolkJames220008Cell
        {
            get
            {
                if ((this.mUINKnoxPolkJames220008Cell == null))
                {
                    this.mUINKnoxPolkJames220008Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUINKnoxPolkJames220008Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]7[Column]col01.01.2024";
                    this.mUINKnoxPolkJames220008Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUINKnoxPolkJames220008Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUINKnoxPolkJames220008Cell;
            }
        }
        
        public DXCell UIXCriticalOppgaveKL08Cell
        {
            get
            {
                if ((this.mUIXCriticalOppgaveKL08Cell == null))
                {
                    this.mUIXCriticalOppgaveKL08Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIXCriticalOppgaveKL08Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]6[Column]col01.01.2024";
                    this.mUIXCriticalOppgaveKL08Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXCriticalOppgaveKL08Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIXCriticalOppgaveKL08Cell;
            }
        }
        
        public DXCell UIItemCell4
        {
            get
            {
                if ((this.mUIItemCell4 == null))
                {
                    this.mUIItemCell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col03.01.2024";
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell4.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell4;
            }
        }
        
        public DXCell UIWarningDubørjoværeleCell
        {
            get
            {
                if ((this.mUIWarningDubørjoværeleCell == null))
                {
                    this.mUIWarningDubørjoværeleCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIWarningDubørjoværeleCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]11[Column]col02.01.2024";
                    this.mUIWarningDubørjoværeleCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIWarningDubørjoværeleCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIWarningDubørjoværeleCell;
            }
        }
        
        public DXCell UIDAdamsJohn08001000Cell
        {
            get
            {
                if ((this.mUIDAdamsJohn08001000Cell == null))
                {
                    this.mUIDAdamsJohn08001000Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDAdamsJohn08001000Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col03.01.2024";
                    this.mUIDAdamsJohn08001000Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDAdamsJohn08001000Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDAdamsJohn08001000Cell;
            }
        }
        
        public DXCell UIDAdamsJohn12001300Cell
        {
            get
            {
                if ((this.mUIDAdamsJohn12001300Cell == null))
                {
                    this.mUIDAdamsJohn12001300Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDAdamsJohn12001300Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]3[Column]col03.01.2024";
                    this.mUIDAdamsJohn12001300Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDAdamsJohn12001300Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDAdamsJohn12001300Cell;
            }
        }
        
        public DXCell UIDAdamsJohn13001500Cell
        {
            get
            {
                if ((this.mUIDAdamsJohn13001500Cell == null))
                {
                    this.mUIDAdamsJohn13001500Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDAdamsJohn13001500Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]4[Column]col03.01.2024";
                    this.mUIDAdamsJohn13001500Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDAdamsJohn13001500Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDAdamsJohn13001500Cell;
            }
        }
        
        public DXCell UIDAdamsJohn15001600Cell
        {
            get
            {
                if ((this.mUIDAdamsJohn15001600Cell == null))
                {
                    this.mUIDAdamsJohn15001600Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDAdamsJohn15001600Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]13[Column]col03.01.2024";
                    this.mUIDAdamsJohn15001600Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDAdamsJohn15001600Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDAdamsJohn15001600Cell;
            }
        }
        
        public DXCell UIDTaylorZachary080016Cell
        {
            get
            {
                if ((this.mUIDTaylorZachary080016Cell == null))
                {
                    this.mUIDTaylorZachary080016Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDTaylorZachary080016Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]18[Column]col03.01.2024";
                    this.mUIDTaylorZachary080016Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDTaylorZachary080016Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDTaylorZachary080016Cell;
            }
        }
        
        public DXCell UIDTaylorZachary080015Cell
        {
            get
            {
                if ((this.mUIDTaylorZachary080015Cell == null))
                {
                    this.mUIDTaylorZachary080015Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDTaylorZachary080015Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]6[Column]col04.01.2024";
                    this.mUIDTaylorZachary080015Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDTaylorZachary080015Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDTaylorZachary080015Cell;
            }
        }
        
        public DXCell UIDTaylorZachary080016Cell1
        {
            get
            {
                if ((this.mUIDTaylorZachary080016Cell1 == null))
                {
                    this.mUIDTaylorZachary080016Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIDTaylorZachary080016Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]18[Column]col05.01.2024";
                    this.mUIDTaylorZachary080016Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDTaylorZachary080016Cell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDTaylorZachary080016Cell1;
            }
        }
        
        public DXCell UIDTaylorZachary080015Cell1
        {
            get
            {
                if ((this.mUIDTaylorZachary080015Cell1 == null))
                {
                    this.mUIDTaylorZachary080015Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIDTaylorZachary080015Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]6[Column]col06.01.2024";
                    this.mUIDTaylorZachary080015Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDTaylorZachary080015Cell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDTaylorZachary080015Cell1;
            }
        }
        
        public DXCell UIDTaylorZachary080016Cell2
        {
            get
            {
                if ((this.mUIDTaylorZachary080016Cell2 == null))
                {
                    this.mUIDTaylorZachary080016Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIDTaylorZachary080016Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]18[Column]col07.01.2024";
                    this.mUIDTaylorZachary080016Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDTaylorZachary080016Cell2.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDTaylorZachary080016Cell2;
            }
        }
        
        public DXCell UINKnoxPolkJames220008Cell1
        {
            get
            {
                if ((this.mUINKnoxPolkJames220008Cell1 == null))
                {
                    this.mUINKnoxPolkJames220008Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUINKnoxPolkJames220008Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]7[Column]col31.12.2023";
                    this.mUINKnoxPolkJames220008Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUINKnoxPolkJames220008Cell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUINKnoxPolkJames220008Cell1;
            }
        }
        
        public DXCell UINHarrisonWilliamH220Cell
        {
            get
            {
                if ((this.mUINHarrisonWilliamH220Cell == null))
                {
                    this.mUINHarrisonWilliamH220Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUINHarrisonWilliamH220Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]7[Column]col04.03.2024";
                    this.mUINHarrisonWilliamH220Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUINHarrisonWilliamH220Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUINHarrisonWilliamH220Cell;
            }
        }
        
        public DXCell UIDBuchananJames080016Cell
        {
            get
            {
                if ((this.mUIDBuchananJames080016Cell == null))
                {
                    this.mUIDBuchananJames080016Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDBuchananJames080016Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]13[Column]col04.03.2024";
                    this.mUIDBuchananJames080016Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDBuchananJames080016Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDBuchananJames080016Cell;
            }
        }
        
        public DXCell UIDBuchananJames080016Cell1
        {
            get
            {
                if ((this.mUIDBuchananJames080016Cell1 == null))
                {
                    this.mUIDBuchananJames080016Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIDBuchananJames080016Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]18[Column]col05.03.2024";
                    this.mUIDBuchananJames080016Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDBuchananJames080016Cell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDBuchananJames080016Cell1;
            }
        }
        
        public DXCell UIBVJacksonAndrew22000Cell
        {
            get
            {
                if ((this.mUIBVJacksonAndrew22000Cell == null))
                {
                    this.mUIBVJacksonAndrew22000Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBVJacksonAndrew22000Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]7[Column]col06.03.2024";
                    this.mUIBVJacksonAndrew22000Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBVJacksonAndrew22000Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIBVJacksonAndrew22000Cell;
            }
        }
        
        public DXCell UIDJacksonAndrew080016Cell
        {
            get
            {
                if ((this.mUIDJacksonAndrew080016Cell == null))
                {
                    this.mUIDJacksonAndrew080016Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDJacksonAndrew080016Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]10[Column]col06.03.2024";
                    this.mUIDJacksonAndrew080016Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDJacksonAndrew080016Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDJacksonAndrew080016Cell;
            }
        }
        
        public DXCell UIDFillmoreMillard0800Cell
        {
            get
            {
                if ((this.mUIDFillmoreMillard0800Cell == null))
                {
                    this.mUIDFillmoreMillard0800Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDFillmoreMillard0800Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col08.03.2024";
                    this.mUIDFillmoreMillard0800Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDFillmoreMillard0800Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDFillmoreMillard0800Cell;
            }
        }
        
        public DXCell UIDFillmoreMillard0900Cell
        {
            get
            {
                if ((this.mUIDFillmoreMillard0900Cell == null))
                {
                    this.mUIDFillmoreMillard0900Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDFillmoreMillard0900Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col08.03.2024";
                    this.mUIDFillmoreMillard0900Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDFillmoreMillard0900Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDFillmoreMillard0900Cell;
            }
        }
        
        public DXCell UIDFillmoreMillard1000Cell
        {
            get
            {
                if ((this.mUIDFillmoreMillard1000Cell == null))
                {
                    this.mUIDFillmoreMillard1000Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDFillmoreMillard1000Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]2[Column]col08.03.2024";
                    this.mUIDFillmoreMillard1000Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDFillmoreMillard1000Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDFillmoreMillard1000Cell;
            }
        }
        
        public DXCell UIDFillmoreMillard1400Cell
        {
            get
            {
                if ((this.mUIDFillmoreMillard1400Cell == null))
                {
                    this.mUIDFillmoreMillard1400Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDFillmoreMillard1400Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]3[Column]col08.03.2024";
                    this.mUIDFillmoreMillard1400Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDFillmoreMillard1400Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDFillmoreMillard1400Cell;
            }
        }
        
        public DXCell UIDFillmoreMillard1200Cell
        {
            get
            {
                if ((this.mUIDFillmoreMillard1200Cell == null))
                {
                    this.mUIDFillmoreMillard1200Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDFillmoreMillard1200Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]4[Column]col08.03.2024";
                    this.mUIDFillmoreMillard1200Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDFillmoreMillard1200Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDFillmoreMillard1200Cell;
            }
        }
        
        public DXCell UIDJacksonAndrew080010Cell
        {
            get
            {
                if ((this.mUIDJacksonAndrew080010Cell == null))
                {
                    this.mUIDJacksonAndrew080010Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDJacksonAndrew080010Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]5[Column]col10.03.2024";
                    this.mUIDJacksonAndrew080010Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDJacksonAndrew080010Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDJacksonAndrew080010Cell;
            }
        }
        
        public DXCell UINHarrisonWilliamH220Cell1
        {
            get
            {
                if ((this.mUINHarrisonWilliamH220Cell1 == null))
                {
                    this.mUINHarrisonWilliamH220Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUINHarrisonWilliamH220Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]7[Column]col10.03.2024";
                    this.mUINHarrisonWilliamH220Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUINHarrisonWilliamH220Cell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUINHarrisonWilliamH220Cell1;
            }
        }
        
        public DXCell UIDJacksonAndrew100016Cell
        {
            get
            {
                if ((this.mUIDJacksonAndrew100016Cell == null))
                {
                    this.mUIDJacksonAndrew100016Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDJacksonAndrew100016Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]9[Column]col10.03.2024";
                    this.mUIDJacksonAndrew100016Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDJacksonAndrew100016Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDJacksonAndrew100016Cell;
            }
        }
        
        public DXCell UIWarningDubørjoværeleCell1
        {
            get
            {
                if ((this.mUIWarningDubørjoværeleCell1 == null))
                {
                    this.mUIWarningDubørjoværeleCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIWarningDubørjoværeleCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]11[Column]col10.03.2024";
                    this.mUIWarningDubørjoværeleCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIWarningDubørjoværeleCell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIWarningDubørjoværeleCell1;
            }
        }
        
        public DXCell UINHarrisonWilliamH220Cell2
        {
            get
            {
                if ((this.mUINHarrisonWilliamH220Cell2 == null))
                {
                    this.mUINHarrisonWilliamH220Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUINHarrisonWilliamH220Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]18[Column]col11.03.2024";
                    this.mUINHarrisonWilliamH220Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUINHarrisonWilliamH220Cell2.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUINHarrisonWilliamH220Cell2;
            }
        }
        
        public DXCell UIDBuchananJames080015Cell
        {
            get
            {
                if ((this.mUIDBuchananJames080015Cell == null))
                {
                    this.mUIDBuchananJames080015Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDBuchananJames080015Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]6[Column]col17.03.2024";
                    this.mUIDBuchananJames080015Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDBuchananJames080015Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDBuchananJames080015Cell;
            }
        }
        
        public DXCell UIBVJacksonAndrew22000Cell1
        {
            get
            {
                if ((this.mUIBVJacksonAndrew22000Cell1 == null))
                {
                    this.mUIBVJacksonAndrew22000Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIBVJacksonAndrew22000Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]7[Column]col17.03.2024";
                    this.mUIBVJacksonAndrew22000Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBVJacksonAndrew22000Cell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIBVJacksonAndrew22000Cell1;
            }
        }
        
        public DXCell UIDJacksonAndrew080016Cell1
        {
            get
            {
                if ((this.mUIDJacksonAndrew080016Cell1 == null))
                {
                    this.mUIDJacksonAndrew080016Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIDJacksonAndrew080016Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]13[Column]col17.03.2024";
                    this.mUIDJacksonAndrew080016Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDJacksonAndrew080016Cell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDJacksonAndrew080016Cell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIInformationOppgaventCell;
        
        private DXCell mUIInformationOppgaventCell1;
        
        private DXCell mUIInformationOppgaventCell2;
        
        private DXCell mUIInformationOppgaventCell3;
        
        private DXCell mUIInformationOppgaventCell4;
        
        private DXCell mUIInformationOppgaventCell5;
        
        private DXCell mUIInformationOppgaventCell6;
        
        private DXCell mUIInformationOppgaventCell7;
        
        private DXCell mUIInformationOppgaventCell8;
        
        private DXCell mUIInformationOppgaventCell9;
        
        private DXCell mUIInformationOppgaventCell10;
        
        private DXCell mUIInformationOppgaventCell11;
        
        private DXCell mUIInformationOppgaventCell12;
        
        private DXCell mUIInformationOppgaventCell13;
        
        private DXCell mUIInformationOppgaventCell14;
        
        private DXCell mUIInformationOppgaventCell15;
        
        private DXCell mUIInformationOppgaventCell16;
        
        private DXCell mUIInformationOppgaventCell17;
        
        private DXCell mUIInformationOppgaventCell18;
        
        private DXCell mUIInformationOppgaventCell19;
        
        private DXCell mUIInformationOppgaventCell20;
        
        private DXCell mUIInformationOppgaventCell21;
        
        private DXCell mUIInformationOppgaventCell22;
        
        private DXCell mUIInformationOppgaventCell23;
        
        private DXCell mUIInformationOppgaventCell24;
        
        private DXCell mUIInformationOppgaventCell25;
        
        private DXCell mUIInformationOppgaventCell26;
        
        private DXCell mUIInformationOppgaventCell27;
        
        private DXCell mUIInformationOppgaventCell28;
        
        private DXCell mUIInformationOppgaventCell29;
        
        private DXCell mUIInformationOppgaventCell30;
        
        private DXCell mUIInformationOppgaventCell31;
        
        private DXScrollBar mUIHCrkScrollBarScrollBarControl;
        
        private DXCell mUIXWarningDubørjoværelCell;
        
        private DXCell mUIItemCell;
        
        private DXCell mUIAJacksonAndrew150023Cell;
        
        private DXCell mUIItemCell1;
        
        private DXCell mUIItemCell2;
        
        private DXCell mUIItemCell3;
        
        private DXCell mUINKnoxPolkJames220008Cell;
        
        private DXCell mUIXCriticalOppgaveKL08Cell;
        
        private DXCell mUIItemCell4;
        
        private DXCell mUIWarningDubørjoværeleCell;
        
        private DXCell mUIDAdamsJohn08001000Cell;
        
        private DXCell mUIDAdamsJohn12001300Cell;
        
        private DXCell mUIDAdamsJohn13001500Cell;
        
        private DXCell mUIDAdamsJohn15001600Cell;
        
        private DXCell mUIDTaylorZachary080016Cell;
        
        private DXCell mUIDTaylorZachary080015Cell;
        
        private DXCell mUIDTaylorZachary080016Cell1;
        
        private DXCell mUIDTaylorZachary080015Cell1;
        
        private DXCell mUIDTaylorZachary080016Cell2;
        
        private DXCell mUINKnoxPolkJames220008Cell1;
        
        private DXCell mUINHarrisonWilliamH220Cell;
        
        private DXCell mUIDBuchananJames080016Cell;
        
        private DXCell mUIDBuchananJames080016Cell1;
        
        private DXCell mUIBVJacksonAndrew22000Cell;
        
        private DXCell mUIDJacksonAndrew080016Cell;
        
        private DXCell mUIDFillmoreMillard0800Cell;
        
        private DXCell mUIDFillmoreMillard0900Cell;
        
        private DXCell mUIDFillmoreMillard1000Cell;
        
        private DXCell mUIDFillmoreMillard1400Cell;
        
        private DXCell mUIDFillmoreMillard1200Cell;
        
        private DXCell mUIDJacksonAndrew080010Cell;
        
        private DXCell mUINHarrisonWilliamH220Cell1;
        
        private DXCell mUIDJacksonAndrew100016Cell;
        
        private DXCell mUIWarningDubørjoværeleCell1;
        
        private DXCell mUINHarrisonWilliamH220Cell2;
        
        private DXCell mUIDBuchananJames080015Cell;
        
        private DXCell mUIBVJacksonAndrew22000Cell1;
        
        private DXCell mUIDJacksonAndrew080016Cell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeFocusedManagCustom : DXTestControl
    {
        
        public UIEmployeeFocusedManagCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeFocusedManageView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeFocusedManageView";
            this.WindowTitles.Add("*Oppgavetildeling");
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIItemGridControl1Custom UIItemGridControl1Custom
        {
            get
            {
                if ((this.mUIItemGridControl1Custom == null))
                {
                    this.mUIItemGridControl1Custom = new UIItemGridControl1Custom(this);
                }
                return this.mUIItemGridControl1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIItemGridControl1Custom mUIItemGridControl1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemGridControl1Custom : DXTestControl
    {
        
        public UIItemGridControl1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "itemGridControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom2 UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom2(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom2 mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom2 : DXTestControl
    {
        
        public UIDdGridControlCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable2 UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable2(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable2 mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable2 : DXGrid
    {
        
        public UIGcDragDropGridTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UID08001600Cell
        {
            get
            {
                if ((this.mUID08001600Cell == null))
                {
                    this.mUID08001600Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUID08001600Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]11[Column]col01.01.2024";
                    this.mUID08001600Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID08001600Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUID08001600Cell;
            }
        }
        
        public DXScrollBar UIHCrkScrollBarScrollBarControl
        {
            get
            {
                if ((this.mUIHCrkScrollBarScrollBarControl == null))
                {
                    this.mUIHCrkScrollBarScrollBarControl = new DXScrollBar(this);
                    #region Search Criteria
                    this.mUIHCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridHCrkScrollBar";
                    this.mUIHCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.ClassName] = "HCrkScrollBar";
                    this.mUIHCrkScrollBarScrollBarControl.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIHCrkScrollBarScrollBarControl;
            }
        }
        
        public DXCell UID08001600xOVER080016Cell
        {
            get
            {
                if ((this.mUID08001600xOVER080016Cell == null))
                {
                    this.mUID08001600xOVER080016Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUID08001600xOVER080016Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]11[Column]col07.01.2024";
                    this.mUID08001600xOVER080016Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID08001600xOVER080016Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUID08001600xOVER080016Cell;
            }
        }
        
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]11[Column]col02.01.2024";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]11[Column]col03.01.2024";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXCell UID08001600Cell1
        {
            get
            {
                if ((this.mUID08001600Cell1 == null))
                {
                    this.mUID08001600Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUID08001600Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col02.01.2024";
                    this.mUID08001600Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID08001600Cell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUID08001600Cell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUID08001600Cell;
        
        private DXScrollBar mUIHCrkScrollBarScrollBarControl;
        
        private DXCell mUID08001600xOVER080016Cell;
        
        private DXCell mUIItemCell;
        
        private DXCell mUIItemCell1;
        
        private DXCell mUID08001600Cell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer2DockPanel : DXDockPanel
    {
        
        public UIPanelContainer2DockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPanelContainer1DockPanel UIPanelContainer1DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer1DockPanel == null))
                {
                    this.mUIPanelContainer1DockPanel = new UIPanelContainer1DockPanel(this);
                }
                return this.mUIPanelContainer1DockPanel;
            }
        }
        
        public UIPanelContainer3DockPanel UIPanelContainer3DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer3DockPanel == null))
                {
                    this.mUIPanelContainer3DockPanel = new UIPanelContainer3DockPanel(this);
                }
                return this.mUIPanelContainer3DockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelContainer1DockPanel mUIPanelContainer1DockPanel;
        
        private UIPanelContainer3DockPanel mUIPanelContainer3DockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer1DockPanel : DXDockPanel
    {
        
        public UIPanelContainer1DockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDpEmployeesDockPanel UIDpEmployeesDockPanel
        {
            get
            {
                if ((this.mUIDpEmployeesDockPanel == null))
                {
                    this.mUIDpEmployeesDockPanel = new UIDpEmployeesDockPanel(this);
                }
                return this.mUIDpEmployeesDockPanel;
            }
        }
        
        public UIDpRoleCodePatternsDockPanel UIDpRoleCodePatternsDockPanel
        {
            get
            {
                if ((this.mUIDpRoleCodePatternsDockPanel == null))
                {
                    this.mUIDpRoleCodePatternsDockPanel = new UIDpRoleCodePatternsDockPanel(this);
                }
                return this.mUIDpRoleCodePatternsDockPanel;
            }
        }
        
        public DXTestControl UILeftSeparator
        {
            get
            {
                if ((this.mUILeftSeparator == null))
                {
                    this.mUILeftSeparator = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILeftSeparator.SearchProperties[DXTestControl.PropertyNames.Name] = "Left";
                    this.mUILeftSeparator.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelResizeZone";
                    this.mUILeftSeparator.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUILeftSeparator;
            }
        }
        
        public UIDpRoleCodesDockPanel UIDpRoleCodesDockPanel
        {
            get
            {
                if ((this.mUIDpRoleCodesDockPanel == null))
                {
                    this.mUIDpRoleCodesDockPanel = new UIDpRoleCodesDockPanel(this);
                }
                return this.mUIDpRoleCodesDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpEmployeesDockPanel mUIDpEmployeesDockPanel;
        
        private UIDpRoleCodePatternsDockPanel mUIDpRoleCodePatternsDockPanel;
        
        private DXTestControl mUILeftSeparator;
        
        private UIDpRoleCodesDockPanel mUIDpRoleCodesDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpEmployeesDockPanel : DXDockPanel
    {
        
        public UIDpEmployeesDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer1Custom UIControlContainer1Custom
        {
            get
            {
                if ((this.mUIControlContainer1Custom == null))
                {
                    this.mUIControlContainer1Custom = new UIControlContainer1Custom(this);
                }
                return this.mUIControlContainer1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer1Custom mUIControlContainer1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer1Custom : DXTestControl
    {
        
        public UIControlContainer1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIEmployeeListViewCustom UIEmployeeListViewCustom
        {
            get
            {
                if ((this.mUIEmployeeListViewCustom == null))
                {
                    this.mUIEmployeeListViewCustom = new UIEmployeeListViewCustom(this);
                }
                return this.mUIEmployeeListViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeListViewCustom mUIEmployeeListViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeListViewCustom : DXTestControl
    {
        
        public UIEmployeeListViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeListView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeListView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcEmployeesTable UIGcEmployeesTable
        {
            get
            {
                if ((this.mUIGcEmployeesTable == null))
                {
                    this.mUIGcEmployeesTable = new UIGcEmployeesTable(this);
                }
                return this.mUIGcEmployeesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcEmployeesTable mUIGcEmployeesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcEmployeesTable : DXGrid
    {
        
        public UIGcEmployeesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIMonroeJamesCell
        {
            get
            {
                if ((this.mUIMonroeJamesCell == null))
                {
                    this.mUIMonroeJamesCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIMonroeJamesCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]9[Column]colDisplayName";
                    this.mUIMonroeJamesCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIMonroeJamesCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIMonroeJamesCell;
            }
        }
        
        public DXCell UIAdamsJohnCell
        {
            get
            {
                if ((this.mUIAdamsJohnCell == null))
                {
                    this.mUIAdamsJohnCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIAdamsJohnCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]0[Column]colDisplayName";
                    this.mUIAdamsJohnCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIAdamsJohnCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIAdamsJohnCell;
            }
        }
        
        public DXCell UIKnoxPolkJamesCell
        {
            get
            {
                if ((this.mUIKnoxPolkJamesCell == null))
                {
                    this.mUIKnoxPolkJamesCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIKnoxPolkJamesCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]7[Column]colDisplayName";
                    this.mUIKnoxPolkJamesCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIKnoxPolkJamesCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIKnoxPolkJamesCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIMonroeJamesCell;
        
        private DXCell mUIAdamsJohnCell;
        
        private DXCell mUIKnoxPolkJamesCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpRoleCodePatternsDockPanel : DXDockPanel
    {
        
        public UIDpRoleCodePatternsDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpRoleCodePatterns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDockPanel3_ContainerCustom UIDockPanel3_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel3_ContainerCustom == null))
                {
                    this.mUIDockPanel3_ContainerCustom = new UIDockPanel3_ContainerCustom(this);
                }
                return this.mUIDockPanel3_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel3_ContainerCustom mUIDockPanel3_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel3_ContainerCustom : DXTestControl
    {
        
        public UIDockPanel3_ContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel3_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleCodePatternListVCustom UIRoleCodePatternListVCustom
        {
            get
            {
                if ((this.mUIRoleCodePatternListVCustom == null))
                {
                    this.mUIRoleCodePatternListVCustom = new UIRoleCodePatternListVCustom(this);
                }
                return this.mUIRoleCodePatternListVCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleCodePatternListVCustom mUIRoleCodePatternListVCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleCodePatternListVCustom : DXTestControl
    {
        
        public UIRoleCodePatternListVCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleCodePatternListView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleCodePatternListView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcRoleCodePatternsTable UIGcRoleCodePatternsTable
        {
            get
            {
                if ((this.mUIGcRoleCodePatternsTable == null))
                {
                    this.mUIGcRoleCodePatternsTable = new UIGcRoleCodePatternsTable(this);
                }
                return this.mUIGcRoleCodePatternsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRoleCodePatternsTable mUIGcRoleCodePatternsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRoleCodePatternsTable : DXGrid
    {
        
        public UIGcRoleCodePatternsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodePatterns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIOVER4510Cell
        {
            get
            {
                if ((this.mUIOVER4510Cell == null))
                {
                    this.mUIOVER4510Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIOVER4510Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodePatternsGridControlCell[View]gvRoleCodePatterns[Row]3[Column]colName";
                    this.mUIOVER4510Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIOVER4510Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIOVER4510Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIOVER4510Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpRoleCodesDockPanel : DXDockPanel
    {
        
        public UIDpRoleCodesDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpRoleCodes";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDockPanel2_ContainerCustom UIDockPanel2_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel2_ContainerCustom == null))
                {
                    this.mUIDockPanel2_ContainerCustom = new UIDockPanel2_ContainerCustom(this);
                }
                return this.mUIDockPanel2_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel2_ContainerCustom mUIDockPanel2_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel2_ContainerCustom : DXTestControl
    {
        
        public UIDockPanel2_ContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel2_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleCodeListViewCustom UIRoleCodeListViewCustom
        {
            get
            {
                if ((this.mUIRoleCodeListViewCustom == null))
                {
                    this.mUIRoleCodeListViewCustom = new UIRoleCodeListViewCustom(this);
                }
                return this.mUIRoleCodeListViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleCodeListViewCustom mUIRoleCodeListViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleCodeListViewCustom : DXTestControl
    {
        
        public UIRoleCodeListViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleCodeListView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleCodeListView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcRoleCodesTable UIGcRoleCodesTable
        {
            get
            {
                if ((this.mUIGcRoleCodesTable == null))
                {
                    this.mUIGcRoleCodesTable = new UIGcRoleCodesTable(this);
                }
                return this.mUIGcRoleCodesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRoleCodesTable mUIGcRoleCodesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRoleCodesTable : DXGrid
    {
        
        public UIGcRoleCodesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodes";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIKUNMANDAGCell
        {
            get
            {
                if ((this.mUIKUNMANDAGCell == null))
                {
                    this.mUIKUNMANDAGCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIKUNMANDAGCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodesGridControlCell[View]gvRoleCodes[Row]3[Column]colName";
                    this.mUIKUNMANDAGCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIKUNMANDAGCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIKUNMANDAGCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIKUNMANDAGCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer3DockPanel : DXDockPanel
    {
        
        public UIPanelContainer3DockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDSpecificationsDockPanel UIDSpecificationsDockPanel
        {
            get
            {
                if ((this.mUIDSpecificationsDockPanel == null))
                {
                    this.mUIDSpecificationsDockPanel = new UIDSpecificationsDockPanel(this);
                }
                return this.mUIDSpecificationsDockPanel;
            }
        }
        
        public UIDpAssignmentDockPanel UIDpAssignmentDockPanel
        {
            get
            {
                if ((this.mUIDpAssignmentDockPanel == null))
                {
                    this.mUIDpAssignmentDockPanel = new UIDpAssignmentDockPanel(this);
                }
                return this.mUIDpAssignmentDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDSpecificationsDockPanel mUIDSpecificationsDockPanel;
        
        private UIDpAssignmentDockPanel mUIDpAssignmentDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDSpecificationsDockPanel : DXDockPanel
    {
        
        public UIDSpecificationsDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dSpecifications";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer2Custom UIControlContainer2Custom
        {
            get
            {
                if ((this.mUIControlContainer2Custom == null))
                {
                    this.mUIControlContainer2Custom = new UIControlContainer2Custom(this);
                }
                return this.mUIControlContainer2Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer2Custom mUIControlContainer2Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer2Custom : DXTestControl
    {
        
        public UIControlContainer2Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISpecificationPanelViCustom UISpecificationPanelViCustom
        {
            get
            {
                if ((this.mUISpecificationPanelViCustom == null))
                {
                    this.mUISpecificationPanelViCustom = new UISpecificationPanelViCustom(this);
                }
                return this.mUISpecificationPanelViCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISpecificationPanelViCustom mUISpecificationPanelViCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationPanelViCustom : DXTestControl
    {
        
        public UISpecificationPanelViCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationPanelView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationPanelView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIFlowControlViewHost1Custom UIFlowControlViewHost1Custom
        {
            get
            {
                if ((this.mUIFlowControlViewHost1Custom == null))
                {
                    this.mUIFlowControlViewHost1Custom = new UIFlowControlViewHost1Custom(this);
                }
                return this.mUIFlowControlViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIFlowControlViewHost1Custom mUIFlowControlViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFlowControlViewHost1Custom : DXTestControl
    {
        
        public UIFlowControlViewHost1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "flowControlViewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FlowControlViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISpecificationSectionCustom UISpecificationSectionCustom
        {
            get
            {
                if ((this.mUISpecificationSectionCustom == null))
                {
                    this.mUISpecificationSectionCustom = new UISpecificationSectionCustom(this);
                }
                return this.mUISpecificationSectionCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISpecificationSectionCustom mUISpecificationSectionCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationSectionCustom : DXTestControl
    {
        
        public UISpecificationSectionCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationSectionView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationSectionView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhDetailsCustom UIVhDetailsCustom
        {
            get
            {
                if ((this.mUIVhDetailsCustom == null))
                {
                    this.mUIVhDetailsCustom = new UIVhDetailsCustom(this);
                }
                return this.mUIVhDetailsCustom;
            }
        }
        
        public UIPcHeaderClient UIPcHeaderClient
        {
            get
            {
                if ((this.mUIPcHeaderClient == null))
                {
                    this.mUIPcHeaderClient = new UIPcHeaderClient(this);
                }
                return this.mUIPcHeaderClient;
            }
        }
        #endregion
        
        #region Fields
        private UIVhDetailsCustom mUIVhDetailsCustom;
        
        private UIPcHeaderClient mUIPcHeaderClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhDetailsCustom : DXTestControl
    {
        
        public UIVhDetailsCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FlowControlViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISpecificationListVieCustom UISpecificationListVieCustom
        {
            get
            {
                if ((this.mUISpecificationListVieCustom == null))
                {
                    this.mUISpecificationListVieCustom = new UISpecificationListVieCustom(this);
                }
                return this.mUISpecificationListVieCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISpecificationListVieCustom mUISpecificationListVieCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationListVieCustom : DXTestControl
    {
        
        public UISpecificationListVieCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationListView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationListView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIFcListCustom UIFcListCustom
        {
            get
            {
                if ((this.mUIFcListCustom == null))
                {
                    this.mUIFcListCustom = new UIFcListCustom(this);
                }
                return this.mUIFcListCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIFcListCustom mUIFcListCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFcListCustom : DXTestControl
    {
        
        public UIFcListCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "fcList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FlowControlViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISpecificationItemVieCustom UISpecificationItemVieCustom
        {
            get
            {
                if ((this.mUISpecificationItemVieCustom == null))
                {
                    this.mUISpecificationItemVieCustom = new UISpecificationItemVieCustom(this);
                }
                return this.mUISpecificationItemVieCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISpecificationItemVieCustom mUISpecificationItemVieCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationItemVieCustom : DXTestControl
    {
        
        public UISpecificationItemVieCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationItemView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationItemView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblContentLabel
        {
            get
            {
                if ((this.mUILblContentLabel == null))
                {
                    this.mUILblContentLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblContent";
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblContentLabel.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUILblContentLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblContentLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcHeaderClient : DXTestControl
    {
        
        public UIPcHeaderClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcHeader";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblContentLabel
        {
            get
            {
                if ((this.mUILblContentLabel == null))
                {
                    this.mUILblContentLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblContent";
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblContentLabel.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUILblContentLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblContentLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpAssignmentDockPanel : DXDockPanel
    {
        
        public UIDpAssignmentDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpAssignment";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer5Custom UIControlContainer5Custom
        {
            get
            {
                if ((this.mUIControlContainer5Custom == null))
                {
                    this.mUIControlContainer5Custom = new UIControlContainer5Custom(this);
                }
                return this.mUIControlContainer5Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer5Custom mUIControlContainer5Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer5Custom : DXTestControl
    {
        
        public UIControlContainer5Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer5";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIAssignmentPropertiesCustom UIAssignmentPropertiesCustom
        {
            get
            {
                if ((this.mUIAssignmentPropertiesCustom == null))
                {
                    this.mUIAssignmentPropertiesCustom = new UIAssignmentPropertiesCustom(this);
                }
                return this.mUIAssignmentPropertiesCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIAssignmentPropertiesCustom mUIAssignmentPropertiesCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAssignmentPropertiesCustom : DXTestControl
    {
        
        public UIAssignmentPropertiesCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "AssignmentPropertiesView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AssignmentPropertiesView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhContentCustom2 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom2(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhContentCustom2 mUIVhContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom2 : DXTestControl
    {
        
        public UIVhContentCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient2 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient2(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient2 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient2 : DXTestControl
    {
        
        public UIPcViewClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UICreateAssignmentsVieCustom UICreateAssignmentsVieCustom
        {
            get
            {
                if ((this.mUICreateAssignmentsVieCustom == null))
                {
                    this.mUICreateAssignmentsVieCustom = new UICreateAssignmentsVieCustom(this);
                }
                return this.mUICreateAssignmentsVieCustom;
            }
        }
        #endregion
        
        #region Fields
        private UICreateAssignmentsVieCustom mUICreateAssignmentsVieCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICreateAssignmentsVieCustom : DXTestControl
    {
        
        public UICreateAssignmentsVieCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CreateAssignmentsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CreateAssignmentsView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcAssignmentPeriodsTable UIGcAssignmentPeriodsTable
        {
            get
            {
                if ((this.mUIGcAssignmentPeriodsTable == null))
                {
                    this.mUIGcAssignmentPeriodsTable = new UIGcAssignmentPeriodsTable(this);
                }
                return this.mUIGcAssignmentPeriodsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcAssignmentPeriodsTable mUIGcAssignmentPeriodsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcAssignmentPeriodsTable : DXGrid
    {
        
        public UIGcAssignmentPeriodsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAssignmentPeriods";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAssignmentPeriodsGridControlCell[View]gvAssignmentPeriods[Row]2[Column]colAssig" +
                        "nCommand";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpSummaryDockPanel : DXDockPanel
    {
        
        public UIDpSummaryDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpSummary";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDockPanel1_ContainerCustom UIDockPanel1_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel1_ContainerCustom == null))
                {
                    this.mUIDockPanel1_ContainerCustom = new UIDockPanel1_ContainerCustom(this);
                }
                return this.mUIDockPanel1_ContainerCustom;
            }
        }
        
        public DXTestControl UITopSeparator
        {
            get
            {
                if ((this.mUITopSeparator == null))
                {
                    this.mUITopSeparator = new DXTestControl(this);
                    #region Search Criteria
                    this.mUITopSeparator.SearchProperties[DXTestControl.PropertyNames.Name] = "Top";
                    this.mUITopSeparator.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelResizeZone";
                    this.mUITopSeparator.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUITopSeparator;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel1_ContainerCustom mUIDockPanel1_ContainerCustom;
        
        private DXTestControl mUITopSeparator;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel1_ContainerCustom : DXTestControl
    {
        
        public UIDockPanel1_ContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISumDemandHostViewCustom UISumDemandHostViewCustom
        {
            get
            {
                if ((this.mUISumDemandHostViewCustom == null))
                {
                    this.mUISumDemandHostViewCustom = new UISumDemandHostViewCustom(this);
                }
                return this.mUISumDemandHostViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISumDemandHostViewCustom mUISumDemandHostViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISumDemandHostViewCustom : DXTestControl
    {
        
        public UISumDemandHostViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SumDemandHostView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SumDemandHostView";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIViewHost1Custom UIViewHost1Custom
        {
            get
            {
                if ((this.mUIViewHost1Custom == null))
                {
                    this.mUIViewHost1Custom = new UIViewHost1Custom(this);
                }
                return this.mUIViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHost1Custom mUIViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHost1Custom : DXTestControl
    {
        
        public UIViewHost1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient3 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient3(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient3 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient3 : DXTestControl
    {
        
        public UIPcViewClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcSumDemandTable UIGcSumDemandTable
        {
            get
            {
                if ((this.mUIGcSumDemandTable == null))
                {
                    this.mUIGcSumDemandTable = new UIGcSumDemandTable(this);
                }
                return this.mUIGcSumDemandTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcSumDemandTable mUIGcSumDemandTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcSumDemandTable : DXGrid
    {
        
        public UIGcSumDemandTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemand";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem4040Cell
        {
            get
            {
                if ((this.mUIItem4040Cell == null))
                {
                    this.mUIItem4040Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]01.01.2024 mandag";
                    this.mUIItem4040Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell;
            }
        }
        
        public DXCell UIItem4040Cell1
        {
            get
            {
                if ((this.mUIItem4040Cell1 == null))
                {
                    this.mUIItem4040Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]02.01.2024 tirsdag";
                    this.mUIItem4040Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell1;
            }
        }
        
        public DXCell UIItem4040Cell2
        {
            get
            {
                if ((this.mUIItem4040Cell2 == null))
                {
                    this.mUIItem4040Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]03.01.2024 onsdag";
                    this.mUIItem4040Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell2.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell2;
            }
        }
        
        public DXCell UIItem4040Cell3
        {
            get
            {
                if ((this.mUIItem4040Cell3 == null))
                {
                    this.mUIItem4040Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]04.01.2024 torsdag";
                    this.mUIItem4040Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell3.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell3;
            }
        }
        
        public DXCell UIItem4040Cell4
        {
            get
            {
                if ((this.mUIItem4040Cell4 == null))
                {
                    this.mUIItem4040Cell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]05.01.2024 fredag";
                    this.mUIItem4040Cell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell4.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell4;
            }
        }
        
        public DXCell UIItem4040Cell5
        {
            get
            {
                if ((this.mUIItem4040Cell5 == null))
                {
                    this.mUIItem4040Cell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]06.01.2024 lørdag";
                    this.mUIItem4040Cell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell5.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell5;
            }
        }
        
        public DXCell UIItem4040Cell6
        {
            get
            {
                if ((this.mUIItem4040Cell6 == null))
                {
                    this.mUIItem4040Cell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]07.01.2024 søndag";
                    this.mUIItem4040Cell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell6.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell6;
            }
        }
        
        public DXCell UIItem4040Cell7
        {
            get
            {
                if ((this.mUIItem4040Cell7 == null))
                {
                    this.mUIItem4040Cell7 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]08.01.2024 mandag";
                    this.mUIItem4040Cell7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell7.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell7;
            }
        }
        
        public DXCell UIItem4040Cell8
        {
            get
            {
                if ((this.mUIItem4040Cell8 == null))
                {
                    this.mUIItem4040Cell8 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell8.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]09.01.2024 tirsdag";
                    this.mUIItem4040Cell8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell8.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell8;
            }
        }
        
        public DXCell UIItem4040Cell9
        {
            get
            {
                if ((this.mUIItem4040Cell9 == null))
                {
                    this.mUIItem4040Cell9 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell9.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]10.01.2024 onsdag";
                    this.mUIItem4040Cell9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell9.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell9;
            }
        }
        
        public DXCell UIItem4040Cell10
        {
            get
            {
                if ((this.mUIItem4040Cell10 == null))
                {
                    this.mUIItem4040Cell10 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell10.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]11.01.2024 torsdag";
                    this.mUIItem4040Cell10.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell10.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell10;
            }
        }
        
        public DXCell UIItem4040Cell11
        {
            get
            {
                if ((this.mUIItem4040Cell11 == null))
                {
                    this.mUIItem4040Cell11 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell11.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]12.01.2024 fredag";
                    this.mUIItem4040Cell11.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell11.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell11;
            }
        }
        
        public DXCell UIItem4040Cell12
        {
            get
            {
                if ((this.mUIItem4040Cell12 == null))
                {
                    this.mUIItem4040Cell12 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell12.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]13.01.2024 lørdag";
                    this.mUIItem4040Cell12.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell12.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell12;
            }
        }
        
        public DXCell UIItem4040Cell13
        {
            get
            {
                if ((this.mUIItem4040Cell13 == null))
                {
                    this.mUIItem4040Cell13 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell13.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]14.01.2024 søndag";
                    this.mUIItem4040Cell13.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell13.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell13;
            }
        }
        
        public DXCell UIItem4040Cell14
        {
            get
            {
                if ((this.mUIItem4040Cell14 == null))
                {
                    this.mUIItem4040Cell14 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell14.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]15.01.2024 mandag";
                    this.mUIItem4040Cell14.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell14.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell14;
            }
        }
        
        public DXCell UIItem4040Cell15
        {
            get
            {
                if ((this.mUIItem4040Cell15 == null))
                {
                    this.mUIItem4040Cell15 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell15.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]16.01.2024 tirsdag";
                    this.mUIItem4040Cell15.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell15.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell15;
            }
        }
        
        public DXCell UIItem4040Cell16
        {
            get
            {
                if ((this.mUIItem4040Cell16 == null))
                {
                    this.mUIItem4040Cell16 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell16.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]17.01.2024 onsdag";
                    this.mUIItem4040Cell16.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell16.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell16;
            }
        }
        
        public DXCell UIItem4040Cell17
        {
            get
            {
                if ((this.mUIItem4040Cell17 == null))
                {
                    this.mUIItem4040Cell17 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell17.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]18.01.2024 torsdag";
                    this.mUIItem4040Cell17.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell17.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell17;
            }
        }
        
        public DXCell UIItem4040Cell18
        {
            get
            {
                if ((this.mUIItem4040Cell18 == null))
                {
                    this.mUIItem4040Cell18 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell18.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]19.01.2024 fredag";
                    this.mUIItem4040Cell18.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell18.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell18;
            }
        }
        
        public DXCell UIItem4040Cell19
        {
            get
            {
                if ((this.mUIItem4040Cell19 == null))
                {
                    this.mUIItem4040Cell19 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell19.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]20.01.2024 lørdag";
                    this.mUIItem4040Cell19.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell19.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell19;
            }
        }
        
        public DXCell UIItem4040Cell20
        {
            get
            {
                if ((this.mUIItem4040Cell20 == null))
                {
                    this.mUIItem4040Cell20 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell20.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]21.01.2024 søndag";
                    this.mUIItem4040Cell20.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell20.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell20;
            }
        }
        
        public DXCell UIItem4040Cell21
        {
            get
            {
                if ((this.mUIItem4040Cell21 == null))
                {
                    this.mUIItem4040Cell21 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell21.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]22.01.2024 mandag";
                    this.mUIItem4040Cell21.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell21.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell21;
            }
        }
        
        public DXCell UIItem4040Cell22
        {
            get
            {
                if ((this.mUIItem4040Cell22 == null))
                {
                    this.mUIItem4040Cell22 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell22.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]23.01.2024 tirsdag";
                    this.mUIItem4040Cell22.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell22.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell22;
            }
        }
        
        public DXCell UIItem4040Cell23
        {
            get
            {
                if ((this.mUIItem4040Cell23 == null))
                {
                    this.mUIItem4040Cell23 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell23.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]24.01.2024 onsdag";
                    this.mUIItem4040Cell23.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell23.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell23;
            }
        }
        
        public DXCell UIItem4040Cell24
        {
            get
            {
                if ((this.mUIItem4040Cell24 == null))
                {
                    this.mUIItem4040Cell24 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell24.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]25.01.2024 torsdag";
                    this.mUIItem4040Cell24.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell24.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell24;
            }
        }
        
        public DXCell UIItem4040Cell25
        {
            get
            {
                if ((this.mUIItem4040Cell25 == null))
                {
                    this.mUIItem4040Cell25 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell25.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]26.01.2024 fredag";
                    this.mUIItem4040Cell25.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell25.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell25;
            }
        }
        
        public DXCell UIItem4040Cell26
        {
            get
            {
                if ((this.mUIItem4040Cell26 == null))
                {
                    this.mUIItem4040Cell26 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell26.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]27.01.2024 lørdag";
                    this.mUIItem4040Cell26.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell26.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell26;
            }
        }
        
        public DXCell UIItem4040Cell27
        {
            get
            {
                if ((this.mUIItem4040Cell27 == null))
                {
                    this.mUIItem4040Cell27 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell27.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]28.01.2024 søndag";
                    this.mUIItem4040Cell27.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell27.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell27;
            }
        }
        
        public DXColumnHeader UIItem02012024tirsdagColumnHeader
        {
            get
            {
                if ((this.mUIItem02012024tirsdagColumnHeader == null))
                {
                    this.mUIItem02012024tirsdagColumnHeader = new DXColumnHeader(this);
                    #region Search Criteria
                    this.mUIItem02012024tirsdagColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlColumnHeader[View]gvSumDemand[Column]02.01.2024 tirsdag";
                    this.mUIItem02012024tirsdagColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
                    this.mUIItem02012024tirsdagColumnHeader.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem02012024tirsdagColumnHeader;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem4040Cell;
        
        private DXCell mUIItem4040Cell1;
        
        private DXCell mUIItem4040Cell2;
        
        private DXCell mUIItem4040Cell3;
        
        private DXCell mUIItem4040Cell4;
        
        private DXCell mUIItem4040Cell5;
        
        private DXCell mUIItem4040Cell6;
        
        private DXCell mUIItem4040Cell7;
        
        private DXCell mUIItem4040Cell8;
        
        private DXCell mUIItem4040Cell9;
        
        private DXCell mUIItem4040Cell10;
        
        private DXCell mUIItem4040Cell11;
        
        private DXCell mUIItem4040Cell12;
        
        private DXCell mUIItem4040Cell13;
        
        private DXCell mUIItem4040Cell14;
        
        private DXCell mUIItem4040Cell15;
        
        private DXCell mUIItem4040Cell16;
        
        private DXCell mUIItem4040Cell17;
        
        private DXCell mUIItem4040Cell18;
        
        private DXCell mUIItem4040Cell19;
        
        private DXCell mUIItem4040Cell20;
        
        private DXCell mUIItem4040Cell21;
        
        private DXCell mUIItem4040Cell22;
        
        private DXCell mUIItem4040Cell23;
        
        private DXCell mUIItem4040Cell24;
        
        private DXCell mUIItem4040Cell25;
        
        private DXCell mUIItem4040Cell26;
        
        private DXCell mUIItem4040Cell27;
        
        private DXColumnHeader mUIItem02012024tirsdagColumnHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcContentClient : DXTestControl
    {
        
        public UIGcContentClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDetailsClient UIGcDetailsClient
        {
            get
            {
                if ((this.mUIGcDetailsClient == null))
                {
                    this.mUIGcDetailsClient = new UIGcDetailsClient(this);
                }
                return this.mUIGcDetailsClient;
            }
        }
        
        public DXButton UILeggtilButton
        {
            get
            {
                if ((this.mUILeggtilButton == null))
                {
                    this.mUILeggtilButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILeggtilButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAddRole";
                    this.mUILeggtilButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUILeggtilButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILeggtilButton;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDetailsClient mUIGcDetailsClient;
        
        private DXButton mUILeggtilButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDetailsClient : DXTestControl
    {
        
        public UIGcDetailsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhDetailsCustom1 UIVhDetailsCustom
        {
            get
            {
                if ((this.mUIVhDetailsCustom == null))
                {
                    this.mUIVhDetailsCustom = new UIVhDetailsCustom1(this);
                }
                return this.mUIVhDetailsCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhDetailsCustom1 mUIVhDetailsCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhDetailsCustom1 : DXTestControl
    {
        
        public UIVhDetailsCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient4 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient4(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient4 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient4 : DXTestControl
    {
        
        public UIPcViewClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleDetailsViewCustom UIRoleDetailsViewCustom
        {
            get
            {
                if ((this.mUIRoleDetailsViewCustom == null))
                {
                    this.mUIRoleDetailsViewCustom = new UIRoleDetailsViewCustom(this);
                }
                return this.mUIRoleDetailsViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleDetailsViewCustom mUIRoleDetailsViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleDetailsViewCustom : DXTestControl
    {
        
        public UIRoleDetailsViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleDetailsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleDetailsView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client mUIPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControl1Client : DXTestControl
    {
        
        public UIPanelControl1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UITabControlViewHost1TabList UITabControlViewHost1TabList
        {
            get
            {
                if ((this.mUITabControlViewHost1TabList == null))
                {
                    this.mUITabControlViewHost1TabList = new UITabControlViewHost1TabList(this);
                }
                return this.mUITabControlViewHost1TabList;
            }
        }
        
        public DXTextEdit UITxtCommentEdit
        {
            get
            {
                if ((this.mUITxtCommentEdit == null))
                {
                    this.mUITxtCommentEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITxtCommentEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtComment";
                    this.mUITxtCommentEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
                    this.mUITxtCommentEdit.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUITxtCommentEdit;
            }
        }
        
        public DXTextEdit UISteToTimeEdit
        {
            get
            {
                if ((this.mUISteToTimeEdit == null))
                {
                    this.mUISteToTimeEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISteToTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "steToTime";
                    this.mUISteToTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartTimeEdit";
                    this.mUISteToTimeEdit.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUISteToTimeEdit;
            }
        }
        
        public DXTextEdit UISteFromTimeEdit
        {
            get
            {
                if ((this.mUISteFromTimeEdit == null))
                {
                    this.mUISteFromTimeEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISteFromTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "steFromTime";
                    this.mUISteFromTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartTimeEdit";
                    this.mUISteFromTimeEdit.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUISteFromTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private UITabControlViewHost1TabList mUITabControlViewHost1TabList;
        
        private DXTextEdit mUITxtCommentEdit;
        
        private DXTextEdit mUISteToTimeEdit;
        
        private DXTextEdit mUISteFromTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITabControlViewHost1TabList : DXTestControl
    {
        
        public UITabControlViewHost1TabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TabControlViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIViewTabPageClient UIViewTabPageClient
        {
            get
            {
                if ((this.mUIViewTabPageClient == null))
                {
                    this.mUIViewTabPageClient = new UIViewTabPageClient(this);
                }
                return this.mUIViewTabPageClient;
            }
        }
        
        public UIViewTabPageClient1 UIViewTabPageClient1
        {
            get
            {
                if ((this.mUIViewTabPageClient1 == null))
                {
                    this.mUIViewTabPageClient1 = new UIViewTabPageClient1(this);
                }
                return this.mUIViewTabPageClient1;
            }
        }
        #endregion
        
        #region Fields
        private UIViewTabPageClient mUIViewTabPageClient;
        
        private UIViewTabPageClient1 mUIViewTabPageClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewTabPageClient : DXTestControl
    {
        
        public UIViewTabPageClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1ViewTabPage[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewTabPage";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIHostedCompetenceCompCustom UIHostedCompetenceCompCustom
        {
            get
            {
                if ((this.mUIHostedCompetenceCompCustom == null))
                {
                    this.mUIHostedCompetenceCompCustom = new UIHostedCompetenceCompCustom(this);
                }
                return this.mUIHostedCompetenceCompCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIHostedCompetenceCompCustom mUIHostedCompetenceCompCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIHostedCompetenceCompCustom : DXTestControl
    {
        
        public UIHostedCompetenceCompCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "HostedCompetenceComparisonView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "HostedCompetenceComparisonView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhCompetenceCustom UIVhCompetenceCustom
        {
            get
            {
                if ((this.mUIVhCompetenceCustom == null))
                {
                    this.mUIVhCompetenceCustom = new UIVhCompetenceCustom(this);
                }
                return this.mUIVhCompetenceCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhCompetenceCustom mUIVhCompetenceCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhCompetenceCustom : DXTestControl
    {
        
        public UIVhCompetenceCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhCompetence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient5 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient5(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient5 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient5 : DXTestControl
    {
        
        public UIPcViewClient5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UICompetenceComparisonCustom UICompetenceComparisonCustom
        {
            get
            {
                if ((this.mUICompetenceComparisonCustom == null))
                {
                    this.mUICompetenceComparisonCustom = new UICompetenceComparisonCustom(this);
                }
                return this.mUICompetenceComparisonCustom;
            }
        }
        #endregion
        
        #region Fields
        private UICompetenceComparisonCustom mUICompetenceComparisonCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICompetenceComparisonCustom : DXTestControl
    {
        
        public UICompetenceComparisonCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CompetenceComparisonView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CompetenceComparisonView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcCompetenceComparisTable UIGcCompetenceComparisTable
        {
            get
            {
                if ((this.mUIGcCompetenceComparisTable == null))
                {
                    this.mUIGcCompetenceComparisTable = new UIGcCompetenceComparisTable(this);
                }
                return this.mUIGcCompetenceComparisTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcCompetenceComparisTable mUIGcCompetenceComparisTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcCompetenceComparisTable : DXGrid
    {
        
        public UIGcCompetenceComparisTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcCompetenceComparison";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UISPESLEGSpesialistlegCell
        {
            get
            {
                if ((this.mUISPESLEGSpesialistlegCell == null))
                {
                    this.mUISPESLEGSpesialistlegCell = new DXCell(this);
                    #region Search Criteria
                    this.mUISPESLEGSpesialistlegCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcCompetenceComparisonGridControlCell[View]gvCompetenceComparison[Row]0[Column]co" +
                        "lCompetenceName";
                    this.mUISPESLEGSpesialistlegCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUISPESLEGSpesialistlegCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUISPESLEGSpesialistlegCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUISPESLEGSpesialistlegCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewTabPageClient1 : DXTestControl
    {
        
        public UIViewTabPageClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1ViewTabPage[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewTabPage";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleAccountingViewCustom UIRoleAccountingViewCustom
        {
            get
            {
                if ((this.mUIRoleAccountingViewCustom == null))
                {
                    this.mUIRoleAccountingViewCustom = new UIRoleAccountingViewCustom(this);
                }
                return this.mUIRoleAccountingViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleAccountingViewCustom mUIRoleAccountingViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleAccountingViewCustom : DXTestControl
    {
        
        public UIRoleAccountingViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAccountingView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleAccountingView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILeCostPlaceLookUpEdit UILeCostPlaceLookUpEdit
        {
            get
            {
                if ((this.mUILeCostPlaceLookUpEdit == null))
                {
                    this.mUILeCostPlaceLookUpEdit = new UILeCostPlaceLookUpEdit(this);
                }
                return this.mUILeCostPlaceLookUpEdit;
            }
        }
        
        public UILeProjectLookUpEdit UILeProjectLookUpEdit
        {
            get
            {
                if ((this.mUILeProjectLookUpEdit == null))
                {
                    this.mUILeProjectLookUpEdit = new UILeProjectLookUpEdit(this);
                }
                return this.mUILeProjectLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UILeCostPlaceLookUpEdit mUILeCostPlaceLookUpEdit;
        
        private UILeProjectLookUpEdit mUILeProjectLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILeCostPlaceLookUpEdit : DXLookUpEdit
    {
        
        public UILeCostPlaceLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "leCostPlace";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchLookUpEdit";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPopupSearchLookUpEdiWindow UIPopupSearchLookUpEdiWindow
        {
            get
            {
                if ((this.mUIPopupSearchLookUpEdiWindow == null))
                {
                    this.mUIPopupSearchLookUpEdiWindow = new UIPopupSearchLookUpEdiWindow(this);
                }
                return this.mUIPopupSearchLookUpEdiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupSearchLookUpEdiWindow mUIPopupSearchLookUpEdiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupSearchLookUpEdiWindow : DXWindow
    {
        
        public UIPopupSearchLookUpEdiWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "leCostPlacePopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupSearchLookUpEditForm";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISearchEditLookUpPopuCustom UISearchEditLookUpPopuCustom
        {
            get
            {
                if ((this.mUISearchEditLookUpPopuCustom == null))
                {
                    this.mUISearchEditLookUpPopuCustom = new UISearchEditLookUpPopuCustom(this);
                }
                return this.mUISearchEditLookUpPopuCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISearchEditLookUpPopuCustom mUISearchEditLookUpPopuCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISearchEditLookUpPopuCustom : DXTestControl
    {
        
        public UISearchEditLookUpPopuCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SearchEditLookUpPopup";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchEditLookUpPopup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILCCustom UILCCustom
        {
            get
            {
                if ((this.mUILCCustom == null))
                {
                    this.mUILCCustom = new UILCCustom(this);
                }
                return this.mUILCCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILCCustom mUILCCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILCCustom : DXTestControl
    {
        
        public UILCCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcMainLayoutGroup UILcMainLayoutGroup
        {
            get
            {
                if ((this.mUILcMainLayoutGroup == null))
                {
                    this.mUILcMainLayoutGroup = new UILcMainLayoutGroup(this);
                }
                return this.mUILcMainLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainLayoutGroup mUILcMainLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMainLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcMainLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcgFindLayoutGroup UILcgFindLayoutGroup
        {
            get
            {
                if ((this.mUILcgFindLayoutGroup == null))
                {
                    this.mUILcgFindLayoutGroup = new UILcgFindLayoutGroup(this);
                }
                return this.mUILcgFindLayoutGroup;
            }
        }
        
        public UILciGridLayoutControlItem UILciGridLayoutControlItem
        {
            get
            {
                if ((this.mUILciGridLayoutControlItem == null))
                {
                    this.mUILciGridLayoutControlItem = new UILciGridLayoutControlItem(this);
                }
                return this.mUILciGridLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILcgFindLayoutGroup mUILcgFindLayoutGroup;
        
        private UILciGridLayoutControlItem mUILciGridLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcgFindLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcgFindLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILciLabelFindLayoutControlItem UILciLabelFindLayoutControlItem
        {
            get
            {
                if ((this.mUILciLabelFindLayoutControlItem == null))
                {
                    this.mUILciLabelFindLayoutControlItem = new UILciLabelFindLayoutControlItem(this);
                }
                return this.mUILciLabelFindLayoutControlItem;
            }
        }
        
        public UILciButtonFindLayoutControlItem UILciButtonFindLayoutControlItem
        {
            get
            {
                if ((this.mUILciButtonFindLayoutControlItem == null))
                {
                    this.mUILciButtonFindLayoutControlItem = new UILciButtonFindLayoutControlItem(this);
                }
                return this.mUILciButtonFindLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciLabelFindLayoutControlItem mUILciLabelFindLayoutControlItem;
        
        private UILciButtonFindLayoutControlItem mUILciButtonFindLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciLabelFindLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciLabelFindLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciLabelFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITeFindEdit
        {
            get
            {
                if ((this.mUITeFindEdit == null))
                {
                    this.mUITeFindEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teFind";
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUITeFindEdit.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUITeFindEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITeFindEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciButtonFindLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciButtonFindLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciButtonFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXButton UISøkButton
        {
            get
            {
                if ((this.mUISøkButton == null))
                {
                    this.mUISøkButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISøkButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btFind";
                    this.mUISøkButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUISøkButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUISøkButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUISøkButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciGridLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciGridLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            #endregion
        }
        
        #region Properties
        public UIGridControlTable UIGridControlTable
        {
            get
            {
                if ((this.mUIGridControlTable == null))
                {
                    this.mUIGridControlTable = new UIGridControlTable(this);
                }
                return this.mUIGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGridControlTable mUIGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGridControlTable : DXGrid
    {
        
        public UIGridControlTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            #endregion
        }
        
        #region Properties
        public DXCell UIItem5000ARBEIDSPLANKCell
        {
            get
            {
                if ((this.mUIItem5000ARBEIDSPLANKCell == null))
                {
                    this.mUIItem5000ARBEIDSPLANKCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem5000ARBEIDSPLANKCell.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]GridControlCell[View]searchLookUpEdit1View[Row]41[Column]col" +
                        "DisplayName";
                    this.mUIItem5000ARBEIDSPLANKCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem5000ARBEIDSPLANKCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem5000ARBEIDSPLANKCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem5000ARBEIDSPLANKCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILeProjectLookUpEdit : DXLookUpEdit
    {
        
        public UILeProjectLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "leProject";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchLookUpEdit";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPopupSearchLookUpEdiWindow1 UIPopupSearchLookUpEdiWindow
        {
            get
            {
                if ((this.mUIPopupSearchLookUpEdiWindow == null))
                {
                    this.mUIPopupSearchLookUpEdiWindow = new UIPopupSearchLookUpEdiWindow1(this);
                }
                return this.mUIPopupSearchLookUpEdiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupSearchLookUpEdiWindow1 mUIPopupSearchLookUpEdiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupSearchLookUpEdiWindow1 : DXWindow
    {
        
        public UIPopupSearchLookUpEdiWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "leProjectPopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupSearchLookUpEditForm";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISearchEditLookUpPopuCustom1 UISearchEditLookUpPopuCustom
        {
            get
            {
                if ((this.mUISearchEditLookUpPopuCustom == null))
                {
                    this.mUISearchEditLookUpPopuCustom = new UISearchEditLookUpPopuCustom1(this);
                }
                return this.mUISearchEditLookUpPopuCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISearchEditLookUpPopuCustom1 mUISearchEditLookUpPopuCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISearchEditLookUpPopuCustom1 : DXTestControl
    {
        
        public UISearchEditLookUpPopuCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SearchEditLookUpPopup";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchEditLookUpPopup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILCCustom1 UILCCustom
        {
            get
            {
                if ((this.mUILCCustom == null))
                {
                    this.mUILCCustom = new UILCCustom1(this);
                }
                return this.mUILCCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILCCustom1 mUILCCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILCCustom1 : DXTestControl
    {
        
        public UILCCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcMainLayoutGroup1 UILcMainLayoutGroup
        {
            get
            {
                if ((this.mUILcMainLayoutGroup == null))
                {
                    this.mUILcMainLayoutGroup = new UILcMainLayoutGroup1(this);
                }
                return this.mUILcMainLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainLayoutGroup1 mUILcMainLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMainLayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILcMainLayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILciGridLayoutControlItem1 UILciGridLayoutControlItem
        {
            get
            {
                if ((this.mUILciGridLayoutControlItem == null))
                {
                    this.mUILciGridLayoutControlItem = new UILciGridLayoutControlItem1(this);
                }
                return this.mUILciGridLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciGridLayoutControlItem1 mUILciGridLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciGridLayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILciGridLayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGridControlTable1 UIGridControlTable
        {
            get
            {
                if ((this.mUIGridControlTable == null))
                {
                    this.mUIGridControlTable = new UIGridControlTable1(this);
                }
                return this.mUIGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGridControlTable1 mUIGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGridControlTable1 : DXGrid
    {
        
        public UIGridControlTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIP3Prosjekt3Cell
        {
            get
            {
                if ((this.mUIP3Prosjekt3Cell == null))
                {
                    this.mUIP3Prosjekt3Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIP3Prosjekt3Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]GridControlCell[View]gridView1[Row]2[Column]colDisplayName1";
                    this.mUIP3Prosjekt3Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIP3Prosjekt3Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIP3Prosjekt3Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIP3Prosjekt3Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow1 : DXWindow
    {
        
        public UIOppgavetildelingWindow1()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "*Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIVhContentCustom3 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom3(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhContentCustom3 mUIVhContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom3 : DXTestControl
    {
        
        public UIVhContentCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            #endregion
        }
        
        #region Properties
        public UIPcViewClient6 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient6(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient6 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient6 : DXTestControl
    {
        
        public UIPcViewClient6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            #endregion
        }
        
        #region Properties
        public UIRoleAssignmentOverviCustom1 UIRoleAssignmentOverviCustom
        {
            get
            {
                if ((this.mUIRoleAssignmentOverviCustom == null))
                {
                    this.mUIRoleAssignmentOverviCustom = new UIRoleAssignmentOverviCustom1(this);
                }
                return this.mUIRoleAssignmentOverviCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleAssignmentOverviCustom1 mUIRoleAssignmentOverviCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleAssignmentOverviCustom1 : DXTestControl
    {
        
        public UIRoleAssignmentOverviCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAssignmentOverviewView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleAssignmentOverviewView";
            #endregion
        }
        
        #region Properties
        public UIDpDisponibleDockPanel1 UIDpDisponibleDockPanel
        {
            get
            {
                if ((this.mUIDpDisponibleDockPanel == null))
                {
                    this.mUIDpDisponibleDockPanel = new UIDpDisponibleDockPanel1(this);
                }
                return this.mUIDpDisponibleDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpDisponibleDockPanel1 mUIDpDisponibleDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpDisponibleDockPanel1 : DXDockPanel
    {
        
        public UIDpDisponibleDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpDisponible";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer4Custom1 UIControlContainer4Custom
        {
            get
            {
                if ((this.mUIControlContainer4Custom == null))
                {
                    this.mUIControlContainer4Custom = new UIControlContainer4Custom1(this);
                }
                return this.mUIControlContainer4Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer4Custom1 mUIControlContainer4Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer4Custom1 : DXTestControl
    {
        
        public UIControlContainer4Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDispGridViewCustom1 UIDispGridViewCustom
        {
            get
            {
                if ((this.mUIDispGridViewCustom == null))
                {
                    this.mUIDispGridViewCustom = new UIDispGridViewCustom1(this);
                }
                return this.mUIDispGridViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDispGridViewCustom1 mUIDispGridViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDispGridViewCustom1 : DXTestControl
    {
        
        public UIDispGridViewCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DispGridView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DispGridView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIIgAvailabilityCustom1 UIIgAvailabilityCustom
        {
            get
            {
                if ((this.mUIIgAvailabilityCustom == null))
                {
                    this.mUIIgAvailabilityCustom = new UIIgAvailabilityCustom1(this);
                }
                return this.mUIIgAvailabilityCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIIgAvailabilityCustom1 mUIIgAvailabilityCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIgAvailabilityCustom1 : DXTestControl
    {
        
        public UIIgAvailabilityCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "igAvailability";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom3 UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom3(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom3 mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom3 : DXTestControl
    {
        
        public UIDdGridControlCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable3 UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable3(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable3 mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable3 : DXGrid
    {
        
        public UIGcDragDropGridTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIAJeffersonThomas1500Cell
        {
            get
            {
                if ((this.mUIAJeffersonThomas1500Cell == null))
                {
                    this.mUIAJeffersonThomas1500Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIAJeffersonThomas1500Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col01.01.2024";
                    this.mUIAJeffersonThomas1500Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIAJeffersonThomas1500Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIAJeffersonThomas1500Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIAJeffersonThomas1500Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow2 : DXWindow
    {
        
        public UIOppgavetildelingWindow2()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "*Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhContentCustom4 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom4(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhContentCustom4 mUIVhContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom4 : DXTestControl
    {
        
        public UIVhContentCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient7 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient7(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient7 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient7 : DXTestControl
    {
        
        public UIPcViewClient7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleAssignmentOverviCustom2 UIRoleAssignmentOverviCustom
        {
            get
            {
                if ((this.mUIRoleAssignmentOverviCustom == null))
                {
                    this.mUIRoleAssignmentOverviCustom = new UIRoleAssignmentOverviCustom2(this);
                }
                return this.mUIRoleAssignmentOverviCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleAssignmentOverviCustom2 mUIRoleAssignmentOverviCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleAssignmentOverviCustom2 : DXTestControl
    {
        
        public UIRoleAssignmentOverviCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAssignmentOverviewView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleAssignmentOverviewView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDpDisponibleDockPanel2 UIDpDisponibleDockPanel
        {
            get
            {
                if ((this.mUIDpDisponibleDockPanel == null))
                {
                    this.mUIDpDisponibleDockPanel = new UIDpDisponibleDockPanel2(this);
                }
                return this.mUIDpDisponibleDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpDisponibleDockPanel2 mUIDpDisponibleDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpDisponibleDockPanel2 : DXDockPanel
    {
        
        public UIDpDisponibleDockPanel2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpDisponible";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UITopSeparator
        {
            get
            {
                if ((this.mUITopSeparator == null))
                {
                    this.mUITopSeparator = new DXTestControl(this);
                    #region Search Criteria
                    this.mUITopSeparator.SearchProperties[DXTestControl.PropertyNames.Name] = "Top";
                    this.mUITopSeparator.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelResizeZone";
                    this.mUITopSeparator.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUITopSeparator;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUITopSeparator;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow3 : DXWindow
    {
        
        public UIOppgavetildelingWindow3()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "*Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhContentCustom5 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom5(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhContentCustom5 mUIVhContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom5 : DXTestControl
    {
        
        public UIVhContentCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient8 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient8(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient8 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient8 : DXTestControl
    {
        
        public UIPcViewClient8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleAssignmentOverviCustom3 UIRoleAssignmentOverviCustom
        {
            get
            {
                if ((this.mUIRoleAssignmentOverviCustom == null))
                {
                    this.mUIRoleAssignmentOverviCustom = new UIRoleAssignmentOverviCustom3(this);
                }
                return this.mUIRoleAssignmentOverviCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleAssignmentOverviCustom3 mUIRoleAssignmentOverviCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleAssignmentOverviCustom3 : DXTestControl
    {
        
        public UIRoleAssignmentOverviCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAssignmentOverviewView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleAssignmentOverviewView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDpDisponibleDockPanel3 UIDpDisponibleDockPanel
        {
            get
            {
                if ((this.mUIDpDisponibleDockPanel == null))
                {
                    this.mUIDpDisponibleDockPanel = new UIDpDisponibleDockPanel3(this);
                }
                return this.mUIDpDisponibleDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpDisponibleDockPanel3 mUIDpDisponibleDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpDisponibleDockPanel3 : DXDockPanel
    {
        
        public UIDpDisponibleDockPanel3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpDisponible";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer4Custom2 UIControlContainer4Custom
        {
            get
            {
                if ((this.mUIControlContainer4Custom == null))
                {
                    this.mUIControlContainer4Custom = new UIControlContainer4Custom2(this);
                }
                return this.mUIControlContainer4Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer4Custom2 mUIControlContainer4Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer4Custom2 : DXTestControl
    {
        
        public UIControlContainer4Custom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDispGridViewCustom2 UIDispGridViewCustom
        {
            get
            {
                if ((this.mUIDispGridViewCustom == null))
                {
                    this.mUIDispGridViewCustom = new UIDispGridViewCustom2(this);
                }
                return this.mUIDispGridViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDispGridViewCustom2 mUIDispGridViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDispGridViewCustom2 : DXTestControl
    {
        
        public UIDispGridViewCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DispGridView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DispGridView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIIgAvailabilityCustom2 UIIgAvailabilityCustom
        {
            get
            {
                if ((this.mUIIgAvailabilityCustom == null))
                {
                    this.mUIIgAvailabilityCustom = new UIIgAvailabilityCustom2(this);
                }
                return this.mUIIgAvailabilityCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIIgAvailabilityCustom2 mUIIgAvailabilityCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIgAvailabilityCustom2 : DXTestControl
    {
        
        public UIIgAvailabilityCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "igAvailability";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom4 UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom4(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom4 mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom4 : DXTestControl
    {
        
        public UIDdGridControlCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable4 UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable4(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable4 mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable4 : DXGrid
    {
        
        public UIGcDragDropGridTable4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIAJacksonAndrew150023Cell
        {
            get
            {
                if ((this.mUIAJacksonAndrew150023Cell == null))
                {
                    this.mUIAJacksonAndrew150023Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIAJacksonAndrew150023Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col02.01.2024";
                    this.mUIAJacksonAndrew150023Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIAJacksonAndrew150023Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIAJacksonAndrew150023Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIAJacksonAndrew150023Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow4 : DXWindow
    {
        
        public UIOppgavetildelingWindow4()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "*Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhContentCustom6 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom6(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhContentCustom6 mUIVhContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom6 : DXTestControl
    {
        
        public UIVhContentCustom6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient9 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient9(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient9 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient9 : DXTestControl
    {
        
        public UIPcViewClient9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleAssignmentOverviCustom4 UIRoleAssignmentOverviCustom
        {
            get
            {
                if ((this.mUIRoleAssignmentOverviCustom == null))
                {
                    this.mUIRoleAssignmentOverviCustom = new UIRoleAssignmentOverviCustom4(this);
                }
                return this.mUIRoleAssignmentOverviCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleAssignmentOverviCustom4 mUIRoleAssignmentOverviCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleAssignmentOverviCustom4 : DXTestControl
    {
        
        public UIRoleAssignmentOverviCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAssignmentOverviewView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleAssignmentOverviewView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDpDisponibleDockPanel4 UIDpDisponibleDockPanel
        {
            get
            {
                if ((this.mUIDpDisponibleDockPanel == null))
                {
                    this.mUIDpDisponibleDockPanel = new UIDpDisponibleDockPanel4(this);
                }
                return this.mUIDpDisponibleDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpDisponibleDockPanel4 mUIDpDisponibleDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpDisponibleDockPanel4 : DXDockPanel
    {
        
        public UIDpDisponibleDockPanel4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpDisponible";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer4Custom3 UIControlContainer4Custom
        {
            get
            {
                if ((this.mUIControlContainer4Custom == null))
                {
                    this.mUIControlContainer4Custom = new UIControlContainer4Custom3(this);
                }
                return this.mUIControlContainer4Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer4Custom3 mUIControlContainer4Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer4Custom3 : DXTestControl
    {
        
        public UIControlContainer4Custom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDispGridViewCustom3 UIDispGridViewCustom
        {
            get
            {
                if ((this.mUIDispGridViewCustom == null))
                {
                    this.mUIDispGridViewCustom = new UIDispGridViewCustom3(this);
                }
                return this.mUIDispGridViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDispGridViewCustom3 mUIDispGridViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDispGridViewCustom3 : DXTestControl
    {
        
        public UIDispGridViewCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DispGridView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DispGridView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIIgAvailabilityCustom3 UIIgAvailabilityCustom
        {
            get
            {
                if ((this.mUIIgAvailabilityCustom == null))
                {
                    this.mUIIgAvailabilityCustom = new UIIgAvailabilityCustom3(this);
                }
                return this.mUIIgAvailabilityCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIIgAvailabilityCustom3 mUIIgAvailabilityCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIgAvailabilityCustom3 : DXTestControl
    {
        
        public UIIgAvailabilityCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "igAvailability";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom5 UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom5(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom5 mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom5 : DXTestControl
    {
        
        public UIDdGridControlCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable5 UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable5(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable5 mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable5 : DXGrid
    {
        
        public UIGcDragDropGridTable5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIXDAdamsJohn10001200Cell
        {
            get
            {
                if ((this.mUIXDAdamsJohn10001200Cell == null))
                {
                    this.mUIXDAdamsJohn10001200Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIXDAdamsJohn10001200Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col01.01.2024";
                    this.mUIXDAdamsJohn10001200Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXDAdamsJohn10001200Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIXDAdamsJohn10001200Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIXDAdamsJohn10001200Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow : DXWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Tildel oppgavemønster OVER 4510";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4510");
            #endregion
        }
        
        #region Properties
        public UIPanelControlClient UIPanelControlClient
        {
            get
            {
                if ((this.mUIPanelControlClient == null))
                {
                    this.mUIPanelControlClient = new UIPanelControlClient(this);
                }
                return this.mUIPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControlClient mUIPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControlClient : DXTestControl
    {
        
        public UIPanelControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4510");
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom mUIViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHostCustom : DXTestControl
    {
        
        public UIViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4510");
            #endregion
        }
        
        #region Properties
        public UIPanelControlClient1 UIPanelControlClient
        {
            get
            {
                if ((this.mUIPanelControlClient == null))
                {
                    this.mUIPanelControlClient = new UIPanelControlClient1(this);
                }
                return this.mUIPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControlClient1 mUIPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControlClient1 : DXTestControl
    {
        
        public UIPanelControlClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4510");
            #endregion
        }
        
        #region Properties
        public UIRoleCodePatternAssigCustom UIRoleCodePatternAssigCustom
        {
            get
            {
                if ((this.mUIRoleCodePatternAssigCustom == null))
                {
                    this.mUIRoleCodePatternAssigCustom = new UIRoleCodePatternAssigCustom(this);
                }
                return this.mUIRoleCodePatternAssigCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleCodePatternAssigCustom mUIRoleCodePatternAssigCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleCodePatternAssigCustom : DXTestControl
    {
        
        public UIRoleCodePatternAssigCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleCodePatternAssignmentView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleCodePatternAssignmentView";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4510");
            #endregion
        }
        
        #region Properties
        public UIPanelControlClient2 UIPanelControlClient
        {
            get
            {
                if ((this.mUIPanelControlClient == null))
                {
                    this.mUIPanelControlClient = new UIPanelControlClient2(this);
                }
                return this.mUIPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControlClient2 mUIPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControlClient2 : DXTestControl
    {
        
        public UIPanelControlClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4510");
            #endregion
        }
        
        #region Properties
        public DXButton UISimpleButtonButton
        {
            get
            {
                if ((this.mUISimpleButtonButton == null))
                {
                    this.mUISimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUISimpleButtonButton.WindowTitles.Add("Tildel oppgavemønster OVER 4510");
                    #endregion
                }
                return this.mUISimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUISimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow5 : DXWindow
    {
        
        public UIOppgavetildelingWindow5()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "*Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhContentCustom7 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom7(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhContentCustom7 mUIVhContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom7 : DXTestControl
    {
        
        public UIVhContentCustom7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient10 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient10(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient10 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient10 : DXTestControl
    {
        
        public UIPcViewClient10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleAssignmentOverviCustom5 UIRoleAssignmentOverviCustom
        {
            get
            {
                if ((this.mUIRoleAssignmentOverviCustom == null))
                {
                    this.mUIRoleAssignmentOverviCustom = new UIRoleAssignmentOverviCustom5(this);
                }
                return this.mUIRoleAssignmentOverviCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleAssignmentOverviCustom5 mUIRoleAssignmentOverviCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleAssignmentOverviCustom5 : DXTestControl
    {
        
        public UIRoleAssignmentOverviCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAssignmentOverviewView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleAssignmentOverviewView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhContentCustom8 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom8(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhContentCustom8 mUIVhContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom8 : DXTestControl
    {
        
        public UIVhContentCustom8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient11 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient11(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient11 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient11 : DXTestControl
    {
        
        public UIPcViewClient11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIEmployeeFocusedManagCustom1 UIEmployeeFocusedManagCustom
        {
            get
            {
                if ((this.mUIEmployeeFocusedManagCustom == null))
                {
                    this.mUIEmployeeFocusedManagCustom = new UIEmployeeFocusedManagCustom1(this);
                }
                return this.mUIEmployeeFocusedManagCustom;
            }
        }
        
        public UIRoleFocusedManageVieCustom1 UIRoleFocusedManageVieCustom
        {
            get
            {
                if ((this.mUIRoleFocusedManageVieCustom == null))
                {
                    this.mUIRoleFocusedManageVieCustom = new UIRoleFocusedManageVieCustom1(this);
                }
                return this.mUIRoleFocusedManageVieCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeFocusedManagCustom1 mUIEmployeeFocusedManagCustom;
        
        private UIRoleFocusedManageVieCustom1 mUIRoleFocusedManageVieCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeFocusedManagCustom1 : DXTestControl
    {
        
        public UIEmployeeFocusedManagCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeFocusedManageView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeFocusedManageView";
            #endregion
        }
        
        #region Properties
        public UIItemGridControl1Custom1 UIItemGridControl1Custom
        {
            get
            {
                if ((this.mUIItemGridControl1Custom == null))
                {
                    this.mUIItemGridControl1Custom = new UIItemGridControl1Custom1(this);
                }
                return this.mUIItemGridControl1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIItemGridControl1Custom1 mUIItemGridControl1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemGridControl1Custom1 : DXTestControl
    {
        
        public UIItemGridControl1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "itemGridControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom6 UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom6(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom6 mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom6 : DXTestControl
    {
        
        public UIDdGridControlCustom6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable6 UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable6(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable6 mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable6 : DXGrid
    {
        
        public UIGcDragDropGridTable6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            #endregion
        }
        
        #region Properties
        public DXCell UID08001600WarningDubøCell
        {
            get
            {
                if ((this.mUID08001600WarningDubøCell == null))
                {
                    this.mUID08001600WarningDubøCell = new DXCell(this);
                    #region Search Criteria
                    this.mUID08001600WarningDubøCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]11[Column]col02.01.2024";
                    this.mUID08001600WarningDubøCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID08001600WarningDubøCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUID08001600WarningDubøCell;
            }
        }
        
        public DXCell UID08001600OVER0800160Cell
        {
            get
            {
                if ((this.mUID08001600OVER0800160Cell == null))
                {
                    this.mUID08001600OVER0800160Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUID08001600OVER0800160Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]11[Column]col03.01.2024";
                    this.mUID08001600OVER0800160Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID08001600OVER0800160Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUID08001600OVER0800160Cell;
            }
        }
        
        public DXCell UID08001600KL081508001Cell
        {
            get
            {
                if ((this.mUID08001600KL081508001Cell == null))
                {
                    this.mUID08001600KL081508001Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUID08001600KL081508001Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]11[Column]col04.01.2024";
                    this.mUID08001600KL081508001Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID08001600KL081508001Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUID08001600KL081508001Cell;
            }
        }
        
        public DXCell UID08001600OVER0800160Cell1
        {
            get
            {
                if ((this.mUID08001600OVER0800160Cell1 == null))
                {
                    this.mUID08001600OVER0800160Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUID08001600OVER0800160Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]11[Column]col05.01.2024";
                    this.mUID08001600OVER0800160Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID08001600OVER0800160Cell1.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUID08001600OVER0800160Cell1;
            }
        }
        
        public DXCell UID08001600KL081508001Cell1
        {
            get
            {
                if ((this.mUID08001600KL081508001Cell1 == null))
                {
                    this.mUID08001600KL081508001Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUID08001600KL081508001Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]11[Column]col06.01.2024";
                    this.mUID08001600KL081508001Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID08001600KL081508001Cell1.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUID08001600KL081508001Cell1;
            }
        }
        
        public DXCell UID08001600OVER0800160Cell2
        {
            get
            {
                if ((this.mUID08001600OVER0800160Cell2 == null))
                {
                    this.mUID08001600OVER0800160Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUID08001600OVER0800160Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]11[Column]col07.01.2024";
                    this.mUID08001600OVER0800160Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID08001600OVER0800160Cell2.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUID08001600OVER0800160Cell2;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUID08001600WarningDubøCell;
        
        private DXCell mUID08001600OVER0800160Cell;
        
        private DXCell mUID08001600KL081508001Cell;
        
        private DXCell mUID08001600OVER0800160Cell1;
        
        private DXCell mUID08001600KL081508001Cell1;
        
        private DXCell mUID08001600OVER0800160Cell2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleFocusedManageVieCustom1 : DXTestControl
    {
        
        public UIRoleFocusedManageVieCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleFocusedManageView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleFocusedManageView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIIgContentCustom1 UIIgContentCustom
        {
            get
            {
                if ((this.mUIIgContentCustom == null))
                {
                    this.mUIIgContentCustom = new UIIgContentCustom1(this);
                }
                return this.mUIIgContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIIgContentCustom1 mUIIgContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIgContentCustom1 : DXTestControl
    {
        
        public UIIgContentCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "igContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom7 UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom7(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom7 mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom7 : DXTestControl
    {
        
        public UIDdGridControlCustom7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable7 UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable7(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable7 mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable7 : DXGrid
    {
        
        public UIGcDragDropGridTable7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]11[Column]col07.01.2024";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXScrollBar UIHCrkScrollBarScrollBarControl
        {
            get
            {
                if ((this.mUIHCrkScrollBarScrollBarControl == null))
                {
                    this.mUIHCrkScrollBarScrollBarControl = new DXScrollBar(this);
                    #region Search Criteria
                    this.mUIHCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridHCrkScrollBar";
                    this.mUIHCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.ClassName] = "HCrkScrollBar";
                    this.mUIHCrkScrollBarScrollBarControl.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIHCrkScrollBarScrollBarControl;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]7[Column]col01.01.2024";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col03.01.2024";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        
        public DXCell UIItemCell3
        {
            get
            {
                if ((this.mUIItemCell3 == null))
                {
                    this.mUIItemCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col05.01.2024";
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell3.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell3;
            }
        }
        
        public DXCell UIItemCell4
        {
            get
            {
                if ((this.mUIItemCell4 == null))
                {
                    this.mUIItemCell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col06.01.2024";
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell4.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell4;
            }
        }
        
        public DXCell UIA6JacksonAndrew15002Cell
        {
            get
            {
                if ((this.mUIA6JacksonAndrew15002Cell == null))
                {
                    this.mUIA6JacksonAndrew15002Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIA6JacksonAndrew15002Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col01.01.2024";
                    this.mUIA6JacksonAndrew15002Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIA6JacksonAndrew15002Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIA6JacksonAndrew15002Cell;
            }
        }
        
        public DXCell UID1AdamsJohn08001000Cell
        {
            get
            {
                if ((this.mUID1AdamsJohn08001000Cell == null))
                {
                    this.mUID1AdamsJohn08001000Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUID1AdamsJohn08001000Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]5[Column]col01.01.2024";
                    this.mUID1AdamsJohn08001000Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID1AdamsJohn08001000Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUID1AdamsJohn08001000Cell;
            }
        }
        
        public DXCell UID1AdamsJohn10001200Cell
        {
            get
            {
                if ((this.mUID1AdamsJohn10001200Cell == null))
                {
                    this.mUID1AdamsJohn10001200Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUID1AdamsJohn10001200Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]18[Column]col01.01.2024";
                    this.mUID1AdamsJohn10001200Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID1AdamsJohn10001200Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUID1AdamsJohn10001200Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        
        private DXScrollBar mUIHCrkScrollBarScrollBarControl;
        
        private DXCell mUIItemCell1;
        
        private DXCell mUIItemCell2;
        
        private DXCell mUIItemCell3;
        
        private DXCell mUIItemCell4;
        
        private DXCell mUIA6JacksonAndrew15002Cell;
        
        private DXCell mUID1AdamsJohn08001000Cell;
        
        private DXCell mUID1AdamsJohn10001200Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow6 : DXWindow
    {
        
        public UIOppgavetildelingWindow6()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "*Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhContentCustom9 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom9(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhContentCustom9 mUIVhContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom9 : DXTestControl
    {
        
        public UIVhContentCustom9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient12 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient12(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient12 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient12 : DXTestControl
    {
        
        public UIPcViewClient12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleAssignmentOverviCustom6 UIRoleAssignmentOverviCustom
        {
            get
            {
                if ((this.mUIRoleAssignmentOverviCustom == null))
                {
                    this.mUIRoleAssignmentOverviCustom = new UIRoleAssignmentOverviCustom6(this);
                }
                return this.mUIRoleAssignmentOverviCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleAssignmentOverviCustom6 mUIRoleAssignmentOverviCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleAssignmentOverviCustom6 : DXTestControl
    {
        
        public UIRoleAssignmentOverviCustom6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAssignmentOverviewView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleAssignmentOverviewView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPanelContainer2DockPanel1 UIPanelContainer2DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer2DockPanel == null))
                {
                    this.mUIPanelContainer2DockPanel = new UIPanelContainer2DockPanel1(this);
                }
                return this.mUIPanelContainer2DockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelContainer2DockPanel1 mUIPanelContainer2DockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer2DockPanel1 : DXDockPanel
    {
        
        public UIPanelContainer2DockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPanelContainer3DockPanel1 UIPanelContainer3DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer3DockPanel == null))
                {
                    this.mUIPanelContainer3DockPanel = new UIPanelContainer3DockPanel1(this);
                }
                return this.mUIPanelContainer3DockPanel;
            }
        }
        
        public UIPanelContainer1DockPanel1 UIPanelContainer1DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer1DockPanel == null))
                {
                    this.mUIPanelContainer1DockPanel = new UIPanelContainer1DockPanel1(this);
                }
                return this.mUIPanelContainer1DockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelContainer3DockPanel1 mUIPanelContainer3DockPanel;
        
        private UIPanelContainer1DockPanel1 mUIPanelContainer1DockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer3DockPanel1 : DXDockPanel
    {
        
        public UIPanelContainer3DockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDSpecificationsDockPanel1 UIDSpecificationsDockPanel
        {
            get
            {
                if ((this.mUIDSpecificationsDockPanel == null))
                {
                    this.mUIDSpecificationsDockPanel = new UIDSpecificationsDockPanel1(this);
                }
                return this.mUIDSpecificationsDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDSpecificationsDockPanel1 mUIDSpecificationsDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDSpecificationsDockPanel1 : DXDockPanel
    {
        
        public UIDSpecificationsDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dSpecifications";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer2Custom1 UIControlContainer2Custom
        {
            get
            {
                if ((this.mUIControlContainer2Custom == null))
                {
                    this.mUIControlContainer2Custom = new UIControlContainer2Custom1(this);
                }
                return this.mUIControlContainer2Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer2Custom1 mUIControlContainer2Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer2Custom1 : DXTestControl
    {
        
        public UIControlContainer2Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISpecificationPanelViCustom1 UISpecificationPanelViCustom
        {
            get
            {
                if ((this.mUISpecificationPanelViCustom == null))
                {
                    this.mUISpecificationPanelViCustom = new UISpecificationPanelViCustom1(this);
                }
                return this.mUISpecificationPanelViCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISpecificationPanelViCustom1 mUISpecificationPanelViCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationPanelViCustom1 : DXTestControl
    {
        
        public UISpecificationPanelViCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationPanelView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationPanelView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIFlowControlViewHost1Custom1 UIFlowControlViewHost1Custom
        {
            get
            {
                if ((this.mUIFlowControlViewHost1Custom == null))
                {
                    this.mUIFlowControlViewHost1Custom = new UIFlowControlViewHost1Custom1(this);
                }
                return this.mUIFlowControlViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIFlowControlViewHost1Custom1 mUIFlowControlViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFlowControlViewHost1Custom1 : DXTestControl
    {
        
        public UIFlowControlViewHost1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "flowControlViewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FlowControlViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISpecificationSectionCustom1 UISpecificationSectionCustom
        {
            get
            {
                if ((this.mUISpecificationSectionCustom == null))
                {
                    this.mUISpecificationSectionCustom = new UISpecificationSectionCustom1(this);
                }
                return this.mUISpecificationSectionCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISpecificationSectionCustom1 mUISpecificationSectionCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationSectionCustom1 : DXTestControl
    {
        
        public UISpecificationSectionCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationSectionView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationSectionView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhDetailsCustom2 UIVhDetailsCustom
        {
            get
            {
                if ((this.mUIVhDetailsCustom == null))
                {
                    this.mUIVhDetailsCustom = new UIVhDetailsCustom2(this);
                }
                return this.mUIVhDetailsCustom;
            }
        }
        
        public UIPcHeaderClient1 UIPcHeaderClient
        {
            get
            {
                if ((this.mUIPcHeaderClient == null))
                {
                    this.mUIPcHeaderClient = new UIPcHeaderClient1(this);
                }
                return this.mUIPcHeaderClient;
            }
        }
        #endregion
        
        #region Fields
        private UIVhDetailsCustom2 mUIVhDetailsCustom;
        
        private UIPcHeaderClient1 mUIPcHeaderClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhDetailsCustom2 : DXTestControl
    {
        
        public UIVhDetailsCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FlowControlViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISpecificationListVieCustom1 UISpecificationListVieCustom
        {
            get
            {
                if ((this.mUISpecificationListVieCustom == null))
                {
                    this.mUISpecificationListVieCustom = new UISpecificationListVieCustom1(this);
                }
                return this.mUISpecificationListVieCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISpecificationListVieCustom1 mUISpecificationListVieCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationListVieCustom1 : DXTestControl
    {
        
        public UISpecificationListVieCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationListView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationListView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIFcListCustom1 UIFcListCustom
        {
            get
            {
                if ((this.mUIFcListCustom == null))
                {
                    this.mUIFcListCustom = new UIFcListCustom1(this);
                }
                return this.mUIFcListCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIFcListCustom1 mUIFcListCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFcListCustom1 : DXTestControl
    {
        
        public UIFcListCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "fcList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FlowControlViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISpecificationItemVieCustom1 UISpecificationItemVieCustom
        {
            get
            {
                if ((this.mUISpecificationItemVieCustom == null))
                {
                    this.mUISpecificationItemVieCustom = new UISpecificationItemVieCustom1(this);
                }
                return this.mUISpecificationItemVieCustom;
            }
        }
        
        public UIEmployeeSpecificatioCustom UIEmployeeSpecificatioCustom
        {
            get
            {
                if ((this.mUIEmployeeSpecificatioCustom == null))
                {
                    this.mUIEmployeeSpecificatioCustom = new UIEmployeeSpecificatioCustom(this);
                }
                return this.mUIEmployeeSpecificatioCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISpecificationItemVieCustom1 mUISpecificationItemVieCustom;
        
        private UIEmployeeSpecificatioCustom mUIEmployeeSpecificatioCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationItemVieCustom1 : DXTestControl
    {
        
        public UISpecificationItemVieCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationItemView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationItemView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblContentLabel
        {
            get
            {
                if ((this.mUILblContentLabel == null))
                {
                    this.mUILblContentLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblContent";
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblContentLabel.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUILblContentLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblContentLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeSpecificatioCustom : DXTestControl
    {
        
        public UIEmployeeSpecificatioCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeSpecificationView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeSpecificationView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcNameClient UIPcNameClient
        {
            get
            {
                if ((this.mUIPcNameClient == null))
                {
                    this.mUIPcNameClient = new UIPcNameClient(this);
                }
                return this.mUIPcNameClient;
            }
        }
        
        public DXTestControl UILblEmploymentLabel
        {
            get
            {
                if ((this.mUILblEmploymentLabel == null))
                {
                    this.mUILblEmploymentLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblEmploymentLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblEmployment";
                    this.mUILblEmploymentLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblEmploymentLabel.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUILblEmploymentLabel;
            }
        }
        #endregion
        
        #region Fields
        private UIPcNameClient mUIPcNameClient;
        
        private DXTestControl mUILblEmploymentLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcNameClient : DXTestControl
    {
        
        public UIPcNameClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblNameLabel
        {
            get
            {
                if ((this.mUILblNameLabel == null))
                {
                    this.mUILblNameLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblNameLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblName";
                    this.mUILblNameLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblNameLabel.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUILblNameLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblNameLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcHeaderClient1 : DXTestControl
    {
        
        public UIPcHeaderClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcHeader";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblContentLabel
        {
            get
            {
                if ((this.mUILblContentLabel == null))
                {
                    this.mUILblContentLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblContent";
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblContentLabel.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUILblContentLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblContentLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer1DockPanel1 : DXDockPanel
    {
        
        public UIPanelContainer1DockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDpEmployeesDockPanel1 UIDpEmployeesDockPanel
        {
            get
            {
                if ((this.mUIDpEmployeesDockPanel == null))
                {
                    this.mUIDpEmployeesDockPanel = new UIDpEmployeesDockPanel1(this);
                }
                return this.mUIDpEmployeesDockPanel;
            }
        }
        
        public DXTestControl UILeftSeparator
        {
            get
            {
                if ((this.mUILeftSeparator == null))
                {
                    this.mUILeftSeparator = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILeftSeparator.SearchProperties[DXTestControl.PropertyNames.Name] = "Left";
                    this.mUILeftSeparator.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelResizeZone";
                    this.mUILeftSeparator.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUILeftSeparator;
            }
        }
        #endregion
        
        #region Fields
        private UIDpEmployeesDockPanel1 mUIDpEmployeesDockPanel;
        
        private DXTestControl mUILeftSeparator;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpEmployeesDockPanel1 : DXDockPanel
    {
        
        public UIDpEmployeesDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer1Custom1 UIControlContainer1Custom
        {
            get
            {
                if ((this.mUIControlContainer1Custom == null))
                {
                    this.mUIControlContainer1Custom = new UIControlContainer1Custom1(this);
                }
                return this.mUIControlContainer1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer1Custom1 mUIControlContainer1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer1Custom1 : DXTestControl
    {
        
        public UIControlContainer1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIEmployeeListViewCustom1 UIEmployeeListViewCustom
        {
            get
            {
                if ((this.mUIEmployeeListViewCustom == null))
                {
                    this.mUIEmployeeListViewCustom = new UIEmployeeListViewCustom1(this);
                }
                return this.mUIEmployeeListViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeListViewCustom1 mUIEmployeeListViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeListViewCustom1 : DXTestControl
    {
        
        public UIEmployeeListViewCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeListView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeListView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcEmployeesTable1 UIGcEmployeesTable
        {
            get
            {
                if ((this.mUIGcEmployeesTable == null))
                {
                    this.mUIGcEmployeesTable = new UIGcEmployeesTable1(this);
                }
                return this.mUIGcEmployeesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcEmployeesTable1 mUIGcEmployeesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcEmployeesTable1 : DXGrid
    {
        
        public UIGcEmployeesTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem8KnoxPolkJamesCell
        {
            get
            {
                if ((this.mUIItem8KnoxPolkJamesCell == null))
                {
                    this.mUIItem8KnoxPolkJamesCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem8KnoxPolkJamesCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]7[Column]colDisplayName";
                    this.mUIItem8KnoxPolkJamesCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem8KnoxPolkJamesCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem8KnoxPolkJamesCell;
            }
        }
        
        public DXCell UIItem1AdamsJohnCell
        {
            get
            {
                if ((this.mUIItem1AdamsJohnCell == null))
                {
                    this.mUIItem1AdamsJohnCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1AdamsJohnCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]0[Column]colDisplayName";
                    this.mUIItem1AdamsJohnCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1AdamsJohnCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem1AdamsJohnCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem8KnoxPolkJamesCell;
        
        private DXCell mUIItem1AdamsJohnCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGT4001InformasjonWindow : DXWindow
    {
        
        public UIGT4001InformasjonWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GT-4001 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GT-4001 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIJAButton.WindowTitles.Add("GT-4001 - Informasjon");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGT4003InformasjonWindow : DXWindow
    {
        
        public UIGT4003InformasjonWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GT-4003 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GT-4003 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIJAButton.WindowTitles.Add("GT-4003 - Informasjon");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow7 : DXWindow
    {
        
        public UIOppgavetildelingWindow7()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "*Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhContentCustom10 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom10(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhContentCustom10 mUIVhContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom10 : DXTestControl
    {
        
        public UIVhContentCustom10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient13 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient13(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient13 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient13 : DXTestControl
    {
        
        public UIPcViewClient13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleAssignmentOverviCustom7 UIRoleAssignmentOverviCustom
        {
            get
            {
                if ((this.mUIRoleAssignmentOverviCustom == null))
                {
                    this.mUIRoleAssignmentOverviCustom = new UIRoleAssignmentOverviCustom7(this);
                }
                return this.mUIRoleAssignmentOverviCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleAssignmentOverviCustom7 mUIRoleAssignmentOverviCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleAssignmentOverviCustom7 : DXTestControl
    {
        
        public UIRoleAssignmentOverviCustom7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAssignmentOverviewView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleAssignmentOverviewView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDpDisponibleDockPanel5 UIDpDisponibleDockPanel
        {
            get
            {
                if ((this.mUIDpDisponibleDockPanel == null))
                {
                    this.mUIDpDisponibleDockPanel = new UIDpDisponibleDockPanel5(this);
                }
                return this.mUIDpDisponibleDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpDisponibleDockPanel5 mUIDpDisponibleDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpDisponibleDockPanel5 : DXDockPanel
    {
        
        public UIDpDisponibleDockPanel5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpDisponible";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer4Custom4 UIControlContainer4Custom
        {
            get
            {
                if ((this.mUIControlContainer4Custom == null))
                {
                    this.mUIControlContainer4Custom = new UIControlContainer4Custom4(this);
                }
                return this.mUIControlContainer4Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer4Custom4 mUIControlContainer4Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer4Custom4 : DXTestControl
    {
        
        public UIControlContainer4Custom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDispGridViewCustom4 UIDispGridViewCustom
        {
            get
            {
                if ((this.mUIDispGridViewCustom == null))
                {
                    this.mUIDispGridViewCustom = new UIDispGridViewCustom4(this);
                }
                return this.mUIDispGridViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDispGridViewCustom4 mUIDispGridViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDispGridViewCustom4 : DXTestControl
    {
        
        public UIDispGridViewCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DispGridView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DispGridView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIIgAvailabilityCustom4 UIIgAvailabilityCustom
        {
            get
            {
                if ((this.mUIIgAvailabilityCustom == null))
                {
                    this.mUIIgAvailabilityCustom = new UIIgAvailabilityCustom4(this);
                }
                return this.mUIIgAvailabilityCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIIgAvailabilityCustom4 mUIIgAvailabilityCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIgAvailabilityCustom4 : DXTestControl
    {
        
        public UIIgAvailabilityCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "igAvailability";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom8 UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom8(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom8 mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom8 : DXTestControl
    {
        
        public UIDdGridControlCustom8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable8 UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable8(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable8 mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable8 : DXGrid
    {
        
        public UIGcDragDropGridTable8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIAJacksonAndrew150023Cell
        {
            get
            {
                if ((this.mUIAJacksonAndrew150023Cell == null))
                {
                    this.mUIAJacksonAndrew150023Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIAJacksonAndrew150023Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col03.01.2024";
                    this.mUIAJacksonAndrew150023Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIAJacksonAndrew150023Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIAJacksonAndrew150023Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIAJacksonAndrew150023Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow8 : WinWindow
    {
        
        public UIOppgavetildelingWindow8()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcContentClient1 UIGcContentClient
        {
            get
            {
                if ((this.mUIGcContentClient == null))
                {
                    this.mUIGcContentClient = new UIGcContentClient1(this);
                }
                return this.mUIGcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcContentClient1 mUIGcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcContentClient1 : DXTestControl
    {
        
        public UIGcContentClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISchedulerControl1List UISchedulerControl1List
        {
            get
            {
                if ((this.mUISchedulerControl1List == null))
                {
                    this.mUISchedulerControl1List = new UISchedulerControl1List(this);
                }
                return this.mUISchedulerControl1List;
            }
        }
        
        public UISchedulerControl1List1 UISchedulerControl1List1
        {
            get
            {
                if ((this.mUISchedulerControl1List1 == null))
                {
                    this.mUISchedulerControl1List1 = new UISchedulerControl1List1(this);
                }
                return this.mUISchedulerControl1List1;
            }
        }
        
        public UISchedulerControl1List2 UISchedulerControl1List2
        {
            get
            {
                if ((this.mUISchedulerControl1List2 == null))
                {
                    this.mUISchedulerControl1List2 = new UISchedulerControl1List2(this);
                }
                return this.mUISchedulerControl1List2;
            }
        }
        
        public UISchedulerControl1List3 UISchedulerControl1List3
        {
            get
            {
                if ((this.mUISchedulerControl1List3 == null))
                {
                    this.mUISchedulerControl1List3 = new UISchedulerControl1List3(this);
                }
                return this.mUISchedulerControl1List3;
            }
        }
        
        public UISchedulerControl1List4 UISchedulerControl1List4
        {
            get
            {
                if ((this.mUISchedulerControl1List4 == null))
                {
                    this.mUISchedulerControl1List4 = new UISchedulerControl1List4(this);
                }
                return this.mUISchedulerControl1List4;
            }
        }
        
        public UISchedulerControl1List5 UISchedulerControl1List5
        {
            get
            {
                if ((this.mUISchedulerControl1List5 == null))
                {
                    this.mUISchedulerControl1List5 = new UISchedulerControl1List5(this);
                }
                return this.mUISchedulerControl1List5;
            }
        }
        #endregion
        
        #region Fields
        private UISchedulerControl1List mUISchedulerControl1List;
        
        private UISchedulerControl1List1 mUISchedulerControl1List1;
        
        private UISchedulerControl1List2 mUISchedulerControl1List2;
        
        private UISchedulerControl1List3 mUISchedulerControl1List3;
        
        private UISchedulerControl1List4 mUISchedulerControl1List4;
        
        private UISchedulerControl1List5 mUISchedulerControl1List5;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerControl1List : WinList
    {
        
        public UISchedulerControl1List(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Dagvisning, 2 total events, 12:00 a.m.  onsdag, januar 3, 2024 to 12:00 a.m.  tor" +
                "sdag, januar 4, 2024";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public WinCell UIAppointmentCell
        {
            get
            {
                if ((this.mUIAppointmentCell == null))
                {
                    this.mUIAppointmentCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "10:00 a.m.  to 12:00 p.m.  onsdag, januar 3, 2024, Subject PRIO HØY, Time Ledig, " +
                                "2 of 2", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIAppointmentCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerControl1List1 : WinList
    {
        
        public UISchedulerControl1List1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Dagvisning, 3 total events, 12:00 a.m.  onsdag, januar 3, 2024 to 12:00 a.m.  tor" +
                "sdag, januar 4, 2024";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public WinCell UIAppointmentCell
        {
            get
            {
                if ((this.mUIAppointmentCell == null))
                {
                    this.mUIAppointmentCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "8:00 a.m.  to 4:00 p.m.  onsdag, januar 3, 2024, Subject EKSKL KAN IKKE, Time Led" +
                                "ig, 2 of 3", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell;
            }
        }
        
        public WinCell UIAppointmentCell1
        {
            get
            {
                if ((this.mUIAppointmentCell1 == null))
                {
                    this.mUIAppointmentCell1 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell1.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell1.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "10:00 a.m.  to 12:00 p.m.  onsdag, januar 3, 2024, Subject PRIO HØY, Time Ledig, " +
                                "3 of 3", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell1;
            }
        }
        
        public WinCell UIAppointmentCell2
        {
            get
            {
                if ((this.mUIAppointmentCell2 == null))
                {
                    this.mUIAppointmentCell2 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell2.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell2.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "8:00 a.m.  to 4:00 p.m.  onsdag, januar 3, 2024, Subject EKSKL KAN IKKE, Time Led" +
                                "ig, 2 of 3", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell2.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell2;
            }
        }
        
        public WinCell UIAppointmentCell3
        {
            get
            {
                if ((this.mUIAppointmentCell3 == null))
                {
                    this.mUIAppointmentCell3 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell3.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell3.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "8:00 a.m.  to 10:00 a.m.  onsdag, januar 3, 2024, Subject EKSKL KAN IKKE, Time Le" +
                                "dig, 2 of 3", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell3.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell3;
            }
        }
        
        public WinCell UIAppointmentCell4
        {
            get
            {
                if ((this.mUIAppointmentCell4 == null))
                {
                    this.mUIAppointmentCell4 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell4.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell4.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "8:00 a.m.  to 10:00 a.m.  onsdag, januar 3, 2024, Subject EKSKL KAN IKKE, Time Le" +
                                "dig, 2 of 3", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell4.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell4;
            }
        }
        
        public WinCell UIAppointmentCell5
        {
            get
            {
                if ((this.mUIAppointmentCell5 == null))
                {
                    this.mUIAppointmentCell5 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell5.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell5.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "10:00 a.m.  to 12:00 p.m.  onsdag, januar 3, 2024, Subject PRIO HØY, Time Ledig, " +
                                "3 of 3", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell5.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell5;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIAppointmentCell;
        
        private WinCell mUIAppointmentCell1;
        
        private WinCell mUIAppointmentCell2;
        
        private WinCell mUIAppointmentCell3;
        
        private WinCell mUIAppointmentCell4;
        
        private WinCell mUIAppointmentCell5;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerControl1List2 : WinList
    {
        
        public UISchedulerControl1List2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Dagvisning, 4 total events, 12:00 a.m.  onsdag, januar 3, 2024 to 12:00 a.m.  tor" +
                "sdag, januar 4, 2024";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public WinCell UIAppointmentCell
        {
            get
            {
                if ((this.mUIAppointmentCell == null))
                {
                    this.mUIAppointmentCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "8:00 a.m.  to 4:00 p.m.  onsdag, januar 3, 2024, Subject KOMPETANSE MÅ, Time Ledi" +
                                "g, 2 of 4", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell;
            }
        }
        
        public WinCell UIAppointmentCell1
        {
            get
            {
                if ((this.mUIAppointmentCell1 == null))
                {
                    this.mUIAppointmentCell1 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell1.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell1.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "12:00 p.m.  to 4:00 p.m.  onsdag, januar 3, 2024, Subject KOMPETANSE MÅ, Time Led" +
                                "ig, 4 of 4", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell1;
            }
        }
        
        public WinCell UIAppointmentCell2
        {
            get
            {
                if ((this.mUIAppointmentCell2 == null))
                {
                    this.mUIAppointmentCell2 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell2.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell2.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "12:00 p.m.  to 4:00 p.m.  onsdag, januar 3, 2024, Subject KOMPETANSE MÅ, Time Led" +
                                "ig, 4 of 4", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell2.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell2;
            }
        }
        
        public WinCell UIAppointmentCell3
        {
            get
            {
                if ((this.mUIAppointmentCell3 == null))
                {
                    this.mUIAppointmentCell3 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell3.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell3.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "12:00 p.m.  to 4:00 p.m.  onsdag, januar 3, 2024, Subject KOMPETANSE MÅ, Time Led" +
                                "ig, 4 of 4", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell3.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell3;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIAppointmentCell;
        
        private WinCell mUIAppointmentCell1;
        
        private WinCell mUIAppointmentCell2;
        
        private WinCell mUIAppointmentCell3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerControl1List3 : WinList
    {
        
        public UISchedulerControl1List3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "schedulerControl1";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public WinList UISchedulerControl1List1
        {
            get
            {
                if ((this.mUISchedulerControl1List1 == null))
                {
                    this.mUISchedulerControl1List1 = new WinList(this);
                    #region Search Criteria
                    this.mUISchedulerControl1List1.SearchProperties[WinList.PropertyNames.Name] = "Dagvisning, 4 total events, 12:00 a.m.  onsdag, januar 3, 2024 to 12:00 a.m.  tor" +
                        "sdag, januar 4, 2024";
                    this.mUISchedulerControl1List1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUISchedulerControl1List1;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUISchedulerControl1List1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerControl1List4 : WinList
    {
        
        public UISchedulerControl1List4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Dagvisning, 6 total events, 12:00 a.m.  onsdag, januar 3, 2024 to 12:00 a.m.  tor" +
                "sdag, januar 4, 2024";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public WinCell UIAppointmentCell2
        {
            get
            {
                if ((this.mUIAppointmentCell2 == null))
                {
                    this.mUIAppointmentCell2 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell2.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "8:00 a.m.  to 4:00 p.m.  onsdag, januar 3, 2024, Subject KONTERING, Time Ledig, 2" +
                                " of 6", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell2.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell2;
            }
        }
        
        public WinCell UIAppointmentCell
        {
            get
            {
                if ((this.mUIAppointmentCell == null))
                {
                    this.mUIAppointmentCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "12:00 p.m.  to 2:00 p.m.  onsdag, januar 3, 2024, Subject ALLE MÅ KRAV, Time Ledi" +
                                "g, 5 of 6", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell;
            }
        }
        
        public WinCell UIAppointmentCell1
        {
            get
            {
                if ((this.mUIAppointmentCell1 == null))
                {
                    this.mUIAppointmentCell1 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell1.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "8:00 a.m.  to 4:00 p.m.  onsdag, januar 3, 2024, Subject KONTERING, Time Ledig, 2" +
                                " of 6", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell1;
            }
        }
        
        public WinCell UIAppointmentCell3
        {
            get
            {
                if ((this.mUIAppointmentCell3 == null))
                {
                    this.mUIAppointmentCell3 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell3.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "12:00 p.m.  to 2:00 p.m.  onsdag, januar 3, 2024, Subject ALLE MÅ KRAV, Time Ledi" +
                                "g, 5 of 6", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell3.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell3;
            }
        }
        
        public WinCell UIAppointmentCell4
        {
            get
            {
                if ((this.mUIAppointmentCell4 == null))
                {
                    this.mUIAppointmentCell4 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell4.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "8:00 a.m.  to 10:00 a.m.  onsdag, januar 3, 2024, Subject EKSKL KAN IKKE, Time Le" +
                                "dig, 3 of 6", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell4.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell4;
            }
        }
        
        public WinCell UIAppointmentCell5
        {
            get
            {
                if ((this.mUIAppointmentCell5 == null))
                {
                    this.mUIAppointmentCell5 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell5.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "12:00 p.m.  to 1:00 p.m.  onsdag, januar 3, 2024, Subject KOMPETANSE MÅ, Time Led" +
                                "ig, 6 of 6", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell5.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell5;
            }
        }
        
        public WinCell UIAppointmentCell6
        {
            get
            {
                if ((this.mUIAppointmentCell6 == null))
                {
                    this.mUIAppointmentCell6 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell6.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "12:00 p.m.  to 2:00 p.m.  onsdag, januar 3, 2024, Subject ALLE MÅ KRAV, Time Ledi" +
                                "g, 4 of 6", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell6.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell6;
            }
        }
        
        public WinCell UIAppointmentCell7
        {
            get
            {
                if ((this.mUIAppointmentCell7 == null))
                {
                    this.mUIAppointmentCell7 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell7.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell7.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "1:00 p.m.  to 3:00 p.m.  onsdag, januar 3, 2024, Subject ALLE MÅ KRAV, Time Ledig" +
                                ", 5 of 6", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell7.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell7;
            }
        }
        
        public WinCell UIAppointmentCell8
        {
            get
            {
                if ((this.mUIAppointmentCell8 == null))
                {
                    this.mUIAppointmentCell8 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell8.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "8:00 a.m.  to 10:00 a.m.  onsdag, januar 3, 2024, Subject EKSKL KAN IKKE, Time Le" +
                                "dig, 2 of 6", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell8.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell8;
            }
        }
        
        public WinCell UIAppointmentCell9
        {
            get
            {
                if ((this.mUIAppointmentCell9 == null))
                {
                    this.mUIAppointmentCell9 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell9.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "10:00 a.m.  to 12:00 p.m.  onsdag, januar 3, 2024, Subject PRIO HØY, Time Ledig, " +
                                "3 of 6", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell9.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell9;
            }
        }
        
        public WinCell UIAppointmentCell10
        {
            get
            {
                if ((this.mUIAppointmentCell10 == null))
                {
                    this.mUIAppointmentCell10 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell10.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "12:00 p.m.  to 1:00 p.m.  onsdag, januar 3, 2024, Subject KOMPETANSE MÅ, Time Led" +
                                "ig, 4 of 6", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell10.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell10;
            }
        }
        
        public WinCell UIAppointmentCell11
        {
            get
            {
                if ((this.mUIAppointmentCell11 == null))
                {
                    this.mUIAppointmentCell11 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell11.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "3:00 p.m.  to 4:00 p.m.  onsdag, januar 3, 2024, Subject KONTERING, Time Ledig, 6" +
                                " of 6", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell11.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell11;
            }
        }
        
        public WinCell UIAppointmentCell12
        {
            get
            {
                if ((this.mUIAppointmentCell12 == null))
                {
                    this.mUIAppointmentCell12 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell12.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "1:00 p.m.  to 3:00 p.m.  onsdag, januar 3, 2024, Subject ALLE MÅ KRAV, Time Ledig" +
                                ", 5 of 6", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell12.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell12;
            }
        }
        
        public WinCell UIAppointmentCell13
        {
            get
            {
                if ((this.mUIAppointmentCell13 == null))
                {
                    this.mUIAppointmentCell13 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell13.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell13.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell13;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIAppointmentCell2;
        
        private WinCell mUIAppointmentCell;
        
        private WinCell mUIAppointmentCell1;
        
        private WinCell mUIAppointmentCell3;
        
        private WinCell mUIAppointmentCell4;
        
        private WinCell mUIAppointmentCell5;
        
        private WinCell mUIAppointmentCell6;
        
        private WinCell mUIAppointmentCell7;
        
        private WinCell mUIAppointmentCell8;
        
        private WinCell mUIAppointmentCell9;
        
        private WinCell mUIAppointmentCell10;
        
        private WinCell mUIAppointmentCell11;
        
        private WinCell mUIAppointmentCell12;
        
        private WinCell mUIAppointmentCell13;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerControl1List5 : WinList
    {
        
        public UISchedulerControl1List5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Dagvisning, 2 total events, 12:00 a.m.  søndag, januar 7, 2024 to 12:00 a.m.  man" +
                "dag, januar 8, 2024";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public WinCell UIAppointmentCell
        {
            get
            {
                if ((this.mUIAppointmentCell == null))
                {
                    this.mUIAppointmentCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "8:00 a.m.  to 12:00 p.m.  søndag, januar 7, 2024, Subject KOMPETANSE BØR, Time Le" +
                                "dig, 2 of 2", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIAppointmentCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVelgoppgaverWindow : DXWindow
    {
        
        public UIVelgoppgaverWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Velg oppgaver";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public UIGcRolesTable UIGcRolesTable
        {
            get
            {
                if ((this.mUIGcRolesTable == null))
                {
                    this.mUIGcRolesTable = new UIGcRolesTable(this);
                }
                return this.mUIGcRolesTable;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Velg oppgaver");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRolesTable mUIGcRolesTable;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRolesTable : DXGrid
    {
        
        public UIGcRolesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoles";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public DXCell UIEKSKLKANIKKECell
        {
            get
            {
                if ((this.mUIEKSKLKANIKKECell == null))
                {
                    this.mUIEKSKLKANIKKECell = new DXCell(this);
                    #region Search Criteria
                    this.mUIEKSKLKANIKKECell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRolesGridControlCell[View]gvRoles[Row]3[Column]colRoleCodeDisplayName";
                    this.mUIEKSKLKANIKKECell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIEKSKLKANIKKECell.WindowTitles.Add("Velg oppgaver");
                    #endregion
                }
                return this.mUIEKSKLKANIKKECell;
            }
        }
        
        public DXCell UIKOMPETANSEMÅCell
        {
            get
            {
                if ((this.mUIKOMPETANSEMÅCell == null))
                {
                    this.mUIKOMPETANSEMÅCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIKOMPETANSEMÅCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRolesGridControlCell[View]gvRoles[Row]8[Column]colRoleCodeDisplayName";
                    this.mUIKOMPETANSEMÅCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIKOMPETANSEMÅCell.WindowTitles.Add("Velg oppgaver");
                    #endregion
                }
                return this.mUIKOMPETANSEMÅCell;
            }
        }
        
        public DXCell UIALLEMÅKRAVCell
        {
            get
            {
                if ((this.mUIALLEMÅKRAVCell == null))
                {
                    this.mUIALLEMÅKRAVCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIALLEMÅKRAVCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRolesGridControlCell[View]gvRoles[Row]0[Column]colRoleCodeDisplayName";
                    this.mUIALLEMÅKRAVCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIALLEMÅKRAVCell.WindowTitles.Add("Velg oppgaver");
                    #endregion
                }
                return this.mUIALLEMÅKRAVCell;
            }
        }
        
        public DXCell UIKONTERINGCell
        {
            get
            {
                if ((this.mUIKONTERINGCell == null))
                {
                    this.mUIKONTERINGCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIKONTERINGCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRolesGridControlCell[View]gvRoles[Row]9[Column]colRoleCodeDisplayName";
                    this.mUIKONTERINGCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIKONTERINGCell.WindowTitles.Add("Velg oppgaver");
                    #endregion
                }
                return this.mUIKONTERINGCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIEKSKLKANIKKECell;
        
        private DXCell mUIKOMPETANSEMÅCell;
        
        private DXCell mUIALLEMÅKRAVCell;
        
        private DXCell mUIKONTERINGCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Du kan BARE utføre denne oppgaven!. ";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public WinToolTip UIDukanBAREutføredenneToolTip
        {
            get
            {
                if ((this.mUIDukanBAREutføredenneToolTip == null))
                {
                    this.mUIDukanBAREutføredenneToolTip = new WinToolTip(this);
                    #region Search Criteria
                    this.mUIDukanBAREutføredenneToolTip.SearchProperties[WinControl.PropertyNames.Name] = "Du kan BARE utføre denne oppgaven!. ";
                    #endregion
                }
                return this.mUIDukanBAREutføredenneToolTip;
            }
        }
        #endregion
        
        #region Fields
        private WinToolTip mUIDukanBAREutføredenneToolTip;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Oppgave PRIO HØY overlapper med allerede tildelt eksklusiv oppgave EKSKL KAN IKKE" +
                ". ";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public WinToolTip UIOppgavePRIOHØYoverlaToolTip
        {
            get
            {
                if ((this.mUIOppgavePRIOHØYoverlaToolTip == null))
                {
                    this.mUIOppgavePRIOHØYoverlaToolTip = new WinToolTip(this);
                    #region Search Criteria
                    this.mUIOppgavePRIOHØYoverlaToolTip.SearchProperties[WinControl.PropertyNames.Name] = "Oppgave PRIO HØY overlapper med allerede tildelt eksklusiv oppgave EKSKL KAN IKKE" +
                        ". ";
                    #endregion
                }
                return this.mUIOppgavePRIOHØYoverlaToolTip;
            }
        }
        #endregion
        
        #region Fields
        private WinToolTip mUIOppgavePRIOHØYoverlaToolTip;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Oppgave KONTERING overlapper med allerede tildelt eksklusiv oppgave EKSKL KAN IKK" +
                "E. ";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public WinToolTip UIOppgaveKONTERINGoverToolTip
        {
            get
            {
                if ((this.mUIOppgaveKONTERINGoverToolTip == null))
                {
                    this.mUIOppgaveKONTERINGoverToolTip = new WinToolTip(this);
                    #region Search Criteria
                    this.mUIOppgaveKONTERINGoverToolTip.SearchProperties[WinControl.PropertyNames.Name] = "Oppgave KONTERING overlapper med allerede tildelt eksklusiv oppgave EKSKL KAN IKK" +
                        "E. ";
                    #endregion
                }
                return this.mUIOppgaveKONTERINGoverToolTip;
            }
        }
        #endregion
        
        #region Fields
        private WinToolTip mUIOppgaveKONTERINGoverToolTip;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow4 : WinWindow
    {
        
        public UIItemWindow4()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Nei, nei, nei!! Kun en ting av gangen!!. ";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public WinToolTip UINeineineiKunentingavToolTip
        {
            get
            {
                if ((this.mUINeineineiKunentingavToolTip == null))
                {
                    this.mUINeineineiKunentingavToolTip = new WinToolTip(this);
                    #region Search Criteria
                    this.mUINeineineiKunentingavToolTip.SearchProperties[WinControl.PropertyNames.Name] = "Nei, nei, nei!! Kun en ting av gangen!!. ";
                    #endregion
                }
                return this.mUINeineineiKunentingavToolTip;
            }
        }
        #endregion
        
        #region Fields
        private WinToolTip mUINeineineiKunentingavToolTip;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow5 : WinWindow
    {
        
        public UIItemWindow5()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Oppgave KOMPETANSE MÅ overlapper med allerede tildelt eksklusiv oppgave ALLE MÅ K" +
                "RAV. ";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public WinToolTip UIOppgaveKOMPETANSEMÅoToolTip
        {
            get
            {
                if ((this.mUIOppgaveKOMPETANSEMÅoToolTip == null))
                {
                    this.mUIOppgaveKOMPETANSEMÅoToolTip = new WinToolTip(this);
                    #region Search Criteria
                    this.mUIOppgaveKOMPETANSEMÅoToolTip.SearchProperties[WinControl.PropertyNames.Name] = "Oppgave KOMPETANSE MÅ overlapper med allerede tildelt eksklusiv oppgave ALLE MÅ K" +
                        "RAV. ";
                    #endregion
                }
                return this.mUIOppgaveKOMPETANSEMÅoToolTip;
            }
        }
        #endregion
        
        #region Fields
        private WinToolTip mUIOppgaveKOMPETANSEMÅoToolTip;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow9 : DXWindow
    {
        
        public UIOppgavetildelingWindow9()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "*Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhContentCustom11 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom11(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhContentCustom11 mUIVhContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom11 : DXTestControl
    {
        
        public UIVhContentCustom11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient14 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient14(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient14 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient14 : DXTestControl
    {
        
        public UIPcViewClient14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleAssignmentOverviCustom8 UIRoleAssignmentOverviCustom
        {
            get
            {
                if ((this.mUIRoleAssignmentOverviCustom == null))
                {
                    this.mUIRoleAssignmentOverviCustom = new UIRoleAssignmentOverviCustom8(this);
                }
                return this.mUIRoleAssignmentOverviCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleAssignmentOverviCustom8 mUIRoleAssignmentOverviCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleAssignmentOverviCustom8 : DXTestControl
    {
        
        public UIRoleAssignmentOverviCustom8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAssignmentOverviewView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleAssignmentOverviewView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDpDisponibleDockPanel6 UIDpDisponibleDockPanel
        {
            get
            {
                if ((this.mUIDpDisponibleDockPanel == null))
                {
                    this.mUIDpDisponibleDockPanel = new UIDpDisponibleDockPanel6(this);
                }
                return this.mUIDpDisponibleDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpDisponibleDockPanel6 mUIDpDisponibleDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpDisponibleDockPanel6 : DXDockPanel
    {
        
        public UIDpDisponibleDockPanel6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpDisponible";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer4Custom5 UIControlContainer4Custom
        {
            get
            {
                if ((this.mUIControlContainer4Custom == null))
                {
                    this.mUIControlContainer4Custom = new UIControlContainer4Custom5(this);
                }
                return this.mUIControlContainer4Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer4Custom5 mUIControlContainer4Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer4Custom5 : DXTestControl
    {
        
        public UIControlContainer4Custom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDispGridViewCustom5 UIDispGridViewCustom
        {
            get
            {
                if ((this.mUIDispGridViewCustom == null))
                {
                    this.mUIDispGridViewCustom = new UIDispGridViewCustom5(this);
                }
                return this.mUIDispGridViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDispGridViewCustom5 mUIDispGridViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDispGridViewCustom5 : DXTestControl
    {
        
        public UIDispGridViewCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DispGridView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DispGridView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIIgAvailabilityCustom5 UIIgAvailabilityCustom
        {
            get
            {
                if ((this.mUIIgAvailabilityCustom == null))
                {
                    this.mUIIgAvailabilityCustom = new UIIgAvailabilityCustom5(this);
                }
                return this.mUIIgAvailabilityCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIIgAvailabilityCustom5 mUIIgAvailabilityCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIgAvailabilityCustom5 : DXTestControl
    {
        
        public UIIgAvailabilityCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "igAvailability";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom9 UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom9(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom9 mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom9 : DXTestControl
    {
        
        public UIDdGridControlCustom9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable9 UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable9(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable9 mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable9 : DXGrid
    {
        
        public UIGcDragDropGridTable9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIAJacksonAndrew150023Cell
        {
            get
            {
                if ((this.mUIAJacksonAndrew150023Cell == null))
                {
                    this.mUIAJacksonAndrew150023Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIAJacksonAndrew150023Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col07.01.2024";
                    this.mUIAJacksonAndrew150023Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIAJacksonAndrew150023Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIAJacksonAndrew150023Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIAJacksonAndrew150023Cell;
        #endregion
    }
}
