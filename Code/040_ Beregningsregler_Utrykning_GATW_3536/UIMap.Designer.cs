// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _040_Beregningsregler_Utrykning_GATW_3536
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v19_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// CheckRecalcValuesStep12 - Use 'CheckRecalcValuesStep12ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRecalcValuesStep12()
        {
            #region Variable Declarations
            DXCell uIItem300Overtid50Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem300Overtid50Cell;
            DXCell uIItem050Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem050Cell;
            DXCell uIItem200TimelønnCell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem200TimelønnCell;
            DXCell uIItem050Cell1 = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem050Cell1;
            DXCell uIItem300kompAvspaseriCell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem300kompAvspaseriCell;
            DXCell uIItem000Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem000Cell;
            DXCell uIItem000Cell1 = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem000Cell1;
            #endregion

            // Verify that the 'Text' property of '300 - Overtid 50%' cell equals '300 - Overtid 50%'
            Assert.AreEqual(this.CheckRecalcValuesStep12ExpectedValues.UIItem300Overtid50CellText, uIItem300Overtid50Cell.Text);

            // Verify that the 'Text' property of '0,50' cell equals '1,00'
            Assert.AreEqual(this.CheckRecalcValuesStep12ExpectedValues.UIItem050CellText, uIItem050Cell.Text);

            // Verify that the 'Text' property of '200 - Timelønn' cell equals '310komp - Avspasering Overtid 100%'
            Assert.AreEqual(this.CheckRecalcValuesStep12ExpectedValues.UIItem200TimelønnCellText, uIItem200TimelønnCell.Text);

            // Verify that the 'Text' property of '-0,50' cell equals '1,00'
            Assert.AreEqual(this.CheckRecalcValuesStep12ExpectedValues.UIItem050Cell1Text, uIItem050Cell1.Text);

            // Verify that the 'Text' property of '300komp - Avspasering Overtid 50%' cell equals '300komp - Avspasering Overtid 50%'
            Assert.AreEqual(this.CheckRecalcValuesStep12ExpectedValues.UIItem300kompAvspaseriCellText, uIItem300kompAvspaseriCell.Text);

            // Verify that the 'Text' property of '0,00' cell equals '2,00'
            Assert.AreEqual(this.CheckRecalcValuesStep12ExpectedValues.UIItem000CellText, uIItem000Cell.Text);

            // Verify that the 'Text' property of '0,00' cell equals '0,00'
            Assert.AreEqual(this.CheckRecalcValuesStep12ExpectedValues.UIItem000Cell1Text, uIItem000Cell1.Text);
        }
        
        /// <summary>
        /// CheckValuesAfterChangeStep12 - Use 'CheckValuesAfterChangeStep12ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesAfterChangeStep12()
        {
            #region Variable Declarations
            DXCell uIItem300Overtid50Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem300Overtid50Cell;
            DXCell uIItem050Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem050Cell;
            DXCell uIItem200TimelønnCell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem200TimelønnCell;
            DXCell uIItem050Cell1 = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem050Cell1;
            DXCell uIItem300kompAvspaseriCell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem300kompAvspaseriCell;
            DXCell uIItem000Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem000Cell;
            DXCell uIItem000Cell1 = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem000Cell1;
            #endregion

            // Verify that the 'Text' property of '300 - Overtid 50%' cell equals '300 - Overtid 50%'
            Assert.AreEqual(this.CheckValuesAfterChangeStep12ExpectedValues.UIItem300Overtid50CellText, uIItem300Overtid50Cell.Text);

            // Verify that the 'Text' property of '0,50' cell equals '2,00'
            Assert.AreEqual(this.CheckValuesAfterChangeStep12ExpectedValues.UIItem050CellText, uIItem050Cell.Text);

            // Verify that the 'Text' property of '200 - Timelønn' cell equals '310komp - Avspasering Overtid 100%'
            Assert.AreEqual(this.CheckValuesAfterChangeStep12ExpectedValues.UIItem200TimelønnCellText, uIItem200TimelønnCell.Text);

            // Verify that the 'Text' property of '-0,50' cell equals '1,00'
            Assert.AreEqual(this.CheckValuesAfterChangeStep12ExpectedValues.UIItem050Cell1Text, uIItem050Cell1.Text);

            // Verify that the 'Text' property of '300komp - Avspasering Overtid 50%' cell equals '300komp - Avspasering Overtid 50%'
            Assert.AreEqual(this.CheckValuesAfterChangeStep12ExpectedValues.UIItem300kompAvspaseriCellText, uIItem300kompAvspaseriCell.Text);

            // Verify that the 'Text' property of '0,00' cell equals '2,00'
            Assert.AreEqual(this.CheckValuesAfterChangeStep12ExpectedValues.UIItem000CellText, uIItem000Cell.Text);

            // Verify that the 'Text' property of '0,00' cell equals '0,00'
            Assert.AreEqual(this.CheckValuesAfterChangeStep12ExpectedValues.UIItem000Cell1Text, uIItem000Cell1.Text);
        }
        
        /// <summary>
        /// CheckValuesStep1 - Use 'CheckValuesStep1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep1()
        {
            #region Variable Declarations
            DXCell uIItem300Overtid50Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem300Overtid50Cell;
            DXCell uIItem050Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem050Cell;
            #endregion

            // Verify that the 'Text' property of '300 - Overtid 50%' cell equals '300 - Overtid 50%'
            Assert.AreEqual(this.CheckValuesStep1ExpectedValues.UIItem300Overtid50CellText, uIItem300Overtid50Cell.Text);

            // Verify that the 'Text' property of '0,50' cell equals '0,50'
            Assert.AreEqual(this.CheckValuesStep1ExpectedValues.UIItem050CellText, uIItem050Cell.Text);
        }
        
        /// <summary>
        /// CheckValuesStep10 - Use 'CheckValuesStep10ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep10()
        {
            #region Variable Declarations
            DXCell uIItem300Overtid50Cell = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem300Overtid50Cell;
            DXCell uIItem400Cell = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem400Cell;
            #endregion

            // Verify that the 'Text' property of '300 - Overtid 50%' cell equals '300 - Overtid 50%'
            Assert.AreEqual(this.CheckValuesStep10ExpectedValues.UIItem300Overtid50CellText, uIItem300Overtid50Cell.Text);

            // Verify that the 'Text' property of '4,00' cell equals '4,00'
            Assert.AreEqual(this.CheckValuesStep10ExpectedValues.UIItem400CellText, uIItem400Cell.Text);
        }
        
        /// <summary>
        /// CheckValuesStep11 - Use 'CheckValuesStep11ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep11()
        {
            #region Variable Declarations
            DXCell uIItem300Overtid50Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem300Overtid50Cell;
            DXCell uIItem050Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem050Cell;
            DXCell uIItem200TimelønnCell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem200TimelønnCell;
            DXCell uIItem050Cell1 = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem050Cell1;
            DXCell uIItem000Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem000Cell;
            #endregion

            // Verify that the 'Text' property of '300 - Overtid 50%' cell equals '310 - Overtid 100%'
            Assert.AreEqual(this.CheckValuesStep11ExpectedValues.UIItem300Overtid50CellText, uIItem300Overtid50Cell.Text);

            // Verify that the 'Text' property of '0,50' cell equals '0,50'
            Assert.AreEqual(this.CheckValuesStep11ExpectedValues.UIItem050CellText, uIItem050Cell.Text);

            // Verify that the 'Text' property of '200 - Timelønn' cell equals '300 - Overtid 50%'
            Assert.AreEqual(this.CheckValuesStep11ExpectedValues.UIItem200TimelønnCellText, uIItem200TimelønnCell.Text);

            // Verify that the 'Text' property of '-0,50' cell equals '2,00'
            Assert.AreEqual(this.CheckValuesStep11ExpectedValues.UIItem050Cell1Text, uIItem050Cell1.Text);

            // Verify that the 'Text' property of '0,00' cell equals '0,00'
            Assert.AreEqual(this.CheckValuesStep11ExpectedValues.UIItem000CellText, uIItem000Cell.Text);
        }
        
        /// <summary>
        /// CheckValuesStep13 - Use 'CheckValuesStep13ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep13()
        {
            #region Variable Declarations
            DXCell uIItem300Overtid50Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem300Overtid50Cell;
            DXCell uIItem050Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem050Cell;
            DXCell uIItem200TimelønnCell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem200TimelønnCell;
            DXCell uIItem050Cell1 = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem050Cell1;
            DXCell uIItem000Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem000Cell;
            #endregion

            // Verify that the 'Text' property of '300 - Overtid 50%' cell equals '310 - Overtid 100%'
            Assert.AreEqual(this.CheckValuesStep13ExpectedValues.UIItem300Overtid50CellText, uIItem300Overtid50Cell.Text);

            // Verify that the 'Text' property of '0,50' cell equals '0,50'
            Assert.AreEqual(this.CheckValuesStep13ExpectedValues.UIItem050CellText, uIItem050Cell.Text);

            // Verify that the 'Text' property of '200 - Timelønn' cell equals '300 - Overtid 50%'
            Assert.AreEqual(this.CheckValuesStep13ExpectedValues.UIItem200TimelønnCellText, uIItem200TimelønnCell.Text);

            // Verify that the 'Text' property of '-0,50' cell equals '2,00'
            Assert.AreEqual(this.CheckValuesStep13ExpectedValues.UIItem050Cell1Text, uIItem050Cell1.Text);

            // Verify that the 'Text' property of '0,00' cell equals '0,00'
            Assert.AreEqual(this.CheckValuesStep13ExpectedValues.UIItem000CellText, uIItem000Cell.Text);
        }
        
        /// <summary>
        /// CheckValuesStep2 - Use 'CheckValuesStep2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep2()
        {
            #region Variable Declarations
            DXCell uIItem300Overtid50Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem300Overtid50Cell;
            DXCell uIItem050Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem050Cell;
            DXCell uIItem200TimelønnCell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem200TimelønnCell;
            DXCell uIItem050Cell1 = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem050Cell1;
            #endregion

            // Verify that the 'Text' property of '300 - Overtid 50%' cell equals '300 - Overtid 50%'
            Assert.AreEqual(this.CheckValuesStep2ExpectedValues.UIItem300Overtid50CellText, uIItem300Overtid50Cell.Text);

            // Verify that the 'Text' property of '0,50' cell equals '0,50'
            Assert.AreEqual(this.CheckValuesStep2ExpectedValues.UIItem050CellText, uIItem050Cell.Text);

            // Verify that the 'Text' property of '200 - Timelønn' cell equals '200 - Timelønn'
            Assert.AreEqual(this.CheckValuesStep2ExpectedValues.UIItem200TimelønnCellText, uIItem200TimelønnCell.Text);

            // Verify that the 'Text' property of '-0,50' cell equals '-0,50'
            Assert.AreEqual(this.CheckValuesStep2ExpectedValues.UIItem050Cell1Text, uIItem050Cell1.Text);
        }
        
        /// <summary>
        /// CheckValuesStep3 - Use 'CheckValuesStep3ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep3()
        {
            #region Variable Declarations
            DXCell uIItem300Overtid50Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem300Overtid50Cell;
            DXCell uIItem050Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem050Cell;
            DXCell uIItem050Cell1 = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem050Cell1;
            #endregion

            // Verify that the 'Text' property of '300 - Overtid 50%' cell equals '300 - Overtid 50%'
            Assert.AreEqual(this.CheckValuesStep3ExpectedValues.UIItem300Overtid50CellText, uIItem300Overtid50Cell.Text);

            // Verify that the 'Text' property of '0,50' cell equals '1,50'
            Assert.AreEqual(this.CheckValuesStep3ExpectedValues.UIItem050CellText, uIItem050Cell.Text);

            // Verify that the 'Text' property of '-0,50' cell equals '0,00'
            Assert.AreEqual(this.CheckValuesStep3ExpectedValues.UIItem050Cell1Text, uIItem050Cell1.Text);
        }
        
        /// <summary>
        /// CheckValuesStep4 - Use 'CheckValuesStep4ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep4()
        {
            #region Variable Declarations
            DXCell uIItem300Overtid50Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem300Overtid50Cell;
            DXCell uIItem050Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem050Cell;
            DXCell uIItem050Cell1 = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem050Cell1;
            #endregion

            // Verify that the 'Text' property of '300 - Overtid 50%' cell equals '320 - Overtid 133%'
            Assert.AreEqual(this.CheckValuesStep4ExpectedValues.UIItem300Overtid50CellText, uIItem300Overtid50Cell.Text);

            // Verify that the 'Text' property of '0,50' cell equals '1,00'
            Assert.AreEqual(this.CheckValuesStep4ExpectedValues.UIItem050CellText, uIItem050Cell.Text);

            // Verify that the 'Text' property of '-0,50' cell equals '0,00'
            Assert.AreEqual(this.CheckValuesStep4ExpectedValues.UIItem050Cell1Text, uIItem050Cell1.Text);
        }
        
        /// <summary>
        /// CheckValuesStep5 - Use 'CheckValuesStep5ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep5()
        {
            #region Variable Declarations
            DXCell uIItem300Overtid50Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem300Overtid50Cell;
            DXCell uIItem050Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem050Cell;
            DXCell uIItem200TimelønnCell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem200TimelønnCell;
            DXCell uIItem050Cell1 = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem050Cell1;
            DXCell uIItem000Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem000Cell;
            #endregion

            // Verify that the 'Text' property of '300 - Overtid 50%' cell equals '320 - Overtid 133%'
            Assert.AreEqual(this.CheckValuesStep5ExpectedValues.UIItem300Overtid50CellText, uIItem300Overtid50Cell.Text);

            // Verify that the 'Text' property of '0,50' cell equals '1,00'
            Assert.AreEqual(this.CheckValuesStep5ExpectedValues.UIItem050CellText, uIItem050Cell.Text);

            // Verify that the 'Text' property of '200 - Timelønn' cell equals '200 - Timelønn'
            Assert.AreEqual(this.CheckValuesStep5ExpectedValues.UIItem200TimelønnCellText, uIItem200TimelønnCell.Text);

            // Verify that the 'Text' property of '-0,50' cell equals '-1,00'
            Assert.AreEqual(this.CheckValuesStep5ExpectedValues.UIItem050Cell1Text, uIItem050Cell1.Text);

            // Verify that the 'Text' property of '0,00' cell equals '0,00'
            Assert.AreEqual(this.CheckValuesStep5ExpectedValues.UIItem000CellText, uIItem000Cell.Text);
        }
        
        /// <summary>
        /// CheckValuesStep6 - Use 'CheckValuesStep6ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep6()
        {
            #region Variable Declarations
            DXCell uIItem300Overtid50Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem300Overtid50Cell;
            DXCell uIItem050Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem050Cell;
            DXCell uIItem200TimelønnCell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem200TimelønnCell;
            DXCell uIItem050Cell1 = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem050Cell1;
            #endregion

            // Verify that the 'Text' property of '300 - Overtid 50%' cell equals '310 - Overtid 100%'
            Assert.AreEqual(this.CheckValuesStep6ExpectedValues.UIItem300Overtid50CellText, uIItem300Overtid50Cell.Text);

            // Verify that the 'Text' property of '0,50' cell equals '1,00'
            Assert.AreEqual(this.CheckValuesStep6ExpectedValues.UIItem050CellText, uIItem050Cell.Text);

            // Verify that the 'Text' property of '200 - Timelønn' cell equals '300 - Overtid 50%'
            Assert.AreEqual(this.CheckValuesStep6ExpectedValues.UIItem200TimelønnCellText, uIItem200TimelønnCell.Text);

            // Verify that the 'Text' property of '-0,50' cell equals '3,00'
            Assert.AreEqual(this.CheckValuesStep6ExpectedValues.UIItem050Cell1Text, uIItem050Cell1.Text);
        }
        
        /// <summary>
        /// CheckValuesStep7 - Use 'CheckValuesStep7ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep7()
        {
            #region Variable Declarations
            DXCell uIItem300Overtid50Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem300Overtid50Cell;
            DXCell uIItem050Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem050Cell;
            DXCell uIItem200TimelønnCell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem200TimelønnCell;
            DXCell uIItem050Cell1 = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem050Cell1;
            DXCell uIItem300kompAvspaseriCell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem300kompAvspaseriCell;
            DXCell uIItem000Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem000Cell;
            DXCell uIItem000Cell1 = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem000Cell1;
            #endregion

            // Verify that the 'Text' property of '300 - Overtid 50%' cell equals '300 - Overtid 50%'
            Assert.AreEqual(this.CheckValuesStep7ExpectedValues.UIItem300Overtid50CellText, uIItem300Overtid50Cell.Text);

            // Verify that the 'Text' property of '0,50' cell equals '1,00'
            Assert.AreEqual(this.CheckValuesStep7ExpectedValues.UIItem050CellText, uIItem050Cell.Text);

            // Verify that the 'Text' property of '200 - Timelønn' cell equals '310komp - Avspasering Overtid 100%'
            Assert.AreEqual(this.CheckValuesStep7ExpectedValues.UIItem200TimelønnCellText, uIItem200TimelønnCell.Text);

            // Verify that the 'Text' property of '-0,50' cell equals '1,00'
            Assert.AreEqual(this.CheckValuesStep7ExpectedValues.UIItem050Cell1Text, uIItem050Cell1.Text);

            // Verify that the 'Text' property of '300komp - Avspasering Overtid 50%' cell equals '300komp - Avspasering Overtid 50%'
            Assert.AreEqual(this.CheckValuesStep7ExpectedValues.UIItem300kompAvspaseriCellText, uIItem300kompAvspaseriCell.Text);

            // Verify that the 'Text' property of '0,00' cell equals '2,00'
            Assert.AreEqual(this.CheckValuesStep7ExpectedValues.UIItem000CellText, uIItem000Cell.Text);

            // Verify that the 'Text' property of '0,00' cell equals '0,00'
            Assert.AreEqual(this.CheckValuesStep7ExpectedValues.UIItem000Cell1Text, uIItem000Cell1.Text);
        }
        
        /// <summary>
        /// CheckValuesStep8 - Use 'CheckValuesStep8ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep8()
        {
            #region Variable Declarations
            DXCell uIItem300Overtid50Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem300Overtid50Cell;
            DXCell uIItem050Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem050Cell;
            DXCell uIItem200TimelønnCell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem200TimelønnCell;
            DXCell uIItem050Cell1 = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem050Cell1;
            DXCell uIItem300kompAvspaseriCell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem300kompAvspaseriCell;
            DXCell uIItem000Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem000Cell;
            DXCell uIItem000Cell1 = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem000Cell1;
            #endregion

            // Verify that the 'Text' property of '300 - Overtid 50%' cell equals '310 - Overtid 100%'
            Assert.AreEqual(this.CheckValuesStep8ExpectedValues.UIItem300Overtid50CellText, uIItem300Overtid50Cell.Text);

            // Verify that the 'Text' property of '0,50' cell equals '2,00'
            Assert.AreEqual(this.CheckValuesStep8ExpectedValues.UIItem050CellText, uIItem050Cell.Text);

            // Verify that the 'Text' property of '200 - Timelønn' cell equals '300 - Overtid 50%'
            Assert.AreEqual(this.CheckValuesStep8ExpectedValues.UIItem200TimelønnCellText, uIItem200TimelønnCell.Text);

            // Verify that the 'Text' property of '-0,50' cell equals '2,00'
            Assert.AreEqual(this.CheckValuesStep8ExpectedValues.UIItem050Cell1Text, uIItem050Cell1.Text);

            // Verify that the 'Text' property of '300komp - Avspasering Overtid 50%' cell equals '320 - Overtid 133%'
            Assert.AreEqual(this.CheckValuesStep8ExpectedValues.UIItem300kompAvspaseriCellText, uIItem300kompAvspaseriCell.Text);

            // Verify that the 'Text' property of '0,00' cell equals '1,00'
            Assert.AreEqual(this.CheckValuesStep8ExpectedValues.UIItem000CellText, uIItem000Cell.Text);

            // Verify that the 'Text' property of '0,00' cell equals '0,00'
            Assert.AreEqual(this.CheckValuesStep8ExpectedValues.UIItem000Cell1Text, uIItem000Cell1.Text);
        }
        
        /// <summary>
        /// CheckValuesStep9 - Use 'CheckValuesStep9ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep9()
        {
            #region Variable Declarations
            DXCell uIItem300Overtid50Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem300Overtid50Cell;
            DXCell uIItem050Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem050Cell;
            DXCell uIItem200TimelønnCell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem200TimelønnCell;
            DXCell uIItem050Cell1 = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem050Cell1;
            DXCell uIItem300kompAvspaseriCell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem300kompAvspaseriCell;
            DXCell uIItem000Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem000Cell;
            DXCell uIItem300kompAvspaseriCell1 = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem300kompAvspaseriCell1;
            DXCell uIItem000Cell1 = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem000Cell1;
            DXCell uIItem000Cell2 = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIGcLinesTable.UIItem000Cell2;
            #endregion

            // Verify that the 'Text' property of '300 - Overtid 50%' cell equals '300 - Overtid 50%'
            Assert.AreEqual(this.CheckValuesStep9ExpectedValues.UIItem300Overtid50CellText, uIItem300Overtid50Cell.Text);

            // Verify that the 'Text' property of '0,50' cell equals '1,00'
            Assert.AreEqual(this.CheckValuesStep9ExpectedValues.UIItem050CellText, uIItem050Cell.Text);

            // Verify that the 'Text' property of '200 - Timelønn' cell equals '320 - Overtid 133%'
            Assert.AreEqual(this.CheckValuesStep9ExpectedValues.UIItem200TimelønnCellText, uIItem200TimelønnCell.Text);

            // Verify that the 'Text' property of '-0,50' cell equals '1,00'
            Assert.AreEqual(this.CheckValuesStep9ExpectedValues.UIItem050Cell1Text, uIItem050Cell1.Text);

            // Verify that the 'Text' property of '300komp - Avspasering Overtid 50%' cell equals '310komp - Avspasering Overtid 100%'
            Assert.AreEqual(this.CheckValuesStep9ExpectedValues.UIItem300kompAvspaseriCellText, uIItem300kompAvspaseriCell.Text);

            // Verify that the 'Text' property of '0,00' cell equals '2,00'
            Assert.AreEqual(this.CheckValuesStep9ExpectedValues.UIItem000CellText, uIItem000Cell.Text);

            // Verify that the 'Text' property of '300komp - Avspasering Overtid 50%' cell equals '300komp - Avspasering Overtid 50%'
            Assert.AreEqual(this.CheckValuesStep9ExpectedValues.UIItem300kompAvspaseriCell1Text, uIItem300kompAvspaseriCell1.Text);

            // Verify that the 'Text' property of '0,00' cell equals '1,00'
            Assert.AreEqual(this.CheckValuesStep9ExpectedValues.UIItem000Cell1Text, uIItem000Cell1.Text);

            // Verify that the 'Text' property of '0,00' cell equals '0,00'
            Assert.AreEqual(this.CheckValuesStep9ExpectedValues.UIItem000Cell2Text, uIItem000Cell2.Text);
        }
        
        /// <summary>
        /// DragHarryHoleToTurnoutStep1
        /// </summary>
        public void DragHarryHoleToTurnoutStep1()
        {
            #region Variable Declarations
            DXCell uIItem16000100Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIAften00167770770FalsDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIItem16000100Cell;
            DXRibbonButtonItem uIUtrykningRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIUtrykningRibbonBaseButtonItem;
            #endregion

            // Move '16:00 - 01:00' cell to 'Utrykning' RibbonBaseButtonItem
            uIUtrykningRibbonBaseButtonItem.EnsureClickable(new Point(25, 23));
            Mouse.StartDragging(uIItem16000100Cell, new Point(5, 5));
            Mouse.StopDragging(uIUtrykningRibbonBaseButtonItem, new Point(25, 23));
        }
        
        /// <summary>
        /// DragHarryHoleToTurnoutStep2
        /// </summary>
        public void DragHarryHoleToTurnoutStep2()
        {
            #region Variable Declarations
            DXCell uIItem16000100Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIAften00167770770FalsDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIItem16000100Cell;
            DXRibbonButtonItem uIUtrykningRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIUtrykningRibbonBaseButtonItem;
            #endregion

            // Move '16:00 - 01:00' cell to 'Utrykning' RibbonBaseButtonItem
            uIUtrykningRibbonBaseButtonItem.EnsureClickable(new Point(22, 24));
            Mouse.StartDragging(uIItem16000100Cell, new Point(16, 7));
            Mouse.StopDragging(uIUtrykningRibbonBaseButtonItem, new Point(22, 24));
        }
        
        /// <summary>
        /// DragHarryHoleToTurnoutStep3
        /// </summary>
        public void DragHarryHoleToTurnoutStep3()
        {
            #region Variable Declarations
            DXCell uIItem16000100Cell1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIAften00167770770FalsDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIItem16000100Cell1;
            DXRibbonButtonItem uIUtrykningRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIUtrykningRibbonBaseButtonItem;
            #endregion

            // Move '16:00 - 01:00' cell to 'Utrykning' RibbonBaseButtonItem
            uIUtrykningRibbonBaseButtonItem.EnsureClickable(new Point(24, 28));
            Mouse.StartDragging(uIItem16000100Cell1, new Point(54, -10));
            Mouse.StopDragging(uIUtrykningRibbonBaseButtonItem, new Point(24, 28));
        }
        
        /// <summary>
        /// DragHarryHoleToTurnoutStep4
        /// </summary>
        public void DragHarryHoleToTurnoutStep4()
        {
            #region Variable Declarations
            DXCell uIItem01000700Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UINatttiltirsdag001677DockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIItem01000700Cell;
            DXRibbonButtonItem uIUtrykningRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIUtrykningRibbonBaseButtonItem;
            #endregion

            // Move '01:00 - 07:00' cell to 'Utrykning' RibbonBaseButtonItem
            uIUtrykningRibbonBaseButtonItem.EnsureClickable(new Point(25, 19));
            Mouse.StartDragging(uIItem01000700Cell, new Point(48, 8));
            Mouse.StopDragging(uIUtrykningRibbonBaseButtonItem, new Point(25, 19));
        }
        
        /// <summary>
        /// DragVargVeumToExtraStep10
        /// </summary>
        public void DragVargVeumToExtraStep10()
        {
            #region Variable Declarations
            DXCell uIVeumVargCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIFriVikar00167770770FDockPanel.UIControlContainerCustom.UIGcFreeColumnTable.UIVeumVargCell;
            DXRibbonButtonItem uIEkstraRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIEkstraRibbonBaseButtonItem;
            #endregion

            // Move 'Veum, Varg' cell to 'Ekstra' RibbonBaseButtonItem
            uIEkstraRibbonBaseButtonItem.EnsureClickable(new Point(20, 21));
            Mouse.StartDragging(uIVeumVargCell, new Point(-17, 4));
            Mouse.StopDragging(uIEkstraRibbonBaseButtonItem, new Point(20, 21));
        }
        
        /// <summary>
        /// DragVargVeumToTurnoutStep11
        /// </summary>
        public void DragVargVeumToTurnoutStep11()
        {
            #region Variable Declarations
            DXCell uIItem22000800Cell2 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIAften00167770770FalsDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIItem22000800Cell2;
            DXRibbonButtonItem uIUtrykningRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIUtrykningRibbonBaseButtonItem;
            #endregion

            // Move '22:00 - 08:00' cell to 'Utrykning' RibbonBaseButtonItem
            uIUtrykningRibbonBaseButtonItem.EnsureClickable(new Point(25, 22));
            Mouse.StartDragging(uIItem22000800Cell2, new Point(29, -14));
            Mouse.StopDragging(uIUtrykningRibbonBaseButtonItem, new Point(25, 22));
        }
        
        /// <summary>
        /// DragVargVeumToTurnoutStep12
        /// </summary>
        public void DragVargVeumToTurnoutStep12()
        {
            #region Variable Declarations
            DXCell uIItem22000800Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIAften00167770770FalsDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIItem22000800Cell;
            DXRibbonButtonItem uIUtrykningRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIUtrykningRibbonBaseButtonItem;
            #endregion

            // Move '22:00 - 08:00' cell to 'Utrykning' RibbonBaseButtonItem
            uIUtrykningRibbonBaseButtonItem.EnsureClickable(new Point(25, 20));
            Mouse.StartDragging(uIItem22000800Cell, new Point(57, -18));
            Mouse.StopDragging(uIUtrykningRibbonBaseButtonItem, new Point(25, 20));
        }
        
        /// <summary>
        /// DragVargVeumToTurnoutStep13
        /// </summary>
        public void DragVargVeumToTurnoutStep13()
        {
            #region Variable Declarations
            DXCell uIItem23000300Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIAften00167770770FalsDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIItem23000300Cell;
            DXRibbonButtonItem uIUtrykningRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIUtrykningRibbonBaseButtonItem;
            #endregion

            // Move '23:00 - 03:00' cell to 'Utrykning' RibbonBaseButtonItem
            uIUtrykningRibbonBaseButtonItem.EnsureClickable(new Point(27, 25));
            Mouse.StartDragging(uIItem23000300Cell, new Point(44, -13));
            Mouse.StopDragging(uIUtrykningRibbonBaseButtonItem, new Point(27, 25));
        }
        
        /// <summary>
        /// DragVargVeumToTurnoutStep6
        /// </summary>
        public void DragVargVeumToTurnoutStep6()
        {
            #region Variable Declarations
            DXCell uIItem22000800Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIAften00167770770FalsDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIItem22000800Cell;
            DXRibbonButtonItem uIUtrykningRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIUtrykningRibbonBaseButtonItem;
            #endregion

            // Move '22:00 - 08:00' cell to 'Utrykning' RibbonBaseButtonItem
            uIUtrykningRibbonBaseButtonItem.EnsureClickable(new Point(28, 27));
            Mouse.StartDragging(uIItem22000800Cell, new Point(64, -5));
            Mouse.StopDragging(uIUtrykningRibbonBaseButtonItem, new Point(28, 27));
        }
        
        /// <summary>
        /// DragVargVeumToTurnoutStep7
        /// </summary>
        public void DragVargVeumToTurnoutStep7()
        {
            #region Variable Declarations
            DXCell uIItem23000300Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIAften00167770770FalsDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIItem23000300Cell;
            DXRibbonButtonItem uIUtrykningRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIUtrykningRibbonBaseButtonItem;
            #endregion

            // Move '23:00 - 03:00' cell to 'Utrykning' RibbonBaseButtonItem
            uIUtrykningRibbonBaseButtonItem.EnsureClickable(new Point(31, 22));
            Mouse.StartDragging(uIItem23000300Cell, new Point(70, -13));
            Mouse.StopDragging(uIUtrykningRibbonBaseButtonItem, new Point(31, 22));
        }
        
        /// <summary>
        /// DragVargVeumToTurnoutStep8
        /// </summary>
        public void DragVargVeumToTurnoutStep8()
        {
            #region Variable Declarations
            DXCell uIItem22000800Cell1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIAften00167770770FalsDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIItem22000800Cell1;
            DXRibbonButtonItem uIUtrykningRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIUtrykningRibbonBaseButtonItem;
            #endregion

            // Move '22:00 - 08:00' cell to 'Utrykning' RibbonBaseButtonItem
            uIUtrykningRibbonBaseButtonItem.EnsureClickable(new Point(27, 27));
            Mouse.StartDragging(uIItem22000800Cell1, new Point(25, -6));
            Mouse.StopDragging(uIUtrykningRibbonBaseButtonItem, new Point(27, 27));
        }
        
        /// <summary>
        /// DragVargVeumToTurnoutStep9
        /// </summary>
        public void DragVargVeumToTurnoutStep9()
        {
            #region Variable Declarations
            DXCell uIItem23000400Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIAften00167770770FalsDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIItem23000400Cell;
            DXRibbonButtonItem uIUtrykningRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIUtrykningRibbonBaseButtonItem;
            #endregion

            // Move '23:00 - 04:00' cell to 'Utrykning' RibbonBaseButtonItem
            uIUtrykningRibbonBaseButtonItem.EnsureClickable(new Point(23, 28));
            Mouse.StartDragging(uIItem23000400Cell, new Point(63, -4));
            Mouse.StopDragging(uIUtrykningRibbonBaseButtonItem, new Point(23, 28));
        }
        
        #region Properties
        public virtual CheckRecalcValuesStep12ExpectedValues CheckRecalcValuesStep12ExpectedValues
        {
            get
            {
                if ((this.mCheckRecalcValuesStep12ExpectedValues == null))
                {
                    this.mCheckRecalcValuesStep12ExpectedValues = new CheckRecalcValuesStep12ExpectedValues();
                }
                return this.mCheckRecalcValuesStep12ExpectedValues;
            }
        }
        
        public virtual CheckValuesAfterChangeStep12ExpectedValues CheckValuesAfterChangeStep12ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesAfterChangeStep12ExpectedValues == null))
                {
                    this.mCheckValuesAfterChangeStep12ExpectedValues = new CheckValuesAfterChangeStep12ExpectedValues();
                }
                return this.mCheckValuesAfterChangeStep12ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep1ExpectedValues CheckValuesStep1ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep1ExpectedValues == null))
                {
                    this.mCheckValuesStep1ExpectedValues = new CheckValuesStep1ExpectedValues();
                }
                return this.mCheckValuesStep1ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep10ExpectedValues CheckValuesStep10ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep10ExpectedValues == null))
                {
                    this.mCheckValuesStep10ExpectedValues = new CheckValuesStep10ExpectedValues();
                }
                return this.mCheckValuesStep10ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep11ExpectedValues CheckValuesStep11ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep11ExpectedValues == null))
                {
                    this.mCheckValuesStep11ExpectedValues = new CheckValuesStep11ExpectedValues();
                }
                return this.mCheckValuesStep11ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep13ExpectedValues CheckValuesStep13ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep13ExpectedValues == null))
                {
                    this.mCheckValuesStep13ExpectedValues = new CheckValuesStep13ExpectedValues();
                }
                return this.mCheckValuesStep13ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep2ExpectedValues CheckValuesStep2ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep2ExpectedValues == null))
                {
                    this.mCheckValuesStep2ExpectedValues = new CheckValuesStep2ExpectedValues();
                }
                return this.mCheckValuesStep2ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep3ExpectedValues CheckValuesStep3ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep3ExpectedValues == null))
                {
                    this.mCheckValuesStep3ExpectedValues = new CheckValuesStep3ExpectedValues();
                }
                return this.mCheckValuesStep3ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep4ExpectedValues CheckValuesStep4ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep4ExpectedValues == null))
                {
                    this.mCheckValuesStep4ExpectedValues = new CheckValuesStep4ExpectedValues();
                }
                return this.mCheckValuesStep4ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep5ExpectedValues CheckValuesStep5ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep5ExpectedValues == null))
                {
                    this.mCheckValuesStep5ExpectedValues = new CheckValuesStep5ExpectedValues();
                }
                return this.mCheckValuesStep5ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep6ExpectedValues CheckValuesStep6ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep6ExpectedValues == null))
                {
                    this.mCheckValuesStep6ExpectedValues = new CheckValuesStep6ExpectedValues();
                }
                return this.mCheckValuesStep6ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep7ExpectedValues CheckValuesStep7ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep7ExpectedValues == null))
                {
                    this.mCheckValuesStep7ExpectedValues = new CheckValuesStep7ExpectedValues();
                }
                return this.mCheckValuesStep7ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep8ExpectedValues CheckValuesStep8ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep8ExpectedValues == null))
                {
                    this.mCheckValuesStep8ExpectedValues = new CheckValuesStep8ExpectedValues();
                }
                return this.mCheckValuesStep8ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep9ExpectedValues CheckValuesStep9ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep9ExpectedValues == null))
                {
                    this.mCheckValuesStep9ExpectedValues = new CheckValuesStep9ExpectedValues();
                }
                return this.mCheckValuesStep9ExpectedValues;
            }
        }
        
        public UIGatWindow UIGatWindow
        {
            get
            {
                if ((this.mUIGatWindow == null))
                {
                    this.mUIGatWindow = new UIGatWindow();
                }
                return this.mUIGatWindow;
            }
        }
        
        public UIUtrykningWindow UIUtrykningWindow
        {
            get
            {
                if ((this.mUIUtrykningWindow == null))
                {
                    this.mUIUtrykningWindow = new UIUtrykningWindow();
                }
                return this.mUIUtrykningWindow;
            }
        }
        
        public UIMerarbeidovertidWindow UIMerarbeidovertidWindow
        {
            get
            {
                if ((this.mUIMerarbeidovertidWindow == null))
                {
                    this.mUIMerarbeidovertidWindow = new UIMerarbeidovertidWindow();
                }
                return this.mUIMerarbeidovertidWindow;
            }
        }
        #endregion
        
        #region Fields
        private CheckRecalcValuesStep12ExpectedValues mCheckRecalcValuesStep12ExpectedValues;
        
        private CheckValuesAfterChangeStep12ExpectedValues mCheckValuesAfterChangeStep12ExpectedValues;
        
        private CheckValuesStep1ExpectedValues mCheckValuesStep1ExpectedValues;
        
        private CheckValuesStep10ExpectedValues mCheckValuesStep10ExpectedValues;
        
        private CheckValuesStep11ExpectedValues mCheckValuesStep11ExpectedValues;
        
        private CheckValuesStep13ExpectedValues mCheckValuesStep13ExpectedValues;
        
        private CheckValuesStep2ExpectedValues mCheckValuesStep2ExpectedValues;
        
        private CheckValuesStep3ExpectedValues mCheckValuesStep3ExpectedValues;
        
        private CheckValuesStep4ExpectedValues mCheckValuesStep4ExpectedValues;
        
        private CheckValuesStep5ExpectedValues mCheckValuesStep5ExpectedValues;
        
        private CheckValuesStep6ExpectedValues mCheckValuesStep6ExpectedValues;
        
        private CheckValuesStep7ExpectedValues mCheckValuesStep7ExpectedValues;
        
        private CheckValuesStep8ExpectedValues mCheckValuesStep8ExpectedValues;
        
        private CheckValuesStep9ExpectedValues mCheckValuesStep9ExpectedValues;
        
        private UIGatWindow mUIGatWindow;
        
        private UIUtrykningWindow mUIUtrykningWindow;
        
        private UIMerarbeidovertidWindow mUIMerarbeidovertidWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRecalcValuesStep12'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRecalcValuesStep12ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '300 - Overtid 50%' cell equals '300 - Overtid 50%'
        /// </summary>
        public string UIItem300Overtid50CellText = "300 - Overtid 50%";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,50' cell equals '1,00'
        /// </summary>
        public string UIItem050CellText = "1,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '200 - Timelønn' cell equals '310komp - Avspasering Overtid 100%'
        /// </summary>
        public string UIItem200TimelønnCellText = "310komp - Avspasering Overtid 100%";
        
        /// <summary>
        /// Verify that the 'Text' property of '-0,50' cell equals '1,00'
        /// </summary>
        public string UIItem050Cell1Text = "1,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '300komp - Avspasering Overtid 50%' cell equals '300komp - Avspasering Overtid 50%'
        /// </summary>
        public string UIItem300kompAvspaseriCellText = "300komp - Avspasering Overtid 50%";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,00' cell equals '2,00'
        /// </summary>
        public string UIItem000CellText = "2,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,00' cell equals '0,00'
        /// </summary>
        public string UIItem000Cell1Text = "0,00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesAfterChangeStep12'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesAfterChangeStep12ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '300 - Overtid 50%' cell equals '300 - Overtid 50%'
        /// </summary>
        public string UIItem300Overtid50CellText = "300 - Overtid 50%";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,50' cell equals '2,00'
        /// </summary>
        public string UIItem050CellText = "2,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '200 - Timelønn' cell equals '310komp - Avspasering Overtid 100%'
        /// </summary>
        public string UIItem200TimelønnCellText = "310komp - Avspasering Overtid 100%";
        
        /// <summary>
        /// Verify that the 'Text' property of '-0,50' cell equals '1,00'
        /// </summary>
        public string UIItem050Cell1Text = "1,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '300komp - Avspasering Overtid 50%' cell equals '300komp - Avspasering Overtid 50%'
        /// </summary>
        public string UIItem300kompAvspaseriCellText = "300komp - Avspasering Overtid 50%";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,00' cell equals '2,00'
        /// </summary>
        public string UIItem000CellText = "2,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,00' cell equals '0,00'
        /// </summary>
        public string UIItem000Cell1Text = "0,00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '300 - Overtid 50%' cell equals '300 - Overtid 50%'
        /// </summary>
        public string UIItem300Overtid50CellText = "300 - Overtid 50%";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,50' cell equals '0,50'
        /// </summary>
        public string UIItem050CellText = "0,50";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep10'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep10ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '300 - Overtid 50%' cell equals '300 - Overtid 50%'
        /// </summary>
        public string UIItem300Overtid50CellText = "300 - Overtid 50%";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,00' cell equals '4,00'
        /// </summary>
        public string UIItem400CellText = "4,00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep11'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep11ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '300 - Overtid 50%' cell equals '310 - Overtid 100%'
        /// </summary>
        public string UIItem300Overtid50CellText = "310 - Overtid 100%";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,50' cell equals '0,50'
        /// </summary>
        public string UIItem050CellText = "0,50";
        
        /// <summary>
        /// Verify that the 'Text' property of '200 - Timelønn' cell equals '300 - Overtid 50%'
        /// </summary>
        public string UIItem200TimelønnCellText = "300 - Overtid 50%";
        
        /// <summary>
        /// Verify that the 'Text' property of '-0,50' cell equals '2,00'
        /// </summary>
        public string UIItem050Cell1Text = "2,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,00' cell equals '0,00'
        /// </summary>
        public string UIItem000CellText = "0,00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep13'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep13ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '300 - Overtid 50%' cell equals '310 - Overtid 100%'
        /// </summary>
        public string UIItem300Overtid50CellText = "310 - Overtid 100%";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,50' cell equals '0,50'
        /// </summary>
        public string UIItem050CellText = "0,50";
        
        /// <summary>
        /// Verify that the 'Text' property of '200 - Timelønn' cell equals '300 - Overtid 50%'
        /// </summary>
        public string UIItem200TimelønnCellText = "300 - Overtid 50%";
        
        /// <summary>
        /// Verify that the 'Text' property of '-0,50' cell equals '2,00'
        /// </summary>
        public string UIItem050Cell1Text = "2,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,00' cell equals '0,00'
        /// </summary>
        public string UIItem000CellText = "0,00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '300 - Overtid 50%' cell equals '300 - Overtid 50%'
        /// </summary>
        public string UIItem300Overtid50CellText = "300 - Overtid 50%";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,50' cell equals '0,50'
        /// </summary>
        public string UIItem050CellText = "0,50";
        
        /// <summary>
        /// Verify that the 'Text' property of '200 - Timelønn' cell equals '200 - Timelønn'
        /// </summary>
        public string UIItem200TimelønnCellText = "200 - Timelønn";
        
        /// <summary>
        /// Verify that the 'Text' property of '-0,50' cell equals '-0,50'
        /// </summary>
        public string UIItem050Cell1Text = "-0,50";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '300 - Overtid 50%' cell equals '300 - Overtid 50%'
        /// </summary>
        public string UIItem300Overtid50CellText = "300 - Overtid 50%";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,50' cell equals '1,50'
        /// </summary>
        public string UIItem050CellText = "1,50";
        
        /// <summary>
        /// Verify that the 'Text' property of '-0,50' cell equals '0,00'
        /// </summary>
        public string UIItem050Cell1Text = "0,00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep4ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '300 - Overtid 50%' cell equals '320 - Overtid 133%'
        /// </summary>
        public string UIItem300Overtid50CellText = "320 - Overtid 133%";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,50' cell equals '1,00'
        /// </summary>
        public string UIItem050CellText = "1,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '-0,50' cell equals '0,00'
        /// </summary>
        public string UIItem050Cell1Text = "0,00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep5'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep5ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '300 - Overtid 50%' cell equals '320 - Overtid 133%'
        /// </summary>
        public string UIItem300Overtid50CellText = "320 - Overtid 133%";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,50' cell equals '1,00'
        /// </summary>
        public string UIItem050CellText = "1,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '200 - Timelønn' cell equals '200 - Timelønn'
        /// </summary>
        public string UIItem200TimelønnCellText = "200 - Timelønn";
        
        /// <summary>
        /// Verify that the 'Text' property of '-0,50' cell equals '-1,00'
        /// </summary>
        public string UIItem050Cell1Text = "-1,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,00' cell equals '0,00'
        /// </summary>
        public string UIItem000CellText = "0,00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep6'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep6ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '300 - Overtid 50%' cell equals '310 - Overtid 100%'
        /// </summary>
        public string UIItem300Overtid50CellText = "310 - Overtid 100%";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,50' cell equals '1,00'
        /// </summary>
        public string UIItem050CellText = "1,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '200 - Timelønn' cell equals '300 - Overtid 50%'
        /// </summary>
        public string UIItem200TimelønnCellText = "300 - Overtid 50%";
        
        /// <summary>
        /// Verify that the 'Text' property of '-0,50' cell equals '3,00'
        /// </summary>
        public string UIItem050Cell1Text = "3,00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep7'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep7ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '300 - Overtid 50%' cell equals '300 - Overtid 50%'
        /// </summary>
        public string UIItem300Overtid50CellText = "300 - Overtid 50%";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,50' cell equals '1,00'
        /// </summary>
        public string UIItem050CellText = "1,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '200 - Timelønn' cell equals '310komp - Avspasering Overtid 100%'
        /// </summary>
        public string UIItem200TimelønnCellText = "310komp - Avspasering Overtid 100%";
        
        /// <summary>
        /// Verify that the 'Text' property of '-0,50' cell equals '1,00'
        /// </summary>
        public string UIItem050Cell1Text = "1,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '300komp - Avspasering Overtid 50%' cell equals '300komp - Avspasering Overtid 50%'
        /// </summary>
        public string UIItem300kompAvspaseriCellText = "300komp - Avspasering Overtid 50%";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,00' cell equals '2,00'
        /// </summary>
        public string UIItem000CellText = "2,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,00' cell equals '0,00'
        /// </summary>
        public string UIItem000Cell1Text = "0,00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep8'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep8ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '300 - Overtid 50%' cell equals '310 - Overtid 100%'
        /// </summary>
        public string UIItem300Overtid50CellText = "310 - Overtid 100%";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,50' cell equals '2,00'
        /// </summary>
        public string UIItem050CellText = "2,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '200 - Timelønn' cell equals '300 - Overtid 50%'
        /// </summary>
        public string UIItem200TimelønnCellText = "300 - Overtid 50%";
        
        /// <summary>
        /// Verify that the 'Text' property of '-0,50' cell equals '2,00'
        /// </summary>
        public string UIItem050Cell1Text = "2,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '300komp - Avspasering Overtid 50%' cell equals '320 - Overtid 133%'
        /// </summary>
        public string UIItem300kompAvspaseriCellText = "320 - Overtid 133%";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,00' cell equals '1,00'
        /// </summary>
        public string UIItem000CellText = "1,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,00' cell equals '0,00'
        /// </summary>
        public string UIItem000Cell1Text = "0,00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep9'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep9ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '300 - Overtid 50%' cell equals '300 - Overtid 50%'
        /// </summary>
        public string UIItem300Overtid50CellText = "300 - Overtid 50%";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,50' cell equals '1,00'
        /// </summary>
        public string UIItem050CellText = "1,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '200 - Timelønn' cell equals '320 - Overtid 133%'
        /// </summary>
        public string UIItem200TimelønnCellText = "320 - Overtid 133%";
        
        /// <summary>
        /// Verify that the 'Text' property of '-0,50' cell equals '1,00'
        /// </summary>
        public string UIItem050Cell1Text = "1,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '300komp - Avspasering Overtid 50%' cell equals '310komp - Avspasering Overtid 100%'
        /// </summary>
        public string UIItem300kompAvspaseriCellText = "310komp - Avspasering Overtid 100%";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,00' cell equals '2,00'
        /// </summary>
        public string UIItem000CellText = "2,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '300komp - Avspasering Overtid 50%' cell equals '300komp - Avspasering Overtid 50%'
        /// </summary>
        public string UIItem300kompAvspaseriCell1Text = "300komp - Avspasering Overtid 50%";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,00' cell equals '1,00'
        /// </summary>
        public string UIItem000Cell1Text = "1,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,00' cell equals '0,00'
        /// </summary>
        public string UIItem000Cell2Text = "0,00";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGatWindow : WinWindow
    {
        
        public UIGatWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom mUIViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHostCustom : DXTestControl
    {
        
        public UIViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient : DXTestControl
    {
        
        public UIPcViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRibbonControlRibbon UIRibbonControlRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRibbon == null))
                {
                    this.mUIRibbonControlRibbon = new UIRibbonControlRibbon(this);
                }
                return this.mUIRibbonControlRibbon;
            }
        }
        
        public UICenterPanelDayDockPanel UICenterPanelDayDockPanel
        {
            get
            {
                if ((this.mUICenterPanelDayDockPanel == null))
                {
                    this.mUICenterPanelDayDockPanel = new UICenterPanelDayDockPanel(this);
                }
                return this.mUICenterPanelDayDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonControlRibbon mUIRibbonControlRibbon;
        
        private UICenterPanelDayDockPanel mUICenterPanelDayDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRibbonControlRibbon : DXRibbon
    {
        
        public UIRibbonControlRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRpMainMenuRibbonPage UIRpMainMenuRibbonPage
        {
            get
            {
                if ((this.mUIRpMainMenuRibbonPage == null))
                {
                    this.mUIRpMainMenuRibbonPage = new UIRpMainMenuRibbonPage(this);
                }
                return this.mUIRpMainMenuRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpMainMenuRibbonPage mUIRpMainMenuRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpMainMenuRibbonPage : DXRibbonPage
    {
        
        public UIRpMainMenuRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpMainMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGrpDevianceRibbonPageGroup UIGrpDevianceRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpDevianceRibbonPageGroup == null))
                {
                    this.mUIGrpDevianceRibbonPageGroup = new UIGrpDevianceRibbonPageGroup(this);
                }
                return this.mUIGrpDevianceRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpDevianceRibbonPageGroup mUIGrpDevianceRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpDevianceRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpDevianceRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpDeviance";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIUtrykningRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIUtrykningRibbonBaseButtonItem == null))
                {
                    this.mUIUtrykningRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIUtrykningRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnTurnOut";
                    this.mUIUtrykningRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIUtrykningRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIUtrykningRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIEkstraRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIEkstraRibbonBaseButtonItem == null))
                {
                    this.mUIEkstraRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIEkstraRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnExtra";
                    this.mUIEkstraRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIEkstraRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIEkstraRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIUtrykningRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIEkstraRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICenterPanelDayDockPanel : DXDockPanel
    {
        
        public UICenterPanelDayDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDay";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom : DXTestControl
    {
        
        public UIControlContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDayControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UICenterPanelDayWrappeDockPanel UICenterPanelDayWrappeDockPanel
        {
            get
            {
                if ((this.mUICenterPanelDayWrappeDockPanel == null))
                {
                    this.mUICenterPanelDayWrappeDockPanel = new UICenterPanelDayWrappeDockPanel(this);
                }
                return this.mUICenterPanelDayWrappeDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UICenterPanelDayWrappeDockPanel mUICenterPanelDayWrappeDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICenterPanelDayWrappeDockPanel : DXDockPanel
    {
        
        public UICenterPanelDayWrappeDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDayWrapper";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIAften00167770770FalsDockPanel UIAften00167770770FalsDockPanel
        {
            get
            {
                if ((this.mUIAften00167770770FalsDockPanel == null))
                {
                    this.mUIAften00167770770FalsDockPanel = new UIAften00167770770FalsDockPanel(this);
                }
                return this.mUIAften00167770770FalsDockPanel;
            }
        }
        
        public UINatttiltirsdag001677DockPanel UINatttiltirsdag001677DockPanel
        {
            get
            {
                if ((this.mUINatttiltirsdag001677DockPanel == null))
                {
                    this.mUINatttiltirsdag001677DockPanel = new UINatttiltirsdag001677DockPanel(this);
                }
                return this.mUINatttiltirsdag001677DockPanel;
            }
        }
        
        public UIFriVikar00167770770FDockPanel UIFriVikar00167770770FDockPanel
        {
            get
            {
                if ((this.mUIFriVikar00167770770FDockPanel == null))
                {
                    this.mUIFriVikar00167770770FDockPanel = new UIFriVikar00167770770FDockPanel(this);
                }
                return this.mUIFriVikar00167770770FDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIAften00167770770FalsDockPanel mUIAften00167770770FalsDockPanel;
        
        private UINatttiltirsdag001677DockPanel mUINatttiltirsdag001677DockPanel;
        
        private UIFriVikar00167770770FDockPanel mUIFriVikar00167770770FDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAften00167770770FalsDockPanel : DXDockPanel
    {
        
        public UIAften00167770770FalsDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Aften;0;0;-16777077;0;False";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom1 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom1(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom1 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom1 : DXTestControl
    {
        
        public UIControlContainerCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Aften;0;0;-16777077;0;FalseControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcDayColumnTable UIGcDayColumnTable
        {
            get
            {
                if ((this.mUIGcDayColumnTable == null))
                {
                    this.mUIGcDayColumnTable = new UIGcDayColumnTable(this);
                }
                return this.mUIGcDayColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDayColumnTable mUIGcDayColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDayColumnTable : DXGrid
    {
        
        public UIGcDayColumnTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem16000100Cell
        {
            get
            {
                if ((this.mUIItem16000100Cell == null))
                {
                    this.mUIItem16000100Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem16000100Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]7[Column]colWorkPeriod";
                    this.mUIItem16000100Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem16000100Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem16000100Cell;
            }
        }
        
        public DXCell UIItem16000100Cell1
        {
            get
            {
                if ((this.mUIItem16000100Cell1 == null))
                {
                    this.mUIItem16000100Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem16000100Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]8[Column]colWorkPeriod";
                    this.mUIItem16000100Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem16000100Cell1.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem16000100Cell1;
            }
        }
        
        public DXCell UIItem22000800Cell
        {
            get
            {
                if ((this.mUIItem22000800Cell == null))
                {
                    this.mUIItem22000800Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem22000800Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]11[Column]colWorkPeriod";
                    this.mUIItem22000800Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem22000800Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem22000800Cell;
            }
        }
        
        public DXCell UIItem23000300Cell
        {
            get
            {
                if ((this.mUIItem23000300Cell == null))
                {
                    this.mUIItem23000300Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem23000300Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]10[Column]colWorkPeriod";
                    this.mUIItem23000300Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem23000300Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem23000300Cell;
            }
        }
        
        public DXCell UIItem22000800Cell1
        {
            get
            {
                if ((this.mUIItem22000800Cell1 == null))
                {
                    this.mUIItem22000800Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem22000800Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]5[Column]colWorkPeriod";
                    this.mUIItem22000800Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem22000800Cell1.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem22000800Cell1;
            }
        }
        
        public DXCell UIItem23000400Cell
        {
            get
            {
                if ((this.mUIItem23000400Cell == null))
                {
                    this.mUIItem23000400Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem23000400Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]4[Column]colWorkPeriod";
                    this.mUIItem23000400Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem23000400Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem23000400Cell;
            }
        }
        
        public DXCell UIItem22000800Cell2
        {
            get
            {
                if ((this.mUIItem22000800Cell2 == null))
                {
                    this.mUIItem22000800Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem22000800Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]12[Column]colWorkPeriod";
                    this.mUIItem22000800Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem22000800Cell2.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem22000800Cell2;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem16000100Cell;
        
        private DXCell mUIItem16000100Cell1;
        
        private DXCell mUIItem22000800Cell;
        
        private DXCell mUIItem23000300Cell;
        
        private DXCell mUIItem22000800Cell1;
        
        private DXCell mUIItem23000400Cell;
        
        private DXCell mUIItem22000800Cell2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINatttiltirsdag001677DockPanel : DXDockPanel
    {
        
        public UINatttiltirsdag001677DockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Natt til tirsdag;0;0;-16777077;0;False";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom2 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom2(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom2 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom2 : DXTestControl
    {
        
        public UIControlContainerCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Natt til tirsdag;0;0;-16777077;0;FalseControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcDayColumnTable1 UIGcDayColumnTable
        {
            get
            {
                if ((this.mUIGcDayColumnTable == null))
                {
                    this.mUIGcDayColumnTable = new UIGcDayColumnTable1(this);
                }
                return this.mUIGcDayColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDayColumnTable1 mUIGcDayColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDayColumnTable1 : DXGrid
    {
        
        public UIGcDayColumnTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem01000700Cell
        {
            get
            {
                if ((this.mUIItem01000700Cell == null))
                {
                    this.mUIItem01000700Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem01000700Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]2[Column]colWorkPeriod";
                    this.mUIItem01000700Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem01000700Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem01000700Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem01000700Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFriVikar00167770770FDockPanel : DXDockPanel
    {
        
        public UIFriVikar00167770770FDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Fri / Vikar;0;0;-16777077;0;False";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom3 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom3(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom3 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom3 : DXTestControl
    {
        
        public UIControlContainerCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Fri / Vikar;0;0;-16777077;0;FalseControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcFreeColumnTable UIGcFreeColumnTable
        {
            get
            {
                if ((this.mUIGcFreeColumnTable == null))
                {
                    this.mUIGcFreeColumnTable = new UIGcFreeColumnTable(this);
                }
                return this.mUIGcFreeColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcFreeColumnTable mUIGcFreeColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcFreeColumnTable : DXGrid
    {
        
        public UIGcFreeColumnTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcFreeColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UIVeumVargCell
        {
            get
            {
                if ((this.mUIVeumVargCell == null))
                {
                    this.mUIVeumVargCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIVeumVargCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcFreeColumnGridControlCell[View]gvFreeColumn[Row]6[Column]colEmployeeName";
                    this.mUIVeumVargCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIVeumVargCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIVeumVargCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIVeumVargCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIUtrykningWindow : DXWindow
    {
        
        public UIUtrykningWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Utrykning";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_layoutControlCustom UI_layoutControlCustom
        {
            get
            {
                if ((this.mUI_layoutControlCustom == null))
                {
                    this.mUI_layoutControlCustom = new UI_layoutControlCustom(this);
                }
                return this.mUI_layoutControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UI_layoutControlCustom mUI_layoutControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UI_layoutControlCustom : DXTestControl
    {
        
        public UI_layoutControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_layoutControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UIRootLayoutGroup UIRootLayoutGroup
        {
            get
            {
                if ((this.mUIRootLayoutGroup == null))
                {
                    this.mUIRootLayoutGroup = new UIRootLayoutGroup(this);
                }
                return this.mUIRootLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRootLayoutGroup mUIRootLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRootLayoutGroup : DXBaseLayoutItem
    {
        
        public UIRootLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem5LayoutControlItem UILayoutControlItem5LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem5LayoutControlItem == null))
                {
                    this.mUILayoutControlItem5LayoutControlItem = new UILayoutControlItem5LayoutControlItem(this);
                }
                return this.mUILayoutControlItem5LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem5LayoutControlItem mUILayoutControlItem5LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem5LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem5LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem5";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_tcRightTabList UI_tcRightTabList
        {
            get
            {
                if ((this.mUI_tcRightTabList == null))
                {
                    this.mUI_tcRightTabList = new UI_tcRightTabList(this);
                }
                return this.mUI_tcRightTabList;
            }
        }
        #endregion
        
        #region Fields
        private UI_tcRightTabList mUI_tcRightTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UI_tcRightTabList : DXTestControl
    {
        
        public UI_tcRightTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_tcRight";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_tpCalloutDetailsClient UI_tpCalloutDetailsClient
        {
            get
            {
                if ((this.mUI_tpCalloutDetailsClient == null))
                {
                    this.mUI_tpCalloutDetailsClient = new UI_tpCalloutDetailsClient(this);
                }
                return this.mUI_tpCalloutDetailsClient;
            }
        }
        #endregion
        
        #region Fields
        private UI_tpCalloutDetailsClient mUI_tpCalloutDetailsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UI_tpCalloutDetailsClient : DXTestControl
    {
        
        public UI_tpCalloutDetailsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_tpCalloutDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_periodCreatorCustom UI_periodCreatorCustom
        {
            get
            {
                if ((this.mUI_periodCreatorCustom == null))
                {
                    this.mUI_periodCreatorCustom = new UI_periodCreatorCustom(this);
                }
                return this.mUI_periodCreatorCustom;
            }
        }
        
        public UI_tcMainTabList UI_tcMainTabList
        {
            get
            {
                if ((this.mUI_tcMainTabList == null))
                {
                    this.mUI_tcMainTabList = new UI_tcMainTabList(this);
                }
                return this.mUI_tcMainTabList;
            }
        }
        #endregion
        
        #region Fields
        private UI_periodCreatorCustom mUI_periodCreatorCustom;
        
        private UI_tcMainTabList mUI_tcMainTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UI_periodCreatorCustom : DXTestControl
    {
        
        public UI_periodCreatorCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_periodCreator";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TwoStepPeriodCreator";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UIItem27augusttirCheckBox
        {
            get
            {
                if ((this.mUIItem27augusttirCheckBox == null))
                {
                    this.mUIItem27augusttirCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIItem27augusttirCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "_periodCreatorCheckEdit[0]";
                    this.mUIItem27augusttirCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
                    this.mUIItem27augusttirCheckBox.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIItem27augusttirCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUIItem27augusttirCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UI_tcMainTabList : DXTestControl
    {
        
        public UI_tcMainTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_tcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_tpSalaryClient UI_tpSalaryClient
        {
            get
            {
                if ((this.mUI_tpSalaryClient == null))
                {
                    this.mUI_tpSalaryClient = new UI_tpSalaryClient(this);
                }
                return this.mUI_tpSalaryClient;
            }
        }
        #endregion
        
        #region Fields
        private UI_tpSalaryClient mUI_tpSalaryClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UI_tpSalaryClient : DXTestControl
    {
        
        public UI_tpSalaryClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_tpSalary";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UIGcLinesTable UIGcLinesTable
        {
            get
            {
                if ((this.mUIGcLinesTable == null))
                {
                    this.mUIGcLinesTable = new UIGcLinesTable(this);
                }
                return this.mUIGcLinesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcLinesTable mUIGcLinesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcLinesTable : DXGrid
    {
        
        public UIGcLinesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcLines";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem300Overtid50Cell
        {
            get
            {
                if ((this.mUIItem300Overtid50Cell == null))
                {
                    this.mUIItem300Overtid50Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem300Overtid50Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcLinesGridControlCell[View]gvLines[Row]0[Column]colCostType";
                    this.mUIItem300Overtid50Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem300Overtid50Cell.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIItem300Overtid50Cell;
            }
        }
        
        public DXCell UIItem050Cell
        {
            get
            {
                if ((this.mUIItem050Cell == null))
                {
                    this.mUIItem050Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem050Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcLinesGridControlCell[View]gvLines[Row]0[Column]colAmount";
                    this.mUIItem050Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem050Cell.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIItem050Cell;
            }
        }
        
        public DXCell UIItem200TimelønnCell
        {
            get
            {
                if ((this.mUIItem200TimelønnCell == null))
                {
                    this.mUIItem200TimelønnCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem200TimelønnCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcLinesGridControlCell[View]gvLines[Row]1[Column]colCostType";
                    this.mUIItem200TimelønnCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem200TimelønnCell.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIItem200TimelønnCell;
            }
        }
        
        public DXCell UIItem050Cell1
        {
            get
            {
                if ((this.mUIItem050Cell1 == null))
                {
                    this.mUIItem050Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem050Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcLinesGridControlCell[View]gvLines[Row]1[Column]colAmount";
                    this.mUIItem050Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem050Cell1.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIItem050Cell1;
            }
        }
        
        public DXCell UIItem000Cell
        {
            get
            {
                if ((this.mUIItem000Cell == null))
                {
                    this.mUIItem000Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem000Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcLinesGridControlCell[View]gvLines[Row]2[Column]colAmount";
                    this.mUIItem000Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem000Cell.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIItem000Cell;
            }
        }
        
        public DXCell UIItem300kompAvspaseriCell
        {
            get
            {
                if ((this.mUIItem300kompAvspaseriCell == null))
                {
                    this.mUIItem300kompAvspaseriCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem300kompAvspaseriCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcLinesGridControlCell[View]gvLines[Row]2[Column]colCostType";
                    this.mUIItem300kompAvspaseriCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem300kompAvspaseriCell.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIItem300kompAvspaseriCell;
            }
        }
        
        public DXCell UIItem000Cell1
        {
            get
            {
                if ((this.mUIItem000Cell1 == null))
                {
                    this.mUIItem000Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem000Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcLinesGridControlCell[View]gvLines[Row]3[Column]colAmount";
                    this.mUIItem000Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem000Cell1.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIItem000Cell1;
            }
        }
        
        public DXCell UIItem300kompAvspaseriCell1
        {
            get
            {
                if ((this.mUIItem300kompAvspaseriCell1 == null))
                {
                    this.mUIItem300kompAvspaseriCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem300kompAvspaseriCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcLinesGridControlCell[View]gvLines[Row]3[Column]colCostType";
                    this.mUIItem300kompAvspaseriCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem300kompAvspaseriCell1.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIItem300kompAvspaseriCell1;
            }
        }
        
        public DXCell UIItem000Cell2
        {
            get
            {
                if ((this.mUIItem000Cell2 == null))
                {
                    this.mUIItem000Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem000Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcLinesGridControlCell[View]gvLines[Row]4[Column]colAmount";
                    this.mUIItem000Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem000Cell2.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIItem000Cell2;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem300Overtid50Cell;
        
        private DXCell mUIItem050Cell;
        
        private DXCell mUIItem200TimelønnCell;
        
        private DXCell mUIItem050Cell1;
        
        private DXCell mUIItem000Cell;
        
        private DXCell mUIItem300kompAvspaseriCell;
        
        private DXCell mUIItem000Cell1;
        
        private DXCell mUIItem300kompAvspaseriCell1;
        
        private DXCell mUIItem000Cell2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMerarbeidovertidWindow : DXWindow
    {
        
        public UIMerarbeidovertidWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Merarbeid / overtid";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIPanClientClient UIPanClientClient
        {
            get
            {
                if ((this.mUIPanClientClient == null))
                {
                    this.mUIPanClientClient = new UIPanClientClient(this);
                }
                return this.mUIPanClientClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanClientClient mUIPanClientClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanClientClient : DXTestControl
    {
        
        public UIPanClientClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UITcClientTabList UITcClientTabList
        {
            get
            {
                if ((this.mUITcClientTabList == null))
                {
                    this.mUITcClientTabList = new UITcClientTabList(this);
                }
                return this.mUITcClientTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcClientTabList mUITcClientTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcClientTabList : DXTestControl
    {
        
        public UITcClientTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UITpMainClient UITpMainClient
        {
            get
            {
                if ((this.mUITpMainClient == null))
                {
                    this.mUITpMainClient = new UITpMainClient(this);
                }
                return this.mUITpMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpMainClient mUITpMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpMainClient : DXTestControl
    {
        
        public UITpMainClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UITcExtraDetailTabList UITcExtraDetailTabList
        {
            get
            {
                if ((this.mUITcExtraDetailTabList == null))
                {
                    this.mUITcExtraDetailTabList = new UITcExtraDetailTabList(this);
                }
                return this.mUITcExtraDetailTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcExtraDetailTabList mUITcExtraDetailTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcExtraDetailTabList : DXTestControl
    {
        
        public UITcExtraDetailTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcExtraDetail";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UITpSalaryCalcClient UITpSalaryCalcClient
        {
            get
            {
                if ((this.mUITpSalaryCalcClient == null))
                {
                    this.mUITpSalaryCalcClient = new UITpSalaryCalcClient(this);
                }
                return this.mUITpSalaryCalcClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpSalaryCalcClient mUITpSalaryCalcClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpSalaryCalcClient : DXTestControl
    {
        
        public UITpSalaryCalcClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpSalaryCalc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIGcAccountingLinesTable UIGcAccountingLinesTable
        {
            get
            {
                if ((this.mUIGcAccountingLinesTable == null))
                {
                    this.mUIGcAccountingLinesTable = new UIGcAccountingLinesTable(this);
                }
                return this.mUIGcAccountingLinesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcAccountingLinesTable mUIGcAccountingLinesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcAccountingLinesTable : DXGrid
    {
        
        public UIGcAccountingLinesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAccountingLines";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem300Overtid50Cell
        {
            get
            {
                if ((this.mUIItem300Overtid50Cell == null))
                {
                    this.mUIItem300Overtid50Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem300Overtid50Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAccountingLinesGridControlCell[View]gvAccountingLines[Row]0[Column]colCostType";
                    this.mUIItem300Overtid50Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem300Overtid50Cell.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIItem300Overtid50Cell;
            }
        }
        
        public DXCell UIItem400Cell
        {
            get
            {
                if ((this.mUIItem400Cell == null))
                {
                    this.mUIItem400Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem400Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAccountingLinesGridControlCell[View]gvAccountingLines[Row]0[Column]colAmount";
                    this.mUIItem400Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem400Cell.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIItem400Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem300Overtid50Cell;
        
        private DXCell mUIItem400Cell;
        #endregion
    }
}
