// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _093_Test_Helgeavtale_Spekter
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v18_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;

    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Absence_Helg14
        /// </summary>
        public void Absence_Helg14()
        {
            #region Variable Declarations
            DXCell uIItem14HelgCell = this.UIGatver63031732ASCLAvWindow7.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIAften00167770770FalsDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIItem14HelgCell;
            DXRibbonButtonItem uIFraværRibbonBaseButtonItem = this.UIGatver63031732ASCLAvWindow7.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIFraværRibbonBaseButtonItem;
            #endregion

            // Click '14, Helg' cell
            Mouse.Click(uIItem14HelgCell, new Point(25, 6));

            // Move '14, Helg' cell to 'Fravær' RibbonBaseButtonItem
            //System parameter 'Show window contents while dragging' is not set.This could lead to incorrect recording of drag actions.
            uIFraværRibbonBaseButtonItem.EnsureClickable(new Point(20, 25));
            Mouse.StartDragging(uIItem14HelgCell, new Point(25, 6));
            Mouse.StopDragging(uIFraværRibbonBaseButtonItem, new Point(20, 25));
        }
        
        
        ///// <summary>
        ///// Check_Acol - Use 'Check_AcolExpectedValues' to pass parameters into this method.
        ///// </summary>
        //public void Check_Acol()
        //{
        //    #region Variable Declarations
        //    DXCell uIItem10HelgCell = this.UIGatver63031732ASCLAvWindow7.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIAften00167770770FalsDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIItem10HelgCell;
        //    #endregion

        //    // Verify that the 'ClassName' property of '10, Helg' cell equals 'GridControlCell'
        //    Assert.AreEqual(this.Check_AcolExpectedValues.UIItem10HelgCellClassName, uIItem10HelgCell.ClassName);
        //}
        
        /// <summary>
        /// Check_ExtraLT - Use 'Check_ExtraLTExpectedValues' to pass parameters into this method.
        /// </summary>
        public void Check_ExtraLT()
        {
            #region Variable Declarations
            DXCell uIItem400LørSøndagstilCell = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem400LørSøndagstilCell;
            #endregion

            // Verify that the 'ValueAsString' property of '400 - Lør./Søndagstillegg' cell equals '400 - Lør./Søndagstillegg'
            Assert.AreEqual(this.Check_ExtraLTExpectedValues.UIItem400LørSøndagstilCellValueAsString, uIItem400LørSøndagstilCell.ValueAsString, "Ikke beregnet L/S tillegg");
        }
        
        /// <summary>
        /// Check_ExtraLT_Edit - Use 'Check_ExtraLT_EditExpectedValues' to pass parameters into this method.
        /// </summary>
        public void Check_ExtraLT_Edit()
        {
            #region Variable Declarations
            DXCell uIItem800Cell = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem800Cell;
            #endregion

            // Verify that the 'ValueAsString' property of '8,00' cell equals '10'
            Assert.AreEqual(this.Check_ExtraLT_EditExpectedValues.UIItem800CellValueAsString, uIItem800Cell.ValueAsString, "Ingen lør/søn tillegg beregnet");
        }
        
        /// <summary>
        /// Check_Ok_depExchange - Use 'Check_Ok_depExchangeExpectedValues' to pass parameters into this method.
        /// </summary>
        public void Check_Ok_depExchange()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uIBiOkMenuBaseButtonItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UIBiOkMenuBaseButtonItem;
            #endregion

            // Verify that the 'ClassName' property of 'biOk' MenuBaseButtonItem equals 'MenuBaseButtonItem'
            Assert.AreEqual(this.Check_Ok_depExchangeExpectedValues.UIBiOkMenuBaseButtonItemClassName, uIBiOkMenuBaseButtonItem.ClassName);
        }
        
        /// <summary>
        /// Check_Ok_exhange - Use 'Check_Ok_exhangeExpectedValues' to pass parameters into this method.
        /// </summary>
        public void Check_Ok_exhange()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uIBiOkMenuBaseButtonItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UIBiOkMenuBaseButtonItem;
            #endregion

            // Verify that the 'ClassName' property of 'biOk' MenuBaseButtonItem equals 'MenuBaseButtonItem'
            Assert.AreEqual(this.Check_Ok_exhangeExpectedValues.UIBiOkMenuBaseButtonItemClassName, uIBiOkMenuBaseButtonItem.ClassName);
        }
        
        /// <summary>
        /// Check_Ok_Remaning - Use 'Check_Ok_RemaningExpectedValues' to pass parameters into this method.
        /// </summary>
        public void Check_Ok_Remaning()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uIBiOkMenuBaseButtonItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UIBiOkMenuBaseButtonItem;
            #endregion

            // Verify that the 'ClassName' property of 'biOk' MenuBaseButtonItem equals 'MenuBaseButtonItem'
            Assert.AreEqual(this.Check_Ok_RemaningExpectedValues.UIBiOkMenuBaseButtonItemClassName, uIBiOkMenuBaseButtonItem.ClassName);
        }
        
        /// <summary>
        /// CheckButtonName - Use 'CheckButtonNameExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckButtonName()
        {
            #region Variable Declarations
            DXButton uINYButton = this.UIGatver63031732ASCLAvWindow11.UINYButton;
            #endregion

            // Verify that the 'Name' property of 'Ny' button equals 'btnNew'
            Assert.AreEqual(this.CheckButtonNameExpectedValues.UINYButtonName, uINYButton.Name, "name");
        }
        
        /// <summary>
        /// CheckDate - Use 'CheckDateExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckDate()
        {
            #region Variable Declarations
            DXPopupEdit uIPceDatePopupEdit = this.UIGatver64034203ASCLAvWindow.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UIVelgdatoBarItem.UIPopupContainerBarConMenu.UIPpcDatePickerClient.UIPceDatePopupEdit;
            #endregion

            // Verify that the 'ClassName' property of 'pceDate' PopupEdit equals 'GSPopupContainerEdit'
            Assert.AreEqual(this.CheckDateExpectedValues.UIPceDatePopupEditClassName, uIPceDatePopupEdit.ClassName);
        }
        
        /// <summary>
        /// CheckDiagonalCells - Use 'CheckDiagonalCellsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckDiagonalCells()
        {
            #region Variable Declarations
            DXPrintingBrick uIPage0BrickIndices010PrintControlBrick = this.UIForhåndsvisningWindow.UIDocumentViewerPrintViewControl1.UIPage0BrickIndices010PrintControlBrick;
            DXPrintingBrick uIPage0BrickIndices010PrintControlBrick1 = this.UIForhåndsvisningWindow.UIDocumentViewerPrintViewControl1.UIPage0BrickIndices010PrintControlBrick1;
            #endregion

            // Verify that the 'ClassName' property of 'Page [0].BrickIndices [0].[1].[0].[65]' PrintControlBrick equals 'PrintControlBrick'
            Assert.AreEqual(this.CheckDiagonalCellsExpectedValues.UIPage0BrickIndices010PrintControlBrickClassName, uIPage0BrickIndices010PrintControlBrick.ClassName);

            // Verify that the 'ClassName' property of 'Page [0].BrickIndices [0].[10].[0].[0]' PrintControlBrick equals 'PrintControlBrick'
            Assert.AreEqual(this.CheckDiagonalCellsExpectedValues.UIPage0BrickIndices010PrintControlBrick1ClassName, uIPage0BrickIndices010PrintControlBrick1.ClassName);
        }
        
        /// <summary>
        /// CheckEmpNoPreview - Use 'CheckEmpNoPreviewExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckEmpNoPreview()
        {
            #region Variable Declarations
            DXPrintingBrick uIPage0BrickIndices000PrintControlBrick = this.UIForhåndsvisningWindow.UIDocumentViewerPrintViewControl.UIPage0BrickIndices000PrintControlBrick;
            #endregion

            // Verify that the 'ClassName' property of 'Page [0].BrickIndices [0].[0].[0].[12]' PrintControlBrick equals 'PrintControlBrick'
            Assert.AreEqual(this.CheckEmpNoPreviewExpectedValues.UIPage0BrickIndices000PrintControlBrickClassName, uIPage0BrickIndices000PrintControlBrick.ClassName);

            // Verify that the 'Text' property of 'Page [0].BrickIndices [0].[0].[0].[12]' PrintControlBrick equals 'Ansattnr'
            Assert.AreEqual(this.CheckEmpNoPreviewExpectedValues.UIPage0BrickIndices000PrintControlBrickText, uIPage0BrickIndices000PrintControlBrick.Text);
        }
        
        /// <summary>
        /// CheckList - Use 'CheckListExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckList()
        {
            #region Variable Declarations
            WinClient uIWeekendAgreementsLisClient = this.UIGatver63031732ASCLAvWindow12.UIWeekendAgreementsLisWindow.UIWeekendAgreementsLisClient;
            #endregion

            // Verify that the 'ControlName' property of 'WeekendAgreementsList' client equals 'WeekendAgreementsList'
            Assert.AreEqual(this.CheckListExpectedValues.UIWeekendAgreementsLisClientControlName, uIWeekendAgreementsLisClient.ControlName, "list");
        }
        
        /// <summary>
        /// CheckReport - Use 'CheckReportExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckReport()
        {
            #region Variable Declarations
            WinClient uIPanel1Client = this.UIGatver63031732ASCLAvWindow3.UIItemWindow.UIPanel1Client;
            #endregion

            // Verify that the 'ControlType' property of 'Panel1' client equals 'Client'
            Assert.AreEqual(this.CheckReportExpectedValues.UIPanel1ClientControlType, uIPanel1Client.ControlType.ToString());
        }
        
        /// <summary>
        /// CheckRosterGridSatCell - Use 'CheckRosterGridSatCellExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRosterGridSatCell()
        {
            #region Variable Declarations
            DXCell uIDCell = this.UIArbeidsplanGrunnlagHWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIDCell;
            #endregion

            // Verify that the 'ClassName' property of 'D' cell equals 'GridControlCell'
            Assert.AreEqual(this.CheckRosterGridSatCellExpectedValues.UIDCellClassName, uIDCell.ClassName);
        }
        
        /// <summary>
        /// CheckRosterPlanWeekends - Use 'CheckRosterPlanWeekendsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRosterPlanWeekends()
        {
            #region Variable Declarations
            DXGrid uIGcRosterPlanTable = this.UIArbeidsplanGrunnlagHWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable;
            #endregion

            // Verify that the 'Name' property of 'gcRosterPlan' table equals 'gcRosterPlan'
            Assert.AreEqual(this.CheckRosterPlanWeekendsExpectedValues.UIGcRosterPlanTableName, uIGcRosterPlanTable.Name, "Wrong values");
        }
        
        /// <summary>
        /// ClearEmployees
        /// </summary>
        public void ClearEmployees()
        {
            #region Variable Declarations
            DXButton uIVelgingenButton = this.UINyarbeidsplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem4LayoutControlItem.UIPnlRuleButtonsClient.UIVelgingenButton;
            #endregion

            // Click 'Velg ingen' button
            Mouse.Click(uIVelgingenButton, new Point(1, 1));
        }
        
        /// <summary>
        /// Click_Absence
        /// </summary>
        public void Click_Absence()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIFraværRibbonBaseButtonItem = this.UIGatver63031732ASCLAvWindow7.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIFraværRibbonBaseButtonItem;
            #endregion

            // Click 'Fravær' RibbonBaseButtonItem
            Mouse.Click(uIFraværRibbonBaseButtonItem, new Point(20, 21));
        }
        /// <summary>
        /// Click_DeleteEffectuation
        /// </summary>
        public void Click_DeleteEffectuation()
        {
            #region Variable Declarations
            DXRibbonItem uISlettiverksettingRibbonItem = this.UIArbeidsplanGrunnlagHWindow.UIRcMenuRibbon.UIRpPlanRibbonPage.UIGrpEffectuateRevolviRibbonPageGroup.UISlettiverksettingRibbonItem;
            DXMenuBaseButtonItem uIBtnDeleteMenuBaseButtonItem = this.UIItemWindow1.UISubMenuBarControlMenu.UIBtnDeleteMenuBaseButtonItem;
            #endregion

            // Click 'Slett iverksetting' RibbonItem
            Mouse.Click(uISlettiverksettingRibbonItem, new Point(51, 5));

            // Click 'btnDelete' MenuBaseButtonItem
            Mouse.Click(uIBtnDeleteMenuBaseButtonItem, new Point(63, 7));
        }

        /// <summary>
        /// Click_DeleteEffectuationFourLines
        /// </summary>
        public void Click_DeleteEffectuationFourLines()
        {
            #region Variable Declarations
            DXButton uISlettiverksettingpå1Button = this.UISletteiverksettingWindow.UIPnlBottomClient.UISlettiverksettingpå1Button;
            DXButton uIGSSimpleButtonButton = this.UIItemWindow12.UIGSSimpleButtonButton;
            DXButton uIGSSimpleButtonButton1 = this.UIItemWindow21.UIGSSimpleButtonButton;
            #endregion

            // Click 'Slett iverksetting på 10 linjer' button
            Mouse.Click(uISlettiverksettingpå1Button, new Point(1, 1));

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton1, new Point(1, 1));
        }
        
        /// <summary>
        /// Click_EditCalendarPlan
        /// </summary>
        public void Click_EditCalendarPlan()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIRedigerRibbonBaseButtonItem = this.UIArbeidsplanChapter_5Window.UIRcMenuRibbon.UIRpRosterPlanRibbonPage.UIGrpEditRibbonPageGroup.UIRedigerRibbonBaseButtonItem;
            #endregion

            // Click 'Rediger' RibbonBaseButtonItem
            Mouse.Click(uIRedigerRibbonBaseButtonItem, new Point(24, 27));
        }
        
        /// <summary>
        /// Click_Extra
        /// </summary>
        public void Click_Extra()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIEkstraRibbonBaseButtonItem = this.UIGatver63031732ASCLAvWindow7.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIEkstraRibbonBaseButtonItem;
            #endregion

            // Click 'Ekstra' RibbonBaseButtonItem
            Mouse.Click(uIEkstraRibbonBaseButtonItem, new Point(25, 32));
        }
        
        /// <summary>
        /// Click_Filter
        /// </summary>
        public void Click_Filter()
        {
            #region Variable Declarations
            DXRibbonPage uIRpFilterRibbonPage = this.UIArbeidsplanGrunnlagHWindow.UIRcMenuRibbon.UIRpFilterRibbonPage;
            #endregion

            // Click 'rpFilter' RibbonPage
            Playback.Wait(1000);
            Mouse.Click(uIRpFilterRibbonPage, new Point(63, 13));
        }
        
        /// <summary>
        /// Click_Fri
        /// </summary>
        public void Click_Fri()
        {
            #region Variable Declarations
            DXCell uIItemCell1 = this.UIArbeidsplanKopi_2avGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell1;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell1, new Point(885, 51));
        }
               
        /// <summary>
        /// Click_Insert
        /// </summary>
        public void Click_Insert()
        {
            #region Variable Declarations
            DXRibbonButtonItem uISettinnRibbonBaseButtonItem = this.UIArbeidsplanKopiavGruWindow1.UIRcMenuRibbon.UIRpRosterPlanRibbonPage.UIGrpInsertToolsRibbonPageGroup.UISettinnRibbonBaseButtonItem;
            #endregion

            // Click 'Sett inn' RibbonBaseButtonItem
            Mouse.Click(uISettinnRibbonBaseButtonItem, new Point(36, 11));
        }
        
        /// <summary>
        /// Click_LT
        /// </summary>
        public void Click_LT()
        {
            #region Variable Declarations
            WinClient uIAdministrasjonClient = this.UIGatver63031732ASCLAvWindow6.UIItemWindow.UIAdministrasjonClient;
            #endregion

            // Double-Click 'Administrasjon' client
            Mouse.DoubleClick(uIAdministrasjonClient, new Point(86, 1021));
        }
        
        /// <summary>
        /// Click_NewKontLine
        /// </summary>
        public void Click_NewKontLine()
        {
            #region Variable Declarations
            WinClient uIEndrekonteringClient = this.UIEndrekonteringWindow.UIItemWindow.UIEndrekonteringClient;
            WinButton uIJAButton = this.UIOVE2003GatWindow.UIItemWindow.UIOVE2003GatClient.UIJAButton;
            #endregion

            // Click 'Endre kontering' client
            Mouse.Click(uIEndrekonteringClient, new Point(52, 26));

            // Click '&Ja' button
            Mouse.Click(uIJAButton, new Point(40, 7));
        }
        
       
        /// <summary>
        /// Click_NewRosterPlanButton
        /// </summary>
        public void Click_NewRosterPlanButton()
        {
            #region Variable Declarations
            DXRibbonButtonItem uINYRibbonBaseButtonItem = this.UIGatver65141810ASCLAvWindow.UIPcMainPanelClient.UITcPanListsTabList.UITpRosterPlanListClient.UIRosterPlanListCustom.UIPnlGridClient.UIRibbonControlRibbon.UIRpHomeRibbonPage.UIRpgPlanRibbonPageGroup.UINYRibbonBaseButtonItem;
            #endregion

            // Click 'Ny' RibbonBaseButtonItem
            Mouse.Click(uINYRibbonBaseButtonItem, new Point(18, 28));
        }
        
        /// <summary>
        /// Click_NewShift
        /// </summary>
        public void Click_NewShift()
        {
            UICommon.UIMapVS2017.ClickNewShiftFromAbsence();
        }
        
        /// <summary>
        /// Click_Ok_ChangeShiftsCalendarPlan
        /// </summary>
        public void Click_Ok_ChangeShiftsCalendarPlan()
        {
            #region Variable Declarations
            DXButton uIGSSimpleButtonButton = this.UIItemWindow5.UIGSSimpleButtonButton;
            #endregion

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// Click_Ok_Department
        /// </summary>
        public void Click_Ok_Department()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UINivåWindow.UIGsPanelControl2Client.UIOKButton;
            #endregion

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// Click_Ok_EditCalendarPlan
        /// </summary>
        public void Click_Ok_EditCalendarPlan()
        {
            Click_PlanTab();
            UICommon.ClickOKEditRosterPlanFromPlantab();
        }
        public void Click_Ok_EditCalendarPlanFromHomeTab()
        {
            UICommon.UIMapVS2017.ClickOkEditRosterplanFromHomeTab();
        }
        /// <summary>
        /// Click_Ok_NewRosterplan
        /// </summary>
        public void Click_Ok_NewRosterplan()
        {
            #region Variable Declarations
            DXButton uIGSSimpleButtonButton = this.UIArbeidsplanInnstilliWindow.UIGSPanelControlClient.UIGSSimpleButtonButton;
            #endregion

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// Click_Ok_SelectRosterEmployees
        /// </summary>
        public void Click_Ok_SelectRosterEmployees()
        {
            #region Variable Declarations
            DXButton uIGSSimpleButtonButton = this.UIAnsatteiArbeidsplanWindow.UIGSPanelControlClient.UIGSSimpleButtonButton;
            #endregion

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// Click_Ok_Utrykning
        /// </summary>
        public void Click_Ok_Utrykning()
        {
            #region Variable Declarations
            DXButton uIGSSimpleButtonButton = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UI_liOKLayoutControlItem.UIGSSimpleButtonButton;
            #endregion

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// Click_Ok_VacantShifts
        /// </summary>
        public void Click_Ok_VacantShifts()
        {
            #region Variable Declarations
            DXButton uIGSSimpleButtonButton = this.UIVacantShiftsFormWindow.UIGsLayoutControl1Custom.UIGSSimpleButtonButton;
            #endregion

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// Click_OkAgreement
        /// </summary>
        public void Click_OkAgreement()
        {
            #region Variable Declarations
            DXButton uIGSSimpleButtonButton = this.UIHelgeavtaleWindow.UIGSSimpleButtonButton;
            #endregion

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// Click_OkNewRosterPlan
        /// </summary>
        public void Click_OkNewRosterPlan()
        {
            #region Variable Declarations
            DXButton uIGSSimpleButtonButton = this.UINyarbeidsplanWindow.UIGSPanelControlClient.UIGSSimpleButtonButton;
            DXButton uIGSSimpleButtonButton1 = this.UIItemWindow14.UIGSSimpleButtonButton;
            #endregion

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton1, new Point(1, 1));
        }
        
        /// <summary>
        /// Click_OkPlanSettings
        /// </summary>
        public void Click_OkPlanSettings()
        {
            #region Variable Declarations
            DXButton uIGSSimpleButtonButton = this.UIArbeidsplanInnstilliWindow.UIGSPanelControlClient.UIGSSimpleButtonButton;
            #endregion

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// Click_PlanSettings
        /// </summary>
        public void Click_PlanSettings()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIInnstillingerRibbonBaseButtonItem = this.UIArbeidsplanKopiavGruWindow.UIRcMenuRibbon.UIRpPlanRibbonPage.UIRpgPlanRibbonPageGroup.UIInnstillingerRibbonBaseButtonItem;
            #endregion

            // Click 'Innstillinger' RibbonBaseButtonItem
            Mouse.Click(uIInnstillingerRibbonBaseButtonItem, new Point(30, 31));
        }
        
        /// <summary>
        /// Click_Preview
        /// </summary>
        public void Click_Preview()
        {
            #region Variable Declarations
            WinClient uIRapportsenterClient = this.UIGatver63031732ASCLAvWindow2.UIItemWindow.UIRapportsenterClient;
            #endregion

            // Click 'Rapportsenter' client
            Mouse.Click(uIRapportsenterClient, new Point(44, 27));
        }
        
        /// <summary>
        /// Click_Reports
        /// </summary>
        public void Click_Reports()
        {
            #region Variable Declarations
            WinClient uIGatver63031732ASCLAvClient = this.UIGatver63031732ASCLAvWindow.UIItemWindow.UIGatver63031732ASCLAvClient;
            #endregion

            // Click 'Gat ver. 6.3.0.31732 - (ASCL - Avd: TOP-TESTHOSPIT...' client
            Mouse.Click(uIGatver63031732ASCLAvClient, new Point(599, 11));
        }
        
        /// <summary>
        /// Click_RosterCellSat
        /// </summary>
        public void Click_RosterCellSat()
        {
            #region Variable Declarations
            DXCell uIItemCell1 = this.UIArbeidsplanKopiavGruWindow1.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell1;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell1, new Point(373, 50));
        }
                
        /// <summary>
        /// Click_RosterEmployeesOk
        /// </summary>
        public void Click_RosterEmployeesOk()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UIAnsatteiArbeidsplanWindow.UIOKButton;
            #endregion

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(44, 9));
        }
        
        /// <summary>
        /// Click_SatEmp16
        /// </summary>
        public void Click_SatEmp16()
        {
            #region Variable Declarations
            DXCell uIItemCell1 = this.UIArbeidsplanKopiavGruWindow1.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell1;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell1, new Point(15, 10));
        }
        
        /// <summary>
        /// Click_SatEmp17
        /// </summary>
        public void Click_SatEmp17()
        {
            #region Variable Declarations
            DXCell uIDK6Cell3 = this.UIArbeidsplanKopiavGruWindow1.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIDK6Cell3;
            #endregion

            // Click 'DK6' cell
            Mouse.Click(uIDK6Cell3, new Point(12, 8));
        }
        
        /// <summary>
        /// Click_Utrykning
        /// </summary>
        public void Click_Utrykning()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIUtrykningRibbonBaseButtonItem = this.UIGatver63031732ASCLAvWindow7.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIUtrykningRibbonBaseButtonItem;
            #endregion

            // Click 'Utrykning' RibbonBaseButtonItem
            Mouse.Click(uIUtrykningRibbonBaseButtonItem, new Point(27, 25));
        }
        
        /// <summary>
        /// Click_WedCell
        /// </summary>
        public void Click_WedCell()
        {
            UIMapVS2017.Click_WedCell();
        }
        
        /// <summary>
        /// Click_WedCell_Week2
        /// </summary>
        public void Click_WedCell_Week2()
        {
            UIMapVS2017.Click_WedCell_Week2();
        }
        
        /// <summary>
        /// ClickAbsenceShiftsCell
        /// </summary>
        public void ClickAbsenceShiftsCell()
        {
            #region Variable Declarations
            DXCell uIDCell = this.UIEndrevakterWindow.UIGsPanelControl1Client.UIGcShiftListClient.UIGcShiftsTable.UIDCell;
            #endregion

            // Click 'D' cell
            Mouse.Click(uIDCell, new Point(30, 8));
        }
        
        /// <summary>
        /// ClickDatePickerAndCleantxt - Use 'ClickDatePickerAndCleantxtParams' to pass parameters into this method.
        /// </summary>
        public void ClickDatePickerAndCleantxt()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uIVelgdatoBarBaseButtonItem = this.UIGatver64034203ASCLAvWindow.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UIVelgdatoBarBaseButtonItem;
            DXPopupEdit uIPceDatePopupEdit = this.UIGatver64034203ASCLAvWindow.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UIVelgdatoBarItem.UIPopupContainerBarConMenu.UIPpcDatePickerClient.UIPceDatePopupEdit;
            #endregion

            // Click 'Velg dato' BarBaseButtonItem
            Mouse.Click(uIVelgdatoBarBaseButtonItem, new Point(50, 10));

            // Type '' in 'pceDate' PopupEdit
            //ValueAsString
            uIPceDatePopupEdit.ValueAsString = this.ClickDatePickerAndCleantxtParams.UIPceDatePopupEditValueAsString;
        }
        
        /// <summary>
        /// Close_EditNewAccount
        /// </summary>
        public void Close_EditNewAccount()
        {
            #region Variable Declarations
            WinButton uILukkButton = this.UIEndrekonteringWindow.UIItemWindow1.UIEndrekonteringClient.UILukkButton;
            #endregion

            // Click 'L&ukk' button
            Mouse.Click(uILukkButton, new Point(27, 15));
        }
        
        /// <summary>
        /// Close_ExportOpenReportfileDialog
        /// </summary>
        public void Close_ExportOpenReportfileDialog()
        {
            #region Variable Declarations
            DXButton uISimpleButtonButton = this.UIItemWindow23.UIExportWindow.UISimpleButtonButton;
            #endregion

            // Click 'SimpleButton' button
            Mouse.Click(uISimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// Close_KontWindow
        /// </summary>
        public void Close_KontWindow()
        {
            #region Variable Declarations
            WinButton uILukkButton = this.UIEndrekonteringWindow.UIItemWindow1.UIEndrekonteringClient.UILukkButton;
            #endregion

            // Click 'L&ukk' button
            Mouse.Click(uILukkButton, new Point(32, 19));
        }
        
        /// <summary>
        /// CloseLT
        /// </summary>
        public void CloseLT()
        {
            #region Variable Declarations
            WinClient uIItemClient1 = this.UILønnsogtrekkarterWindow.UIItemClient.UIItemClient1;
            #endregion

            // Click client
            Mouse.Click(uIItemClient1, new Point(278, 15));
        }
        
        /// <summary>
        /// ClosePreview
        /// </summary>
        public void ClosePreview()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIBarButtonItemLink0RibbonBaseButtonItem = this.UIForhåndsvisningWindow.UIRibbonControlRibbon.UIPrintPreviewRibbonPaRibbonPage.UICloseRibbonPageGroup.UIBarButtonItemLink0RibbonBaseButtonItem;
            #endregion

            // Click 'BarButtonItemLink[0]' RibbonBaseButtonItem
            Mouse.Click(uIBarButtonItemLink0RibbonBaseButtonItem, new Point(21, 31));
        }
        
        /// <summary>
        /// CloseRosterPlan2
        /// </summary>
        public void CloseRosterPlan2()
        {
            #region Variable Declarations
            DXButton uICloseButton = this.UIArbeidsplanGrunnlagHWindow.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(5, 8));
        }
        
        /// <summary>
        /// DeleteEffectuation_CalendarPlan
        /// </summary>
        public void DeleteEffectuation_CalendarPlan()
        {
            #region Variable Declarations
            DXRibbonItem uISlettiverksettingRibbonItem = this.UIArbeidsplanChapter_5Window.UIRcMenuRibbon.UIRpPlanRibbonPage.UIGrpEffectuateNoneRevRibbonPageGroup.UISlettiverksettingRibbonItem;
            DXMenuBaseButtonItem uIBtnDeleteNoRevMenuBaseButtonItem = this.UIItemWindow1.UISubMenuBarControlMenu.UIBtnDeleteNoRevMenuBaseButtonItem;
            DXButton uIVelgalleButton = this.UISletteiverksettingWindow.UIPnlToppInfoClient.UIVelgalleButton;
            DXButton uISlettiverksettingpå1Button = this.UISletteiverksettingWindow.UIPnlBottomClient.UISlettiverksettingpå1Button;
            DXButton uIGSSimpleButtonButton = this.UIItemWindow12.UIGSSimpleButtonButton;
            DXButton uIGSSimpleButtonButton1 = this.UIItemWindow21.UIGSSimpleButtonButton;
            #endregion

            // Click 'Slett iverksetting' RibbonItem
            Mouse.Click(uISlettiverksettingRibbonItem, new Point(57, 7));

            // Click 'btnDeleteNoRev' MenuBaseButtonItem
            Mouse.Click(uIBtnDeleteNoRevMenuBaseButtonItem, new Point(60, 8));

            // Click 'Velg alle' button
            Mouse.Click(uIVelgalleButton, new Point(1, 1));

            // Click 'Slett iverksetting på 10 linjer' button
            Mouse.Click(uISlettiverksettingpå1Button, new Point(1, 1));

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton1, new Point(1, 1));
        }
        
        /// <summary>
        /// DragDrop
        /// </summary>
        public void DragDrop()
        {
            #region Variable Declarations
            DXPrintingBrick uIPage0BrickIndices010PrintControlBrick = this.UIForhåndsvisningWindow.UIDocumentViewerPrintViewControl1.UIPage0BrickIndices010PrintControlBrick;
            DXPrintingBrick uIPage0BrickIndices020PrintControlBrick = this.UIForhåndsvisningWindow.UIDocumentViewerPrintViewControl1.UIPage0BrickIndices020PrintControlBrick;
            #endregion

            // Move 'Page [0].BrickIndices [0].[1].[0].[65]' PrintControlBrick to 'Page [0].BrickIndices [0].[2].[0].[64]' PrintControlBrick
            uIPage0BrickIndices020PrintControlBrick.EnsureClickable(new Point(137, 18));
            Mouse.StartDragging(uIPage0BrickIndices010PrintControlBrick, new Point(205, 38));
            Mouse.StopDragging(uIPage0BrickIndices020PrintControlBrick, new Point(137, 18));
        }
        
        /// <summary>
        /// EffectuateWholePlanForNN
        /// </summary>
        public void EffectuateWholePlanForNN()
        {
            #region Variable Declarations
            DXRibbonItem uIIverksettingRibbonItem = this.UIArbeidsplanChapter_6Window.UIRcMenuRibbon.UIRpPlanRibbonPage.UIGrpEffectuateRevolviRibbonPageGroup.UIIverksettingRibbonItem;
            DXMenuBaseButtonItem uIBtnRotateWholeMenuBaseButtonItem = this.UIItemWindow1.UISubMenuBarControlMenu.UIBtnRotateWholeMenuBaseButtonItem;
            DXButton uIIverksett10linjerButton = this.UIIverksetteWindow.UIPnlButtonsClient.UIIverksett10linjerButton;
            DXButton uIGSSimpleButtonButton = this.UIItemWindow2.UIGSSimpleButtonButton;
            DXButton uIGSSimpleButtonButton1 = this.UIItemWindow11.UIGSPanelControlClient.UIGSSimpleButtonButton;
            #endregion

            // Click 'Iverksetting' RibbonItem
            Mouse.Click(uIIverksettingRibbonItem, new Point(69, 8));

            // Click 'btnRotateWhole' MenuBaseButtonItem
            Mouse.Click(uIBtnRotateWholeMenuBaseButtonItem, new Point(95, 12));

            // Click 'Iverksett 10 linjer' button
            Mouse.Click(uIIverksett10linjerButton, new Point(1, 1));

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton1, new Point(1, 1));
        }
        
        /// <summary>
        /// GoTo3105_Date
        /// </summary>
        public void GoTo3105_Date()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uIVelgdatoBarBaseButtonItem = this.UIGatver63031732ASCLAvWindow7.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UIVelgdatoBarBaseButtonItem;
            DXCalendar uIDnDatePickerCalendar = this.UIGatver63031732ASCLAvWindow7.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UIVelgdatoBarItem.UIPopupContainerBarConMenu.UIPpcDatePickerClient.UILcDatePickerCustom.UILayoutControlGroup1LayoutGroup.UILayoutControlItem1LayoutControlItem.UIDnDatePickerCalendar;
            DXButton uIGåtilButton = this.UIGatver63031732ASCLAvWindow7.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UIVelgdatoBarItem.UIPopupContainerBarConMenu.UIPpcDatePickerClient.UILcDatePickerCustom.UILayoutControlGroup1LayoutGroup.UILayoutControlItem3LayoutControlItem.UIGåtilButton;
            #endregion

            // Click 'Velg dato' BarBaseButtonItem
            Mouse.Click(uIVelgdatoBarBaseButtonItem, new Point(62, 12));

            // Click 'dnDatePicker' calendar
            Mouse.Click(uIDnDatePickerCalendar, new Point(162, 108));

            // Click 'Gå til' button
            Mouse.Click(uIGåtilButton, new Point(1, 1));
        }
        
        /// <summary>
        /// NameRosterplan - Use 'NameRosterplanParams' to pass parameters into this method.
        /// </summary>
        public void NameRosterplan()
        {
            #region Variable Declarations
            DXTextEdit uIENameEdit = this.UIArbeidsplanInnstilliWindow.UITcDataTabList.UITpConfigurationClient.UIPaCenterClient.UIENameEdit;
            #endregion

            // Type 'Chapter_5_step_1' in 'eName' text box
            //ValueAsString
            uIENameEdit.ValueAsString = this.NameRosterplanParams.UIENameEditValueAsString;
        }
        public void NameRosterplan3()
        {
            #region Variable Declarations
            DXTextEdit uIENameEdit = this.UIArbeidsplanInnstilliWindow.UITcDataTabList.UITpConfigurationClient.UIPaCenterClient.UIENameEdit;
            #endregion

            // Type 'Chapter_5_step_1' in 'eName' text box
            //ValueAsString
            uIENameEdit.ValueAsString = "Chapter_5_step_3";
        }

        /// <summary>
        /// Ok_Edit_EmpPosition
        /// </summary>
        public void Ok_Edit_EmpPosition()
        {
            #region Variable Declarations
            DXButton uIGSSimpleButtonButton = this.UIStillingsforholdWindow.UIGSDialogFooterBarCustom.UIGSSimpleButtonButton;
            #endregion

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// OkClose_Absence
        /// </summary>
        public void OkClose_Absence()
        {
            UICommon.UIMapVS2017.ClickOkConstuctAbsence();
        }
        
        /// <summary>
        /// Select_AbsenceShift
        /// </summary>
        public void Select_AbsenceShift()
        {
            #region Variable Declarations
            DXCell uIItem10EgenmeldingIAbCell = this.UIGatver63031732ASCLAvWindow7.UIBottomPanelDockPanel.UIFraværDockPanel.UIControlContainerCustom.UIGcAbsenceColumnTable.UIItem10EgenmeldingIAbCell;
            #endregion

            // Click '10 - Egenmelding (IA beregning) uten IA' cell
            Mouse.Click(uIItem10EgenmeldingIAbCell, new Point(171, 8));
        }
        
        /// <summary>
        /// Select_Emp16Helg
        /// </summary>
        public void Select_Emp16Helg()
        {
            #region Variable Declarations
            WinClient uIAnsatteClient = this.UIGatver63031732ASCLAvWindow8.UIItemWindow.UIAnsatteClient;
            #endregion

            // Click 'Ansatte' client
            Mouse.Click(uIAnsatteClient, new Point(98, 131));
        }
        
        /// <summary>
        /// Select_Emp17Helg
        /// </summary>
        public void Select_Emp17Helg()
        {
            #region Variable Declarations
            WinClient uIAnsatteClient = this.UIGatver63031732ASCLAvWindow7.UIItemWindow.UIAnsatteClient;
            #endregion

            // Click 'Ansatte' client
            Mouse.Click(uIAnsatteClient, new Point(35, 145));
        }
        
        /// <summary>
        /// Select_Emp18Helg
        /// </summary>
        public void Select_Emp18Helg()
        {
            #region Variable Declarations
            WinClient uIAnsatteClient = this.UIGatver63031732ASCLAvWindow15.UIItemWindow1.UIAnsatteClient;
            #endregion

            // Click 'Ansatte' client
            Mouse.Click(uIAnsatteClient, new Point(50, 162));
        }
        
        /// <summary>
        /// Select_Employees
        /// </summary>
        public void Select_Employees()
        {
            #region Variable Declarations
            DXCell uIIkkevalgtCell = this.UIIverksetteWindow.UIPnlResultClient.UIGsGridControlLinesTable.UIIkkevalgtCell;
            DXCell uIIkkevalgtCell1 = this.UIIverksetteWindow.UIPnlResultClient.UIGsGridControlLinesTable.UIIkkevalgtCell1;
            DXCell uIIkkevalgtCell2 = this.UIIverksetteWindow.UIPnlResultClient.UIGsGridControlLinesTable.UIIkkevalgtCell2;
            DXCell uIIkkevalgtCell3 = this.UIIverksetteWindow.UIPnlResultClient.UIGsGridControlLinesTable.UIIkkevalgtCell3;
            #endregion

            // Click 'Ikke valgt' cell
            Mouse.Click(uIIkkevalgtCell, new Point(21, 9));

            // Click 'Ikke valgt' cell
            Mouse.Click(uIIkkevalgtCell1, new Point(21, 8));

            // Click 'Ikke valgt' cell
            Mouse.Click(uIIkkevalgtCell2, new Point(21, 9));

            // Click 'Ikke valgt' cell
            Mouse.Click(uIIkkevalgtCell3, new Point(23, 10));
        }
        
        /// <summary>
        /// Select_Employees16To20
        /// </summary>
        public void Select_Employees16To20()
        {
            #region Variable Declarations
            DXCell uIValgtCell = this.UISletteiverksettingWindow.UIPnlGridClient.UIGsGridControlLinesTable.UIValgtCell;
            DXCell uIValgtCell1 = this.UISletteiverksettingWindow.UIPnlGridClient.UIGsGridControlLinesTable.UIValgtCell1;
            DXCell uIValgtCell2 = this.UISletteiverksettingWindow.UIPnlGridClient.UIGsGridControlLinesTable.UIValgtCell2;
            DXCell uIValgtCell3 = this.UISletteiverksettingWindow.UIPnlGridClient.UIGsGridControlLinesTable.UIValgtCell3;
            #endregion

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell, new Point(30, 10));

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell1, new Point(32, 10));

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell2, new Point(30, 11));

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell3, new Point(30, 11));
        }
        
        /// <summary>
        /// Select_EmpNo15
        /// </summary>
        public void Select_EmpNo15()
        {
            #region Variable Declarations
            WinClient uIAnsatteClient = this.UIGatver63031732ASCLAvWindow10.UIItemWindow.UIAnsatteClient;
            #endregion

            // Click 'Ansatte' client
            Mouse.Click(uIAnsatteClient, new Point(138, 107));
        }
        /// <summary>
        /// Select_ExtraCause - Use 'Select_ExtraCauseParams' to pass parameters into this method.
        /// </summary>
        public void Select_ExtraCause()
        {
            #region Variable Declarations
            DXLookUpEdit uICbOvertimeCodeLookUpEdit = this.UIMerarbeidovertidWindow.UIPanClientClient.UINbMenuNavBar.UICbOvertimeCodeLookUpEdit;
            #endregion

            // Type 'Gatsoft.Gat.DataModel.OvertimeCode' in 'cbOvertimeCode' LookUpEdit
            //ValueTypeName
            uICbOvertimeCodeLookUpEdit.ValueTypeName = this.Select_ExtraCauseParams.UICbOvertimeCodeLookUpEditValueTypeName;

            // Type 'OvertimeCode(Id=242481501)' in 'cbOvertimeCode' LookUpEdit
            //ValueAsString
            uICbOvertimeCodeLookUpEdit.ValueAsString = this.Select_ExtraCauseParams.UICbOvertimeCodeLookUpEditValueAsString;
        }
        
        /// <summary>
        /// Select_ExtraEmp - Use 'Select_ExtraEmpParams' to pass parameters into this method.
        /// </summary>
        public void Select_ExtraEmp()
        {
            #region Variable Declarations
            DXLookUpEdit uICbEmploymentLookUpEdit = this.UIMerarbeidovertidWindow.UIPanClientClient.UINbMenuNavBar.UICbEmploymentLookUpEdit;
            #endregion

            // Type '' in 'cbEmployment' LookUpEdit
            //ValueAsString
            uICbEmploymentLookUpEdit.ValueAsString = this.Select_ExtraEmpParams.UICbEmploymentLookUpEditValueAsString;
        }
        
        ///// <summary>
        ///// Select_ExtraNattTilLørdag
        ///// </summary>
        //public void Select_ExtraNattTilLørdag()
        //{
        //    #region Variable Declarations
        //    DXCell uIItem10HelgCell = this.UIGatver63031732ASCLAvWindow7.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UINatttiltirsdag001677DockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIItem10HelgCell;
        //    #endregion

        //    // Click '10, Helg' cell
        //    Mouse.Click(uIItem10HelgCell, new Point(30, 4));
        //}
        
        /// <summary>
        /// Select_FirstFiveEmplyees
        /// </summary>
        public void Select_FirstFiveEmplyees()
        {
            #region Variable Declarations
            DXCell uIValgtCell = this.UIAnsatteiArbeidsplanWindow.UIPnlControlClient.UIGrpSelectedEmployeesClient.UIGcEmployeesTable.UIValgtCell;
            DXCell uIValgtCell1 = this.UIAnsatteiArbeidsplanWindow.UIPnlControlClient.UIGrpSelectedEmployeesClient.UIGcEmployeesTable.UIValgtCell1;
            DXCell uIValgtCell2 = this.UIAnsatteiArbeidsplanWindow.UIPnlControlClient.UIGrpSelectedEmployeesClient.UIGcEmployeesTable.UIValgtCell2;
            DXCell uIValgtCell3 = this.UIAnsatteiArbeidsplanWindow.UIPnlControlClient.UIGrpSelectedEmployeesClient.UIGcEmployeesTable.UIValgtCell3;
            DXCell uIValgtCell4 = this.UIAnsatteiArbeidsplanWindow.UIPnlControlClient.UIGrpSelectedEmployeesClient.UIGcEmployeesTable.UIValgtCell4;
            #endregion

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell, new Point(14, 8));

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell1, new Point(14, 9));

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell2, new Point(12, 8));

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell3, new Point(13, 8));

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell4, new Point(14, 7));
        }
        
        public void Select_TypeOfPlan()
        {
            #region Variable Declarations
            DXLookUpEdit uILeRosterplanTypeLookUpEdit = this.UIArbeidsplanInnstilliWindow.UITcDataTabList.UITpConfigurationClient.UIPaCenterClient.UILeRosterplanTypeLookUpEdit;
            #endregion

            // Type 'Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.Configuration.RosterplanConfigurationController+RosterplanTypeDefinition' in 'leRosterplanType' LookUpEdit
            //ValueTypeName
            uILeRosterplanTypeLookUpEdit.ValueTypeName = this.Select_TypeOfPlanParams.UILeRosterplanTypeLookUpEditValueTypeName;

            // Type 'Kalenderplan' in 'leRosterplanType' LookUpEdit
            //ValueAsString
            uILeRosterplanTypeLookUpEdit.ValueAsString = this.Select_TypeOfPlanParams.UILeRosterplanTypeLookUpEditValueAsString;
        }
        
        /// <summary>
        /// Select_UtrykningsCause - Use 'Select_UtrykningsCauseParams' to pass parameters into this method.
        /// </summary>
        public void Select_UtrykningsCause()
        {
            #region Variable Declarations
            DXLookUpEdit uI_cbCauseCodeLookUpEdit = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem3LayoutControlItem.UI_navBarNavBar.UI_cbCauseCodeLookUpEdit;
            #endregion

            // Type 'Gatsoft.Gat.BusinessLogic.Callout.CalloutDTO+CauseCode' in '_cbCauseCode' LookUpEdit
            //ValueTypeName
            uI_cbCauseCodeLookUpEdit.ValueTypeName = this.Select_UtrykningsCauseParams.UI_cbCauseCodeLookUpEditValueTypeName;

            // Type 'Gatsoft.Gat.BusinessLogic.Callout.CalloutDTO+CauseCode' in '_cbCauseCode' LookUpEdit
            //ValueAsString
            uI_cbCauseCodeLookUpEdit.ValueAsString = this.Select_UtrykningsCauseParams.UI_cbCauseCodeLookUpEditValueAsString;
        }
        
        /// <summary>
        /// Select_VacantFreeOnSunday
        /// </summary>
        public void Select_VacantFreeOnSunday()
        {
            #region Variable Declarations
            DXCell uIValgtCell = this.UIByttemedavdelingWindow.UIGsPanelControl1Client.UIGsTabTabList.UITpDepartmentExchangeClient.UIGrpDepartmentShiftsClient.UIGcDepartmentExchangeTable.UIValgtCell;
            DXCell uIValgtCell1 = this.UIByttemedavdelingWindow.UIGsPanelControl1Client.UIGsTabTabList.UITpDepartmentExchangeClient.UIGrpDepartmentShiftsClient.UIGcDepartmentExchangeTable.UIValgtCell1;
            #endregion

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell, new Point(21, 10));

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell1, new Point(33, 10));
        }
        
        /// <summary>
        /// Select_VacantOnSaturday
        /// </summary>
        public void Select_VacantOnSaturday()
        {
            #region Variable Declarations
            DXCell uIValgtCell2 = this.UIByttemedavdelingWindow.UIGsPanelControl1Client.UIGsTabTabList.UITpDepartmentExchangeClient.UIGrpDepartmentShiftsClient.UIGcDepartmentExchangeTable.UIValgtCell2;
            #endregion

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell2, new Point(32, 7));
        }
        
        /// <summary>
        /// SelectEmp10AndEditKont
        /// </summary>
        public void SelectEmp10AndEditKont()
        {
            #region Variable Declarations
            WinClient uIAnsatteClient = this.UIGatver63031732ASCLAvWindow8.UIItemWindow.UIAnsatteClient;
            WinClient uITimelisteClient = this.UIGatver63031732ASCLAvWindow9.UIItemWindow1.UITimelisteClient;
            #endregion

            // Click 'Ansatte' client
            Mouse.Click(uIAnsatteClient, new Point(88, 29));

            uITimelisteClient.DrawHighlight();
            Mouse.Move(uITimelisteClient, new Point(52, 17));
            // Click 'Timeliste' client
            Mouse.Click(uITimelisteClient, new Point(52, 17));
        }
        
        /// <summary>
        /// SelectEmployees_step2_1
        /// </summary>
        public void SelectEmployees_step2_1()
        {
            #region Variable Declarations
            DXCell uIValgtCell = this.UINyarbeidsplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIValgtCell;
            DXCell uIValgtCell1 = this.UINyarbeidsplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIValgtCell1;
            DXCell uIValgtCell2 = this.UINyarbeidsplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIValgtCell2;
            DXCell uIValgtCell3 = this.UINyarbeidsplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIValgtCell3;
            #endregion

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell, new Point(17, 9));

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell1, new Point(17, 7));

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell2, new Point(17, 9));

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell3, new Point(17, 8));
        }
        
        /// <summary>
        /// SelectReport96 - Use 'SelectReport96Params' to pass parameters into this method.
        /// </summary>
        public void SelectReport96()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIVelgradWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type '96' in text box
            uIItemEdit.Text = this.SelectReport96Params.UIItemEditText;
        }
        
        ///// <summary>
        ///// SelectShift_Acol
        ///// </summary>
        //public void SelectShift_Acol()
        //{
        //    #region Variable Declarations
        //    DXCell uIItem10HelgCell = this.UIGatver63031732ASCLAvWindow7.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIAften00167770770FalsDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIItem10HelgCell;
        //    #endregion

        //    // Click '10, Helg' cell
        //    Mouse.Click(uIItem10HelgCell, new Point(23, 6));
        //}
        
        /// <summary>
        /// SelectShiftT2oExchange
        /// </summary>
        public void SelectShiftT2oExchange()
        {
            #region Variable Declarations
            DXCell uISøndagCell = this.UIBytteWindow.UIGsPanelControl1Client1.UIGsTabTabList.UITpShiftExchangeClient.UIGrpEmployee2ShiftsClient.UIGcEmployment2ShiftsTable.UISøndagCell;
            DXButton uIBtnGiveEmployee1Button = this.UIBytteWindow.UIGsPanelControl1Client1.UIGsTabTabList.UITpShiftExchangeClient.UIBtnGiveEmployee1Button;
            #endregion

            // Click 'søndag' cell
            Mouse.Click(uISøndagCell, new Point(14, 7));

            // Click 'btnGiveEmployee1' button
            Mouse.Click(uIBtnGiveEmployee1Button, new Point(1, 1));
        }
        
        /// <summary>
        /// SelectShiftToExchange
        /// </summary>
        public void SelectShiftToExchange()
        {
            #region Variable Declarations
            DXButton uIBtnGiveEmployee2Button = this.UIBytteWindow.UIGsPanelControl1Client.UIGsTabTabList.UITpShiftExchangeClient.UIBtnGiveEmployee2Button;
            #endregion

            // Click 'btnGiveEmployee2' button
            Mouse.Click(uIBtnGiveEmployee2Button, new Point(1, 1));
        }
        
        /// <summary>
        /// Set_RosterEmployeePercentTo_0 - Use 'Set_RosterEmployeePercentTo_0Params' to pass parameters into this method.
        /// </summary>
        public void Set_RosterEmployeePercentTo_0()
        {
            #region Variable Declarations
            DXTreeListCell uIItem1100TreeListCell = this.UIAnsatteiArbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlLeftClient.UITreeListEmployeesTreeList.UINode0TreeListNode.UINode0TreeListNode1.UIItem1100TreeListCell;
            DXTextEdit uIEPositionPercentEdit = this.UIAnsatteiArbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlRightClient.UIViewHostCustom.UIPcViewClient.UIEmployeeEditorsViewCustom.UIPcContentClient.UIXscContentScrollableControl.UIGroupControlViewHostCustom.UIGroupControlClient.UIEmployeeManagerLineVCustom.UIEPositionPercentEdit;
            DXTreeListCell uIItem125TreeListCell = this.UIAnsatteiArbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlLeftClient.UITreeListEmployeesTreeList.UINode2TreeListNode.UINode0TreeListNode.UIItem125TreeListCell;
            #endregion

            // Click '1. 100%' TreeListCell
            Mouse.Click(uIItem1100TreeListCell, new Point(17, 10));

            // Type 'System.Double' in 'ePositionPercent' text box
            //ValueTypeName
            uIEPositionPercentEdit.ValueTypeName = this.Set_RosterEmployeePercentTo_0Params.UIEPositionPercentEditValueTypeName;

            // Type '0' in 'ePositionPercent' text box
            //ValueAsString
            uIEPositionPercentEdit.ValueAsString = this.Set_RosterEmployeePercentTo_0Params.UIEPositionPercentEditValueAsString;

            // Type '{NumPad0}{Tab}' in 'ePositionPercent' text box
            Keyboard.SendKeys(uIEPositionPercentEdit, this.Set_RosterEmployeePercentTo_0Params.UIEPositionPercentEditSendKeys, ModifierKeys.None);

            // Click '1. 25%' TreeListCell
            Mouse.Click(uIItem125TreeListCell, new Point(23, 6));

            // Type 'System.Double' in 'ePositionPercent' text box
            //ValueTypeName
            uIEPositionPercentEdit.ValueTypeName = this.Set_RosterEmployeePercentTo_0Params.UIEPositionPercentEditValueTypeName1;

            // Type '0' in 'ePositionPercent' text box
            //ValueAsString
            uIEPositionPercentEdit.ValueAsString = this.Set_RosterEmployeePercentTo_0Params.UIEPositionPercentEditValueAsString1;

            // Type '{Tab}' in 'ePositionPercent' text box
            Keyboard.SendKeys(uIEPositionPercentEdit, this.Set_RosterEmployeePercentTo_0Params.UIEPositionPercentEditSendKeys1, ModifierKeys.None);
        }
        
        /// <summary>
        /// Uncheck_Kladd - Use 'Uncheck_KladdParams' to pass parameters into this method.
        /// </summary>
        public void Uncheck_Kladd()
        {
            #region Variable Declarations
            DXCheckBox uIChkKladdCheckBox = this.UINyarbeidsplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILcMainInfoLayoutControlItem.UIPnlMainInfoClient.UIChkKladdCheckBox;
            #endregion

            // Clear 'chkKladd' check box
            uIChkKladdCheckBox.Checked = this.Uncheck_KladdParams.UIChkKladdCheckBoxChecked;
        }
        
        /// <summary>
        /// UncheckShiftsToDeleteWithErrors - Use 'UncheckShiftsToDeleteWithErrorsParams' to pass parameters into this method.
        /// </summary>
        public void UncheckShiftsToDeleteWithErrors()
        {
            #region Variable Declarations
            DXTreeListNode uINode1TreeListNode = this.UIItemWindow.UIPcContentClient1.UITlOperationsTreeList.UINode1TreeListNode;
            DXTreeListNode uINode3TreeListNode = this.UIItemWindow.UIPcContentClient2.UITlOperationsTreeList.UINode3TreeListNode;
            #endregion

            // Type 'False' in 'Node1' TreeListNode
            //Checked
            uINode1TreeListNode.Checked = this.UncheckShiftsToDeleteWithErrorsParams.UINode1TreeListNodeChecked;

            // Type 'False' in 'Node3' TreeListNode
            //Checked
            uINode3TreeListNode.Checked = this.UncheckShiftsToDeleteWithErrorsParams.UINode3TreeListNodeChecked;
        }
        
        /// <summary>
        /// UpperLeft - Use 'UpperLeftExpectedValues' to pass parameters into this method.
        /// </summary>
        public void UpperLeft()
        {
            #region Variable Declarations
            DXPrintingBrick uIPage0BrickIndices000PrintControlBrick = this.UIForhåndsvisningWindow.UIDocumentViewerPrintViewControl1.UIPage0BrickIndices000PrintControlBrick;
            #endregion

            // Verify that the 'ClassName' property of 'Page [0].BrickIndices [0].[0].[0].[65]' PrintControlBrick equals 'PrintControlBrick'
            Assert.AreEqual(this.UpperLeftExpectedValues.UIPage0BrickIndices000PrintControlBrickClassName, uIPage0BrickIndices000PrintControlBrick.ClassName);
        }
        
        #region Properties
        public virtual Check_AcolExpectedValues Check_AcolExpectedValues
        {
            get
            {
                if ((this.mCheck_AcolExpectedValues == null))
                {
                    this.mCheck_AcolExpectedValues = new Check_AcolExpectedValues();
                }
                return this.mCheck_AcolExpectedValues;
            }
        }
        
        public virtual Check_ExtraLTExpectedValues Check_ExtraLTExpectedValues
        {
            get
            {
                if ((this.mCheck_ExtraLTExpectedValues == null))
                {
                    this.mCheck_ExtraLTExpectedValues = new Check_ExtraLTExpectedValues();
                }
                return this.mCheck_ExtraLTExpectedValues;
            }
        }
        
        public virtual Check_ExtraLT_EditExpectedValues Check_ExtraLT_EditExpectedValues
        {
            get
            {
                if ((this.mCheck_ExtraLT_EditExpectedValues == null))
                {
                    this.mCheck_ExtraLT_EditExpectedValues = new Check_ExtraLT_EditExpectedValues();
                }
                return this.mCheck_ExtraLT_EditExpectedValues;
            }
        }
        
        public virtual Check_Ok_depExchangeExpectedValues Check_Ok_depExchangeExpectedValues
        {
            get
            {
                if ((this.mCheck_Ok_depExchangeExpectedValues == null))
                {
                    this.mCheck_Ok_depExchangeExpectedValues = new Check_Ok_depExchangeExpectedValues();
                }
                return this.mCheck_Ok_depExchangeExpectedValues;
            }
        }
        
        public virtual Check_Ok_exhangeExpectedValues Check_Ok_exhangeExpectedValues
        {
            get
            {
                if ((this.mCheck_Ok_exhangeExpectedValues == null))
                {
                    this.mCheck_Ok_exhangeExpectedValues = new Check_Ok_exhangeExpectedValues();
                }
                return this.mCheck_Ok_exhangeExpectedValues;
            }
        }
        
        public virtual Check_Ok_RemaningExpectedValues Check_Ok_RemaningExpectedValues
        {
            get
            {
                if ((this.mCheck_Ok_RemaningExpectedValues == null))
                {
                    this.mCheck_Ok_RemaningExpectedValues = new Check_Ok_RemaningExpectedValues();
                }
                return this.mCheck_Ok_RemaningExpectedValues;
            }
        }
        
        public virtual CheckButtonNameExpectedValues CheckButtonNameExpectedValues
        {
            get
            {
                if ((this.mCheckButtonNameExpectedValues == null))
                {
                    this.mCheckButtonNameExpectedValues = new CheckButtonNameExpectedValues();
                }
                return this.mCheckButtonNameExpectedValues;
            }
        }
        
        public virtual CheckDateExpectedValues CheckDateExpectedValues
        {
            get
            {
                if ((this.mCheckDateExpectedValues == null))
                {
                    this.mCheckDateExpectedValues = new CheckDateExpectedValues();
                }
                return this.mCheckDateExpectedValues;
            }
        }
        
        public virtual CheckDiagonalCellsExpectedValues CheckDiagonalCellsExpectedValues
        {
            get
            {
                if ((this.mCheckDiagonalCellsExpectedValues == null))
                {
                    this.mCheckDiagonalCellsExpectedValues = new CheckDiagonalCellsExpectedValues();
                }
                return this.mCheckDiagonalCellsExpectedValues;
            }
        }
        
        public virtual CheckEmpNoPreviewExpectedValues CheckEmpNoPreviewExpectedValues
        {
            get
            {
                if ((this.mCheckEmpNoPreviewExpectedValues == null))
                {
                    this.mCheckEmpNoPreviewExpectedValues = new CheckEmpNoPreviewExpectedValues();
                }
                return this.mCheckEmpNoPreviewExpectedValues;
            }
        }
        
        public virtual CheckListExpectedValues CheckListExpectedValues
        {
            get
            {
                if ((this.mCheckListExpectedValues == null))
                {
                    this.mCheckListExpectedValues = new CheckListExpectedValues();
                }
                return this.mCheckListExpectedValues;
            }
        }
        
        public virtual CheckReportExpectedValues CheckReportExpectedValues
        {
            get
            {
                if ((this.mCheckReportExpectedValues == null))
                {
                    this.mCheckReportExpectedValues = new CheckReportExpectedValues();
                }
                return this.mCheckReportExpectedValues;
            }
        }
        
        public virtual CheckRosterGridSatCellExpectedValues CheckRosterGridSatCellExpectedValues
        {
            get
            {
                if ((this.mCheckRosterGridSatCellExpectedValues == null))
                {
                    this.mCheckRosterGridSatCellExpectedValues = new CheckRosterGridSatCellExpectedValues();
                }
                return this.mCheckRosterGridSatCellExpectedValues;
            }
        }
        
        public virtual CheckRosterPlanWeekendsExpectedValues CheckRosterPlanWeekendsExpectedValues
        {
            get
            {
                if ((this.mCheckRosterPlanWeekendsExpectedValues == null))
                {
                    this.mCheckRosterPlanWeekendsExpectedValues = new CheckRosterPlanWeekendsExpectedValues();
                }
                return this.mCheckRosterPlanWeekendsExpectedValues;
            }
        }
        
        public virtual ClickDatePickerAndCleantxtParams ClickDatePickerAndCleantxtParams
        {
            get
            {
                if ((this.mClickDatePickerAndCleantxtParams == null))
                {
                    this.mClickDatePickerAndCleantxtParams = new ClickDatePickerAndCleantxtParams();
                }
                return this.mClickDatePickerAndCleantxtParams;
            }
        }
        
        public virtual NameRosterplanParams NameRosterplanParams
        {
            get
            {
                if ((this.mNameRosterplanParams == null))
                {
                    this.mNameRosterplanParams = new NameRosterplanParams();
                }
                return this.mNameRosterplanParams;
            }
        }
        
        public virtual Select_ExtraCauseParams Select_ExtraCauseParams
        {
            get
            {
                if ((this.mSelect_ExtraCauseParams == null))
                {
                    this.mSelect_ExtraCauseParams = new Select_ExtraCauseParams();
                }
                return this.mSelect_ExtraCauseParams;
            }
        }
        
        public virtual Select_ExtraEmpParams Select_ExtraEmpParams
        {
            get
            {
                if ((this.mSelect_ExtraEmpParams == null))
                {
                    this.mSelect_ExtraEmpParams = new Select_ExtraEmpParams();
                }
                return this.mSelect_ExtraEmpParams;
            }
        }
        
        public virtual Select_TypeOfPlanParams Select_TypeOfPlanParams
        {
            get
            {
                if ((this.mSelect_TypeOfPlanParams == null))
                {
                    this.mSelect_TypeOfPlanParams = new Select_TypeOfPlanParams();
                }
                return this.mSelect_TypeOfPlanParams;
            }
        }
        
        public virtual Select_UtrykningsCauseParams Select_UtrykningsCauseParams
        {
            get
            {
                if ((this.mSelect_UtrykningsCauseParams == null))
                {
                    this.mSelect_UtrykningsCauseParams = new Select_UtrykningsCauseParams();
                }
                return this.mSelect_UtrykningsCauseParams;
            }
        }
        
        public virtual SelectReport96Params SelectReport96Params
        {
            get
            {
                if ((this.mSelectReport96Params == null))
                {
                    this.mSelectReport96Params = new SelectReport96Params();
                }
                return this.mSelectReport96Params;
            }
        }
        
        public virtual Set_RosterEmployeePercentTo_0Params Set_RosterEmployeePercentTo_0Params
        {
            get
            {
                if ((this.mSet_RosterEmployeePercentTo_0Params == null))
                {
                    this.mSet_RosterEmployeePercentTo_0Params = new Set_RosterEmployeePercentTo_0Params();
                }
                return this.mSet_RosterEmployeePercentTo_0Params;
            }
        }
        
        public virtual Uncheck_KladdParams Uncheck_KladdParams
        {
            get
            {
                if ((this.mUncheck_KladdParams == null))
                {
                    this.mUncheck_KladdParams = new Uncheck_KladdParams();
                }
                return this.mUncheck_KladdParams;
            }
        }
        
        public virtual UncheckShiftsToDeleteWithErrorsParams UncheckShiftsToDeleteWithErrorsParams
        {
            get
            {
                if ((this.mUncheckShiftsToDeleteWithErrorsParams == null))
                {
                    this.mUncheckShiftsToDeleteWithErrorsParams = new UncheckShiftsToDeleteWithErrorsParams();
                }
                return this.mUncheckShiftsToDeleteWithErrorsParams;
            }
        }
        
        public virtual UpperLeftExpectedValues UpperLeftExpectedValues
        {
            get
            {
                if ((this.mUpperLeftExpectedValues == null))
                {
                    this.mUpperLeftExpectedValues = new UpperLeftExpectedValues();
                }
                return this.mUpperLeftExpectedValues;
            }
        }
        
        public UIGatver63031732ASCLAvWindow UIGatver63031732ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvWindow == null))
                {
                    this.mUIGatver63031732ASCLAvWindow = new UIGatver63031732ASCLAvWindow();
                }
                return this.mUIGatver63031732ASCLAvWindow;
            }
        }
        
        public UIGatver63031732ASCLAvWindow1 UIGatver63031732ASCLAvWindow1
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvWindow1 == null))
                {
                    this.mUIGatver63031732ASCLAvWindow1 = new UIGatver63031732ASCLAvWindow1();
                }
                return this.mUIGatver63031732ASCLAvWindow1;
            }
        }
        
        public UIGatver63031732ASCLAvWindow2 UIGatver63031732ASCLAvWindow2
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvWindow2 == null))
                {
                    this.mUIGatver63031732ASCLAvWindow2 = new UIGatver63031732ASCLAvWindow2();
                }
                return this.mUIGatver63031732ASCLAvWindow2;
            }
        }
        
        public UIForhåndsvisningWindow UIForhåndsvisningWindow
        {
            get
            {
                if ((this.mUIForhåndsvisningWindow == null))
                {
                    this.mUIForhåndsvisningWindow = new UIForhåndsvisningWindow();
                }
                return this.mUIForhåndsvisningWindow;
            }
        }
        
        public UIVelgradWindow UIVelgradWindow
        {
            get
            {
                if ((this.mUIVelgradWindow == null))
                {
                    this.mUIVelgradWindow = new UIVelgradWindow();
                }
                return this.mUIVelgradWindow;
            }
        }
        
        public UIGatver63031732ASCLAvWindow3 UIGatver63031732ASCLAvWindow3
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvWindow3 == null))
                {
                    this.mUIGatver63031732ASCLAvWindow3 = new UIGatver63031732ASCLAvWindow3();
                }
                return this.mUIGatver63031732ASCLAvWindow3;
            }
        }
        
        public UIWpfWindow UIWpfWindow
        {
            get
            {
                if ((this.mUIWpfWindow == null))
                {
                    this.mUIWpfWindow = new UIWpfWindow();
                }
                return this.mUIWpfWindow;
            }
        }
        
        public UISaveAsWindow UISaveAsWindow
        {
            get
            {
                if ((this.mUISaveAsWindow == null))
                {
                    this.mUISaveAsWindow = new UISaveAsWindow();
                }
                return this.mUISaveAsWindow;
            }
        }
        
        public UIGatver63031732ASCLAvWindow4 UIGatver63031732ASCLAvWindow4
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvWindow4 == null))
                {
                    this.mUIGatver63031732ASCLAvWindow4 = new UIGatver63031732ASCLAvWindow4();
                }
                return this.mUIGatver63031732ASCLAvWindow4;
            }
        }
        
        public UIGatver63031732ASCLAvWindow5 UIGatver63031732ASCLAvWindow5
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvWindow5 == null))
                {
                    this.mUIGatver63031732ASCLAvWindow5 = new UIGatver63031732ASCLAvWindow5();
                }
                return this.mUIGatver63031732ASCLAvWindow5;
            }
        }
        
        public UIGatver63031732ASCLAvWindow6 UIGatver63031732ASCLAvWindow6
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvWindow6 == null))
                {
                    this.mUIGatver63031732ASCLAvWindow6 = new UIGatver63031732ASCLAvWindow6();
                }
                return this.mUIGatver63031732ASCLAvWindow6;
            }
        }
        
        public UILønnsogtrekkarterWindow UILønnsogtrekkarterWindow
        {
            get
            {
                if ((this.mUILønnsogtrekkarterWindow == null))
                {
                    this.mUILønnsogtrekkarterWindow = new UILønnsogtrekkarterWindow();
                }
                return this.mUILønnsogtrekkarterWindow;
            }
        }
        
        public UIGatver63031732ASCLAvWindow7 UIGatver63031732ASCLAvWindow7
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvWindow7 == null))
                {
                    this.mUIGatver63031732ASCLAvWindow7 = new UIGatver63031732ASCLAvWindow7();
                }
                return this.mUIGatver63031732ASCLAvWindow7;
            }
        }
        
        public UIMerarbeidovertidWindow UIMerarbeidovertidWindow
        {
            get
            {
                if ((this.mUIMerarbeidovertidWindow == null))
                {
                    this.mUIMerarbeidovertidWindow = new UIMerarbeidovertidWindow();
                }
                return this.mUIMerarbeidovertidWindow;
            }
        }
        
        public UIItemWindow17 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow17();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIGatver63031732ASCLAvWindow8 UIGatver63031732ASCLAvWindow8
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvWindow8 == null))
                {
                    this.mUIGatver63031732ASCLAvWindow8 = new UIGatver63031732ASCLAvWindow8();
                }
                return this.mUIGatver63031732ASCLAvWindow8;
            }
        }
        
        public UIGatver63031732ASCLAvWindow9 UIGatver63031732ASCLAvWindow9
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvWindow9 == null))
                {
                    this.mUIGatver63031732ASCLAvWindow9 = new UIGatver63031732ASCLAvWindow9();
                }
                return this.mUIGatver63031732ASCLAvWindow9;
            }
        }
        
        public UIEndrekonteringWindow UIEndrekonteringWindow
        {
            get
            {
                if ((this.mUIEndrekonteringWindow == null))
                {
                    this.mUIEndrekonteringWindow = new UIEndrekonteringWindow();
                }
                return this.mUIEndrekonteringWindow;
            }
        }
        
        public UIOVE2003GatWindow UIOVE2003GatWindow
        {
            get
            {
                if ((this.mUIOVE2003GatWindow == null))
                {
                    this.mUIOVE2003GatWindow = new UIOVE2003GatWindow();
                }
                return this.mUIOVE2003GatWindow;
            }
        }
        
        public UINykonteringWindow UINykonteringWindow
        {
            get
            {
                if ((this.mUINykonteringWindow == null))
                {
                    this.mUINykonteringWindow = new UINykonteringWindow();
                }
                return this.mUINykonteringWindow;
            }
        }
        
        public UIFraværsregistreringWindow UIFraværsregistreringWindow
        {
            get
            {
                if ((this.mUIFraværsregistreringWindow == null))
                {
                    this.mUIFraværsregistreringWindow = new UIFraværsregistreringWindow();
                }
                return this.mUIFraværsregistreringWindow;
            }
        }
        
        public UIGatver63031732ASCLAvWindow10 UIGatver63031732ASCLAvWindow10
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvWindow10 == null))
                {
                    this.mUIGatver63031732ASCLAvWindow10 = new UIGatver63031732ASCLAvWindow10();
                }
                return this.mUIGatver63031732ASCLAvWindow10;
            }
        }
        
        public UIGatver63031732ASCLAvWindow11 UIGatver63031732ASCLAvWindow11
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvWindow11 == null))
                {
                    this.mUIGatver63031732ASCLAvWindow11 = new UIGatver63031732ASCLAvWindow11();
                }
                return this.mUIGatver63031732ASCLAvWindow11;
            }
        }
        
        public UIHelgeavtaleWindow UIHelgeavtaleWindow
        {
            get
            {
                if ((this.mUIHelgeavtaleWindow == null))
                {
                    this.mUIHelgeavtaleWindow = new UIHelgeavtaleWindow();
                }
                return this.mUIHelgeavtaleWindow;
            }
        }
        
        public UIGatver63031732ASCLAvWindow12 UIGatver63031732ASCLAvWindow12
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvWindow12 == null))
                {
                    this.mUIGatver63031732ASCLAvWindow12 = new UIGatver63031732ASCLAvWindow12();
                }
                return this.mUIGatver63031732ASCLAvWindow12;
            }
        }
        
        public UIGatver63031732ASCLAvWindow13 UIGatver63031732ASCLAvWindow13
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvWindow13 == null))
                {
                    this.mUIGatver63031732ASCLAvWindow13 = new UIGatver63031732ASCLAvWindow13();
                }
                return this.mUIGatver63031732ASCLAvWindow13;
            }
        }
        
        public UIArbeidsplanGrunnlagHWindow UIArbeidsplanGrunnlagHWindow
        {
            get
            {
                if ((this.mUIArbeidsplanGrunnlagHWindow == null))
                {
                    this.mUIArbeidsplanGrunnlagHWindow = new UIArbeidsplanGrunnlagHWindow();
                }
                return this.mUIArbeidsplanGrunnlagHWindow;
            }
        }
        
        public UIItemWindow113 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow113();
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIIverksetteWindow UIIverksetteWindow
        {
            get
            {
                if ((this.mUIIverksetteWindow == null))
                {
                    this.mUIIverksetteWindow = new UIIverksetteWindow();
                }
                return this.mUIIverksetteWindow;
            }
        }
        
        public UIItemWindow28 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow28();
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow114 UIItemWindow11
        {
            get
            {
                if ((this.mUIItemWindow11 == null))
                {
                    this.mUIItemWindow11 = new UIItemWindow114();
                }
                return this.mUIItemWindow11;
            }
        }
        
        public UISletteiverksettingWindow UISletteiverksettingWindow
        {
            get
            {
                if ((this.mUISletteiverksettingWindow == null))
                {
                    this.mUISletteiverksettingWindow = new UISletteiverksettingWindow();
                }
                return this.mUISletteiverksettingWindow;
            }
        }
        
        public UIItemWindow121 UIItemWindow12
        {
            get
            {
                if ((this.mUIItemWindow12 == null))
                {
                    this.mUIItemWindow12 = new UIItemWindow121();
                }
                return this.mUIItemWindow12;
            }
        }
        
        public UIItemWindow211 UIItemWindow21
        {
            get
            {
                if ((this.mUIItemWindow21 == null))
                {
                    this.mUIItemWindow21 = new UIItemWindow211();
                }
                return this.mUIItemWindow21;
            }
        }
        
        public UIItemWindow221 UIItemWindow22
        {
            get
            {
                if ((this.mUIItemWindow22 == null))
                {
                    this.mUIItemWindow22 = new UIItemWindow221();
                }
                return this.mUIItemWindow22;
            }
        }
        
        public UIItemWindow131 UIItemWindow13
        {
            get
            {
                if ((this.mUIItemWindow13 == null))
                {
                    this.mUIItemWindow13 = new UIItemWindow131();
                }
                return this.mUIItemWindow13;
            }
        }
        
        public UIItemWindow231 UIItemWindow23
        {
            get
            {
                if ((this.mUIItemWindow23 == null))
                {
                    this.mUIItemWindow23 = new UIItemWindow231();
                }
                return this.mUIItemWindow23;
            }
        }
        
        public UIGatver63031732ASCLAvWindow14 UIGatver63031732ASCLAvWindow14
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvWindow14 == null))
                {
                    this.mUIGatver63031732ASCLAvWindow14 = new UIGatver63031732ASCLAvWindow14();
                }
                return this.mUIGatver63031732ASCLAvWindow14;
            }
        }
        
        public UIEndreiverksettingspeWindow UIEndreiverksettingspeWindow
        {
            get
            {
                if ((this.mUIEndreiverksettingspeWindow == null))
                {
                    this.mUIEndreiverksettingspeWindow = new UIEndreiverksettingspeWindow();
                }
                return this.mUIEndreiverksettingspeWindow;
            }
        }
        
        public UINyarbeidsplanWindow UINyarbeidsplanWindow
        {
            get
            {
                if ((this.mUINyarbeidsplanWindow == null))
                {
                    this.mUINyarbeidsplanWindow = new UINyarbeidsplanWindow();
                }
                return this.mUINyarbeidsplanWindow;
            }
        }
        
        public UIItemWindow141 UIItemWindow14
        {
            get
            {
                if ((this.mUIItemWindow14 == null))
                {
                    this.mUIItemWindow14 = new UIItemWindow141();
                }
                return this.mUIItemWindow14;
            }
        }
        
        public UIArbeidsplanKopiavGruWindow UIArbeidsplanKopiavGruWindow
        {
            get
            {
                if ((this.mUIArbeidsplanKopiavGruWindow == null))
                {
                    this.mUIArbeidsplanKopiavGruWindow = new UIArbeidsplanKopiavGruWindow();
                }
                return this.mUIArbeidsplanKopiavGruWindow;
            }
        }
        
        public UIArbeidsplanKopiavGruWindow1 UIArbeidsplanKopiavGruWindow1
        {
            get
            {
                if ((this.mUIArbeidsplanKopiavGruWindow1 == null))
                {
                    this.mUIArbeidsplanKopiavGruWindow1 = new UIArbeidsplanKopiavGruWindow1();
                }
                return this.mUIArbeidsplanKopiavGruWindow1;
            }
        }
        
        public UIItemWindow31 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow31();
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIArbeidsplanInnstilliWindow UIArbeidsplanInnstilliWindow
        {
            get
            {
                if ((this.mUIArbeidsplanInnstilliWindow == null))
                {
                    this.mUIArbeidsplanInnstilliWindow = new UIArbeidsplanInnstilliWindow();
                }
                return this.mUIArbeidsplanInnstilliWindow;
            }
        }
        
        public UIRunningapplicationsWindow UIRunningapplicationsWindow
        {
            get
            {
                if ((this.mUIRunningapplicationsWindow == null))
                {
                    this.mUIRunningapplicationsWindow = new UIRunningapplicationsWindow();
                }
                return this.mUIRunningapplicationsWindow;
            }
        }
        
        public UIArbeidsplanKopi_2avGWindow UIArbeidsplanKopi_2avGWindow
        {
            get
            {
                if ((this.mUIArbeidsplanKopi_2avGWindow == null))
                {
                    this.mUIArbeidsplanKopi_2avGWindow = new UIArbeidsplanKopi_2avGWindow();
                }
                return this.mUIArbeidsplanKopi_2avGWindow;
            }
        }
        
        public UIGatver63031732ASCLAvWindow15 UIGatver63031732ASCLAvWindow15
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvWindow15 == null))
                {
                    this.mUIGatver63031732ASCLAvWindow15 = new UIGatver63031732ASCLAvWindow15();
                }
                return this.mUIGatver63031732ASCLAvWindow15;
            }
        }
        
        public UIStillingsforholdWindow UIStillingsforholdWindow
        {
            get
            {
                if ((this.mUIStillingsforholdWindow == null))
                {
                    this.mUIStillingsforholdWindow = new UIStillingsforholdWindow();
                }
                return this.mUIStillingsforholdWindow;
            }
        }
        
        public UIArbeidsplanKopi_2avGWindow1 UIArbeidsplanKopi_2avGWindow1
        {
            get
            {
                if ((this.mUIArbeidsplanKopi_2avGWindow1 == null))
                {
                    this.mUIArbeidsplanKopi_2avGWindow1 = new UIArbeidsplanKopi_2avGWindow1();
                }
                return this.mUIArbeidsplanKopi_2avGWindow1;
            }
        }
        
        public UIAnsatteiArbeidsplanWindow UIAnsatteiArbeidsplanWindow
        {
            get
            {
                if ((this.mUIAnsatteiArbeidsplanWindow == null))
                {
                    this.mUIAnsatteiArbeidsplanWindow = new UIAnsatteiArbeidsplanWindow();
                }
                return this.mUIAnsatteiArbeidsplanWindow;
            }
        }
        
        public UILinjeinnstillinger16Window UILinjeinnstillinger16Window
        {
            get
            {
                if ((this.mUILinjeinnstillinger16Window == null))
                {
                    this.mUILinjeinnstillinger16Window = new UILinjeinnstillinger16Window();
                }
                return this.mUILinjeinnstillinger16Window;
            }
        }
        
        public UIGT2004AdvarselWindow UIGT2004AdvarselWindow
        {
            get
            {
                if ((this.mUIGT2004AdvarselWindow == null))
                {
                    this.mUIGT2004AdvarselWindow = new UIGT2004AdvarselWindow();
                }
                return this.mUIGT2004AdvarselWindow;
            }
        }
        
        public UILoginWindow UILoginWindow
        {
            get
            {
                if ((this.mUILoginWindow == null))
                {
                    this.mUILoginWindow = new UILoginWindow();
                }
                return this.mUILoginWindow;
            }
        }
        
        public UIResultaterfrasystemsWindow UIResultaterfrasystemsWindow
        {
            get
            {
                if ((this.mUIResultaterfrasystemsWindow == null))
                {
                    this.mUIResultaterfrasystemsWindow = new UIResultaterfrasystemsWindow();
                }
                return this.mUIResultaterfrasystemsWindow;
            }
        }
        
        public UISystemmelding1Window UISystemmelding1Window
        {
            get
            {
                if ((this.mUISystemmelding1Window == null))
                {
                    this.mUISystemmelding1Window = new UISystemmelding1Window();
                }
                return this.mUISystemmelding1Window;
            }
        }
        
        public UINivåWindow UINivåWindow
        {
            get
            {
                if ((this.mUINivåWindow == null))
                {
                    this.mUINivåWindow = new UINivåWindow();
                }
                return this.mUINivåWindow;
            }
        }
        
        public UIEndrevakterWindow UIEndrevakterWindow
        {
            get
            {
                if ((this.mUIEndrevakterWindow == null))
                {
                    this.mUIEndrevakterWindow = new UIEndrevakterWindow();
                }
                return this.mUIEndrevakterWindow;
            }
        }
        
        public UIItemWindow41 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow41();
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIBytteWindow UIBytteWindow
        {
            get
            {
                if ((this.mUIBytteWindow == null))
                {
                    this.mUIBytteWindow = new UIBytteWindow();
                }
                return this.mUIBytteWindow;
            }
        }
        
        public UIByttemedavdelingWindow UIByttemedavdelingWindow
        {
            get
            {
                if ((this.mUIByttemedavdelingWindow == null))
                {
                    this.mUIByttemedavdelingWindow = new UIByttemedavdelingWindow();
                }
                return this.mUIByttemedavdelingWindow;
            }
        }
        
        public UIVacantShiftsFormWindow UIVacantShiftsFormWindow
        {
            get
            {
                if ((this.mUIVacantShiftsFormWindow == null))
                {
                    this.mUIVacantShiftsFormWindow = new UIVacantShiftsFormWindow();
                }
                return this.mUIVacantShiftsFormWindow;
            }
        }
        
        public UIForskyvningWindow UIForskyvningWindow
        {
            get
            {
                if ((this.mUIForskyvningWindow == null))
                {
                    this.mUIForskyvningWindow = new UIForskyvningWindow();
                }
                return this.mUIForskyvningWindow;
            }
        }
        
        public UIGatWindow UIGatWindow
        {
            get
            {
                if ((this.mUIGatWindow == null))
                {
                    this.mUIGatWindow = new UIGatWindow();
                }
                return this.mUIGatWindow;
            }
        }
        
        public UIGatver63031732ASCLAvWindow16 UIGatver63031732ASCLAvWindow16
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvWindow16 == null))
                {
                    this.mUIGatver63031732ASCLAvWindow16 = new UIGatver63031732ASCLAvWindow16();
                }
                return this.mUIGatver63031732ASCLAvWindow16;
            }
        }
        
        public UIVaktkategorierWindow UIVaktkategorierWindow
        {
            get
            {
                if ((this.mUIVaktkategorierWindow == null))
                {
                    this.mUIVaktkategorierWindow = new UIVaktkategorierWindow();
                }
                return this.mUIVaktkategorierWindow;
            }
        }
        
        public UIUtrykningWindow UIUtrykningWindow
        {
            get
            {
                if ((this.mUIUtrykningWindow == null))
                {
                    this.mUIUtrykningWindow = new UIUtrykningWindow();
                }
                return this.mUIUtrykningWindow;
            }
        }
        
        public UIConfirmSaveAsWindow UIConfirmSaveAsWindow
        {
            get
            {
                if ((this.mUIConfirmSaveAsWindow == null))
                {
                    this.mUIConfirmSaveAsWindow = new UIConfirmSaveAsWindow();
                }
                return this.mUIConfirmSaveAsWindow;
            }
        }
        
        public UILeggtilansatteWindow UILeggtilansatteWindow
        {
            get
            {
                if ((this.mUILeggtilansatteWindow == null))
                {
                    this.mUILeggtilansatteWindow = new UILeggtilansatteWindow();
                }
                return this.mUILeggtilansatteWindow;
            }
        }
        
        public UIArbeidsplanChapter_5Window UIArbeidsplanChapter_5Window
        {
            get
            {
                if ((this.mUIArbeidsplanChapter_5Window == null))
                {
                    this.mUIArbeidsplanChapter_5Window = new UIArbeidsplanChapter_5Window();
                }
                return this.mUIArbeidsplanChapter_5Window;
            }
        }
        
        public UIArbeidsplanChapter_5Window1 UIArbeidsplanChapter_5Window1
        {
            get
            {
                if ((this.mUIArbeidsplanChapter_5Window1 == null))
                {
                    this.mUIArbeidsplanChapter_5Window1 = new UIArbeidsplanChapter_5Window1();
                }
                return this.mUIArbeidsplanChapter_5Window1;
            }
        }
        
        public UIItemWindow51 UIItemWindow5
        {
            get
            {
                if ((this.mUIItemWindow5 == null))
                {
                    this.mUIItemWindow5 = new UIItemWindow51();
                }
                return this.mUIItemWindow5;
            }
        }
        
        public UIGatver63031732ASCLAvWindow17 UIGatver63031732ASCLAvWindow17
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvWindow17 == null))
                {
                    this.mUIGatver63031732ASCLAvWindow17 = new UIGatver63031732ASCLAvWindow17();
                }
                return this.mUIGatver63031732ASCLAvWindow17;
            }
        }
        
        public UIGatver63031732ASCLAvWindow18 UIGatver63031732ASCLAvWindow18
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvWindow18 == null))
                {
                    this.mUIGatver63031732ASCLAvWindow18 = new UIGatver63031732ASCLAvWindow18();
                }
                return this.mUIGatver63031732ASCLAvWindow18;
            }
        }
        
        public UIGatver63031732ASCLAvWindow19 UIGatver63031732ASCLAvWindow19
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvWindow19 == null))
                {
                    this.mUIGatver63031732ASCLAvWindow19 = new UIGatver63031732ASCLAvWindow19();
                }
                return this.mUIGatver63031732ASCLAvWindow19;
            }
        }
        
        public UIGatver63031732ASCLAvWindow20 UIGatver63031732ASCLAvWindow20
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvWindow20 == null))
                {
                    this.mUIGatver63031732ASCLAvWindow20 = new UIGatver63031732ASCLAvWindow20();
                }
                return this.mUIGatver63031732ASCLAvWindow20;
            }
        }
        
        public UIGatver63031732ASCLAvWindow21 UIGatver63031732ASCLAvWindow21
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvWindow21 == null))
                {
                    this.mUIGatver63031732ASCLAvWindow21 = new UIGatver63031732ASCLAvWindow21();
                }
                return this.mUIGatver63031732ASCLAvWindow21;
            }
        }
        
        public UIGatver63031732ASCLAvWindow22 UIGatver63031732ASCLAvWindow22
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvWindow22 == null))
                {
                    this.mUIGatver63031732ASCLAvWindow22 = new UIGatver63031732ASCLAvWindow22();
                }
                return this.mUIGatver63031732ASCLAvWindow22;
            }
        }
        
        public UINyvaktkodeWindow UINyvaktkodeWindow
        {
            get
            {
                if ((this.mUINyvaktkodeWindow == null))
                {
                    this.mUINyvaktkodeWindow = new UINyvaktkodeWindow();
                }
                return this.mUINyvaktkodeWindow;
            }
        }
        
        public UIArbeidsplanChapter_6Window UIArbeidsplanChapter_6Window
        {
            get
            {
                if ((this.mUIArbeidsplanChapter_6Window == null))
                {
                    this.mUIArbeidsplanChapter_6Window = new UIArbeidsplanChapter_6Window();
                }
                return this.mUIArbeidsplanChapter_6Window;
            }
        }
        
        public UIGatver64034203ASCLAvWindow UIGatver64034203ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver64034203ASCLAvWindow == null))
                {
                    this.mUIGatver64034203ASCLAvWindow = new UIGatver64034203ASCLAvWindow();
                }
                return this.mUIGatver64034203ASCLAvWindow;
            }
        }
        
        public UIGatver64339312ASCLAvWindow UIGatver64339312ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver64339312ASCLAvWindow == null))
                {
                    this.mUIGatver64339312ASCLAvWindow = new UIGatver64339312ASCLAvWindow();
                }
                return this.mUIGatver64339312ASCLAvWindow;
            }
        }
        
        public UIBeregningsreglerWindow UIBeregningsreglerWindow
        {
            get
            {
                if ((this.mUIBeregningsreglerWindow == null))
                {
                    this.mUIBeregningsreglerWindow = new UIBeregningsreglerWindow();
                }
                return this.mUIBeregningsreglerWindow;
            }
        }
        
        public UIEndreberegningsregelWindow UIEndreberegningsregelWindow
        {
            get
            {
                if ((this.mUIEndreberegningsregelWindow == null))
                {
                    this.mUIEndreberegningsregelWindow = new UIEndreberegningsregelWindow();
                }
                return this.mUIEndreberegningsregelWindow;
            }
        }
        
        public UIGatver65141810ASCLAvWindow UIGatver65141810ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver65141810ASCLAvWindow == null))
                {
                    this.mUIGatver65141810ASCLAvWindow = new UIGatver65141810ASCLAvWindow();
                }
                return this.mUIGatver65141810ASCLAvWindow;
            }
        }
        
        public UIGatver66042292ASCLAvWindow UIGatver66042292ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver66042292ASCLAvWindow == null))
                {
                    this.mUIGatver66042292ASCLAvWindow = new UIGatver66042292ASCLAvWindow();
                }
                return this.mUIGatver66042292ASCLAvWindow;
            }
        }
        
        public UIGatver66042292ASCLAvWindow1 UIGatver66042292ASCLAvWindow1
        {
            get
            {
                if ((this.mUIGatver66042292ASCLAvWindow1 == null))
                {
                    this.mUIGatver66042292ASCLAvWindow1 = new UIGatver66042292ASCLAvWindow1();
                }
                return this.mUIGatver66042292ASCLAvWindow1;
            }
        }
        
        public UIArbeidsplanChapter_6Window1 UIArbeidsplanChapter_6Window1
        {
            get
            {
                if ((this.mUIArbeidsplanChapter_6Window1 == null))
                {
                    this.mUIArbeidsplanChapter_6Window1 = new UIArbeidsplanChapter_6Window1();
                }
                return this.mUIArbeidsplanChapter_6Window1;
            }
        }
        
        public UIArbeidsplanChapter_5Window2 UIArbeidsplanChapter_5Window2
        {
            get
            {
                if ((this.mUIArbeidsplanChapter_5Window2 == null))
                {
                    this.mUIArbeidsplanChapter_5Window2 = new UIArbeidsplanChapter_5Window2();
                }
                return this.mUIArbeidsplanChapter_5Window2;
            }
        }
        #endregion
        
        #region Fields
        private Check_AcolExpectedValues mCheck_AcolExpectedValues;
        
        private Check_ExtraLTExpectedValues mCheck_ExtraLTExpectedValues;
        
        private Check_ExtraLT_EditExpectedValues mCheck_ExtraLT_EditExpectedValues;
        
        private Check_Ok_depExchangeExpectedValues mCheck_Ok_depExchangeExpectedValues;
        
        private Check_Ok_exhangeExpectedValues mCheck_Ok_exhangeExpectedValues;
        
        private Check_Ok_RemaningExpectedValues mCheck_Ok_RemaningExpectedValues;
        
        private CheckButtonNameExpectedValues mCheckButtonNameExpectedValues;
        
        private CheckDateExpectedValues mCheckDateExpectedValues;
        
        private CheckDiagonalCellsExpectedValues mCheckDiagonalCellsExpectedValues;
        
        private CheckEmpNoPreviewExpectedValues mCheckEmpNoPreviewExpectedValues;
        
        private CheckListExpectedValues mCheckListExpectedValues;
        
        private CheckReportExpectedValues mCheckReportExpectedValues;
        
        private CheckRosterGridSatCellExpectedValues mCheckRosterGridSatCellExpectedValues;
        
        private CheckRosterPlanWeekendsExpectedValues mCheckRosterPlanWeekendsExpectedValues;
        
        private ClickDatePickerAndCleantxtParams mClickDatePickerAndCleantxtParams;
        
        private NameRosterplanParams mNameRosterplanParams;
        
        private Select_ExtraCauseParams mSelect_ExtraCauseParams;
        
        private Select_ExtraEmpParams mSelect_ExtraEmpParams;
        
        private Select_TypeOfPlanParams mSelect_TypeOfPlanParams;
        
        private Select_UtrykningsCauseParams mSelect_UtrykningsCauseParams;
        
        private SelectReport96Params mSelectReport96Params;
        
        private Set_RosterEmployeePercentTo_0Params mSet_RosterEmployeePercentTo_0Params;
        
        private Uncheck_KladdParams mUncheck_KladdParams;
        
        private UncheckShiftsToDeleteWithErrorsParams mUncheckShiftsToDeleteWithErrorsParams;
        
        private UpperLeftExpectedValues mUpperLeftExpectedValues;
        
        private UIGatver63031732ASCLAvWindow mUIGatver63031732ASCLAvWindow;
        
        private UIGatver63031732ASCLAvWindow1 mUIGatver63031732ASCLAvWindow1;
        
        private UIGatver63031732ASCLAvWindow2 mUIGatver63031732ASCLAvWindow2;
        
        private UIForhåndsvisningWindow mUIForhåndsvisningWindow;
        
        private UIVelgradWindow mUIVelgradWindow;
        
        private UIGatver63031732ASCLAvWindow3 mUIGatver63031732ASCLAvWindow3;
        
        private UIWpfWindow mUIWpfWindow;
        
        private UISaveAsWindow mUISaveAsWindow;
        
        private UIGatver63031732ASCLAvWindow4 mUIGatver63031732ASCLAvWindow4;
        
        private UIGatver63031732ASCLAvWindow5 mUIGatver63031732ASCLAvWindow5;
        
        private UIGatver63031732ASCLAvWindow6 mUIGatver63031732ASCLAvWindow6;
        
        private UILønnsogtrekkarterWindow mUILønnsogtrekkarterWindow;
        
        private UIGatver63031732ASCLAvWindow7 mUIGatver63031732ASCLAvWindow7;
        
        private UIMerarbeidovertidWindow mUIMerarbeidovertidWindow;
        
        private UIItemWindow17 mUIItemWindow;
        
        private UIGatver63031732ASCLAvWindow8 mUIGatver63031732ASCLAvWindow8;
        
        private UIGatver63031732ASCLAvWindow9 mUIGatver63031732ASCLAvWindow9;
        
        private UIEndrekonteringWindow mUIEndrekonteringWindow;
        
        private UIOVE2003GatWindow mUIOVE2003GatWindow;
        
        private UINykonteringWindow mUINykonteringWindow;
        
        private UIFraværsregistreringWindow mUIFraværsregistreringWindow;
        
        private UIGatver63031732ASCLAvWindow10 mUIGatver63031732ASCLAvWindow10;
        
        private UIGatver63031732ASCLAvWindow11 mUIGatver63031732ASCLAvWindow11;
        
        private UIHelgeavtaleWindow mUIHelgeavtaleWindow;
        
        private UIGatver63031732ASCLAvWindow12 mUIGatver63031732ASCLAvWindow12;
        
        private UIGatver63031732ASCLAvWindow13 mUIGatver63031732ASCLAvWindow13;
        
        private UIArbeidsplanGrunnlagHWindow mUIArbeidsplanGrunnlagHWindow;
        
        private UIItemWindow113 mUIItemWindow1;
        
        private UIIverksetteWindow mUIIverksetteWindow;
        
        private UIItemWindow28 mUIItemWindow2;
        
        private UIItemWindow114 mUIItemWindow11;
        
        private UISletteiverksettingWindow mUISletteiverksettingWindow;
        
        private UIItemWindow121 mUIItemWindow12;
        
        private UIItemWindow211 mUIItemWindow21;
        
        private UIItemWindow221 mUIItemWindow22;
        
        private UIItemWindow131 mUIItemWindow13;
        
        private UIItemWindow231 mUIItemWindow23;
        
        private UIGatver63031732ASCLAvWindow14 mUIGatver63031732ASCLAvWindow14;
        
        private UIEndreiverksettingspeWindow mUIEndreiverksettingspeWindow;
        
        private UINyarbeidsplanWindow mUINyarbeidsplanWindow;
        
        private UIItemWindow141 mUIItemWindow14;
        
        private UIArbeidsplanKopiavGruWindow mUIArbeidsplanKopiavGruWindow;
        
        private UIArbeidsplanKopiavGruWindow1 mUIArbeidsplanKopiavGruWindow1;
        
        private UIItemWindow31 mUIItemWindow3;
        
        private UIArbeidsplanInnstilliWindow mUIArbeidsplanInnstilliWindow;
        
        private UIRunningapplicationsWindow mUIRunningapplicationsWindow;
        
        private UIArbeidsplanKopi_2avGWindow mUIArbeidsplanKopi_2avGWindow;
        
        private UIGatver63031732ASCLAvWindow15 mUIGatver63031732ASCLAvWindow15;
        
        private UIStillingsforholdWindow mUIStillingsforholdWindow;
        
        private UIArbeidsplanKopi_2avGWindow1 mUIArbeidsplanKopi_2avGWindow1;
        
        private UIAnsatteiArbeidsplanWindow mUIAnsatteiArbeidsplanWindow;
        
        private UILinjeinnstillinger16Window mUILinjeinnstillinger16Window;
        
        private UIGT2004AdvarselWindow mUIGT2004AdvarselWindow;
        
        private UILoginWindow mUILoginWindow;
        
        private UIResultaterfrasystemsWindow mUIResultaterfrasystemsWindow;
        
        private UISystemmelding1Window mUISystemmelding1Window;
        
        private UINivåWindow mUINivåWindow;
        
        private UIEndrevakterWindow mUIEndrevakterWindow;
        
        private UIItemWindow41 mUIItemWindow4;
        
        private UIBytteWindow mUIBytteWindow;
        
        private UIByttemedavdelingWindow mUIByttemedavdelingWindow;
        
        private UIVacantShiftsFormWindow mUIVacantShiftsFormWindow;
        
        private UIForskyvningWindow mUIForskyvningWindow;
        
        private UIGatWindow mUIGatWindow;
        
        private UIGatver63031732ASCLAvWindow16 mUIGatver63031732ASCLAvWindow16;
        
        private UIVaktkategorierWindow mUIVaktkategorierWindow;
        
        private UIUtrykningWindow mUIUtrykningWindow;
        
        private UIConfirmSaveAsWindow mUIConfirmSaveAsWindow;
        
        private UILeggtilansatteWindow mUILeggtilansatteWindow;
        
        private UIArbeidsplanChapter_5Window mUIArbeidsplanChapter_5Window;
        
        private UIArbeidsplanChapter_5Window1 mUIArbeidsplanChapter_5Window1;
        
        private UIItemWindow51 mUIItemWindow5;
        
        private UIGatver63031732ASCLAvWindow17 mUIGatver63031732ASCLAvWindow17;
        
        private UIGatver63031732ASCLAvWindow18 mUIGatver63031732ASCLAvWindow18;
        
        private UIGatver63031732ASCLAvWindow19 mUIGatver63031732ASCLAvWindow19;
        
        private UIGatver63031732ASCLAvWindow20 mUIGatver63031732ASCLAvWindow20;
        
        private UIGatver63031732ASCLAvWindow21 mUIGatver63031732ASCLAvWindow21;
        
        private UIGatver63031732ASCLAvWindow22 mUIGatver63031732ASCLAvWindow22;
        
        private UINyvaktkodeWindow mUINyvaktkodeWindow;
        
        private UIArbeidsplanChapter_6Window mUIArbeidsplanChapter_6Window;
        
        private UIGatver64034203ASCLAvWindow mUIGatver64034203ASCLAvWindow;
        
        private UIGatver64339312ASCLAvWindow mUIGatver64339312ASCLAvWindow;
        
        private UIBeregningsreglerWindow mUIBeregningsreglerWindow;
        
        private UIEndreberegningsregelWindow mUIEndreberegningsregelWindow;
        
        private UIGatver65141810ASCLAvWindow mUIGatver65141810ASCLAvWindow;
        
        private UIGatver66042292ASCLAvWindow mUIGatver66042292ASCLAvWindow;
        
        private UIGatver66042292ASCLAvWindow1 mUIGatver66042292ASCLAvWindow1;
        
        private UIArbeidsplanChapter_6Window1 mUIArbeidsplanChapter_6Window1;
        
        private UIArbeidsplanChapter_5Window2 mUIArbeidsplanChapter_5Window2;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Check_Acol'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Check_AcolExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ClassName' property of '10, Helg' cell equals 'GridControlCell'
        /// </summary>
        public string UIItem10HelgCellClassName = "GridControlCell";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Check_ExtraLT'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Check_ExtraLTExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '400 - Lør./Søndagstillegg' cell equals '400 - Lør./Søndagstillegg'
        /// </summary>
        public string UIItem400LørSøndagstilCellValueAsString = "400 - Lør./Søndagstillegg";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Check_ExtraLT_Edit'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Check_ExtraLT_EditExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '8,00' cell equals '10'
        /// </summary>
        public string UIItem800CellValueAsString = "10";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Check_Ok_depExchange'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Check_Ok_depExchangeExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ClassName' property of 'biOk' MenuBaseButtonItem equals 'MenuBaseButtonItem'
        /// </summary>
        public string UIBiOkMenuBaseButtonItemClassName = "MenuBaseButtonItem";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Check_Ok_exhange'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Check_Ok_exhangeExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ClassName' property of 'biOk' MenuBaseButtonItem equals 'MenuBaseButtonItem'
        /// </summary>
        public string UIBiOkMenuBaseButtonItemClassName = "MenuBaseButtonItem";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Check_Ok_Remaning'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Check_Ok_RemaningExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ClassName' property of 'biOk' MenuBaseButtonItem equals 'MenuBaseButtonItem'
        /// </summary>
        public string UIBiOkMenuBaseButtonItemClassName = "MenuBaseButtonItem";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckButtonName'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckButtonNameExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Ny' button equals 'btnNew'
        /// </summary>
        public string UINYButtonName = "btnNew";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckDate'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckDateExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ClassName' property of 'pceDate' PopupEdit equals 'GSPopupContainerEdit'
        /// </summary>
        public string UIPceDatePopupEditClassName = "GSPopupContainerEdit";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckDiagonalCells'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckDiagonalCellsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ClassName' property of 'Page [0].BrickIndices [0].[1].[0].[65]' PrintControlBrick equals 'PrintControlBrick'
        /// </summary>
        public string UIPage0BrickIndices010PrintControlBrickClassName = "PrintControlBrick";
        
        /// <summary>
        /// Verify that the 'ClassName' property of 'Page [0].BrickIndices [0].[10].[0].[0]' PrintControlBrick equals 'PrintControlBrick'
        /// </summary>
        public string UIPage0BrickIndices010PrintControlBrick1ClassName = "PrintControlBrick";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckEmpNoPreview'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckEmpNoPreviewExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ClassName' property of 'Page [0].BrickIndices [0].[0].[0].[12]' PrintControlBrick equals 'PrintControlBrick'
        /// </summary>
        public string UIPage0BrickIndices000PrintControlBrickClassName = "PrintControlBrick";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Page [0].BrickIndices [0].[0].[0].[12]' PrintControlBrick equals 'Ansattnr'
        /// </summary>
        public string UIPage0BrickIndices000PrintControlBrickText = "Ansattnr";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckList'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckListExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlName' property of 'WeekendAgreementsList' client equals 'WeekendAgreementsList'
        /// </summary>
        public string UIWeekendAgreementsLisClientControlName = "WeekendAgreementsList";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckReport'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckReportExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Panel1' client equals 'Client'
        /// </summary>
        public string UIPanel1ClientControlType = "Client";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRosterGridSatCell'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckRosterGridSatCellExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ClassName' property of 'D' cell equals 'GridControlCell'
        /// </summary>
        public string UIDCellClassName = "GridControlCell";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRosterPlanWeekends'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckRosterPlanWeekendsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'gcRosterPlan' table equals 'gcRosterPlan'
        /// </summary>
        public string UIGcRosterPlanTableName = "gcRosterPlan";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ClickDatePickerAndCleantxt'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class ClickDatePickerAndCleantxtParams
    {
        
        #region Fields
        /// <summary>
        /// Type '' in 'pceDate' PopupEdit
        /// </summary>
        public string UIPceDatePopupEditValueAsString = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'NameRosterplan'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class NameRosterplanParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Chapter_5_step_1' in 'eName' text box
        /// </summary>
        public string UIENameEditValueAsString = "Chapter_5_step_1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Select_ExtraCause'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Select_ExtraCauseParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.DataModel.OvertimeCode' in 'cbOvertimeCode' LookUpEdit
        /// </summary>
        public string UICbOvertimeCodeLookUpEditValueTypeName = "Gatsoft.Gat.DataModel.OvertimeCode";
        
        /// <summary>
        /// Type 'OvertimeCode(Id=242481501)' in 'cbOvertimeCode' LookUpEdit
        /// </summary>
        public string UICbOvertimeCodeLookUpEditValueAsString = "OvertimeCode(Id=242481501)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Select_ExtraEmp'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Select_ExtraEmpParams
    {
        
        #region Fields
        /// <summary>
        /// Type '' in 'cbEmployment' LookUpEdit
        /// </summary>
        public string UICbEmploymentLookUpEditValueAsString = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Select_TypeOfPlan'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Select_TypeOfPlanParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.Configuration.RosterplanConfigurationController+RosterplanTypeDefinition' in 'leRosterplanType' LookUpEdit
        /// </summary>
        public string UILeRosterplanTypeLookUpEditValueTypeName = "Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.Configuration.RosterplanConfigu" +
            "rationController+RosterplanTypeDefinition";
        
        /// <summary>
        /// Type 'Kalenderplan' in 'leRosterplanType' LookUpEdit
        /// </summary>
        public string UILeRosterplanTypeLookUpEditValueAsString = "Kalenderplan";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Select_UtrykningsCause'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Select_UtrykningsCauseParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.BusinessLogic.Callout.CalloutDTO+CauseCode' in '_cbCauseCode' LookUpEdit
        /// </summary>
        public string UI_cbCauseCodeLookUpEditValueTypeName = "Gatsoft.Gat.BusinessLogic.Callout.CalloutDTO+CauseCode";
        
        /// <summary>
        /// Type 'Gatsoft.Gat.BusinessLogic.Callout.CalloutDTO+CauseCode' in '_cbCauseCode' LookUpEdit
        /// </summary>
        public string UI_cbCauseCodeLookUpEditValueAsString = "Gatsoft.Gat.BusinessLogic.Callout.CalloutDTO+CauseCode";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectReport96'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class SelectReport96Params
    {
        
        #region Fields
        /// <summary>
        /// Type '96' in text box
        /// </summary>
        public string UIItemEditText = "96";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Set_RosterEmployeePercentTo_0'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Set_RosterEmployeePercentTo_0Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'System.Double' in 'ePositionPercent' text box
        /// </summary>
        public string UIEPositionPercentEditValueTypeName = "System.Double";
        
        /// <summary>
        /// Type '0' in 'ePositionPercent' text box
        /// </summary>
        public string UIEPositionPercentEditValueAsString = "0";
        
        /// <summary>
        /// Type '{NumPad0}{Tab}' in 'ePositionPercent' text box
        /// </summary>
        public string UIEPositionPercentEditSendKeys = "{NumPad0}{Tab}";
        
        /// <summary>
        /// Type 'System.Double' in 'ePositionPercent' text box
        /// </summary>
        public string UIEPositionPercentEditValueTypeName1 = "System.Double";
        
        /// <summary>
        /// Type '0' in 'ePositionPercent' text box
        /// </summary>
        public string UIEPositionPercentEditValueAsString1 = "0";
        
        /// <summary>
        /// Type '{Tab}' in 'ePositionPercent' text box
        /// </summary>
        public string UIEPositionPercentEditSendKeys1 = "{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Uncheck_Kladd'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Uncheck_KladdParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'chkKladd' check box
        /// </summary>
        public bool UIChkKladdCheckBoxChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'UncheckShiftsToDeleteWithErrors'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UncheckShiftsToDeleteWithErrorsParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'False' in 'Node1' TreeListNode
        /// </summary>
        public bool UINode1TreeListNodeChecked = false;
        
        /// <summary>
        /// Type 'False' in 'Node3' TreeListNode
        /// </summary>
        public bool UINode3TreeListNodeChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'UpperLeft'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UpperLeftExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ClassName' property of 'Page [0].BrickIndices [0].[0].[0].[65]' PrintControlBrick equals 'PrintControlBrick'
        /// </summary>
        public string UIPage0BrickIndices000PrintControlBrickClassName = "PrintControlBrick";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63031732ASCLAvWindow : WinWindow
    {
        
        public UIGatver63031732ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIStandaloneBarDockConCustom UIStandaloneBarDockConCustom
        {
            get
            {
                if ((this.mUIStandaloneBarDockConCustom == null))
                {
                    this.mUIStandaloneBarDockConCustom = new UIStandaloneBarDockConCustom(this);
                }
                return this.mUIStandaloneBarDockConCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIStandaloneBarDockConCustom mUIStandaloneBarDockConCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver63031732ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvClient == null))
                {
                    this.mUIGatver63031732ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver63031732ASCLAvClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGatver63031732ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver63031732ASCLAvClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIStandaloneBarDockConCustom : DXTestControl
    {
        
        public UIStandaloneBarDockConCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "standaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StandaloneBarDockControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIMainmenuMenuBar UIMainmenuMenuBar
        {
            get
            {
                if ((this.mUIMainmenuMenuBar == null))
                {
                    this.mUIMainmenuMenuBar = new UIMainmenuMenuBar(this);
                }
                return this.mUIMainmenuMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIMainmenuMenuBar mUIMainmenuMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMainmenuMenuBar : DXMenu
    {
        
        public UIMainmenuMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Main menu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UINivåBarBaseButtonItem
        {
            get
            {
                if ((this.mUINivåBarBaseButtonItem == null))
                {
                    this.mUINivåBarBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUINivåBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDepartment";
                    this.mUINivåBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
                    this.mUINivåBarBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUINivåBarBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUINivåBarBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63031732ASCLAvWindow1 : WinWindow
    {
        
        public UIGatver63031732ASCLAvWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow11 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow11(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow111 UIItemWindow11
        {
            get
            {
                if ((this.mUIItemWindow11 == null))
                {
                    this.mUIItemWindow11 = new UIItemWindow111(this);
                }
                return this.mUIItemWindow11;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow1 mUIItemWindow;
        
        private UIItemWindow11 mUIItemWindow1;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIItemWindow111 mUIItemWindow11;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TgatGrid";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIPanel1Client
        {
            get
            {
                if ((this.mUIPanel1Client == null))
                {
                    this.mUIPanel1Client = new WinClient(this);
                    #region Search Criteria
                    this.mUIPanel1Client.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIPanel1Client;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIPanel1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow11 : WinWindow
    {
        
        public UIItemWindow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TicDateEdit";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TicDateEdit";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow111 : WinWindow
    {
        
        public UIItemWindow111(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TicDateEdit";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63031732ASCLAvWindow2 : WinWindow
    {
        
        public UIGatver63031732ASCLAvWindow2()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow3 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow3(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow12 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow12(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow21 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow21(this);
                }
                return this.mUIItemWindow2;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow3 mUIItemWindow;
        
        private UIItemWindow12 mUIItemWindow1;
        
        private UIItemWindow21 mUIItemWindow2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "18";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIRapportsenterClient
        {
            get
            {
                if ((this.mUIRapportsenterClient == null))
                {
                    this.mUIRapportsenterClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIRapportsenterClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIRapportsenterClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIRapportsenterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow12 : WinWindow
    {
        
        public UIItemWindow12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TgatGrid";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIPanel1Client
        {
            get
            {
                if ((this.mUIPanel1Client == null))
                {
                    this.mUIPanel1Client = new WinClient(this);
                    #region Search Criteria
                    this.mUIPanel1Client.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIPanel1Client;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIPanel1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow21 : WinWindow
    {
        
        public UIItemWindow21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TgatGrid";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIPanel1Client
        {
            get
            {
                if ((this.mUIPanel1Client == null))
                {
                    this.mUIPanel1Client = new WinClient(this);
                    #region Search Criteria
                    this.mUIPanel1Client.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIPanel1Client;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIPanel1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIForhåndsvisningWindow : DXWindow
    {
        
        public UIForhåndsvisningWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Forhåndsvisning";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Forhåndsvisning");
            #endregion
        }
        
        #region Properties
        public UIDocumentViewerPrintViewControl UIDocumentViewerPrintViewControl
        {
            get
            {
                if ((this.mUIDocumentViewerPrintViewControl == null))
                {
                    this.mUIDocumentViewerPrintViewControl = new UIDocumentViewerPrintViewControl(this);
                }
                return this.mUIDocumentViewerPrintViewControl;
            }
        }
        
        public UIRibbonControlRibbon UIRibbonControlRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRibbon == null))
                {
                    this.mUIRibbonControlRibbon = new UIRibbonControlRibbon(this);
                }
                return this.mUIRibbonControlRibbon;
            }
        }
        
        public UIDocumentViewerPrintViewControl1 UIDocumentViewerPrintViewControl1
        {
            get
            {
                if ((this.mUIDocumentViewerPrintViewControl1 == null))
                {
                    this.mUIDocumentViewerPrintViewControl1 = new UIDocumentViewerPrintViewControl1(this);
                }
                return this.mUIDocumentViewerPrintViewControl1;
            }
        }
        
        public UIRibbonStatusBarMenuBar UIRibbonStatusBarMenuBar
        {
            get
            {
                if ((this.mUIRibbonStatusBarMenuBar == null))
                {
                    this.mUIRibbonStatusBarMenuBar = new UIRibbonStatusBarMenuBar(this);
                }
                return this.mUIRibbonStatusBarMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIDocumentViewerPrintViewControl mUIDocumentViewerPrintViewControl;
        
        private UIRibbonControlRibbon mUIRibbonControlRibbon;
        
        private UIDocumentViewerPrintViewControl1 mUIDocumentViewerPrintViewControl1;
        
        private UIRibbonStatusBarMenuBar mUIRibbonStatusBarMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDocumentViewerPrintViewControl : DXPrinting
    {
        
        public UIDocumentViewerPrintViewControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentViewer";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Forhåndsvisning");
            #endregion
        }
        
        #region Properties
        public DXPrintingBrick UIPage0BrickIndices000PrintControlBrick
        {
            get
            {
                if ((this.mUIPage0BrickIndices000PrintControlBrick == null))
                {
                    this.mUIPage0BrickIndices000PrintControlBrick = new DXPrintingBrick(this);
                    #region Search Criteria
                    this.mUIPage0BrickIndices000PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[0].[0].[12]";
                    this.mUIPage0BrickIndices000PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
                    this.mUIPage0BrickIndices000PrintControlBrick.WindowTitles.Add("Forhåndsvisning");
                    #endregion
                }
                return this.mUIPage0BrickIndices000PrintControlBrick;
            }
        }
        #endregion
        
        #region Fields
        private DXPrintingBrick mUIPage0BrickIndices000PrintControlBrick;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRibbonControlRibbon : DXRibbon
    {
        
        public UIRibbonControlRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Forhåndsvisning");
            #endregion
        }
        
        #region Properties
        public UIPrintPreviewRibbonPaRibbonPage UIPrintPreviewRibbonPaRibbonPage
        {
            get
            {
                if ((this.mUIPrintPreviewRibbonPaRibbonPage == null))
                {
                    this.mUIPrintPreviewRibbonPaRibbonPage = new UIPrintPreviewRibbonPaRibbonPage(this);
                }
                return this.mUIPrintPreviewRibbonPaRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIPrintPreviewRibbonPaRibbonPage mUIPrintPreviewRibbonPaRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPrintPreviewRibbonPaRibbonPage : DXRibbonPage
    {
        
        public UIPrintPreviewRibbonPaRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PrintPreviewRibbonPage0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Forhåndsvisning");
            #endregion
        }
        
        #region Properties
        public UICloseRibbonPageGroup UICloseRibbonPageGroup
        {
            get
            {
                if ((this.mUICloseRibbonPageGroup == null))
                {
                    this.mUICloseRibbonPageGroup = new UICloseRibbonPageGroup(this);
                }
                return this.mUICloseRibbonPageGroup;
            }
        }
        
        public UIDocumentRibbonPageGroup UIDocumentRibbonPageGroup
        {
            get
            {
                if ((this.mUIDocumentRibbonPageGroup == null))
                {
                    this.mUIDocumentRibbonPageGroup = new UIDocumentRibbonPageGroup(this);
                }
                return this.mUIDocumentRibbonPageGroup;
            }
        }
        
        public UIExportRibbonPageGroup UIExportRibbonPageGroup
        {
            get
            {
                if ((this.mUIExportRibbonPageGroup == null))
                {
                    this.mUIExportRibbonPageGroup = new UIExportRibbonPageGroup(this);
                }
                return this.mUIExportRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UICloseRibbonPageGroup mUICloseRibbonPageGroup;
        
        private UIDocumentRibbonPageGroup mUIDocumentRibbonPageGroup;
        
        private UIExportRibbonPageGroup mUIExportRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICloseRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UICloseRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Close";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Forhåndsvisning");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIBarButtonItemLink0RibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink0RibbonBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink0RibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink0RibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
                    this.mUIBarButtonItemLink0RibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBarButtonItemLink0RibbonBaseButtonItem.WindowTitles.Add("Forhåndsvisning");
                    #endregion
                }
                return this.mUIBarButtonItemLink0RibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIBarButtonItemLink0RibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDocumentRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIDocumentRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Document";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Forhåndsvisning");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UILagreRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUILagreRibbonBaseButtonItem == null))
                {
                    this.mUILagreRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUILagreRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[1]";
                    this.mUILagreRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUILagreRibbonBaseButtonItem.WindowTitles.Add("Forhåndsvisning");
                    #endregion
                }
                return this.mUILagreRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUILagreRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIExportRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIExportRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Export";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Forhåndsvisning");
            #endregion
        }
        
        #region Properties
        public UIEksportertilRibbonItem UIEksportertilRibbonItem
        {
            get
            {
                if ((this.mUIEksportertilRibbonItem == null))
                {
                    this.mUIEksportertilRibbonItem = new UIEksportertilRibbonItem(this);
                }
                return this.mUIEksportertilRibbonItem;
            }
        }
        #endregion
        
        #region Fields
        private UIEksportertilRibbonItem mUIEksportertilRibbonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEksportertilRibbonItem : DXRibbonItem
    {
        
        public UIEksportertilRibbonItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
            this.WindowTitles.Add("Forhåndsvisning");
            #endregion
        }
        
        #region Properties
        public DXButton UIBarButtonItemLink0Button
        {
            get
            {
                if ((this.mUIBarButtonItemLink0Button == null))
                {
                    this.mUIBarButtonItemLink0Button = new DXButton(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink0Button.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
                    this.mUIBarButtonItemLink0Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItemDrop";
                    this.mUIBarButtonItemLink0Button.WindowTitles.Add("Forhåndsvisning");
                    #endregion
                }
                return this.mUIBarButtonItemLink0Button;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIBarButtonItemLink0Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDocumentViewerPrintViewControl1 : DXPrinting
    {
        
        public UIDocumentViewerPrintViewControl1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentViewer";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Forhåndsvisning");
            #endregion
        }
        
        #region Properties
        public DXPrintingBrick UIPage0BrickIndices010PrintControlBrick
        {
            get
            {
                if ((this.mUIPage0BrickIndices010PrintControlBrick == null))
                {
                    this.mUIPage0BrickIndices010PrintControlBrick = new DXPrintingBrick(this);
                    #region Search Criteria
                    this.mUIPage0BrickIndices010PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[1].[0].[65]";
                    this.mUIPage0BrickIndices010PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
                    this.mUIPage0BrickIndices010PrintControlBrick.WindowTitles.Add("Forhåndsvisning");
                    #endregion
                }
                return this.mUIPage0BrickIndices010PrintControlBrick;
            }
        }
        
        public DXPrintingBrick UIPage0BrickIndices010PrintControlBrick1
        {
            get
            {
                if ((this.mUIPage0BrickIndices010PrintControlBrick1 == null))
                {
                    this.mUIPage0BrickIndices010PrintControlBrick1 = new DXPrintingBrick(this);
                    #region Search Criteria
                    this.mUIPage0BrickIndices010PrintControlBrick1.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[10].[0].[0]";
                    this.mUIPage0BrickIndices010PrintControlBrick1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
                    this.mUIPage0BrickIndices010PrintControlBrick1.WindowTitles.Add("Forhåndsvisning");
                    #endregion
                }
                return this.mUIPage0BrickIndices010PrintControlBrick1;
            }
        }
        
        public DXPrintingBrick UIPage0BrickIndices020PrintControlBrick
        {
            get
            {
                if ((this.mUIPage0BrickIndices020PrintControlBrick == null))
                {
                    this.mUIPage0BrickIndices020PrintControlBrick = new DXPrintingBrick(this);
                    #region Search Criteria
                    this.mUIPage0BrickIndices020PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[2].[0].[64]";
                    this.mUIPage0BrickIndices020PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
                    this.mUIPage0BrickIndices020PrintControlBrick.WindowTitles.Add("Forhåndsvisning");
                    #endregion
                }
                return this.mUIPage0BrickIndices020PrintControlBrick;
            }
        }
        
        public DXPrintingBrick UIPage0BrickIndices000PrintControlBrick
        {
            get
            {
                if ((this.mUIPage0BrickIndices000PrintControlBrick == null))
                {
                    this.mUIPage0BrickIndices000PrintControlBrick = new DXPrintingBrick(this);
                    #region Search Criteria
                    this.mUIPage0BrickIndices000PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.Name] = "Page [0].BrickIndices [0].[0].[0].[65]";
                    this.mUIPage0BrickIndices000PrintControlBrick.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PrintControlBrick";
                    this.mUIPage0BrickIndices000PrintControlBrick.WindowTitles.Add("Forhåndsvisning");
                    #endregion
                }
                return this.mUIPage0BrickIndices000PrintControlBrick;
            }
        }
        #endregion
        
        #region Fields
        private DXPrintingBrick mUIPage0BrickIndices010PrintControlBrick;
        
        private DXPrintingBrick mUIPage0BrickIndices010PrintControlBrick1;
        
        private DXPrintingBrick mUIPage0BrickIndices020PrintControlBrick;
        
        private DXPrintingBrick mUIPage0BrickIndices000PrintControlBrick;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRibbonStatusBarMenuBar : DXMenu
    {
        
        public UIRibbonStatusBarMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonStatusBar[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonStatusBar";
            this.WindowTitles.Add("Forhåndsvisning");
            #endregion
        }
        
        #region Properties
        public UIZoomTrackBarControlTrackBar UIZoomTrackBarControlTrackBar
        {
            get
            {
                if ((this.mUIZoomTrackBarControlTrackBar == null))
                {
                    this.mUIZoomTrackBarControlTrackBar = new UIZoomTrackBarControlTrackBar(this);
                }
                return this.mUIZoomTrackBarControlTrackBar;
            }
        }
        
        public DXMenuItem UIBarEditItemLink1BarItem
        {
            get
            {
                if ((this.mUIBarEditItemLink1BarItem == null))
                {
                    this.mUIBarEditItemLink1BarItem = new DXMenuItem(this);
                    #region Search Criteria
                    this.mUIBarEditItemLink1BarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarEditItemLink[1]";
                    this.mUIBarEditItemLink1BarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
                    this.mUIBarEditItemLink1BarItem.WindowTitles.Add("Forhåndsvisning");
                    #endregion
                }
                return this.mUIBarEditItemLink1BarItem;
            }
        }
        #endregion
        
        #region Fields
        private UIZoomTrackBarControlTrackBar mUIZoomTrackBarControlTrackBar;
        
        private DXMenuItem mUIBarEditItemLink1BarItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIZoomTrackBarControlTrackBar : DXTrackBar
    {
        
        public UIZoomTrackBarControlTrackBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonStatusBar[0]ZoomTrackBarControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ZoomTrackBarControl";
            this.WindowTitles.Add("Forhåndsvisning");
            #endregion
        }
        
        #region Properties
        public DXButton UIEditorButtonButton
        {
            get
            {
                if ((this.mUIEditorButtonButton == null))
                {
                    this.mUIEditorButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIEditorButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonStatusBar[0]ZoomTrackBarControl[0]ZoomOut";
                    this.mUIEditorButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
                    this.mUIEditorButtonButton.WindowTitles.Add("Forhåndsvisning");
                    #endregion
                }
                return this.mUIEditorButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIEditorButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIVelgradWindow : WinWindow
    {
        
        public UIVelgradWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Velg rad";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmGridSearch";
            this.WindowTitles.Add("Velg rad");
            #endregion
        }
        
        #region Properties
        public UIItemWindow4 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow4(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow13 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow13(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow4 mUIItemWindow;
        
        private UIItemWindow13 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow4 : WinWindow
    {
        
        public UIItemWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TEdit";
            this.WindowTitles.Add("Velg rad");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Velg rad");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow13 : WinWindow
    {
        
        public UIItemWindow13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxGridSite";
            this.WindowTitles.Add("Velg rad");
            #endregion
        }
        
        #region Properties
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient.WindowTitles.Add("Velg rad");
                    #endregion
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63031732ASCLAvWindow3 : WinWindow
    {
        
        public UIGatver63031732ASCLAvWindow3()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow5 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow5(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow5 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow5 : WinWindow
    {
        
        public UIItemWindow5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TgatGrid";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIPanel1Client
        {
            get
            {
                if ((this.mUIPanel1Client == null))
                {
                    this.mUIPanel1Client = new WinClient(this);
                    #region Search Criteria
                    this.mUIPanel1Client.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIPanel1Client;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIPanel1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIWpfWindow : WpfWindow
    {
        
        public UIWpfWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            #endregion
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISaveAsWindow : WinWindow
    {
        
        public UISaveAsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Save As";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public UITreeViewWindow UITreeViewWindow
        {
            get
            {
                if ((this.mUITreeViewWindow == null))
                {
                    this.mUITreeViewWindow = new UITreeViewWindow(this);
                }
                return this.mUITreeViewWindow;
            }
        }
        
        public UIItemWindow6 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow6(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow14 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow14(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow22 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow22(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIDetailsPanePane UIDetailsPanePane
        {
            get
            {
                if ((this.mUIDetailsPanePane == null))
                {
                    this.mUIDetailsPanePane = new UIDetailsPanePane(this);
                }
                return this.mUIDetailsPanePane;
            }
        }
        
        public UISaveastypeComboBox UISaveastypeComboBox
        {
            get
            {
                if ((this.mUISaveastypeComboBox == null))
                {
                    this.mUISaveastypeComboBox = new UISaveastypeComboBox(this);
                }
                return this.mUISaveastypeComboBox;
            }
        }
        
        public UISaveWindow UISaveWindow
        {
            get
            {
                if ((this.mUISaveWindow == null))
                {
                    this.mUISaveWindow = new UISaveWindow(this);
                }
                return this.mUISaveWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITreeViewWindow mUITreeViewWindow;
        
        private UIItemWindow6 mUIItemWindow;
        
        private UIItemWindow14 mUIItemWindow1;
        
        private UIItemWindow22 mUIItemWindow2;
        
        private UIDetailsPanePane mUIDetailsPanePane;
        
        private UISaveastypeComboBox mUISaveastypeComboBox;
        
        private UISaveWindow mUISaveWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITreeViewWindow : WinWindow
    {
        
        public UITreeViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "100";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public UITreeViewTree UITreeViewTree
        {
            get
            {
                if ((this.mUITreeViewTree == null))
                {
                    this.mUITreeViewTree = new UITreeViewTree(this);
                }
                return this.mUITreeViewTree;
            }
        }
        #endregion
        
        #region Fields
        private UITreeViewTree mUITreeViewTree;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITreeViewTree : WinTree
    {
        
        public UITreeViewTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTree.PropertyNames.Name] = "Namespace Tree Control";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public UIDesktopTreeItem UIDesktopTreeItem
        {
            get
            {
                if ((this.mUIDesktopTreeItem == null))
                {
                    this.mUIDesktopTreeItem = new UIDesktopTreeItem(this);
                }
                return this.mUIDesktopTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDesktopTreeItem mUIDesktopTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDesktopTreeItem : WinTreeItem
    {
        
        public UIDesktopTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Desktop";
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public UIComputerTreeItem UIComputerTreeItem
        {
            get
            {
                if ((this.mUIComputerTreeItem == null))
                {
                    this.mUIComputerTreeItem = new UIComputerTreeItem(this);
                }
                return this.mUIComputerTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIComputerTreeItem mUIComputerTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIComputerTreeItem : WinTreeItem
    {
        
        public UIComputerTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Computer";
            this.SearchProperties["Value"] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIOSCTreeItem
        {
            get
            {
                if ((this.mUIOSCTreeItem == null))
                {
                    this.mUIOSCTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIOSCTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "OS (C:)";
                    this.mUIOSCTreeItem.SearchProperties["Value"] = "2";
                    this.mUIOSCTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIOSCTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIOSCTreeItem.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUIOSCTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIOSCTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow6 : WinWindow
    {
        
        public UIItemWindow6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public UITempListItem UITempListItem
        {
            get
            {
                if ((this.mUITempListItem == null))
                {
                    this.mUITempListItem = new UITempListItem(this);
                }
                return this.mUITempListItem;
            }
        }
        #endregion
        
        #region Fields
        private UITempListItem mUITempListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITempListItem : WinListItem
    {
        
        public UITempListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "Temp";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow14 : WinWindow
    {
        
        public UIItemWindow14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public UITestProjectsListItem UITestProjectsListItem
        {
            get
            {
                if ((this.mUITestProjectsListItem == null))
                {
                    this.mUITestProjectsListItem = new UITestProjectsListItem(this);
                }
                return this.mUITestProjectsListItem;
            }
        }
        #endregion
        
        #region Fields
        private UITestProjectsListItem mUITestProjectsListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITestProjectsListItem : WinListItem
    {
        
        public UITestProjectsListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "TestProjects";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow22 : WinWindow
    {
        
        public UIItemWindow22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public UIDataFilesListItem UIDataFilesListItem
        {
            get
            {
                if ((this.mUIDataFilesListItem == null))
                {
                    this.mUIDataFilesListItem = new UIDataFilesListItem(this);
                }
                return this.mUIDataFilesListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDataFilesListItem mUIDataFilesListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDataFilesListItem : WinListItem
    {
        
        public UIDataFilesListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "DataFiles";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDetailsPanePane : WinPane
    {
        
        public UIDetailsPanePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Details Pane";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIFilenameComboBox
        {
            get
            {
                if ((this.mUIFilenameComboBox == null))
                {
                    this.mUIFilenameComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIFilenameComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "File name:";
                    this.mUIFilenameComboBox.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUIFilenameComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIFilenameComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISaveastypeComboBox : WinComboBox
    {
        
        public UISaveastypeComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinComboBox.PropertyNames.Name] = "Save as type:";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinButton UIOpenButton
        {
            get
            {
                if ((this.mUIOpenButton == null))
                {
                    this.mUIOpenButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOpenButton.SearchProperties[WinButton.PropertyNames.Name] = "Open";
                    this.mUIOpenButton.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUIOpenButton;
            }
        }
        
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOpenButton;
        
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISaveWindow : WinWindow
    {
        
        public UISaveWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[WinButton.PropertyNames.Name] = "Save";
                    this.mUISaveButton.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63031732ASCLAvWindow4 : WinWindow
    {
        
        public UIGatver63031732ASCLAvWindow4()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow7 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow7(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow7 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow7 : WinWindow
    {
        
        public UIItemWindow7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "12";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIStatistikkforhelgearClient UIStatistikkforhelgearClient
        {
            get
            {
                if ((this.mUIStatistikkforhelgearClient == null))
                {
                    this.mUIStatistikkforhelgearClient = new UIStatistikkforhelgearClient(this);
                }
                return this.mUIStatistikkforhelgearClient;
            }
        }
        #endregion
        
        #region Fields
        private UIStatistikkforhelgearClient mUIStatistikkforhelgearClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIStatistikkforhelgearClient : WinClient
    {
        
        public UIStatistikkforhelgearClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIVisdetaljerprukeCheckBox
        {
            get
            {
                if ((this.mUIVisdetaljerprukeCheckBox == null))
                {
                    this.mUIVisdetaljerprukeCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIVisdetaljerprukeCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Vis detaljer pr uke";
                    this.mUIVisdetaljerprukeCheckBox.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIVisdetaljerprukeCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIVisdetaljerprukeCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63031732ASCLAvWindow5 : WinWindow
    {
        
        public UIGatver63031732ASCLAvWindow5()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow8 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow8(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow8 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow8 : WinWindow
    {
        
        public UIItemWindow8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver63031732ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvClient == null))
                {
                    this.mUIGatver63031732ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver63031732ASCLAvClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGatver63031732ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver63031732ASCLAvClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63031732ASCLAvWindow6 : WinWindow
    {
        
        public UIGatver63031732ASCLAvWindow6()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow9 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow9(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow15 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow15(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow9 mUIItemWindow;
        
        private UIItemWindow15 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow9 : WinWindow
    {
        
        public UIItemWindow9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxGridSite";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIAdministrasjonClient
        {
            get
            {
                if ((this.mUIAdministrasjonClient == null))
                {
                    this.mUIAdministrasjonClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAdministrasjonClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAdministrasjonClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAdministrasjonClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow15 : WinWindow
    {
        
        public UIItemWindow15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver63031732ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvClient == null))
                {
                    this.mUIGatver63031732ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver63031732ASCLAvClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGatver63031732ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver63031732ASCLAvClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILønnsogtrekkarterWindow : WinWindow
    {
        
        public UILønnsogtrekkarterWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Lønns- og trekkarter";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmTT";
            this.WindowTitles.Add("Lønns- og trekkarter");
            #endregion
        }
        
        #region Properties
        public UIItemWindow10 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow10(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new UIItemClient(this);
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow10 mUIItemWindow;
        
        private UIItemClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow10 : WinWindow
    {
        
        public UIItemWindow10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TgatGrid";
            this.WindowTitles.Add("Lønns- og trekkarter");
            #endregion
        }
        
        #region Properties
        public WinClient UILønnsogtrekkarterClient
        {
            get
            {
                if ((this.mUILønnsogtrekkarterClient == null))
                {
                    this.mUILønnsogtrekkarterClient = new WinClient(this);
                    #region Search Criteria
                    this.mUILønnsogtrekkarterClient.WindowTitles.Add("Lønns- og trekkarter");
                    #endregion
                }
                return this.mUILønnsogtrekkarterClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUILønnsogtrekkarterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemClient : WinClient
    {
        
        public UIItemClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = " ";
            this.WindowTitles.Add("Lønns- og trekkarter");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIBrukkodepåspekterrapCheckBox
        {
            get
            {
                if ((this.mUIBrukkodepåspekterrapCheckBox == null))
                {
                    this.mUIBrukkodepåspekterrapCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIBrukkodepåspekterrapCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Bruk kode på spekterrapport";
                    this.mUIBrukkodepåspekterrapCheckBox.WindowTitles.Add("Lønns- og trekkarter");
                    #endregion
                }
                return this.mUIBrukkodepåspekterrapCheckBox;
            }
        }
        
        public WinClient UIItemClient1
        {
            get
            {
                if ((this.mUIItemClient1 == null))
                {
                    this.mUIItemClient1 = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient1.SearchProperties[WinControl.PropertyNames.Name] = " ";
                    this.mUIItemClient1.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIItemClient1.WindowTitles.Add("Lønns- og trekkarter");
                    #endregion
                }
                return this.mUIItemClient1;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIBrukkodepåspekterrapCheckBox;
        
        private WinClient mUIItemClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63031732ASCLAvWindow7 : WinWindow
    {
        
        public UIGatver63031732ASCLAvWindow7()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRibbonControlRibbon1 UIRibbonControlRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRibbon == null))
                {
                    this.mUIRibbonControlRibbon = new UIRibbonControlRibbon1(this);
                }
                return this.mUIRibbonControlRibbon;
            }
        }
        
        public UIStandaloneBarDockConCustom1 UIStandaloneBarDockConCustom
        {
            get
            {
                if ((this.mUIStandaloneBarDockConCustom == null))
                {
                    this.mUIStandaloneBarDockConCustom = new UIStandaloneBarDockConCustom1(this);
                }
                return this.mUIStandaloneBarDockConCustom;
            }
        }
        
        public UICenterPanelDayDockPanel UICenterPanelDayDockPanel
        {
            get
            {
                if ((this.mUICenterPanelDayDockPanel == null))
                {
                    this.mUICenterPanelDayDockPanel = new UICenterPanelDayDockPanel(this);
                }
                return this.mUICenterPanelDayDockPanel;
            }
        }
        
        public UIBottomPanelDockPanel UIBottomPanelDockPanel
        {
            get
            {
                if ((this.mUIBottomPanelDockPanel == null))
                {
                    this.mUIBottomPanelDockPanel = new UIBottomPanelDockPanel(this);
                }
                return this.mUIBottomPanelDockPanel;
            }
        }
        
        public UIItemWindow16 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow16(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIPcMainPanelClient UIPcMainPanelClient
        {
            get
            {
                if ((this.mUIPcMainPanelClient == null))
                {
                    this.mUIPcMainPanelClient = new UIPcMainPanelClient(this);
                }
                return this.mUIPcMainPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonControlRibbon1 mUIRibbonControlRibbon;
        
        private UIStandaloneBarDockConCustom1 mUIStandaloneBarDockConCustom;
        
        private UICenterPanelDayDockPanel mUICenterPanelDayDockPanel;
        
        private UIBottomPanelDockPanel mUIBottomPanelDockPanel;
        
        private UIItemWindow16 mUIItemWindow;
        
        private UIPcMainPanelClient mUIPcMainPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRibbonControlRibbon1 : DXRibbon
    {
        
        public UIRibbonControlRibbon1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRpMainMenuRibbonPage UIRpMainMenuRibbonPage
        {
            get
            {
                if ((this.mUIRpMainMenuRibbonPage == null))
                {
                    this.mUIRpMainMenuRibbonPage = new UIRpMainMenuRibbonPage(this);
                }
                return this.mUIRpMainMenuRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpMainMenuRibbonPage mUIRpMainMenuRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpMainMenuRibbonPage : DXRibbonPage
    {
        
        public UIRpMainMenuRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpMainMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGrpDevianceRibbonPageGroup UIGrpDevianceRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpDevianceRibbonPageGroup == null))
                {
                    this.mUIGrpDevianceRibbonPageGroup = new UIGrpDevianceRibbonPageGroup(this);
                }
                return this.mUIGrpDevianceRibbonPageGroup;
            }
        }
        
        public UIGrpMiscRibbonPageGroup UIGrpMiscRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpMiscRibbonPageGroup == null))
                {
                    this.mUIGrpMiscRibbonPageGroup = new UIGrpMiscRibbonPageGroup(this);
                }
                return this.mUIGrpMiscRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpDevianceRibbonPageGroup mUIGrpDevianceRibbonPageGroup;
        
        private UIGrpMiscRibbonPageGroup mUIGrpMiscRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpDevianceRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpDevianceRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpDeviance";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIEkstraRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIEkstraRibbonBaseButtonItem == null))
                {
                    this.mUIEkstraRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIEkstraRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnExtra";
                    this.mUIEkstraRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIEkstraRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIEkstraRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIFraværRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIFraværRibbonBaseButtonItem == null))
                {
                    this.mUIFraværRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIFraværRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAbsence";
                    this.mUIFraværRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIFraværRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIFraværRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIBytteRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBytteRibbonBaseButtonItem == null))
                {
                    this.mUIBytteRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBytteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnExchange";
                    this.mUIBytteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBytteRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIBytteRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIByttemedavdelingRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIByttemedavdelingRibbonBaseButtonItem == null))
                {
                    this.mUIByttemedavdelingRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIByttemedavdelingRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnExchangeDep";
                    this.mUIByttemedavdelingRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIByttemedavdelingRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIByttemedavdelingRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIForskjøvetvaktRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIForskjøvetvaktRibbonBaseButtonItem == null))
                {
                    this.mUIForskjøvetvaktRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIForskjøvetvaktRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRemanage";
                    this.mUIForskjøvetvaktRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIForskjøvetvaktRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIForskjøvetvaktRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIUtrykningRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIUtrykningRibbonBaseButtonItem == null))
                {
                    this.mUIUtrykningRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIUtrykningRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnTurnOut";
                    this.mUIUtrykningRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIUtrykningRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIUtrykningRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIEkstraRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIFraværRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIBytteRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIByttemedavdelingRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIForskjøvetvaktRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIUtrykningRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpMiscRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpMiscRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpMisc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UISlettRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUISlettRibbonBaseButtonItem == null))
                {
                    this.mUISlettRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUISlettRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDelete";
                    this.mUISlettRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUISlettRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUISlettRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUISlettRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIStandaloneBarDockConCustom1 : DXTestControl
    {
        
        public UIStandaloneBarDockConCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "standaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StandaloneBarDockControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIMainmenuMenuBar1 UIMainmenuMenuBar
        {
            get
            {
                if ((this.mUIMainmenuMenuBar == null))
                {
                    this.mUIMainmenuMenuBar = new UIMainmenuMenuBar1(this);
                }
                return this.mUIMainmenuMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIMainmenuMenuBar1 mUIMainmenuMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMainmenuMenuBar1 : DXMenu
    {
        
        public UIMainmenuMenuBar1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Main menu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIVelgdatoBarBaseButtonItem
        {
            get
            {
                if ((this.mUIVelgdatoBarBaseButtonItem == null))
                {
                    this.mUIVelgdatoBarBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIVelgdatoBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDatePicker";
                    this.mUIVelgdatoBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
                    this.mUIVelgdatoBarBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIVelgdatoBarBaseButtonItem;
            }
        }
        
        public UIVelgdatoBarItem UIVelgdatoBarItem
        {
            get
            {
                if ((this.mUIVelgdatoBarItem == null))
                {
                    this.mUIVelgdatoBarItem = new UIVelgdatoBarItem(this);
                }
                return this.mUIVelgdatoBarItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIVelgdatoBarBaseButtonItem;
        
        private UIVelgdatoBarItem mUIVelgdatoBarItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIVelgdatoBarItem : DXMenuItem
    {
        
        public UIVelgdatoBarItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDatePicker";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPopupContainerBarConMenu UIPopupContainerBarConMenu
        {
            get
            {
                if ((this.mUIPopupContainerBarConMenu == null))
                {
                    this.mUIPopupContainerBarConMenu = new UIPopupContainerBarConMenu(this);
                }
                return this.mUIPopupContainerBarConMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupContainerBarConMenu mUIPopupContainerBarConMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPopupContainerBarConMenu : DXMenu
    {
        
        public UIPopupContainerBarConMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerBarControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPpcDatePickerClient UIPpcDatePickerClient
        {
            get
            {
                if ((this.mUIPpcDatePickerClient == null))
                {
                    this.mUIPpcDatePickerClient = new UIPpcDatePickerClient(this);
                }
                return this.mUIPpcDatePickerClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPpcDatePickerClient mUIPpcDatePickerClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPpcDatePickerClient : DXTestControl
    {
        
        public UIPpcDatePickerClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ppcDatePicker";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UILcDatePickerCustom UILcDatePickerCustom
        {
            get
            {
                if ((this.mUILcDatePickerCustom == null))
                {
                    this.mUILcDatePickerCustom = new UILcDatePickerCustom(this);
                }
                return this.mUILcDatePickerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcDatePickerCustom mUILcDatePickerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcDatePickerCustom : DXTestControl
    {
        
        public UILcDatePickerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcDatePicker";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroup1LayoutGroup UILayoutControlGroup1LayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroup1LayoutGroup == null))
                {
                    this.mUILayoutControlGroup1LayoutGroup = new UILayoutControlGroup1LayoutGroup(this);
                }
                return this.mUILayoutControlGroup1LayoutGroup;
            }
        }
        
        public DXPopupEdit UIPceDatePopupEdit
        {
            get
            {
                if ((this.mUIPceDatePopupEdit == null))
                {
                    this.mUIPceDatePopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDatePopupEdit.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIPceDatePopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroup1LayoutGroup mUILayoutControlGroup1LayoutGroup;
        
        private DXPopupEdit mUIPceDatePopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlGroup1LayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroup1LayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem1LayoutControlItem UILayoutControlItem1LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem1LayoutControlItem == null))
                {
                    this.mUILayoutControlItem1LayoutControlItem = new UILayoutControlItem1LayoutControlItem(this);
                }
                return this.mUILayoutControlItem1LayoutControlItem;
            }
        }
        
        public UILayoutControlItem3LayoutControlItem UILayoutControlItem3LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem3LayoutControlItem == null))
                {
                    this.mUILayoutControlItem3LayoutControlItem = new UILayoutControlItem3LayoutControlItem(this);
                }
                return this.mUILayoutControlItem3LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem1LayoutControlItem mUILayoutControlItem1LayoutControlItem;
        
        private UILayoutControlItem3LayoutControlItem mUILayoutControlItem3LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlItem1LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem1LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCalendar UIDnDatePickerCalendar
        {
            get
            {
                if ((this.mUIDnDatePickerCalendar == null))
                {
                    this.mUIDnDatePickerCalendar = new DXCalendar(this);
                    #region Search Criteria
                    this.mUIDnDatePickerCalendar.SearchProperties[DXTestControl.PropertyNames.Name] = "dnDatePicker";
                    this.mUIDnDatePickerCalendar.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DateNavigator";
                    this.mUIDnDatePickerCalendar.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIDnDatePickerCalendar;
            }
        }
        #endregion
        
        #region Fields
        private DXCalendar mUIDnDatePickerCalendar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlItem3LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem3LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXButton UIGåtilButton
        {
            get
            {
                if ((this.mUIGåtilButton == null))
                {
                    this.mUIGåtilButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGåtilButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnGoToDate";
                    this.mUIGåtilButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGåtilButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGåtilButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGåtilButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICenterPanelDayDockPanel : DXDockPanel
    {
        
        public UICenterPanelDayDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDay";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIControlContainerCustom : DXTestControl
    {
        
        public UIControlContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDayControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UICenterPanelDayWrappeDockPanel UICenterPanelDayWrappeDockPanel
        {
            get
            {
                if ((this.mUICenterPanelDayWrappeDockPanel == null))
                {
                    this.mUICenterPanelDayWrappeDockPanel = new UICenterPanelDayWrappeDockPanel(this);
                }
                return this.mUICenterPanelDayWrappeDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UICenterPanelDayWrappeDockPanel mUICenterPanelDayWrappeDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICenterPanelDayWrappeDockPanel : DXDockPanel
    {
        
        public UICenterPanelDayWrappeDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDayWrapper";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIDag00167770770FalseDockPanel UIDag00167770770FalseDockPanel
        {
            get
            {
                if ((this.mUIDag00167770770FalseDockPanel == null))
                {
                    this.mUIDag00167770770FalseDockPanel = new UIDag00167770770FalseDockPanel(this);
                }
                return this.mUIDag00167770770FalseDockPanel;
            }
        }
        
        public UINatttiltirsdag001677DockPanel UINatttiltirsdag001677DockPanel
        {
            get
            {
                if ((this.mUINatttiltirsdag001677DockPanel == null))
                {
                    this.mUINatttiltirsdag001677DockPanel = new UINatttiltirsdag001677DockPanel(this);
                }
                return this.mUINatttiltirsdag001677DockPanel;
            }
        }
        
        public UIAften00167770770FalsDockPanel UIAften00167770770FalsDockPanel
        {
            get
            {
                if ((this.mUIAften00167770770FalsDockPanel == null))
                {
                    this.mUIAften00167770770FalsDockPanel = new UIAften00167770770FalsDockPanel(this);
                }
                return this.mUIAften00167770770FalsDockPanel;
            }
        }
        
        public UIFriVikar00167770770FDockPanel UIFriVikar00167770770FDockPanel
        {
            get
            {
                if ((this.mUIFriVikar00167770770FDockPanel == null))
                {
                    this.mUIFriVikar00167770770FDockPanel = new UIFriVikar00167770770FDockPanel(this);
                }
                return this.mUIFriVikar00167770770FDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDag00167770770FalseDockPanel mUIDag00167770770FalseDockPanel;
        
        private UINatttiltirsdag001677DockPanel mUINatttiltirsdag001677DockPanel;
        
        private UIAften00167770770FalsDockPanel mUIAften00167770770FalsDockPanel;
        
        private UIFriVikar00167770770FDockPanel mUIFriVikar00167770770FDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDag00167770770FalseDockPanel : DXDockPanel
    {
        
        public UIDag00167770770FalseDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Dag;0;0;-16777077;0;False";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom1 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom1(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom1 mUIControlContainerCustom;
        #endregion
    }

    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIControlContainerCustom1 : DXTestControl
    {

        public UIControlContainerCustom1(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Dag;0;0;-16777077;0;FalseControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }

        #region Properties
        public UIGcDayColumnTable UIGcDayColumnTable
        {
            get
            {
                if ((this.mUIGcDayColumnTable == null))
                {
                    this.mUIGcDayColumnTable = new UIGcDayColumnTable(this);
                }
                return this.mUIGcDayColumnTable;
            }
        }
        #endregion

        #region Fields
        private UIGcDayColumnTable mUIGcDayColumnTable;
        #endregion
    }

    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcDayColumnTable : DXGrid
    {

        public UIGcDayColumnTable(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }

        //#region Properties
        //public DXCell UIItem10HelgCell
        //{
        //    get
        //    {
        //        if ((this.mUIItem10HelgCell == null))
        //        {
        //            this.mUIItem10HelgCell = new DXCell(this);
        //            #region Search Criteria
        //            this.mUIItem10HelgCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]0[Column]colEmployeeName";
        //            this.mUIItem10HelgCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
        //            this.mUIItem10HelgCell.WindowTitles.Add("Gat");
        //            #endregion
        //        }
        //        return this.mUIItem10HelgCell;
        //    }
        //}
        //#endregion

        //#region Fields
        //private DXCell mUIItem10HelgCell;
        //#endregion
    }

    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINatttiltirsdag001677DockPanel : DXDockPanel
    {
        
        public UINatttiltirsdag001677DockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Natt til tirsdag;0;0;-16777077;0;False";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom2 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom2(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom2 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIControlContainerCustom2 : DXTestControl
    {
        
        public UIControlContainerCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Natt til tirsdag;0;0;-16777077;0;FalseControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcDayColumnTable1 UIGcDayColumnTable
        {
            get
            {
                if ((this.mUIGcDayColumnTable == null))
                {
                    this.mUIGcDayColumnTable = new UIGcDayColumnTable1(this);
                }
                return this.mUIGcDayColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDayColumnTable1 mUIGcDayColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcDayColumnTable1 : DXGrid
    {
        
        public UIGcDayColumnTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        //#region Properties
        //public DXCell UIItem10HelgCell
        //{
        //    get
        //    {
        //        if ((this.mUIItem10HelgCell == null))
        //        {
        //            this.mUIItem10HelgCell = new DXCell(this);
        //            #region Search Criteria
        //            this.mUIItem10HelgCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]0[Column]colEmployeeName";
        //            this.mUIItem10HelgCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
        //            this.mUIItem10HelgCell.WindowTitles.Add("Gat");
        //            #endregion
        //        }
        //        return this.mUIItem10HelgCell;
        //    }
        //}
        //#endregion
        
        //#region Fields
        //private DXCell mUIItem10HelgCell;
        //#endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAften00167770770FalsDockPanel : DXDockPanel
    {
        
        public UIAften00167770770FalsDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Aften;0;0;-16777077;0;False";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom3 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom3(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom3 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIControlContainerCustom3 : DXTestControl
    {
        
        public UIControlContainerCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Aften;0;0;-16777077;0;FalseControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcDayColumnTable2 UIGcDayColumnTable
        {
            get
            {
                if ((this.mUIGcDayColumnTable == null))
                {
                    this.mUIGcDayColumnTable = new UIGcDayColumnTable2(this);
                }
                return this.mUIGcDayColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDayColumnTable2 mUIGcDayColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcDayColumnTable2 : DXGrid
    {
        
        public UIGcDayColumnTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem10HelgCell
        {
            get
            {
                if ((this.mUIItem10HelgCell == null))
                {
                    this.mUIItem10HelgCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem10HelgCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]0[Column]colEmployeeName";
                    this.mUIItem10HelgCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem10HelgCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem10HelgCell;
            }
        }
        
        public DXCell UIItem14HelgCell
        {
            get
            {
                if ((this.mUIItem14HelgCell == null))
                {
                    this.mUIItem14HelgCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem14HelgCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]1[Column]colEmployeeName";
                    this.mUIItem14HelgCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem14HelgCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem14HelgCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem10HelgCell;
        
        private DXCell mUIItem14HelgCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFriVikar00167770770FDockPanel : DXDockPanel
    {
        
        public UIFriVikar00167770770FDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Fri / Vikar;0;0;-16777077;0;False";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom4 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom4(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom4 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIControlContainerCustom4 : DXTestControl
    {
        
        public UIControlContainerCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Fri / Vikar;0;0;-16777077;0;FalseControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcFreeColumnTable UIGcFreeColumnTable
        {
            get
            {
                if ((this.mUIGcFreeColumnTable == null))
                {
                    this.mUIGcFreeColumnTable = new UIGcFreeColumnTable(this);
                }
                return this.mUIGcFreeColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcFreeColumnTable mUIGcFreeColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcFreeColumnTable : DXGrid
    {
        
        public UIGcFreeColumnTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcFreeColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem2Cell
        {
            get
            {
                if ((this.mUIItem2Cell == null))
                {
                    this.mUIItem2Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcFreeColumnGridControlCell[View]gvFreeColumn[Row]5[Column]colStatus";
                    this.mUIItem2Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem2Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem2Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIBottomPanelDockPanel : DXDockPanel
    {
        
        public UIBottomPanelDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIFraværDockPanel UIFraværDockPanel
        {
            get
            {
                if ((this.mUIFraværDockPanel == null))
                {
                    this.mUIFraværDockPanel = new UIFraværDockPanel(this);
                }
                return this.mUIFraværDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIFraværDockPanel mUIFraværDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFraværDockPanel : DXDockPanel
    {
        
        public UIFraværDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Fravær";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom5 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom5(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom5 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIControlContainerCustom5 : DXTestControl
    {
        
        public UIControlContainerCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "FraværControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcAbsenceColumnTable UIGcAbsenceColumnTable
        {
            get
            {
                if ((this.mUIGcAbsenceColumnTable == null))
                {
                    this.mUIGcAbsenceColumnTable = new UIGcAbsenceColumnTable(this);
                }
                return this.mUIGcAbsenceColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcAbsenceColumnTable mUIGcAbsenceColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcAbsenceColumnTable : DXGrid
    {
        
        public UIGcAbsenceColumnTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAbsenceColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem10EgenmeldingIAbCell
        {
            get
            {
                if ((this.mUIItem10EgenmeldingIAbCell == null))
                {
                    this.mUIItem10EgenmeldingIAbCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem10EgenmeldingIAbCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAbsenceColumnGridControlCell[View]gvAbsenceColumn[Row]0[Column]gccAbsenceCode";
                    this.mUIItem10EgenmeldingIAbCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem10EgenmeldingIAbCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem10EgenmeldingIAbCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem10EgenmeldingIAbCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow16 : WinWindow
    {
        
        public UIItemWindow16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxGridSite";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsatteClient
        {
            get
            {
                if ((this.mUIAnsatteClient == null))
                {
                    this.mUIAnsatteClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsatteClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAnsatteClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsatteClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcMainPanelClient : DXTestControl
    {
        
        public UIPcMainPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITcPanListsTabList UITcPanListsTabList
        {
            get
            {
                if ((this.mUITcPanListsTabList == null))
                {
                    this.mUITcPanListsTabList = new UITcPanListsTabList(this);
                }
                return this.mUITcPanListsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcPanListsTabList mUITcPanListsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcPanListsTabList : DXTestControl
    {
        
        public UITcPanListsTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcPanLists";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITpRosterPlanListClient UITpRosterPlanListClient
        {
            get
            {
                if ((this.mUITpRosterPlanListClient == null))
                {
                    this.mUITpRosterPlanListClient = new UITpRosterPlanListClient(this);
                }
                return this.mUITpRosterPlanListClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpRosterPlanListClient mUITpRosterPlanListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpRosterPlanListClient : DXTestControl
    {
        
        public UITpRosterPlanListClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpRosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPnlButtonsClient UIPnlButtonsClient
        {
            get
            {
                if ((this.mUIPnlButtonsClient == null))
                {
                    this.mUIPnlButtonsClient = new UIPnlButtonsClient(this);
                }
                return this.mUIPnlButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlButtonsClient mUIPnlButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlButtonsClient : DXTestControl
    {
        
        public UIPnlButtonsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXButton UINYButton
        {
            get
            {
                if ((this.mUINYButton == null))
                {
                    this.mUINYButton = new DXButton(this);
                    #region Search Criteria
                    this.mUINYButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnNew";
                    this.mUINYButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUINYButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUINYButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUINYButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMerarbeidovertidWindow : DXWindow
    {
        
        public UIMerarbeidovertidWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Merarbeid / overtid";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIPanClientClient UIPanClientClient
        {
            get
            {
                if ((this.mUIPanClientClient == null))
                {
                    this.mUIPanClientClient = new UIPanClientClient(this);
                }
                return this.mUIPanClientClient;
            }
        }
        
        public UIGsPanelControl1Client UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        
        public UIPanClientClient1 UIPanClientClient1
        {
            get
            {
                if ((this.mUIPanClientClient1 == null))
                {
                    this.mUIPanClientClient1 = new UIPanClientClient1(this);
                }
                return this.mUIPanClientClient1;
            }
        }
        #endregion
        
        #region Fields
        private UIPanClientClient mUIPanClientClient;
        
        private UIGsPanelControl1Client mUIGsPanelControl1Client;
        
        private UIPanClientClient1 mUIPanClientClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPanClientClient : DXTestControl
    {
        
        public UIPanClientClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UINbMenuNavBar UINbMenuNavBar
        {
            get
            {
                if ((this.mUINbMenuNavBar == null))
                {
                    this.mUINbMenuNavBar = new UINbMenuNavBar(this);
                }
                return this.mUINbMenuNavBar;
            }
        }
        
        public UITcClientTabList UITcClientTabList
        {
            get
            {
                if ((this.mUITcClientTabList == null))
                {
                    this.mUITcClientTabList = new UITcClientTabList(this);
                }
                return this.mUITcClientTabList;
            }
        }
        #endregion
        
        #region Fields
        private UINbMenuNavBar mUINbMenuNavBar;
        
        private UITcClientTabList mUITcClientTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINbMenuNavBar : DXNavBar
    {
        
        public UINbMenuNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UICbOvertimeCodeLookUpEdit
        {
            get
            {
                if ((this.mUICbOvertimeCodeLookUpEdit == null))
                {
                    this.mUICbOvertimeCodeLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUICbOvertimeCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "cbOvertimeCode";
                    this.mUICbOvertimeCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
                    this.mUICbOvertimeCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
                    #endregion
                }
                return this.mUICbOvertimeCodeLookUpEdit;
            }
        }
        
        public DXLookUpEdit UICbEmploymentLookUpEdit
        {
            get
            {
                if ((this.mUICbEmploymentLookUpEdit == null))
                {
                    this.mUICbEmploymentLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUICbEmploymentLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "cbEmployment";
                    this.mUICbEmploymentLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
                    this.mUICbEmploymentLookUpEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
                    this.mUICbEmploymentLookUpEdit.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUICbEmploymentLookUpEdit;
            }
        }
        
        public DXLookUpEdit UICbEmploymentLookUpEdit1
        {
            get
            {
                if ((this.mUICbEmploymentLookUpEdit1 == null))
                {
                    this.mUICbEmploymentLookUpEdit1 = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUICbEmploymentLookUpEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "cbEmployment";
                    this.mUICbEmploymentLookUpEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
                    this.mUICbEmploymentLookUpEdit1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "4";
                    this.mUICbEmploymentLookUpEdit1.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUICbEmploymentLookUpEdit1;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUICbOvertimeCodeLookUpEdit;
        
        private DXLookUpEdit mUICbEmploymentLookUpEdit;
        
        private DXLookUpEdit mUICbEmploymentLookUpEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcClientTabList : DXTestControl
    {
        
        public UITcClientTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UITpMainClient UITpMainClient
        {
            get
            {
                if ((this.mUITpMainClient == null))
                {
                    this.mUITpMainClient = new UITpMainClient(this);
                }
                return this.mUITpMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpMainClient mUITpMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpMainClient : DXTestControl
    {
        
        public UITpMainClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIGcShiftDetailsClient UIGcShiftDetailsClient
        {
            get
            {
                if ((this.mUIGcShiftDetailsClient == null))
                {
                    this.mUIGcShiftDetailsClient = new UIGcShiftDetailsClient(this);
                }
                return this.mUIGcShiftDetailsClient;
            }
        }
        
        public UITcExtraDetailTabList UITcExtraDetailTabList
        {
            get
            {
                if ((this.mUITcExtraDetailTabList == null))
                {
                    this.mUITcExtraDetailTabList = new UITcExtraDetailTabList(this);
                }
                return this.mUITcExtraDetailTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIGcShiftDetailsClient mUIGcShiftDetailsClient;
        
        private UITcExtraDetailTabList mUITcExtraDetailTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcShiftDetailsClient : DXTestControl
    {
        
        public UIGcShiftDetailsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDatePopupEdit
        {
            get
            {
                if ((this.mUIPceDatePopupEdit == null))
                {
                    this.mUIPceDatePopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDatePopupEdit.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIPceDatePopupEdit;
            }
        }
        
        public UITcRegistrationTypeTabList UITcRegistrationTypeTabList
        {
            get
            {
                if ((this.mUITcRegistrationTypeTabList == null))
                {
                    this.mUITcRegistrationTypeTabList = new UITcRegistrationTypeTabList(this);
                }
                return this.mUITcRegistrationTypeTabList;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDatePopupEdit;
        
        private UITcRegistrationTypeTabList mUITcRegistrationTypeTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcRegistrationTypeTabList : DXTestControl
    {
        
        public UITcRegistrationTypeTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcRegistrationType";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UITpNewShiftClient UITpNewShiftClient
        {
            get
            {
                if ((this.mUITpNewShiftClient == null))
                {
                    this.mUITpNewShiftClient = new UITpNewShiftClient(this);
                }
                return this.mUITpNewShiftClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpNewShiftClient mUITpNewShiftClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpNewShiftClient : DXTestControl
    {
        
        public UITpNewShiftClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpNewShift";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UICbShiftCodeLookUpEdit UICbShiftCodeLookUpEdit
        {
            get
            {
                if ((this.mUICbShiftCodeLookUpEdit == null))
                {
                    this.mUICbShiftCodeLookUpEdit = new UICbShiftCodeLookUpEdit(this);
                }
                return this.mUICbShiftCodeLookUpEdit;
            }
        }
        
        public DXTextEdit UIETime1Edit
        {
            get
            {
                if ((this.mUIETime1Edit == null))
                {
                    this.mUIETime1Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[1]";
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETime1Edit.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIETime1Edit;
            }
        }
        
        public DXTextEdit UIETime0Edit
        {
            get
            {
                if ((this.mUIETime0Edit == null))
                {
                    this.mUIETime0Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime0Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[0]";
                    this.mUIETime0Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime0Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETime0Edit.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIETime0Edit;
            }
        }
        
        public DXLookUpEdit UICbCrewColumnLookUpEdit
        {
            get
            {
                if ((this.mUICbCrewColumnLookUpEdit == null))
                {
                    this.mUICbCrewColumnLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUICbCrewColumnLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "cbCrewColumn";
                    this.mUICbCrewColumnLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    this.mUICbCrewColumnLookUpEdit.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUICbCrewColumnLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UICbShiftCodeLookUpEdit mUICbShiftCodeLookUpEdit;
        
        private DXTextEdit mUIETime1Edit;
        
        private DXTextEdit mUIETime0Edit;
        
        private DXLookUpEdit mUICbCrewColumnLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICbShiftCodeLookUpEdit : DXLookUpEdit
    {
        
        public UICbShiftCodeLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "cbShiftCode";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public DXButton UIEditorButton1Button
        {
            get
            {
                if ((this.mUIEditorButton1Button == null))
                {
                    this.mUIEditorButton1Button = new DXButton(this);
                    #region Search Criteria
                    this.mUIEditorButton1Button.SearchProperties[DXTestControl.PropertyNames.Name] = "cbShiftCodeButton[1]";
                    this.mUIEditorButton1Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
                    this.mUIEditorButton1Button.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIEditorButton1Button;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIEditorButton1Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcExtraDetailTabList : DXTestControl
    {
        
        public UITcExtraDetailTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcExtraDetail";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            #endregion
        }
        
        #region Properties
        public UITpSalaryCalcClient UITpSalaryCalcClient
        {
            get
            {
                if ((this.mUITpSalaryCalcClient == null))
                {
                    this.mUITpSalaryCalcClient = new UITpSalaryCalcClient(this);
                }
                return this.mUITpSalaryCalcClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpSalaryCalcClient mUITpSalaryCalcClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpSalaryCalcClient : DXTestControl
    {
        
        public UITpSalaryCalcClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpSalaryCalc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            #endregion
        }
        
        #region Properties
        public UIGcAccountingLinesTable UIGcAccountingLinesTable
        {
            get
            {
                if ((this.mUIGcAccountingLinesTable == null))
                {
                    this.mUIGcAccountingLinesTable = new UIGcAccountingLinesTable(this);
                }
                return this.mUIGcAccountingLinesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcAccountingLinesTable mUIGcAccountingLinesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcAccountingLinesTable : DXGrid
    {
        
        public UIGcAccountingLinesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAccountingLines";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            #endregion
        }
        
        #region Properties
        public DXCell UIItem800Cell
        {
            get
            {
                if ((this.mUIItem800Cell == null))
                {
                    this.mUIItem800Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem800Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAccountingLinesGridControlCell[View]gvAccountingLines[Row]0[Column]colAmount";
                    this.mUIItem800Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem800Cell.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIItem800Cell;
            }
        }
        
        public DXCell UIItem400LørSøndagstilCell
        {
            get
            {
                if ((this.mUIItem400LørSøndagstilCell == null))
                {
                    this.mUIItem400LørSøndagstilCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem400LørSøndagstilCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAccountingLinesGridControlCell[View]gvAccountingLines[Row]0[Column]colCostType";
                    this.mUIItem400LørSøndagstilCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem400LørSøndagstilCell.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIItem400LørSøndagstilCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem800Cell;
        
        private DXCell mUIItem400LørSøndagstilCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsPanelControl1Client : DXTestControl
    {
        
        public UIGsPanelControl1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbtnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDropDownButton";
                    this.mUIOKButton.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPanClientClient1 : DXTestControl
    {
        
        public UIPanClientClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UITcClientTabList1 UITcClientTabList
        {
            get
            {
                if ((this.mUITcClientTabList == null))
                {
                    this.mUITcClientTabList = new UITcClientTabList1(this);
                }
                return this.mUITcClientTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcClientTabList1 mUITcClientTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcClientTabList1 : DXTestControl
    {
        
        public UITcClientTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UITpMainClient1 UITpMainClient
        {
            get
            {
                if ((this.mUITpMainClient == null))
                {
                    this.mUITpMainClient = new UITpMainClient1(this);
                }
                return this.mUITpMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpMainClient1 mUITpMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpMainClient1 : DXTestControl
    {
        
        public UITpMainClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIGcShiftDetailsClient1 UIGcShiftDetailsClient
        {
            get
            {
                if ((this.mUIGcShiftDetailsClient == null))
                {
                    this.mUIGcShiftDetailsClient = new UIGcShiftDetailsClient1(this);
                }
                return this.mUIGcShiftDetailsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcShiftDetailsClient1 mUIGcShiftDetailsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcShiftDetailsClient1 : DXTestControl
    {
        
        public UIGcShiftDetailsClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIDeDateCustom UIDeDateCustom
        {
            get
            {
                if ((this.mUIDeDateCustom == null))
                {
                    this.mUIDeDateCustom = new UIDeDateCustom(this);
                }
                return this.mUIDeDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDeDateCustom mUIDeDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDeDateCustom : DXTestControl
    {
        
        public UIDeDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "deDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow17 : DXWindow
    {
        
        public UIItemWindow17()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Slett";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Slett");
            #endregion
        }
        
        #region Properties
        public UIGSDialogFooterBarCustom UIGSDialogFooterBarCustom
        {
            get
            {
                if ((this.mUIGSDialogFooterBarCustom == null))
                {
                    this.mUIGSDialogFooterBarCustom = new UIGSDialogFooterBarCustom(this);
                }
                return this.mUIGSDialogFooterBarCustom;
            }
        }
        
        public UIPcContentClient UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient(this);
                }
                return this.mUIPcContentClient;
            }
        }
        
        public UIPcContentClient1 UIPcContentClient1
        {
            get
            {
                if ((this.mUIPcContentClient1 == null))
                {
                    this.mUIPcContentClient1 = new UIPcContentClient1(this);
                }
                return this.mUIPcContentClient1;
            }
        }
        
        public UIPcContentClient2 UIPcContentClient2
        {
            get
            {
                if ((this.mUIPcContentClient2 == null))
                {
                    this.mUIPcContentClient2 = new UIPcContentClient2(this);
                }
                return this.mUIPcContentClient2;
            }
        }
        #endregion
        
        #region Fields
        private UIGSDialogFooterBarCustom mUIGSDialogFooterBarCustom;
        
        private UIPcContentClient mUIPcContentClient;
        
        private UIPcContentClient1 mUIPcContentClient1;
        
        private UIPcContentClient2 mUIPcContentClient2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSDialogFooterBarCustom : DXTestControl
    {
        
        public UIGSDialogFooterBarCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dbFooter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDialogFooterBar";
            this.WindowTitles.Add("Slett");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Slett");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcContentClient : DXTestControl
    {
        
        public UIPcContentClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Slett");
            #endregion
        }
        
        #region Properties
        public UITlOperationsTreeList UITlOperationsTreeList
        {
            get
            {
                if ((this.mUITlOperationsTreeList == null))
                {
                    this.mUITlOperationsTreeList = new UITlOperationsTreeList(this);
                }
                return this.mUITlOperationsTreeList;
            }
        }
        
        public DXButton UIVelgalleButton
        {
            get
            {
                if ((this.mUIVelgalleButton == null))
                {
                    this.mUIVelgalleButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCheckAll";
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIVelgalleButton.WindowTitles.Add("Slett");
                    #endregion
                }
                return this.mUIVelgalleButton;
            }
        }
        #endregion
        
        #region Fields
        private UITlOperationsTreeList mUITlOperationsTreeList;
        
        private DXButton mUIVelgalleButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITlOperationsTreeList : DXTreeList
    {
        
        public UITlOperationsTreeList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tlOperations";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTreeList";
            this.WindowTitles.Add("Slett");
            #endregion
        }
        
        #region Properties
        public DXTreeListNode UINode1TreeListNode
        {
            get
            {
                if ((this.mUINode1TreeListNode == null))
                {
                    this.mUINode1TreeListNode = new DXTreeListNode(this);
                    #region Search Criteria
                    this.mUINode1TreeListNode.SearchProperties[DXTestControl.PropertyNames.Name] = "Node1";
                    this.mUINode1TreeListNode.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
                    this.mUINode1TreeListNode.WindowTitles.Add("Slett");
                    #endregion
                }
                return this.mUINode1TreeListNode;
            }
        }
        
        public DXTreeListNode UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new DXTreeListNode(this);
                    #region Search Criteria
                    this.mUINode0TreeListNode.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
                    this.mUINode0TreeListNode.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
                    this.mUINode0TreeListNode.WindowTitles.Add("Slett");
                    #endregion
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListNode mUINode1TreeListNode;
        
        private DXTreeListNode mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcContentClient1 : DXTestControl
    {
        
        public UIPcContentClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Slett");
            #endregion
        }
        
        #region Properties
        public UITlOperationsTreeList1 UITlOperationsTreeList
        {
            get
            {
                if ((this.mUITlOperationsTreeList == null))
                {
                    this.mUITlOperationsTreeList = new UITlOperationsTreeList1(this);
                }
                return this.mUITlOperationsTreeList;
            }
        }
        #endregion
        
        #region Fields
        private UITlOperationsTreeList1 mUITlOperationsTreeList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITlOperationsTreeList1 : DXTreeList
    {
        
        public UITlOperationsTreeList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tlOperations";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTreeList";
            this.WindowTitles.Add("Slett");
            #endregion
        }
        
        #region Properties
        public DXTreeListNode UINode1TreeListNode
        {
            get
            {
                if ((this.mUINode1TreeListNode == null))
                {
                    this.mUINode1TreeListNode = new DXTreeListNode(this);
                    #region Search Criteria
                    this.mUINode1TreeListNode.SearchProperties[DXTestControl.PropertyNames.Name] = "Node1";
                    this.mUINode1TreeListNode.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
                    this.mUINode1TreeListNode.WindowTitles.Add("Slett");
                    #endregion
                }
                return this.mUINode1TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListNode mUINode1TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcContentClient2 : DXTestControl
    {
        
        public UIPcContentClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Slett");
            #endregion
        }
        
        #region Properties
        public UITlOperationsTreeList2 UITlOperationsTreeList
        {
            get
            {
                if ((this.mUITlOperationsTreeList == null))
                {
                    this.mUITlOperationsTreeList = new UITlOperationsTreeList2(this);
                }
                return this.mUITlOperationsTreeList;
            }
        }
        #endregion
        
        #region Fields
        private UITlOperationsTreeList2 mUITlOperationsTreeList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITlOperationsTreeList2 : DXTreeList
    {
        
        public UITlOperationsTreeList2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tlOperations";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTreeList";
            this.WindowTitles.Add("Slett");
            #endregion
        }
        
        #region Properties
        public DXTreeListNode UINode3TreeListNode
        {
            get
            {
                if ((this.mUINode3TreeListNode == null))
                {
                    this.mUINode3TreeListNode = new DXTreeListNode(this);
                    #region Search Criteria
                    this.mUINode3TreeListNode.SearchProperties[DXTestControl.PropertyNames.Name] = "Node3";
                    this.mUINode3TreeListNode.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
                    this.mUINode3TreeListNode.WindowTitles.Add("Slett");
                    #endregion
                }
                return this.mUINode3TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListNode mUINode3TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63031732ASCLAvWindow8 : WinWindow
    {
        
        public UIGatver63031732ASCLAvWindow8()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow18 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow18(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow18 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow18 : WinWindow
    {
        
        public UIItemWindow18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxGridSite";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsatteClient
        {
            get
            {
                if ((this.mUIAnsatteClient == null))
                {
                    this.mUIAnsatteClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsatteClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAnsatteClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsatteClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63031732ASCLAvWindow9 : WinWindow
    {
        
        public UIGatver63031732ASCLAvWindow9()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow19 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow19(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow19 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow19 : WinWindow
    {
        
        public UIItemWindow19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "7";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UITimelisteClient
        {
            get
            {
                if ((this.mUITimelisteClient == null))
                {
                    this.mUITimelisteClient = new WinClient(this);
                    #region Search Criteria
                    this.mUITimelisteClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUITimelisteClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUITimelisteClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEndrekonteringWindow : WinWindow
    {
        
        public UIEndrekonteringWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Endre kontering";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmPosting";
            this.WindowTitles.Add("Endre kontering");
            #endregion
        }
        
        #region Properties
        public UIItemWindow20 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow20(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow110 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow110(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow23 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow23(this);
                }
                return this.mUIItemWindow2;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow20 mUIItemWindow;
        
        private UIItemWindow110 mUIItemWindow1;
        
        private UIItemWindow23 mUIItemWindow2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow20 : WinWindow
    {
        
        public UIItemWindow20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Endre kontering");
            #endregion
        }
        
        #region Properties
        public WinClient UIEndrekonteringClient
        {
            get
            {
                if ((this.mUIEndrekonteringClient == null))
                {
                    this.mUIEndrekonteringClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIEndrekonteringClient.WindowTitles.Add("Endre kontering");
                    #endregion
                }
                return this.mUIEndrekonteringClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIEndrekonteringClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow110 : WinWindow
    {
        
        public UIItemWindow110(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Endre kontering");
            #endregion
        }
        
        #region Properties
        public UIEndrekonteringClient UIEndrekonteringClient
        {
            get
            {
                if ((this.mUIEndrekonteringClient == null))
                {
                    this.mUIEndrekonteringClient = new UIEndrekonteringClient(this);
                }
                return this.mUIEndrekonteringClient;
            }
        }
        #endregion
        
        #region Fields
        private UIEndrekonteringClient mUIEndrekonteringClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEndrekonteringClient : WinClient
    {
        
        public UIEndrekonteringClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Endre kontering");
            #endregion
        }
        
        #region Properties
        public WinButton UILukkButton
        {
            get
            {
                if ((this.mUILukkButton == null))
                {
                    this.mUILukkButton = new WinButton(this);
                    #region Search Criteria
                    this.mUILukkButton.SearchProperties[WinButton.PropertyNames.Name] = "Lukk";
                    this.mUILukkButton.WindowTitles.Add("Endre kontering");
                    #endregion
                }
                return this.mUILukkButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUILukkButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow23 : WinWindow
    {
        
        public UIItemWindow23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TgatGrid";
            this.WindowTitles.Add("Endre kontering");
            #endregion
        }
        
        #region Properties
        public WinClient UIEndrekonteringClient
        {
            get
            {
                if ((this.mUIEndrekonteringClient == null))
                {
                    this.mUIEndrekonteringClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIEndrekonteringClient.WindowTitles.Add("Endre kontering");
                    #endregion
                }
                return this.mUIEndrekonteringClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIEndrekonteringClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIOVE2003GatWindow : WinWindow
    {
        
        public UIOVE2003GatWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "OVE-2003 - Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfmMessage";
            this.WindowTitles.Add("OVE-2003 - Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow24 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow24(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow24 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow24 : WinWindow
    {
        
        public UIItemWindow24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.WindowTitles.Add("OVE-2003 - Gat");
            #endregion
        }
        
        #region Properties
        public UIOVE2003GatClient UIOVE2003GatClient
        {
            get
            {
                if ((this.mUIOVE2003GatClient == null))
                {
                    this.mUIOVE2003GatClient = new UIOVE2003GatClient(this);
                }
                return this.mUIOVE2003GatClient;
            }
        }
        #endregion
        
        #region Fields
        private UIOVE2003GatClient mUIOVE2003GatClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIOVE2003GatClient : WinClient
    {
        
        public UIOVE2003GatClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("OVE-2003 - Gat");
            #endregion
        }
        
        #region Properties
        public WinButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[WinButton.PropertyNames.Name] = "Ja";
                    this.mUIJAButton.WindowTitles.Add("OVE-2003 - Gat");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINykonteringWindow : WinWindow
    {
        
        public UINykonteringWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Ny kontering";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmChangePosting";
            this.WindowTitles.Add("Ny kontering");
            #endregion
        }
        
        #region Properties
        public UIItemWindow25 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow25(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow112 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow112(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIPanel2Client UIPanel2Client
        {
            get
            {
                if ((this.mUIPanel2Client == null))
                {
                    this.mUIPanel2Client = new UIPanel2Client(this);
                }
                return this.mUIPanel2Client;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow25 mUIItemWindow;
        
        private UIItemWindow112 mUIItemWindow1;
        
        private UIPanel2Client mUIPanel2Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow25 : WinWindow
    {
        
        public UIItemWindow25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSComboBox";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "5";
            this.WindowTitles.Add("Ny kontering");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIItemComboBox.WindowTitles.Add("Ny kontering");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow112 : WinWindow
    {
        
        public UIItemWindow112(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSEdit";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Ny kontering");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Ny kontering");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPanel2Client : WinClient
    {
        
        public UIPanel2Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Panel2";
            this.WindowTitles.Add("Ny kontering");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Ny kontering");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFraværsregistreringWindow : DXWindow
    {
        
        public UIFraværsregistreringWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Fraværsregistrering";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UINbcLeftNavBar UINbcLeftNavBar
        {
            get
            {
                if ((this.mUINbcLeftNavBar == null))
                {
                    this.mUINbcLeftNavBar = new UINbcLeftNavBar(this);
                }
                return this.mUINbcLeftNavBar;
            }
        }
        
        public UILcBottomCustom UILcBottomCustom
        {
            get
            {
                if ((this.mUILcBottomCustom == null))
                {
                    this.mUILcBottomCustom = new UILcBottomCustom(this);
                }
                return this.mUILcBottomCustom;
            }
        }
        
        public UILcMainCustom UILcMainCustom
        {
            get
            {
                if ((this.mUILcMainCustom == null))
                {
                    this.mUILcMainCustom = new UILcMainCustom(this);
                }
                return this.mUILcMainCustom;
            }
        }
        
        public UILcMainCustom1 UILcMainCustom1
        {
            get
            {
                if ((this.mUILcMainCustom1 == null))
                {
                    this.mUILcMainCustom1 = new UILcMainCustom1(this);
                }
                return this.mUILcMainCustom1;
            }
        }
        
        public UILcMainCustom2 UILcMainCustom2
        {
            get
            {
                if ((this.mUILcMainCustom2 == null))
                {
                    this.mUILcMainCustom2 = new UILcMainCustom2(this);
                }
                return this.mUILcMainCustom2;
            }
        }
        
        public UILcMainCustom3 UILcMainCustom3
        {
            get
            {
                if ((this.mUILcMainCustom3 == null))
                {
                    this.mUILcMainCustom3 = new UILcMainCustom3(this);
                }
                return this.mUILcMainCustom3;
            }
        }
        
        public UILcMainCustom4 UILcMainCustom4
        {
            get
            {
                if ((this.mUILcMainCustom4 == null))
                {
                    this.mUILcMainCustom4 = new UILcMainCustom4(this);
                }
                return this.mUILcMainCustom4;
            }
        }
        
        public UILcMainCustom5 UILcMainCustom5
        {
            get
            {
                if ((this.mUILcMainCustom5 == null))
                {
                    this.mUILcMainCustom5 = new UILcMainCustom5(this);
                }
                return this.mUILcMainCustom5;
            }
        }
        
        public UINbcLeftNavBar1 UINbcLeftNavBar1
        {
            get
            {
                if ((this.mUINbcLeftNavBar1 == null))
                {
                    this.mUINbcLeftNavBar1 = new UINbcLeftNavBar1(this);
                }
                return this.mUINbcLeftNavBar1;
            }
        }
        #endregion
        
        #region Fields
        private UINbcLeftNavBar mUINbcLeftNavBar;
        
        private UILcBottomCustom mUILcBottomCustom;
        
        private UILcMainCustom mUILcMainCustom;
        
        private UILcMainCustom1 mUILcMainCustom1;
        
        private UILcMainCustom2 mUILcMainCustom2;
        
        private UILcMainCustom3 mUILcMainCustom3;
        
        private UILcMainCustom4 mUILcMainCustom4;
        
        private UILcMainCustom5 mUILcMainCustom5;
        
        private UINbcLeftNavBar1 mUINbcLeftNavBar1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINbcLeftNavBar : DXNavBar
    {
        
        public UINbcLeftNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbcLeft";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UILueAbsenceCodesLookUpEdit
        {
            get
            {
                if ((this.mUILueAbsenceCodesLookUpEdit == null))
                {
                    this.mUILueAbsenceCodesLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUILueAbsenceCodesLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "lueAbsenceCodes";
                    this.mUILueAbsenceCodesLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
                    this.mUILueAbsenceCodesLookUpEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
                    this.mUILueAbsenceCodesLookUpEdit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUILueAbsenceCodesLookUpEdit;
            }
        }
        
        public UIPnlPeriodClient UIPnlPeriodClient
        {
            get
            {
                if ((this.mUIPnlPeriodClient == null))
                {
                    this.mUIPnlPeriodClient = new UIPnlPeriodClient(this);
                }
                return this.mUIPnlPeriodClient;
            }
        }
        
        public UILueEmploymentsLookUpEdit UILueEmploymentsLookUpEdit
        {
            get
            {
                if ((this.mUILueEmploymentsLookUpEdit == null))
                {
                    this.mUILueEmploymentsLookUpEdit = new UILueEmploymentsLookUpEdit(this);
                }
                return this.mUILueEmploymentsLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUILueAbsenceCodesLookUpEdit;
        
        private UIPnlPeriodClient mUIPnlPeriodClient;
        
        private UILueEmploymentsLookUpEdit mUILueEmploymentsLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlPeriodClient : DXTestControl
    {
        
        public UIPnlPeriodClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcPeriodCustom UILcPeriodCustom
        {
            get
            {
                if ((this.mUILcPeriodCustom == null))
                {
                    this.mUILcPeriodCustom = new UILcPeriodCustom(this);
                }
                return this.mUILcPeriodCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcPeriodCustom mUILcPeriodCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcPeriodCustom : DXTestControl
    {
        
        public UILcPeriodCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDate1PopupEdit
        {
            get
            {
                if ((this.mUIPceDate1PopupEdit == null))
                {
                    this.mUIPceDate1PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate[1]";
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDate1PopupEdit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIPceDate1PopupEdit;
            }
        }
        
        public DXPopupEdit UIPceDate0PopupEdit
        {
            get
            {
                if ((this.mUIPceDate0PopupEdit == null))
                {
                    this.mUIPceDate0PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate[0]";
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDate0PopupEdit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIPceDate0PopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDate1PopupEdit;
        
        private DXPopupEdit mUIPceDate0PopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILueEmploymentsLookUpEdit : DXLookUpEdit
    {
        
        public UILueEmploymentsLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lueEmployments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIPopupSearchLookUpEdiWindow UIPopupSearchLookUpEdiWindow
        {
            get
            {
                if ((this.mUIPopupSearchLookUpEdiWindow == null))
                {
                    this.mUIPopupSearchLookUpEdiWindow = new UIPopupSearchLookUpEdiWindow(this);
                }
                return this.mUIPopupSearchLookUpEdiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupSearchLookUpEdiWindow mUIPopupSearchLookUpEdiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPopupSearchLookUpEdiWindow : DXWindow
    {
        
        public UIPopupSearchLookUpEdiWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lueEmploymentsPopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupSearchLookUpEditForm";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UISearchEditLookUpPopuCustom UISearchEditLookUpPopuCustom
        {
            get
            {
                if ((this.mUISearchEditLookUpPopuCustom == null))
                {
                    this.mUISearchEditLookUpPopuCustom = new UISearchEditLookUpPopuCustom(this);
                }
                return this.mUISearchEditLookUpPopuCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISearchEditLookUpPopuCustom mUISearchEditLookUpPopuCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISearchEditLookUpPopuCustom : DXTestControl
    {
        
        public UISearchEditLookUpPopuCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SearchEditLookUpPopup";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchEditLookUpPopup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILCCustom UILCCustom
        {
            get
            {
                if ((this.mUILCCustom == null))
                {
                    this.mUILCCustom = new UILCCustom(this);
                }
                return this.mUILCCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILCCustom mUILCCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILCCustom : DXTestControl
    {
        
        public UILCCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcMainLayoutGroup UILcMainLayoutGroup
        {
            get
            {
                if ((this.mUILcMainLayoutGroup == null))
                {
                    this.mUILcMainLayoutGroup = new UILcMainLayoutGroup(this);
                }
                return this.mUILcMainLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainLayoutGroup mUILcMainLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcMainLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcMainLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcgFindLayoutGroup UILcgFindLayoutGroup
        {
            get
            {
                if ((this.mUILcgFindLayoutGroup == null))
                {
                    this.mUILcgFindLayoutGroup = new UILcgFindLayoutGroup(this);
                }
                return this.mUILcgFindLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcgFindLayoutGroup mUILcgFindLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcgFindLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcgFindLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILciLabelFindLayoutControlItem UILciLabelFindLayoutControlItem
        {
            get
            {
                if ((this.mUILciLabelFindLayoutControlItem == null))
                {
                    this.mUILciLabelFindLayoutControlItem = new UILciLabelFindLayoutControlItem(this);
                }
                return this.mUILciLabelFindLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciLabelFindLayoutControlItem mUILciLabelFindLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILciLabelFindLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciLabelFindLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciLabelFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITeFindEdit
        {
            get
            {
                if ((this.mUITeFindEdit == null))
                {
                    this.mUITeFindEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teFind";
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUITeFindEdit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUITeFindEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITeFindEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcBottomCustom : DXTestControl
    {
        
        public UILcBottomCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcgBottomLayoutGroup UILcgBottomLayoutGroup
        {
            get
            {
                if ((this.mUILcgBottomLayoutGroup == null))
                {
                    this.mUILcgBottomLayoutGroup = new UILcgBottomLayoutGroup(this);
                }
                return this.mUILcgBottomLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcgBottomLayoutGroup mUILcgBottomLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcgBottomLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcgBottomLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILciOkFinishLayoutControlItem UILciOkFinishLayoutControlItem
        {
            get
            {
                if ((this.mUILciOkFinishLayoutControlItem == null))
                {
                    this.mUILciOkFinishLayoutControlItem = new UILciOkFinishLayoutControlItem(this);
                }
                return this.mUILciOkFinishLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciOkFinishLayoutControlItem mUILciOkFinishLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILciOkFinishLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciOkFinishLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciOkFinish";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        //public DXButton UIOKFerdigButton
        //{
        //    get
        //    {
        //        if ((this.mUIOKFerdigButton == null))
        //        {
        //            this.mUIOKFerdigButton = new DXButton(this);
        //            #region Search Criteria
        //            this.mUIOKFerdigButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOkFinish";
        //            this.mUIOKFerdigButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
        //            this.mUIOKFerdigButton.WindowTitles.Add("Fraværsregistrering");
        //            #endregion
        //        }
        //        return this.mUIOKFerdigButton;
        //    }
        //}
        #endregion
        
        #region Fields
        //private DXButton mUIOKFerdigButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcMainCustom : DXTestControl
    {
        
        public UILcMainCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIRootLayoutGroup UIRootLayoutGroup
        {
            get
            {
                if ((this.mUIRootLayoutGroup == null))
                {
                    this.mUIRootLayoutGroup = new UIRootLayoutGroup(this);
                }
                return this.mUIRootLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRootLayoutGroup mUIRootLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRootLayoutGroup : DXBaseLayoutItem
    {
        
        public UIRootLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILciMainInformationLayoutControlItem UILciMainInformationLayoutControlItem
        {
            get
            {
                if ((this.mUILciMainInformationLayoutControlItem == null))
                {
                    this.mUILciMainInformationLayoutControlItem = new UILciMainInformationLayoutControlItem(this);
                }
                return this.mUILciMainInformationLayoutControlItem;
            }
        }
        
        public UILciMainShiftsLayoutControlItem UILciMainShiftsLayoutControlItem
        {
            get
            {
                if ((this.mUILciMainShiftsLayoutControlItem == null))
                {
                    this.mUILciMainShiftsLayoutControlItem = new UILciMainShiftsLayoutControlItem(this);
                }
                return this.mUILciMainShiftsLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciMainInformationLayoutControlItem mUILciMainInformationLayoutControlItem;
        
        private UILciMainShiftsLayoutControlItem mUILciMainShiftsLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILciMainInformationLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciMainInformationLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciMainInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIGrcInformationClient UIGrcInformationClient
        {
            get
            {
                if ((this.mUIGrcInformationClient == null))
                {
                    this.mUIGrcInformationClient = new UIGrcInformationClient(this);
                }
                return this.mUIGrcInformationClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrcInformationClient mUIGrcInformationClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrcInformationClient : DXTestControl
    {
        
        public UIGrcInformationClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grcInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UINbcInformationNavBar UINbcInformationNavBar
        {
            get
            {
                if ((this.mUINbcInformationNavBar == null))
                {
                    this.mUINbcInformationNavBar = new UINbcInformationNavBar(this);
                }
                return this.mUINbcInformationNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UINbcInformationNavBar mUINbcInformationNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINbcInformationNavBar : DXNavBar
    {
        
        public UINbcInformationNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbcInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIFraværsgradNavBarGroup UIFraværsgradNavBarGroup
        {
            get
            {
                if ((this.mUIFraværsgradNavBarGroup == null))
                {
                    this.mUIFraværsgradNavBarGroup = new UIFraværsgradNavBarGroup(this);
                }
                return this.mUIFraværsgradNavBarGroup;
            }
        }
        
        public UIPnlPartialAbsenceClient UIPnlPartialAbsenceClient
        {
            get
            {
                if ((this.mUIPnlPartialAbsenceClient == null))
                {
                    this.mUIPnlPartialAbsenceClient = new UIPnlPartialAbsenceClient(this);
                }
                return this.mUIPnlPartialAbsenceClient;
            }
        }
        
        public UIPnlStatisticClient UIPnlStatisticClient
        {
            get
            {
                if ((this.mUIPnlStatisticClient == null))
                {
                    this.mUIPnlStatisticClient = new UIPnlStatisticClient(this);
                }
                return this.mUIPnlStatisticClient;
            }
        }
        #endregion
        
        #region Fields
        private UIFraværsgradNavBarGroup mUIFraværsgradNavBarGroup;
        
        private UIPnlPartialAbsenceClient mUIPnlPartialAbsenceClient;
        
        private UIPnlStatisticClient mUIPnlStatisticClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFraværsgradNavBarGroup : DXNavBarGroup
    {
        
        public UIFraværsgradNavBarGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Fraværsgrad";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXNavBarGroupButton UIFraværsgradNavBarGroupButton
        {
            get
            {
                if ((this.mUIFraværsgradNavBarGroupButton == null))
                {
                    this.mUIFraværsgradNavBarGroupButton = new DXNavBarGroupButton(this);
                    #region Search Criteria
                    this.mUIFraværsgradNavBarGroupButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Fraværsgrad";
                    this.mUIFraværsgradNavBarGroupButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupButton";
                    this.mUIFraværsgradNavBarGroupButton.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIFraværsgradNavBarGroupButton;
            }
        }
        #endregion
        
        #region Fields
        private DXNavBarGroupButton mUIFraværsgradNavBarGroupButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlPartialAbsenceClient : DXTestControl
    {
        
        public UIPnlPartialAbsenceClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlPartialAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcPartialAbsenceCustom UILcPartialAbsenceCustom
        {
            get
            {
                if ((this.mUILcPartialAbsenceCustom == null))
                {
                    this.mUILcPartialAbsenceCustom = new UILcPartialAbsenceCustom(this);
                }
                return this.mUILcPartialAbsenceCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcPartialAbsenceCustom mUILcPartialAbsenceCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcPartialAbsenceCustom : DXTestControl
    {
        
        public UILcPartialAbsenceCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcPartialAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcgPartialAbsenceLayoutGroup UILcgPartialAbsenceLayoutGroup
        {
            get
            {
                if ((this.mUILcgPartialAbsenceLayoutGroup == null))
                {
                    this.mUILcgPartialAbsenceLayoutGroup = new UILcgPartialAbsenceLayoutGroup(this);
                }
                return this.mUILcgPartialAbsenceLayoutGroup;
            }
        }
        
        public DXTextEdit UIENumber1Edit
        {
            get
            {
                if ((this.mUIENumber1Edit == null))
                {
                    this.mUIENumber1Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENumber1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eNumber[1]";
                    this.mUIENumber1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENumber1Edit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIENumber1Edit;
            }
        }
        #endregion
        
        #region Fields
        private UILcgPartialAbsenceLayoutGroup mUILcgPartialAbsenceLayoutGroup;
        
        private DXTextEdit mUIENumber1Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcgPartialAbsenceLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcgPartialAbsenceLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgPartialAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem21LayoutControlItem UILayoutControlItem21LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem21LayoutControlItem == null))
                {
                    this.mUILayoutControlItem21LayoutControlItem = new UILayoutControlItem21LayoutControlItem(this);
                }
                return this.mUILayoutControlItem21LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem21LayoutControlItem mUILayoutControlItem21LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlItem21LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem21LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem21";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXRadioGroup UIRgPartialAbsenceTypeRadioGroup
        {
            get
            {
                if ((this.mUIRgPartialAbsenceTypeRadioGroup == null))
                {
                    this.mUIRgPartialAbsenceTypeRadioGroup = new DXRadioGroup(this);
                    #region Search Criteria
                    this.mUIRgPartialAbsenceTypeRadioGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "rgPartialAbsenceType";
                    this.mUIRgPartialAbsenceTypeRadioGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSRadioGroup";
                    this.mUIRgPartialAbsenceTypeRadioGroup.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIRgPartialAbsenceTypeRadioGroup;
            }
        }
        #endregion
        
        #region Fields
        private DXRadioGroup mUIRgPartialAbsenceTypeRadioGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlStatisticClient : DXTestControl
    {
        
        public UIPnlStatisticClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlStatistic";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcStatisticCustom UILcStatisticCustom
        {
            get
            {
                if ((this.mUILcStatisticCustom == null))
                {
                    this.mUILcStatisticCustom = new UILcStatisticCustom(this);
                }
                return this.mUILcStatisticCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcStatisticCustom mUILcStatisticCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcStatisticCustom : DXTestControl
    {
        
        public UILcStatisticCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcStatistic";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIENumber0Edit
        {
            get
            {
                if ((this.mUIENumber0Edit == null))
                {
                    this.mUIENumber0Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eNumber[0]";
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIENumber0Edit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIENumber0Edit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIENumber0Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILciMainShiftsLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciMainShiftsLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciMainShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIGrcShiftsClient UIGrcShiftsClient
        {
            get
            {
                if ((this.mUIGrcShiftsClient == null))
                {
                    this.mUIGrcShiftsClient = new UIGrcShiftsClient(this);
                }
                return this.mUIGrcShiftsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrcShiftsClient mUIGrcShiftsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrcShiftsClient : DXTestControl
    {
        
        public UIGrcShiftsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grcShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UITcShiftsTabList UITcShiftsTabList
        {
            get
            {
                if ((this.mUITcShiftsTabList == null))
                {
                    this.mUITcShiftsTabList = new UITcShiftsTabList(this);
                }
                return this.mUITcShiftsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcShiftsTabList mUITcShiftsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcShiftsTabList : DXTestControl
    {
        
        public UITcShiftsTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIXtpShiftsGridClient UIXtpShiftsGridClient
        {
            get
            {
                if ((this.mUIXtpShiftsGridClient == null))
                {
                    this.mUIXtpShiftsGridClient = new UIXtpShiftsGridClient(this);
                }
                return this.mUIXtpShiftsGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UIXtpShiftsGridClient mUIXtpShiftsGridClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIXtpShiftsGridClient : DXTestControl
    {
        
        public UIXtpShiftsGridClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtpShiftsGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIGcShiftsTable UIGcShiftsTable
        {
            get
            {
                if ((this.mUIGcShiftsTable == null))
                {
                    this.mUIGcShiftsTable = new UIGcShiftsTable(this);
                }
                return this.mUIGcShiftsTable;
            }
        }
        
        public UILcAbsenceShiftsCustom UILcAbsenceShiftsCustom
        {
            get
            {
                if ((this.mUILcAbsenceShiftsCustom == null))
                {
                    this.mUILcAbsenceShiftsCustom = new UILcAbsenceShiftsCustom(this);
                }
                return this.mUILcAbsenceShiftsCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGcShiftsTable mUIGcShiftsTable;
        
        private UILcAbsenceShiftsCustom mUILcAbsenceShiftsCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcShiftsTable : DXGrid
    {
        
        public UIGcShiftsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        //#region Properties
        //public DXCell UIValgtCell
        //{
        //    get
        //    {
        //        if ((this.mUIValgtCell == null))
        //        {
        //            this.mUIValgtCell = new DXCell(this);
        //            #region Search Criteria
        //            this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftsGridControlCell[View]gvShifts[Row]0[Column]tlcCustomized";
        //            this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
        //            this.mUIValgtCell.WindowTitles.Add("Fraværsregistrering");
        //            #endregion
        //        }
        //        return this.mUIValgtCell;
        //    }
        //}
        
        //public DXCell UIValgtCell1
        //{
        //    get
        //    {
        //        if ((this.mUIValgtCell1 == null))
        //        {
        //            this.mUIValgtCell1 = new DXCell(this);
        //            #region Search Criteria
        //            this.mUIValgtCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftsGridControlCell[View]gvShifts[Row]1[Column]tlcCustomized";
        //            this.mUIValgtCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
        //            this.mUIValgtCell1.WindowTitles.Add("Fraværsregistrering");
        //            #endregion
        //        }
        //        return this.mUIValgtCell1;
        //    }
        //}
        //#endregion
        
        //#region Fields
        //private DXCell mUIValgtCell;
        
        //private DXCell mUIValgtCell1;
        //#endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcAbsenceShiftsCustom : DXTestControl
    {
        
        public UILcAbsenceShiftsCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcAbsenceShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcgAbsenceShiftsLayoutGroup UILcgAbsenceShiftsLayoutGroup
        {
            get
            {
                if ((this.mUILcgAbsenceShiftsLayoutGroup == null))
                {
                    this.mUILcgAbsenceShiftsLayoutGroup = new UILcgAbsenceShiftsLayoutGroup(this);
                }
                return this.mUILcgAbsenceShiftsLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcgAbsenceShiftsLayoutGroup mUILcgAbsenceShiftsLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcgAbsenceShiftsLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcgAbsenceShiftsLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgAbsenceShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILciChangeShiftsLayoutControlItem UILciChangeShiftsLayoutControlItem
        {
            get
            {
                if ((this.mUILciChangeShiftsLayoutControlItem == null))
                {
                    this.mUILciChangeShiftsLayoutControlItem = new UILciChangeShiftsLayoutControlItem(this);
                }
                return this.mUILciChangeShiftsLayoutControlItem;
            }
        }
        
        public UILciNewShiftLayoutControlItem UILciNewShiftLayoutControlItem
        {
            get
            {
                if ((this.mUILciNewShiftLayoutControlItem == null))
                {
                    this.mUILciNewShiftLayoutControlItem = new UILciNewShiftLayoutControlItem(this);
                }
                return this.mUILciNewShiftLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciChangeShiftsLayoutControlItem mUILciChangeShiftsLayoutControlItem;
        
        private UILciNewShiftLayoutControlItem mUILciNewShiftLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILciChangeShiftsLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciChangeShiftsLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciChangeShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        //#region Properties
        //public DXButton UIEndrevakterButton
        //{
        //    get
        //    {
        //        if ((this.mUIEndrevakterButton == null))
        //        {
        //            this.mUIEndrevakterButton = new DXButton(this);
        //            #region Search Criteria
        //            this.mUIEndrevakterButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnChangeShifts";
        //            this.mUIEndrevakterButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
        //            this.mUIEndrevakterButton.WindowTitles.Add("Fraværsregistrering");
        //            #endregion
        //        }
        //        return this.mUIEndrevakterButton;
        //    }
        //}
        //#endregion
        
        //#region Fields
        //private DXButton mUIEndrevakterButton;
        //#endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILciNewShiftLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciNewShiftLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciNewShift";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        //#region Properties
        //public DXButton UINyvaktButton
        //{
        //    get
        //    {
        //        if ((this.mUINyvaktButton == null))
        //        {
        //            this.mUINyvaktButton = new DXButton(this);
        //            #region Search Criteria
        //            this.mUINyvaktButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnNewShift";
        //            this.mUINyvaktButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
        //            this.mUINyvaktButton.WindowTitles.Add("Fraværsregistrering");
        //            #endregion
        //        }
        //        return this.mUINyvaktButton;
        //    }
        //}
        //#endregion
        
        //#region Fields
        //private DXButton mUINyvaktButton;
        //#endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcMainCustom1 : DXTestControl
    {
        
        public UILcMainCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIRootLayoutGroup1 UIRootLayoutGroup
        {
            get
            {
                if ((this.mUIRootLayoutGroup == null))
                {
                    this.mUIRootLayoutGroup = new UIRootLayoutGroup1(this);
                }
                return this.mUIRootLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRootLayoutGroup1 mUIRootLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRootLayoutGroup1 : DXBaseLayoutItem
    {
        
        public UIRootLayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILciMainInformationLayoutControlItem1 UILciMainInformationLayoutControlItem
        {
            get
            {
                if ((this.mUILciMainInformationLayoutControlItem == null))
                {
                    this.mUILciMainInformationLayoutControlItem = new UILciMainInformationLayoutControlItem1(this);
                }
                return this.mUILciMainInformationLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciMainInformationLayoutControlItem1 mUILciMainInformationLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILciMainInformationLayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILciMainInformationLayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciMainInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIGrcInformationClient1 UIGrcInformationClient
        {
            get
            {
                if ((this.mUIGrcInformationClient == null))
                {
                    this.mUIGrcInformationClient = new UIGrcInformationClient1(this);
                }
                return this.mUIGrcInformationClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrcInformationClient1 mUIGrcInformationClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrcInformationClient1 : DXTestControl
    {
        
        public UIGrcInformationClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grcInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UINbcInformationNavBar1 UINbcInformationNavBar
        {
            get
            {
                if ((this.mUINbcInformationNavBar == null))
                {
                    this.mUINbcInformationNavBar = new UINbcInformationNavBar1(this);
                }
                return this.mUINbcInformationNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UINbcInformationNavBar1 mUINbcInformationNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINbcInformationNavBar1 : DXNavBar
    {
        
        public UINbcInformationNavBar1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbcInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UINbgcHourAbsenceScrollableControl UINbgcHourAbsenceScrollableControl
        {
            get
            {
                if ((this.mUINbgcHourAbsenceScrollableControl == null))
                {
                    this.mUINbgcHourAbsenceScrollableControl = new UINbgcHourAbsenceScrollableControl(this);
                }
                return this.mUINbgcHourAbsenceScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINbgcHourAbsenceScrollableControl mUINbgcHourAbsenceScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINbgcHourAbsenceScrollableControl : DXScrollableControl
    {
        
        public UINbgcHourAbsenceScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgcHourAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIPnlHourAbsenceClient UIPnlHourAbsenceClient
        {
            get
            {
                if ((this.mUIPnlHourAbsenceClient == null))
                {
                    this.mUIPnlHourAbsenceClient = new UIPnlHourAbsenceClient(this);
                }
                return this.mUIPnlHourAbsenceClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlHourAbsenceClient mUIPnlHourAbsenceClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlHourAbsenceClient : DXTestControl
    {
        
        public UIPnlHourAbsenceClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlHourAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcHourAbsenceCustom UILcHourAbsenceCustom
        {
            get
            {
                if ((this.mUILcHourAbsenceCustom == null))
                {
                    this.mUILcHourAbsenceCustom = new UILcHourAbsenceCustom(this);
                }
                return this.mUILcHourAbsenceCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcHourAbsenceCustom mUILcHourAbsenceCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcHourAbsenceCustom : DXTestControl
    {
        
        public UILcHourAbsenceCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcHourAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroup3LayoutGroup UILayoutControlGroup3LayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroup3LayoutGroup == null))
                {
                    this.mUILayoutControlGroup3LayoutGroup = new UILayoutControlGroup3LayoutGroup(this);
                }
                return this.mUILayoutControlGroup3LayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroup3LayoutGroup mUILayoutControlGroup3LayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlGroup3LayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroup3LayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem2LayoutControlItem UILayoutControlItem2LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem2LayoutControlItem == null))
                {
                    this.mUILayoutControlItem2LayoutControlItem = new UILayoutControlItem2LayoutControlItem(this);
                }
                return this.mUILayoutControlItem2LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem2LayoutControlItem mUILayoutControlItem2LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlItem2LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem2LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UIChbPabsHourlyAbsenceCheckBox
        {
            get
            {
                if ((this.mUIChbPabsHourlyAbsenceCheckBox == null))
                {
                    this.mUIChbPabsHourlyAbsenceCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChbPabsHourlyAbsenceCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chbPabsHourlyAbsence";
                    this.mUIChbPabsHourlyAbsenceCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChbPabsHourlyAbsenceCheckBox.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIChbPabsHourlyAbsenceCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUIChbPabsHourlyAbsenceCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcMainCustom2 : DXTestControl
    {
        
        public UILcMainCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIRootLayoutGroup2 UIRootLayoutGroup
        {
            get
            {
                if ((this.mUIRootLayoutGroup == null))
                {
                    this.mUIRootLayoutGroup = new UIRootLayoutGroup2(this);
                }
                return this.mUIRootLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRootLayoutGroup2 mUIRootLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRootLayoutGroup2 : DXBaseLayoutItem
    {
        
        public UIRootLayoutGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILciMainInformationLayoutControlItem2 UILciMainInformationLayoutControlItem
        {
            get
            {
                if ((this.mUILciMainInformationLayoutControlItem == null))
                {
                    this.mUILciMainInformationLayoutControlItem = new UILciMainInformationLayoutControlItem2(this);
                }
                return this.mUILciMainInformationLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciMainInformationLayoutControlItem2 mUILciMainInformationLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILciMainInformationLayoutControlItem2 : DXBaseLayoutItem
    {
        
        public UILciMainInformationLayoutControlItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciMainInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIGrcInformationClient2 UIGrcInformationClient
        {
            get
            {
                if ((this.mUIGrcInformationClient == null))
                {
                    this.mUIGrcInformationClient = new UIGrcInformationClient2(this);
                }
                return this.mUIGrcInformationClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrcInformationClient2 mUIGrcInformationClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrcInformationClient2 : DXTestControl
    {
        
        public UIGrcInformationClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grcInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UINbcInformationNavBar2 UINbcInformationNavBar
        {
            get
            {
                if ((this.mUINbcInformationNavBar == null))
                {
                    this.mUINbcInformationNavBar = new UINbcInformationNavBar2(this);
                }
                return this.mUINbcInformationNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UINbcInformationNavBar2 mUINbcInformationNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINbcInformationNavBar2 : DXNavBar
    {
        
        public UINbcInformationNavBar2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbcInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UINbgcHourAbsenceScrollableControl1 UINbgcHourAbsenceScrollableControl
        {
            get
            {
                if ((this.mUINbgcHourAbsenceScrollableControl == null))
                {
                    this.mUINbgcHourAbsenceScrollableControl = new UINbgcHourAbsenceScrollableControl1(this);
                }
                return this.mUINbgcHourAbsenceScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINbgcHourAbsenceScrollableControl1 mUINbgcHourAbsenceScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINbgcHourAbsenceScrollableControl1 : DXScrollableControl
    {
        
        public UINbgcHourAbsenceScrollableControl1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgcHourAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIPnlHourAbsenceClient1 UIPnlHourAbsenceClient
        {
            get
            {
                if ((this.mUIPnlHourAbsenceClient == null))
                {
                    this.mUIPnlHourAbsenceClient = new UIPnlHourAbsenceClient1(this);
                }
                return this.mUIPnlHourAbsenceClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlHourAbsenceClient1 mUIPnlHourAbsenceClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlHourAbsenceClient1 : DXTestControl
    {
        
        public UIPnlHourAbsenceClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlHourAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcHourAbsenceCustom1 UILcHourAbsenceCustom
        {
            get
            {
                if ((this.mUILcHourAbsenceCustom == null))
                {
                    this.mUILcHourAbsenceCustom = new UILcHourAbsenceCustom1(this);
                }
                return this.mUILcHourAbsenceCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcHourAbsenceCustom1 mUILcHourAbsenceCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcHourAbsenceCustom1 : DXTestControl
    {
        
        public UILcHourAbsenceCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcHourAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroup3LayoutGroup1 UILayoutControlGroup3LayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroup3LayoutGroup == null))
                {
                    this.mUILayoutControlGroup3LayoutGroup = new UILayoutControlGroup3LayoutGroup1(this);
                }
                return this.mUILayoutControlGroup3LayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroup3LayoutGroup1 mUILayoutControlGroup3LayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlGroup3LayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroup3LayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem2LayoutControlItem1 UILayoutControlItem2LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem2LayoutControlItem == null))
                {
                    this.mUILayoutControlItem2LayoutControlItem = new UILayoutControlItem2LayoutControlItem1(this);
                }
                return this.mUILayoutControlItem2LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem2LayoutControlItem1 mUILayoutControlItem2LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlItem2LayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILayoutControlItem2LayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UIChbPabsHourlyAbsenceCheckBox
        {
            get
            {
                if ((this.mUIChbPabsHourlyAbsenceCheckBox == null))
                {
                    this.mUIChbPabsHourlyAbsenceCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChbPabsHourlyAbsenceCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chbPabsHourlyAbsence";
                    this.mUIChbPabsHourlyAbsenceCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChbPabsHourlyAbsenceCheckBox.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIChbPabsHourlyAbsenceCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUIChbPabsHourlyAbsenceCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcMainCustom3 : DXTestControl
    {
        
        public UILcMainCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIRootLayoutGroup3 UIRootLayoutGroup
        {
            get
            {
                if ((this.mUIRootLayoutGroup == null))
                {
                    this.mUIRootLayoutGroup = new UIRootLayoutGroup3(this);
                }
                return this.mUIRootLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRootLayoutGroup3 mUIRootLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRootLayoutGroup3 : DXBaseLayoutItem
    {
        
        public UIRootLayoutGroup3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILciMainInformationLayoutControlItem3 UILciMainInformationLayoutControlItem
        {
            get
            {
                if ((this.mUILciMainInformationLayoutControlItem == null))
                {
                    this.mUILciMainInformationLayoutControlItem = new UILciMainInformationLayoutControlItem3(this);
                }
                return this.mUILciMainInformationLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciMainInformationLayoutControlItem3 mUILciMainInformationLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILciMainInformationLayoutControlItem3 : DXBaseLayoutItem
    {
        
        public UILciMainInformationLayoutControlItem3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciMainInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIGrcInformationClient3 UIGrcInformationClient
        {
            get
            {
                if ((this.mUIGrcInformationClient == null))
                {
                    this.mUIGrcInformationClient = new UIGrcInformationClient3(this);
                }
                return this.mUIGrcInformationClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrcInformationClient3 mUIGrcInformationClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrcInformationClient3 : DXTestControl
    {
        
        public UIGrcInformationClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grcInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UINbcInformationNavBar3 UINbcInformationNavBar
        {
            get
            {
                if ((this.mUINbcInformationNavBar == null))
                {
                    this.mUINbcInformationNavBar = new UINbcInformationNavBar3(this);
                }
                return this.mUINbcInformationNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UINbcInformationNavBar3 mUINbcInformationNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINbcInformationNavBar3 : DXNavBar
    {
        
        public UINbcInformationNavBar3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbcInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UINbgcHourAbsenceScrollableControl2 UINbgcHourAbsenceScrollableControl
        {
            get
            {
                if ((this.mUINbgcHourAbsenceScrollableControl == null))
                {
                    this.mUINbgcHourAbsenceScrollableControl = new UINbgcHourAbsenceScrollableControl2(this);
                }
                return this.mUINbgcHourAbsenceScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINbgcHourAbsenceScrollableControl2 mUINbgcHourAbsenceScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINbgcHourAbsenceScrollableControl2 : DXScrollableControl
    {
        
        public UINbgcHourAbsenceScrollableControl2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgcHourAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIPnlHourAbsenceClient2 UIPnlHourAbsenceClient
        {
            get
            {
                if ((this.mUIPnlHourAbsenceClient == null))
                {
                    this.mUIPnlHourAbsenceClient = new UIPnlHourAbsenceClient2(this);
                }
                return this.mUIPnlHourAbsenceClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlHourAbsenceClient2 mUIPnlHourAbsenceClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlHourAbsenceClient2 : DXTestControl
    {
        
        public UIPnlHourAbsenceClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlHourAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcHourAbsenceCustom2 UILcHourAbsenceCustom
        {
            get
            {
                if ((this.mUILcHourAbsenceCustom == null))
                {
                    this.mUILcHourAbsenceCustom = new UILcHourAbsenceCustom2(this);
                }
                return this.mUILcHourAbsenceCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcHourAbsenceCustom2 mUILcHourAbsenceCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcHourAbsenceCustom2 : DXTestControl
    {
        
        public UILcHourAbsenceCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcHourAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIETime0Edit
        {
            get
            {
                if ((this.mUIETime0Edit == null))
                {
                    this.mUIETime0Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime0Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[0]";
                    this.mUIETime0Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime0Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETime0Edit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIETime0Edit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIETime0Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcMainCustom4 : DXTestControl
    {
        
        public UILcMainCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIRootLayoutGroup4 UIRootLayoutGroup
        {
            get
            {
                if ((this.mUIRootLayoutGroup == null))
                {
                    this.mUIRootLayoutGroup = new UIRootLayoutGroup4(this);
                }
                return this.mUIRootLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRootLayoutGroup4 mUIRootLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRootLayoutGroup4 : DXBaseLayoutItem
    {
        
        public UIRootLayoutGroup4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILciMainInformationLayoutControlItem4 UILciMainInformationLayoutControlItem
        {
            get
            {
                if ((this.mUILciMainInformationLayoutControlItem == null))
                {
                    this.mUILciMainInformationLayoutControlItem = new UILciMainInformationLayoutControlItem4(this);
                }
                return this.mUILciMainInformationLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciMainInformationLayoutControlItem4 mUILciMainInformationLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILciMainInformationLayoutControlItem4 : DXBaseLayoutItem
    {
        
        public UILciMainInformationLayoutControlItem4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciMainInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIGrcInformationClient4 UIGrcInformationClient
        {
            get
            {
                if ((this.mUIGrcInformationClient == null))
                {
                    this.mUIGrcInformationClient = new UIGrcInformationClient4(this);
                }
                return this.mUIGrcInformationClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrcInformationClient4 mUIGrcInformationClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrcInformationClient4 : DXTestControl
    {
        
        public UIGrcInformationClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grcInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UINbcInformationNavBar4 UINbcInformationNavBar
        {
            get
            {
                if ((this.mUINbcInformationNavBar == null))
                {
                    this.mUINbcInformationNavBar = new UINbcInformationNavBar4(this);
                }
                return this.mUINbcInformationNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UINbcInformationNavBar4 mUINbcInformationNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINbcInformationNavBar4 : DXNavBar
    {
        
        public UINbcInformationNavBar4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbcInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UINbgcHourAbsenceScrollableControl3 UINbgcHourAbsenceScrollableControl
        {
            get
            {
                if ((this.mUINbgcHourAbsenceScrollableControl == null))
                {
                    this.mUINbgcHourAbsenceScrollableControl = new UINbgcHourAbsenceScrollableControl3(this);
                }
                return this.mUINbgcHourAbsenceScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINbgcHourAbsenceScrollableControl3 mUINbgcHourAbsenceScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINbgcHourAbsenceScrollableControl3 : DXScrollableControl
    {
        
        public UINbgcHourAbsenceScrollableControl3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgcHourAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIPnlHourAbsenceClient3 UIPnlHourAbsenceClient
        {
            get
            {
                if ((this.mUIPnlHourAbsenceClient == null))
                {
                    this.mUIPnlHourAbsenceClient = new UIPnlHourAbsenceClient3(this);
                }
                return this.mUIPnlHourAbsenceClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlHourAbsenceClient3 mUIPnlHourAbsenceClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlHourAbsenceClient3 : DXTestControl
    {
        
        public UIPnlHourAbsenceClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlHourAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcHourAbsenceCustom3 UILcHourAbsenceCustom
        {
            get
            {
                if ((this.mUILcHourAbsenceCustom == null))
                {
                    this.mUILcHourAbsenceCustom = new UILcHourAbsenceCustom3(this);
                }
                return this.mUILcHourAbsenceCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcHourAbsenceCustom3 mUILcHourAbsenceCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcHourAbsenceCustom3 : DXTestControl
    {
        
        public UILcHourAbsenceCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcHourAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIETime0Edit
        {
            get
            {
                if ((this.mUIETime0Edit == null))
                {
                    this.mUIETime0Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime0Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[0]";
                    this.mUIETime0Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime0Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETime0Edit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIETime0Edit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIETime0Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcMainCustom5 : DXTestControl
    {
        
        public UILcMainCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIRootLayoutGroup5 UIRootLayoutGroup
        {
            get
            {
                if ((this.mUIRootLayoutGroup == null))
                {
                    this.mUIRootLayoutGroup = new UIRootLayoutGroup5(this);
                }
                return this.mUIRootLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRootLayoutGroup5 mUIRootLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRootLayoutGroup5 : DXBaseLayoutItem
    {
        
        public UIRootLayoutGroup5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILciMainInformationLayoutControlItem5 UILciMainInformationLayoutControlItem
        {
            get
            {
                if ((this.mUILciMainInformationLayoutControlItem == null))
                {
                    this.mUILciMainInformationLayoutControlItem = new UILciMainInformationLayoutControlItem5(this);
                }
                return this.mUILciMainInformationLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciMainInformationLayoutControlItem5 mUILciMainInformationLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILciMainInformationLayoutControlItem5 : DXBaseLayoutItem
    {
        
        public UILciMainInformationLayoutControlItem5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciMainInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIGrcInformationClient5 UIGrcInformationClient
        {
            get
            {
                if ((this.mUIGrcInformationClient == null))
                {
                    this.mUIGrcInformationClient = new UIGrcInformationClient5(this);
                }
                return this.mUIGrcInformationClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrcInformationClient5 mUIGrcInformationClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrcInformationClient5 : DXTestControl
    {
        
        public UIGrcInformationClient5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grcInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UINbcInformationNavBar5 UINbcInformationNavBar
        {
            get
            {
                if ((this.mUINbcInformationNavBar == null))
                {
                    this.mUINbcInformationNavBar = new UINbcInformationNavBar5(this);
                }
                return this.mUINbcInformationNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UINbcInformationNavBar5 mUINbcInformationNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINbcInformationNavBar5 : DXNavBar
    {
        
        public UINbcInformationNavBar5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbcInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UINbgcHourAbsenceScrollableControl4 UINbgcHourAbsenceScrollableControl
        {
            get
            {
                if ((this.mUINbgcHourAbsenceScrollableControl == null))
                {
                    this.mUINbgcHourAbsenceScrollableControl = new UINbgcHourAbsenceScrollableControl4(this);
                }
                return this.mUINbgcHourAbsenceScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINbgcHourAbsenceScrollableControl4 mUINbgcHourAbsenceScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINbgcHourAbsenceScrollableControl4 : DXScrollableControl
    {
        
        public UINbgcHourAbsenceScrollableControl4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgcHourAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIPnlHourAbsenceClient4 UIPnlHourAbsenceClient
        {
            get
            {
                if ((this.mUIPnlHourAbsenceClient == null))
                {
                    this.mUIPnlHourAbsenceClient = new UIPnlHourAbsenceClient4(this);
                }
                return this.mUIPnlHourAbsenceClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlHourAbsenceClient4 mUIPnlHourAbsenceClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlHourAbsenceClient4 : DXTestControl
    {
        
        public UIPnlHourAbsenceClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlHourAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcHourAbsenceCustom4 UILcHourAbsenceCustom
        {
            get
            {
                if ((this.mUILcHourAbsenceCustom == null))
                {
                    this.mUILcHourAbsenceCustom = new UILcHourAbsenceCustom4(this);
                }
                return this.mUILcHourAbsenceCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcHourAbsenceCustom4 mUILcHourAbsenceCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcHourAbsenceCustom4 : DXTestControl
    {
        
        public UILcHourAbsenceCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcHourAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIETime1Edit
        {
            get
            {
                if ((this.mUIETime1Edit == null))
                {
                    this.mUIETime1Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[1]";
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETime1Edit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIETime1Edit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIETime1Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINbcLeftNavBar1 : DXNavBar
    {
        
        public UINbcLeftNavBar1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbcLeft";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UINgbcPeriodScrollableControl UINgbcPeriodScrollableControl
        {
            get
            {
                if ((this.mUINgbcPeriodScrollableControl == null))
                {
                    this.mUINgbcPeriodScrollableControl = new UINgbcPeriodScrollableControl(this);
                }
                return this.mUINgbcPeriodScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINgbcPeriodScrollableControl mUINgbcPeriodScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINgbcPeriodScrollableControl : DXScrollableControl
    {
        
        public UINgbcPeriodScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ngbcPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIPnlPeriodClient1 UIPnlPeriodClient
        {
            get
            {
                if ((this.mUIPnlPeriodClient == null))
                {
                    this.mUIPnlPeriodClient = new UIPnlPeriodClient1(this);
                }
                return this.mUIPnlPeriodClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlPeriodClient1 mUIPnlPeriodClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlPeriodClient1 : DXTestControl
    {
        
        public UIPnlPeriodClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcPeriodCustom1 UILcPeriodCustom
        {
            get
            {
                if ((this.mUILcPeriodCustom == null))
                {
                    this.mUILcPeriodCustom = new UILcPeriodCustom1(this);
                }
                return this.mUILcPeriodCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcPeriodCustom1 mUILcPeriodCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcPeriodCustom1 : DXTestControl
    {
        
        public UILcPeriodCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcgPeriodLayoutGroup UILcgPeriodLayoutGroup
        {
            get
            {
                if ((this.mUILcgPeriodLayoutGroup == null))
                {
                    this.mUILcgPeriodLayoutGroup = new UILcgPeriodLayoutGroup(this);
                }
                return this.mUILcgPeriodLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcgPeriodLayoutGroup mUILcgPeriodLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcgPeriodLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcgPeriodLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILciPeriodFromDateValLayoutControlItem UILciPeriodFromDateValLayoutControlItem
        {
            get
            {
                if ((this.mUILciPeriodFromDateValLayoutControlItem == null))
                {
                    this.mUILciPeriodFromDateValLayoutControlItem = new UILciPeriodFromDateValLayoutControlItem(this);
                }
                return this.mUILciPeriodFromDateValLayoutControlItem;
            }
        }
        
        public UILciPeriodToDateValueLayoutControlItem UILciPeriodToDateValueLayoutControlItem
        {
            get
            {
                if ((this.mUILciPeriodToDateValueLayoutControlItem == null))
                {
                    this.mUILciPeriodToDateValueLayoutControlItem = new UILciPeriodToDateValueLayoutControlItem(this);
                }
                return this.mUILciPeriodToDateValueLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciPeriodFromDateValLayoutControlItem mUILciPeriodFromDateValLayoutControlItem;
        
        private UILciPeriodToDateValueLayoutControlItem mUILciPeriodToDateValueLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILciPeriodFromDateValLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciPeriodFromDateValLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciPeriodFromDateValue";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UISdePeriodFromDateCustom UISdePeriodFromDateCustom
        {
            get
            {
                if ((this.mUISdePeriodFromDateCustom == null))
                {
                    this.mUISdePeriodFromDateCustom = new UISdePeriodFromDateCustom(this);
                }
                return this.mUISdePeriodFromDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISdePeriodFromDateCustom mUISdePeriodFromDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISdePeriodFromDateCustom : DXTestControl
    {
        
        public UISdePeriodFromDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sdePeriodFromDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILciPeriodToDateValueLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciPeriodToDateValueLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciPeriodToDateValue";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UISdePeriodToDateCustom UISdePeriodToDateCustom
        {
            get
            {
                if ((this.mUISdePeriodToDateCustom == null))
                {
                    this.mUISdePeriodToDateCustom = new UISdePeriodToDateCustom(this);
                }
                return this.mUISdePeriodToDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISdePeriodToDateCustom mUISdePeriodToDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISdePeriodToDateCustom : DXTestControl
    {
        
        public UISdePeriodToDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sdePeriodToDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63031732ASCLAvWindow10 : WinWindow
    {
        
        public UIGatver63031732ASCLAvWindow10()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow26 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow26(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow26 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow26 : WinWindow
    {
        
        public UIItemWindow26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxGridSite";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsatteClient
        {
            get
            {
                if ((this.mUIAnsatteClient == null))
                {
                    this.mUIAnsatteClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsatteClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAnsatteClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsatteClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63031732ASCLAvWindow11 : WinWindow
    {
        
        public UIGatver63031732ASCLAvWindow11()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow27 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow27(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public DXButton UINYButton
        {
            get
            {
                if ((this.mUINYButton == null))
                {
                    this.mUINYButton = new DXButton(this);
                    #region Search Criteria
                    this.mUINYButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnNew";
                    this.mUINYButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUINYButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUINYButton;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow27 mUIItemWindow;
        
        private DXButton mUINYButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow27 : WinWindow
    {
        
        public UIItemWindow27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsattClient
        {
            get
            {
                if ((this.mUIAnsattClient == null))
                {
                    this.mUIAnsattClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsattClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAnsattClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsattClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHelgeavtaleWindow : DXWindow
    {
        
        public UIHelgeavtaleWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Helgeavtale";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Helgeavtale");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl1Client1 UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client1(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Helgeavtale");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl1Client1 mUIGsPanelControl1Client;
        
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsPanelControl1Client1 : DXTestControl
    {
        
        public UIGsPanelControl1Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Helgeavtale");
            #endregion
        }
        
        #region Properties
        public UIWeFromWeekCustom UIWeFromWeekCustom
        {
            get
            {
                if ((this.mUIWeFromWeekCustom == null))
                {
                    this.mUIWeFromWeekCustom = new UIWeFromWeekCustom(this);
                }
                return this.mUIWeFromWeekCustom;
            }
        }
        
        public UIWeToWeekCustom UIWeToWeekCustom
        {
            get
            {
                if ((this.mUIWeToWeekCustom == null))
                {
                    this.mUIWeToWeekCustom = new UIWeToWeekCustom(this);
                }
                return this.mUIWeToWeekCustom;
            }
        }
        
        public DXTextEdit UIENumberEdit
        {
            get
            {
                if ((this.mUIENumberEdit == null))
                {
                    this.mUIENumberEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENumberEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "eNumber";
                    this.mUIENumberEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENumberEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIENumberEdit.WindowTitles.Add("Helgeavtale");
                    #endregion
                }
                return this.mUIENumberEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIWeFromWeekCustom mUIWeFromWeekCustom;
        
        private UIWeToWeekCustom mUIWeToWeekCustom;
        
        private DXTextEdit mUIENumberEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIWeFromWeekCustom : DXTestControl
    {
        
        public UIWeFromWeekCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "weFromWeek";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSWeekEdit";
            this.WindowTitles.Add("Helgeavtale");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDatePopupEdit
        {
            get
            {
                if ((this.mUIPceDatePopupEdit == null))
                {
                    this.mUIPceDatePopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDatePopupEdit.WindowTitles.Add("Helgeavtale");
                    #endregion
                }
                return this.mUIPceDatePopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDatePopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIWeToWeekCustom : DXTestControl
    {
        
        public UIWeToWeekCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "weToWeek";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSWeekEdit";
            this.WindowTitles.Add("Helgeavtale");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDatePopupEdit
        {
            get
            {
                if ((this.mUIPceDatePopupEdit == null))
                {
                    this.mUIPceDatePopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDatePopupEdit.WindowTitles.Add("Helgeavtale");
                    #endregion
                }
                return this.mUIPceDatePopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDatePopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63031732ASCLAvWindow12 : WinWindow
    {
        
        public UIGatver63031732ASCLAvWindow12()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIWeekendAgreementsLisWindow UIWeekendAgreementsLisWindow
        {
            get
            {
                if ((this.mUIWeekendAgreementsLisWindow == null))
                {
                    this.mUIWeekendAgreementsLisWindow = new UIWeekendAgreementsLisWindow(this);
                }
                return this.mUIWeekendAgreementsLisWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIWeekendAgreementsLisWindow mUIWeekendAgreementsLisWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIWeekendAgreementsLisWindow : WinWindow
    {
        
        public UIWeekendAgreementsLisWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "WeekendAgreementsList";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIWeekendAgreementsLisClient
        {
            get
            {
                if ((this.mUIWeekendAgreementsLisClient == null))
                {
                    this.mUIWeekendAgreementsLisClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIWeekendAgreementsLisClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIWeekendAgreementsLisClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIWeekendAgreementsLisClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63031732ASCLAvWindow13 : WinWindow
    {
        
        public UIGatver63031732ASCLAvWindow13()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcMainPanelClient1 UIPcMainPanelClient
        {
            get
            {
                if ((this.mUIPcMainPanelClient == null))
                {
                    this.mUIPcMainPanelClient = new UIPcMainPanelClient1(this);
                }
                return this.mUIPcMainPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcMainPanelClient1 mUIPcMainPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcMainPanelClient1 : DXTestControl
    {
        
        public UIPcMainPanelClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITcPanListsTabList1 UITcPanListsTabList
        {
            get
            {
                if ((this.mUITcPanListsTabList == null))
                {
                    this.mUITcPanListsTabList = new UITcPanListsTabList1(this);
                }
                return this.mUITcPanListsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcPanListsTabList1 mUITcPanListsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcPanListsTabList1 : DXTestControl
    {
        
        public UITcPanListsTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcPanLists";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITpRosterPlanListClient1 UITpRosterPlanListClient
        {
            get
            {
                if ((this.mUITpRosterPlanListClient == null))
                {
                    this.mUITpRosterPlanListClient = new UITpRosterPlanListClient1(this);
                }
                return this.mUITpRosterPlanListClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpRosterPlanListClient1 mUITpRosterPlanListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpRosterPlanListClient1 : DXTestControl
    {
        
        public UITpRosterPlanListClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpRosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPnlGridClient UIPnlGridClient
        {
            get
            {
                if ((this.mUIPnlGridClient == null))
                {
                    this.mUIPnlGridClient = new UIPnlGridClient(this);
                }
                return this.mUIPnlGridClient;
            }
        }
        
        public UIPnlButtonsClient1 UIPnlButtonsClient
        {
            get
            {
                if ((this.mUIPnlButtonsClient == null))
                {
                    this.mUIPnlButtonsClient = new UIPnlButtonsClient1(this);
                }
                return this.mUIPnlButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGridClient mUIPnlGridClient;
        
        private UIPnlButtonsClient1 mUIPnlButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlGridClient : DXTestControl
    {
        
        public UIPnlGridClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlansTable UIGcRosterPlansTable
        {
            get
            {
                if ((this.mUIGcRosterPlansTable == null))
                {
                    this.mUIGcRosterPlansTable = new UIGcRosterPlansTable(this);
                }
                return this.mUIGcRosterPlansTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlansTable mUIGcRosterPlansTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcRosterPlansTable : DXGrid
    {
        
        public UIGcRosterPlansTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlans";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UIGrunnlagHelgerapportCell
        {
            get
            {
                if ((this.mUIGrunnlagHelgerapportCell == null))
                {
                    this.mUIGrunnlagHelgerapportCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGrunnlagHelgerapportCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlansGridControlCell[View]gvRosterPlans[Row]0[Column]gcolPlan";
                    this.mUIGrunnlagHelgerapportCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGrunnlagHelgerapportCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGrunnlagHelgerapportCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIGrunnlagHelgerapportCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlButtonsClient1 : DXTestControl
    {
        
        public UIPnlButtonsClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UICbRosterPlanFilterLookUpEdit
        {
            get
            {
                if ((this.mUICbRosterPlanFilterLookUpEdit == null))
                {
                    this.mUICbRosterPlanFilterLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUICbRosterPlanFilterLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "cbRosterPlanFilter";
                    this.mUICbRosterPlanFilterLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    this.mUICbRosterPlanFilterLookUpEdit.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUICbRosterPlanFilterLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUICbRosterPlanFilterLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIArbeidsplanGrunnlagHWindow : DXWindow
    {
        
        public UIArbeidsplanGrunnlagHWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        
        public UIPnlRosterPlanClient UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        
        public DXButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new DXButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Close";
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleButton";
                    this.mUICloseButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon mUIRcMenuRibbon;
        
        private UIPnlRosterPlanClient mUIPnlRosterPlanClient;
        
        private DXButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRcMenuRibbon : DXRibbon
    {
        
        public UIRcMenuRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpFilterRibbonPage UIRpFilterRibbonPage
        {
            get
            {
                if ((this.mUIRpFilterRibbonPage == null))
                {
                    this.mUIRpFilterRibbonPage = new UIRpFilterRibbonPage(this);
                }
                return this.mUIRpFilterRibbonPage;
            }
        }
        
        public UIComboBoxEditComboBox UIComboBoxEditComboBox
        {
            get
            {
                if ((this.mUIComboBoxEditComboBox == null))
                {
                    this.mUIComboBoxEditComboBox = new UIComboBoxEditComboBox(this);
                }
                return this.mUIComboBoxEditComboBox;
            }
        }
        
        public UIRpPlanRibbonPage UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new UIRpPlanRibbonPage(this);
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        
        public UIRpRosterPlanRibbonPage UIRpRosterPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpRosterPlanRibbonPage == null))
                {
                    this.mUIRpRosterPlanRibbonPage = new UIRpRosterPlanRibbonPage(this);
                }
                return this.mUIRpRosterPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpFilterRibbonPage mUIRpFilterRibbonPage;
        
        private UIComboBoxEditComboBox mUIComboBoxEditComboBox;
        
        private UIRpPlanRibbonPage mUIRpPlanRibbonPage;
        
        private UIRpRosterPlanRibbonPage mUIRpRosterPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpFilterRibbonPage : DXRibbonPage
    {
        
        public UIRpFilterRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpgFilterRibbonPageGroup UIRpgFilterRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgFilterRibbonPageGroup == null))
                {
                    this.mUIRpgFilterRibbonPageGroup = new UIRpgFilterRibbonPageGroup(this);
                }
                return this.mUIRpgFilterRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgFilterRibbonPageGroup mUIRpgFilterRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpgFilterRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgFilterRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonEditItem UIDdlCustomizeColumnsRibbonEditItem
        {
            get
            {
                if ((this.mUIDdlCustomizeColumnsRibbonEditItem == null))
                {
                    this.mUIDdlCustomizeColumnsRibbonEditItem = new DXRibbonEditItem(this);
                    #region Search Criteria
                    this.mUIDdlCustomizeColumnsRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "ddlCustomizeColumns";
                    this.mUIDdlCustomizeColumnsRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonEditItem";
                    this.mUIDdlCustomizeColumnsRibbonEditItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIDdlCustomizeColumnsRibbonEditItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonEditItem mUIDdlCustomizeColumnsRibbonEditItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIComboBoxEditComboBox : DXComboBox
    {
        
        public UIComboBoxEditComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuComboBoxEdit[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIComboBoxPopupListBoxWindow UIComboBoxPopupListBoxWindow
        {
            get
            {
                if ((this.mUIComboBoxPopupListBoxWindow == null))
                {
                    this.mUIComboBoxPopupListBoxWindow = new UIComboBoxPopupListBoxWindow(this);
                }
                return this.mUIComboBoxPopupListBoxWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIComboBoxPopupListBoxWindow mUIComboBoxPopupListBoxWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIComboBoxPopupListBoxWindow : DXWindow
    {
        
        public UIComboBoxPopupListBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuComboBoxEdit[0]PopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxPopupListBoxForm";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIComboBoxPopupListBoxList UIComboBoxPopupListBoxList
        {
            get
            {
                if ((this.mUIComboBoxPopupListBoxList == null))
                {
                    this.mUIComboBoxPopupListBoxList = new UIComboBoxPopupListBoxList(this);
                }
                return this.mUIComboBoxPopupListBoxList;
            }
        }
        #endregion
        
        #region Fields
        private UIComboBoxPopupListBoxList mUIComboBoxPopupListBoxList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIComboBoxPopupListBoxList : DXListBox
    {
        
        public UIComboBoxPopupListBoxList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuComboBoxEdit[0]PopupFormComboBoxPopupListBox[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxPopupListBox";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UIVaktfordelingListItem
        {
            get
            {
                if ((this.mUIVaktfordelingListItem == null))
                {
                    this.mUIVaktfordelingListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIVaktfordelingListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuComboBoxEdit[0]PopupFormComboBoxPopupListBox[0]Item[5]";
                    this.mUIVaktfordelingListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxPopupListBoxItem";
                    this.mUIVaktfordelingListItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIVaktfordelingListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUIVaktfordelingListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpPlanRibbonPage : DXRibbonPage
    {
        
        public UIRpPlanRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGrpEffectuateRevolviRibbonPageGroup UIGrpEffectuateRevolviRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpEffectuateRevolviRibbonPageGroup == null))
                {
                    this.mUIGrpEffectuateRevolviRibbonPageGroup = new UIGrpEffectuateRevolviRibbonPageGroup(this);
                }
                return this.mUIGrpEffectuateRevolviRibbonPageGroup;
            }
        }
        
        public UIRpgPlanCopyRosterRibbonPageGroup UIRpgPlanCopyRosterRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgPlanCopyRosterRibbonPageGroup == null))
                {
                    this.mUIRpgPlanCopyRosterRibbonPageGroup = new UIRpgPlanCopyRosterRibbonPageGroup(this);
                }
                return this.mUIRpgPlanCopyRosterRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpEffectuateRevolviRibbonPageGroup mUIGrpEffectuateRevolviRibbonPageGroup;
        
        private UIRpgPlanCopyRosterRibbonPageGroup mUIRpgPlanCopyRosterRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpEffectuateRevolviRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpEffectuateRevolviRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEffectuate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonItem UIIverksettingRibbonItem
        {
            get
            {
                if ((this.mUIIverksettingRibbonItem == null))
                {
                    this.mUIIverksettingRibbonItem = new DXRibbonItem(this);
                    #region Search Criteria
                    this.mUIIverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "mnuEffectuateRevolving";
                    this.mUIIverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
                    this.mUIIverksettingRibbonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIIverksettingRibbonItem;
            }
        }
        
        public DXRibbonItem UISlettiverksettingRibbonItem
        {
            get
            {
                if ((this.mUISlettiverksettingRibbonItem == null))
                {
                    this.mUISlettiverksettingRibbonItem = new DXRibbonItem(this);
                    #region Search Criteria
                    this.mUISlettiverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "mnuDeleteEff";
                    this.mUISlettiverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
                    this.mUISlettiverksettingRibbonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUISlettiverksettingRibbonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonItem mUIIverksettingRibbonItem;
        
        private DXRibbonItem mUISlettiverksettingRibbonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpgPlanCopyRosterRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgPlanCopyRosterRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgPlanCopyRoster";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UINyarbeidsplanRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUINyarbeidsplanRibbonBaseButtonItem == null))
                {
                    this.mUINyarbeidsplanRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUINyarbeidsplanRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCopyRosterPlan";
                    this.mUINyarbeidsplanRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUINyarbeidsplanRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUINyarbeidsplanRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUINyarbeidsplanRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpRosterPlanRibbonPage : DXRibbonPage
    {
        
        public UIRpRosterPlanRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGrpCloseRibbonPageGroup UIGrpCloseRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpCloseRibbonPageGroup == null))
                {
                    this.mUIGrpCloseRibbonPageGroup = new UIGrpCloseRibbonPageGroup(this);
                }
                return this.mUIGrpCloseRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpCloseRibbonPageGroup mUIGrpCloseRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpCloseRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpCloseRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpClose";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIBtnCloseRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnCloseRibbonBaseButtonItem == null))
                {
                    this.mUIBtnCloseRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnCloseRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
                    this.mUIBtnCloseRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBtnCloseRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIBtnCloseRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIBtnCloseRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlRosterPlanClient : DXTestControl
    {
        
        public UIPnlRosterPlanClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcRosterPlanTable : DXGrid
    {
        
        public UIGcRosterPlanTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIDCell
        {
            get
            {
                if ((this.mUIDCell == null))
                {
                    this.mUIDCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_5";
                    this.mUIDCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIDCell;
            }
        }
        
        public DXColumnHeader UIRosterCell_6ColumnHeader
        {
            get
            {
                if ((this.mUIRosterCell_6ColumnHeader == null))
                {
                    this.mUIRosterCell_6ColumnHeader = new DXColumnHeader(this);
                    #region Search Criteria
                    this.mUIRosterCell_6ColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlColumnHeader[View]gvRosterPlan[Column]RosterCell_6";
                    this.mUIRosterCell_6ColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
                    this.mUIRosterCell_6ColumnHeader.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRosterCell_6ColumnHeader;
            }
        }
        
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_0";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIDCell;
        
        private DXColumnHeader mUIRosterCell_6ColumnHeader;
        
        private DXCell mUIItemCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow113 : WinWindow
    {
        
        public UIItemWindow113()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UISubMenuBarControlMenu UISubMenuBarControlMenu
        {
            get
            {
                if ((this.mUISubMenuBarControlMenu == null))
                {
                    this.mUISubMenuBarControlMenu = new UISubMenuBarControlMenu(this);
                }
                return this.mUISubMenuBarControlMenu;
            }
        }
        
        public UIGalleryDropDownBarCoMenu UIGalleryDropDownBarCoMenu
        {
            get
            {
                if ((this.mUIGalleryDropDownBarCoMenu == null))
                {
                    this.mUIGalleryDropDownBarCoMenu = new UIGalleryDropDownBarCoMenu(this);
                }
                return this.mUIGalleryDropDownBarCoMenu;
            }
        }
        
        public UIPopupMenuBarControlMenu UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        
        public UIPopupMenuBarControlMenu1 UIPopupMenuBarControlMenu1
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu1 == null))
                {
                    this.mUIPopupMenuBarControlMenu1 = new UIPopupMenuBarControlMenu1(this);
                }
                return this.mUIPopupMenuBarControlMenu1;
            }
        }
        #endregion
        
        #region Fields
        private UISubMenuBarControlMenu mUISubMenuBarControlMenu;
        
        private UIGalleryDropDownBarCoMenu mUIGalleryDropDownBarCoMenu;
        
        private UIPopupMenuBarControlMenu mUIPopupMenuBarControlMenu;
        
        private UIPopupMenuBarControlMenu1 mUIPopupMenuBarControlMenu1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISubMenuBarControlMenu : DXMenu
    {
        
        public UISubMenuBarControlMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SubMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SubMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBtnEffectuateNextPerMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnEffectuateNextPerMenuBaseButtonItem == null))
                {
                    this.mUIBtnEffectuateNextPerMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnEffectuateNextPerMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEffectuateNextPeriod";
                    this.mUIBtnEffectuateNextPerMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBtnEffectuateNextPerMenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIBtnDeleteMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnDeleteMenuBaseButtonItem == null))
                {
                    this.mUIBtnDeleteMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnDeleteMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDelete";
                    this.mUIBtnDeleteMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBtnDeleteMenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIBtnRotateWholeMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnRotateWholeMenuBaseButtonItem == null))
                {
                    this.mUIBtnRotateWholeMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnRotateWholeMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRotateWhole";
                    this.mUIBtnRotateWholeMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBtnRotateWholeMenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIBtnNoRevolveWholePerMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnNoRevolveWholePerMenuBaseButtonItem == null))
                {
                    this.mUIBtnNoRevolveWholePerMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnNoRevolveWholePerMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRotateWhole";
                    this.mUIBtnNoRevolveWholePerMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBtnNoRevolveWholePerMenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIBtnDeleteNoRevMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnDeleteNoRevMenuBaseButtonItem == null))
                {
                    this.mUIBtnDeleteNoRevMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnDeleteNoRevMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDelete";
                    this.mUIBtnDeleteNoRevMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBtnDeleteNoRevMenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBtnEffectuateNextPerMenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIBtnDeleteMenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIBtnRotateWholeMenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIBtnNoRevolveWholePerMenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIBtnDeleteNoRevMenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGalleryDropDownBarCoMenu : DXMenu
    {
        
        public UIGalleryDropDownBarCoMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GalleryDropDownBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryDropDownBarControl";
            #endregion
        }
        
        #region Properties
        public UIItemGalleryItemGroup UIItemGalleryItemGroup
        {
            get
            {
                if ((this.mUIItemGalleryItemGroup == null))
                {
                    this.mUIItemGalleryItemGroup = new UIItemGalleryItemGroup(this);
                }
                return this.mUIItemGalleryItemGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIItemGalleryItemGroup mUIItemGalleryItemGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemGalleryItemGroup : DXTestControl
    {
        
        public UIItemGalleryItemGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItemGroup";
            #endregion
        }
        
        #region Properties
        public DXTestControl UIXLSFilGalleryItem
        {
            get
            {
                if ((this.mUIXLSFilGalleryItem == null))
                {
                    this.mUIXLSFilGalleryItem = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIXLSFilGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "XLS Fil";
                    this.mUIXLSFilGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
                    #endregion
                }
                return this.mUIXLSFilGalleryItem;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUIXLSFilGalleryItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPopupMenuBarControlMenu : DXMenu
    {
        
        public UIPopupMenuBarControlMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBiOkMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBiOkMenuBaseButtonItem == null))
                {
                    this.mUIBiOkMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBiOkMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "biOk";
                    this.mUIBiOkMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBiOkMenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBiOkMenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPopupMenuBarControlMenu1 : DXMenu
    {
        
        public UIPopupMenuBarControlMenu1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBarButtonItemLink3MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink3MenuBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink3MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink3MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[3]";
                    this.mUIBarButtonItemLink3MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBarButtonItemLink3MenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIBarButtonItemLink4MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink4MenuBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink4MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink4MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[4]";
                    this.mUIBarButtonItemLink4MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBarButtonItemLink4MenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBarButtonItemLink3MenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIBarButtonItemLink4MenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIIverksetteWindow : DXWindow
    {
        
        public UIIverksetteWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Iverksette";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Iverksette");
            #endregion
        }
        
        #region Properties
        public UIPnlResultClient UIPnlResultClient
        {
            get
            {
                if ((this.mUIPnlResultClient == null))
                {
                    this.mUIPnlResultClient = new UIPnlResultClient(this);
                }
                return this.mUIPnlResultClient;
            }
        }
        
        public UIPnlButtonsClient2 UIPnlButtonsClient
        {
            get
            {
                if ((this.mUIPnlButtonsClient == null))
                {
                    this.mUIPnlButtonsClient = new UIPnlButtonsClient2(this);
                }
                return this.mUIPnlButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlResultClient mUIPnlResultClient;
        
        private UIPnlButtonsClient2 mUIPnlButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlResultClient : DXTestControl
    {
        
        public UIPnlResultClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlResult";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Iverksette");
            #endregion
        }
        
        #region Properties
        public UIGsGridControlLinesTable UIGsGridControlLinesTable
        {
            get
            {
                if ((this.mUIGsGridControlLinesTable == null))
                {
                    this.mUIGsGridControlLinesTable = new UIGsGridControlLinesTable(this);
                }
                return this.mUIGsGridControlLinesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGsGridControlLinesTable mUIGsGridControlLinesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsGridControlLinesTable : DXGrid
    {
        
        public UIGsGridControlLinesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlLines";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Iverksette");
            #endregion
        }
        
        #region Properties
        public DXCell UIIkkevalgtCell
        {
            get
            {
                if ((this.mUIIkkevalgtCell == null))
                {
                    this.mUIIkkevalgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIIkkevalgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlLinesGridControlCell[View]gvPersons[Row]9[Column]clmEffectuate";
                    this.mUIIkkevalgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIkkevalgtCell.WindowTitles.Add("Iverksette");
                    #endregion
                }
                return this.mUIIkkevalgtCell;
            }
        }
        
        public DXCell UIIkkevalgtCell1
        {
            get
            {
                if ((this.mUIIkkevalgtCell1 == null))
                {
                    this.mUIIkkevalgtCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIIkkevalgtCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlLinesGridControlCell[View]gvPersons[Row]8[Column]clmEffectuate";
                    this.mUIIkkevalgtCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIkkevalgtCell1.WindowTitles.Add("Iverksette");
                    #endregion
                }
                return this.mUIIkkevalgtCell1;
            }
        }
        
        public DXCell UIIkkevalgtCell2
        {
            get
            {
                if ((this.mUIIkkevalgtCell2 == null))
                {
                    this.mUIIkkevalgtCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIIkkevalgtCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlLinesGridControlCell[View]gvPersons[Row]7[Column]clmEffectuate";
                    this.mUIIkkevalgtCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIkkevalgtCell2.WindowTitles.Add("Iverksette");
                    #endregion
                }
                return this.mUIIkkevalgtCell2;
            }
        }
        
        public DXCell UIIkkevalgtCell3
        {
            get
            {
                if ((this.mUIIkkevalgtCell3 == null))
                {
                    this.mUIIkkevalgtCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIIkkevalgtCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlLinesGridControlCell[View]gvPersons[Row]6[Column]clmEffectuate";
                    this.mUIIkkevalgtCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIkkevalgtCell3.WindowTitles.Add("Iverksette");
                    #endregion
                }
                return this.mUIIkkevalgtCell3;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIIkkevalgtCell;
        
        private DXCell mUIIkkevalgtCell1;
        
        private DXCell mUIIkkevalgtCell2;
        
        private DXCell mUIIkkevalgtCell3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlButtonsClient2 : DXTestControl
    {
        
        public UIPnlButtonsClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Iverksette");
            #endregion
        }
        
        #region Properties
        public DXButton UIIverksett10linjerButton
        {
            get
            {
                if ((this.mUIIverksett10linjerButton == null))
                {
                    this.mUIIverksett10linjerButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIIverksett10linjerButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEffectuate";
                    this.mUIIverksett10linjerButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIIverksett10linjerButton.WindowTitles.Add("Iverksette");
                    #endregion
                }
                return this.mUIIverksett10linjerButton;
            }
        }
        
        public DXButton UIEndreperiodeforavkryButton
        {
            get
            {
                if ((this.mUIEndreperiodeforavkryButton == null))
                {
                    this.mUIEndreperiodeforavkryButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIEndreperiodeforavkryButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnPeriod";
                    this.mUIEndreperiodeforavkryButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIEndreperiodeforavkryButton.WindowTitles.Add("Iverksette");
                    #endregion
                }
                return this.mUIEndreperiodeforavkryButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIIverksett10linjerButton;
        
        private DXButton mUIEndreperiodeforavkryButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow28 : DXWindow
    {
        
        public UIItemWindow28()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RPL-4044 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("RPL-4044 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("RPL-4044 - Informasjon");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow114 : DXWindow
    {
        
        public UIItemWindow114()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Lønnsberegning ved iverksetting";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Lønnsberegning ved iverksetting");
            #endregion
        }
        
        #region Properties
        public UIGSPanelControlClient UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGSPanelControlClient mUIGSPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSPanelControlClient : DXTestControl
    {
        
        public UIGSPanelControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcButtonPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Lønnsberegning ved iverksetting");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Lønnsberegning ved iverksetting");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISletteiverksettingWindow : DXWindow
    {
        
        public UISletteiverksettingWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Slette iverksetting";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Slette iverksetting");
            #endregion
        }
        
        #region Properties
        public UIPnlToppInfoClient UIPnlToppInfoClient
        {
            get
            {
                if ((this.mUIPnlToppInfoClient == null))
                {
                    this.mUIPnlToppInfoClient = new UIPnlToppInfoClient(this);
                }
                return this.mUIPnlToppInfoClient;
            }
        }
        
        public UIPnlBottomClient UIPnlBottomClient
        {
            get
            {
                if ((this.mUIPnlBottomClient == null))
                {
                    this.mUIPnlBottomClient = new UIPnlBottomClient(this);
                }
                return this.mUIPnlBottomClient;
            }
        }
        
        public UIPnlGridClient1 UIPnlGridClient
        {
            get
            {
                if ((this.mUIPnlGridClient == null))
                {
                    this.mUIPnlGridClient = new UIPnlGridClient1(this);
                }
                return this.mUIPnlGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlToppInfoClient mUIPnlToppInfoClient;
        
        private UIPnlBottomClient mUIPnlBottomClient;
        
        private UIPnlGridClient1 mUIPnlGridClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlToppInfoClient : DXTestControl
    {
        
        public UIPnlToppInfoClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlToppInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Slette iverksetting");
            #endregion
        }
        
        #region Properties
        public DXButton UIVelgalleButton
        {
            get
            {
                if ((this.mUIVelgalleButton == null))
                {
                    this.mUIVelgalleButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAll";
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIVelgalleButton.WindowTitles.Add("Slette iverksetting");
                    #endregion
                }
                return this.mUIVelgalleButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIVelgalleButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlBottomClient : DXTestControl
    {
        
        public UIPnlBottomClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Slette iverksetting");
            #endregion
        }
        
        #region Properties
        public DXButton UISlettiverksettingpå1Button
        {
            get
            {
                if ((this.mUISlettiverksettingpå1Button == null))
                {
                    this.mUISlettiverksettingpå1Button = new DXButton(this);
                    #region Search Criteria
                    this.mUISlettiverksettingpå1Button.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDelete";
                    this.mUISlettiverksettingpå1Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUISlettiverksettingpå1Button.WindowTitles.Add("Slette iverksetting");
                    #endregion
                }
                return this.mUISlettiverksettingpå1Button;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUISlettiverksettingpå1Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlGridClient1 : DXTestControl
    {
        
        public UIPnlGridClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Slette iverksetting");
            #endregion
        }
        
        #region Properties
        public UIGsGridControlLinesTable1 UIGsGridControlLinesTable
        {
            get
            {
                if ((this.mUIGsGridControlLinesTable == null))
                {
                    this.mUIGsGridControlLinesTable = new UIGsGridControlLinesTable1(this);
                }
                return this.mUIGsGridControlLinesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGsGridControlLinesTable1 mUIGsGridControlLinesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsGridControlLinesTable1 : DXGrid
    {
        
        public UIGsGridControlLinesTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlLines";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Slette iverksetting");
            #endregion
        }
        
        #region Properties
        public DXCell UIValgtCell
        {
            get
            {
                if ((this.mUIValgtCell == null))
                {
                    this.mUIValgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlLinesGridControlCell[View]gvPersons[Row]9[Column]clmDelete";
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell.WindowTitles.Add("Slette iverksetting");
                    #endregion
                }
                return this.mUIValgtCell;
            }
        }
        
        public DXCell UIValgtCell1
        {
            get
            {
                if ((this.mUIValgtCell1 == null))
                {
                    this.mUIValgtCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlLinesGridControlCell[View]gvPersons[Row]8[Column]clmDelete";
                    this.mUIValgtCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell1.WindowTitles.Add("Slette iverksetting");
                    #endregion
                }
                return this.mUIValgtCell1;
            }
        }
        
        public DXCell UIValgtCell2
        {
            get
            {
                if ((this.mUIValgtCell2 == null))
                {
                    this.mUIValgtCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlLinesGridControlCell[View]gvPersons[Row]7[Column]clmDelete";
                    this.mUIValgtCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell2.WindowTitles.Add("Slette iverksetting");
                    #endregion
                }
                return this.mUIValgtCell2;
            }
        }
        
        public DXCell UIValgtCell3
        {
            get
            {
                if ((this.mUIValgtCell3 == null))
                {
                    this.mUIValgtCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlLinesGridControlCell[View]gvPersons[Row]6[Column]clmDelete";
                    this.mUIValgtCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell3.WindowTitles.Add("Slette iverksetting");
                    #endregion
                }
                return this.mUIValgtCell3;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIValgtCell;
        
        private DXCell mUIValgtCell1;
        
        private DXCell mUIValgtCell2;
        
        private DXCell mUIValgtCell3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow121 : DXWindow
    {
        
        public UIItemWindow121()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EXC_4004 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("EXC_4004 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("EXC_4004 - Informasjon");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow211 : DXWindow
    {
        
        public UIItemWindow211()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RPL2-4003 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("RPL2-4003 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btOK";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("RPL2-4003 - Informasjon");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow221 : DXWindow
    {
        
        public UIItemWindow221()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Sjekk plan mot vaktbok";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Sjekk plan mot vaktbok");
            #endregion
        }
        
        #region Properties
        public UIGSPanelControlClient1 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient1(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGSPanelControlClient1 mUIGSPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSPanelControlClient1 : DXTestControl
    {
        
        public UIGSPanelControlClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlBottomButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Sjekk plan mot vaktbok");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Sjekk plan mot vaktbok");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow131 : DXWindow
    {
        
        public UIItemWindow131()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "XLS Export Options";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("XLS Export Options");
            #endregion
        }
        
        #region Properties
        public UIPanelControlClient UIPanelControlClient
        {
            get
            {
                if ((this.mUIPanelControlClient == null))
                {
                    this.mUIPanelControlClient = new UIPanelControlClient(this);
                }
                return this.mUIPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControlClient mUIPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPanelControlClient : DXTestControl
    {
        
        public UIPanelControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("XLS Export Options");
            #endregion
        }
        
        #region Properties
        public DXButton UISimpleButtonButton
        {
            get
            {
                if ((this.mUISimpleButtonButton == null))
                {
                    this.mUISimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOK";
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUISimpleButtonButton.WindowTitles.Add("XLS Export Options");
                    #endregion
                }
                return this.mUISimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUISimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow231 : WinWindow
    {
        
        public UIItemWindow231()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIExportWindow UIExportWindow
        {
            get
            {
                if ((this.mUIExportWindow == null))
                {
                    this.mUIExportWindow = new UIExportWindow(this);
                }
                return this.mUIExportWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIExportWindow mUIExportWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIExportWindow : DXWindow
    {
        
        public UIExportWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Export";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraMessageBoxForm";
            #endregion
        }
        
        #region Properties
        public DXButton UISimpleButtonButton
        {
            get
            {
                if ((this.mUISimpleButtonButton == null))
                {
                    this.mUISimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ExportSimpleButton[1]";
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    #endregion
                }
                return this.mUISimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUISimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63031732ASCLAvWindow14 : WinWindow
    {
        
        public UIGatver63031732ASCLAvWindow14()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow29 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow29(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow29 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow29 : WinWindow
    {
        
        public UIItemWindow29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsattClient
        {
            get
            {
                if ((this.mUIAnsattClient == null))
                {
                    this.mUIAnsattClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsattClient.WindowTitles.Add("Gat)");
                    #endregion
                }
                return this.mUIAnsattClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsattClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEndreiverksettingspeWindow : DXWindow
    {
        
        public UIEndreiverksettingspeWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Endre iverksettingsperiode";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Endre iverksettingsperiode");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDate0PopupEdit
        {
            get
            {
                if ((this.mUIPceDate0PopupEdit == null))
                {
                    this.mUIPceDate0PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate[0]";
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDate0PopupEdit.WindowTitles.Add("Endre iverksettingsperiode");
                    #endregion
                }
                return this.mUIPceDate0PopupEdit;
            }
        }
        
        public DXPopupEdit UIPceDate1PopupEdit
        {
            get
            {
                if ((this.mUIPceDate1PopupEdit == null))
                {
                    this.mUIPceDate1PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate[1]";
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDate1PopupEdit.WindowTitles.Add("Endre iverksettingsperiode");
                    #endregion
                }
                return this.mUIPceDate1PopupEdit;
            }
        }
        
        public UIGSPanelControlClient2 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient2(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        
        public UIEFromDateCustom UIEFromDateCustom
        {
            get
            {
                if ((this.mUIEFromDateCustom == null))
                {
                    this.mUIEFromDateCustom = new UIEFromDateCustom(this);
                }
                return this.mUIEFromDateCustom;
            }
        }
        
        public UIEToDateCustom UIEToDateCustom
        {
            get
            {
                if ((this.mUIEToDateCustom == null))
                {
                    this.mUIEToDateCustom = new UIEToDateCustom(this);
                }
                return this.mUIEToDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDate0PopupEdit;
        
        private DXPopupEdit mUIPceDate1PopupEdit;
        
        private UIGSPanelControlClient2 mUIGSPanelControlClient;
        
        private UIEFromDateCustom mUIEFromDateCustom;
        
        private UIEToDateCustom mUIEToDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSPanelControlClient2 : DXTestControl
    {
        
        public UIGSPanelControlClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Endre iverksettingsperiode");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Endre iverksettingsperiode");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEFromDateCustom : DXTestControl
    {
        
        public UIEFromDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "eFromDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Endre iverksettingsperiode");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Endre iverksettingsperiode");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEToDateCustom : DXTestControl
    {
        
        public UIEToDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "eToDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Endre iverksettingsperiode");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Endre iverksettingsperiode");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINyarbeidsplanWindow : DXWindow
    {
        
        public UINyarbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ny arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainClient UIPnlMainClient
        {
            get
            {
                if ((this.mUIPnlMainClient == null))
                {
                    this.mUIPnlMainClient = new UIPnlMainClient(this);
                }
                return this.mUIPnlMainClient;
            }
        }
        
        public UIGSPanelControlClient3 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient3(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        
        public UIPnlMainClient1 UIPnlMainClient1
        {
            get
            {
                if ((this.mUIPnlMainClient1 == null))
                {
                    this.mUIPnlMainClient1 = new UIPnlMainClient1(this);
                }
                return this.mUIPnlMainClient1;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainClient mUIPnlMainClient;
        
        private UIGSPanelControlClient3 mUIGSPanelControlClient;
        
        private UIPnlMainClient1 mUIPnlMainClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlMainClient : DXTestControl
    {
        
        public UIPnlMainClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControlMainCustom UIGsLayoutControlMainCustom
        {
            get
            {
                if ((this.mUIGsLayoutControlMainCustom == null))
                {
                    this.mUIGsLayoutControlMainCustom = new UIGsLayoutControlMainCustom(this);
                }
                return this.mUIGsLayoutControlMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControlMainCustom mUIGsLayoutControlMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsLayoutControlMainCustom : DXTestControl
    {
        
        public UIGsLayoutControlMainCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNaLayoutGroup UILayoutControlGroupNaLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNaLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNaLayoutGroup = new UILayoutControlGroupNaLayoutGroup(this);
                }
                return this.mUILayoutControlGroupNaLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNaLayoutGroup mUILayoutControlGroupNaLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlGroupNaLayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNaLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNeLayoutGroup UILayoutControlGroupNeLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNeLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNeLayoutGroup = new UILayoutControlGroupNeLayoutGroup(this);
                }
                return this.mUILayoutControlGroupNeLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNeLayoutGroup mUILayoutControlGroupNeLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlGroupNeLayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNeLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupNewValues";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILcMainInfoLayoutControlItem UILcMainInfoLayoutControlItem
        {
            get
            {
                if ((this.mUILcMainInfoLayoutControlItem == null))
                {
                    this.mUILcMainInfoLayoutControlItem = new UILcMainInfoLayoutControlItem(this);
                }
                return this.mUILcMainInfoLayoutControlItem;
            }
        }
        
        public UILayoutControlItem4LayoutControlItem UILayoutControlItem4LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem4LayoutControlItem == null))
                {
                    this.mUILayoutControlItem4LayoutControlItem = new UILayoutControlItem4LayoutControlItem(this);
                }
                return this.mUILayoutControlItem4LayoutControlItem;
            }
        }
        
        public UILayoutControlItem2LayoutControlItem2 UILayoutControlItem2LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem2LayoutControlItem == null))
                {
                    this.mUILayoutControlItem2LayoutControlItem = new UILayoutControlItem2LayoutControlItem2(this);
                }
                return this.mUILayoutControlItem2LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainInfoLayoutControlItem mUILcMainInfoLayoutControlItem;
        
        private UILayoutControlItem4LayoutControlItem mUILayoutControlItem4LayoutControlItem;
        
        private UILayoutControlItem2LayoutControlItem2 mUILayoutControlItem2LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcMainInfoLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILcMainInfoLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainInfoClient UIPnlMainInfoClient
        {
            get
            {
                if ((this.mUIPnlMainInfoClient == null))
                {
                    this.mUIPnlMainInfoClient = new UIPnlMainInfoClient(this);
                }
                return this.mUIPnlMainInfoClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainInfoClient mUIPnlMainInfoClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlMainInfoClient : DXTestControl
    {
        
        public UIPnlMainInfoClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDate1PopupEdit
        {
            get
            {
                if ((this.mUIPceDate1PopupEdit == null))
                {
                    this.mUIPceDate1PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate[1]";
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDate1PopupEdit.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIPceDate1PopupEdit;
            }
        }
        
        public DXTextEdit UIENumber0Edit
        {
            get
            {
                if ((this.mUIENumber0Edit == null))
                {
                    this.mUIENumber0Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eNumber[0]";
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIENumber0Edit.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIENumber0Edit;
            }
        }
        
        public DXCheckBox UIChkKladdCheckBox
        {
            get
            {
                if ((this.mUIChkKladdCheckBox == null))
                {
                    this.mUIChkKladdCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkKladdCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkKladd";
                    this.mUIChkKladdCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkKladdCheckBox.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIChkKladdCheckBox;
            }
        }
        
        public DXTextEdit UITxtNameEdit
        {
            get
            {
                if ((this.mUITxtNameEdit == null))
                {
                    this.mUITxtNameEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITxtNameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtName";
                    this.mUITxtNameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUITxtNameEdit.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUITxtNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDate1PopupEdit;
        
        private DXTextEdit mUIENumber0Edit;
        
        private DXCheckBox mUIChkKladdCheckBox;
        
        private DXTextEdit mUITxtNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlItem4LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem4LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRuleButtonsClient UIPnlRuleButtonsClient
        {
            get
            {
                if ((this.mUIPnlRuleButtonsClient == null))
                {
                    this.mUIPnlRuleButtonsClient = new UIPnlRuleButtonsClient(this);
                }
                return this.mUIPnlRuleButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRuleButtonsClient mUIPnlRuleButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlRuleButtonsClient : DXTestControl
    {
        
        public UIPnlRuleButtonsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRuleButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIVelgingenButton
        {
            get
            {
                if ((this.mUIVelgingenButton == null))
                {
                    this.mUIVelgingenButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVelgingenButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnNone";
                    this.mUIVelgingenButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIVelgingenButton.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIVelgingenButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIVelgingenButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlItem2LayoutControlItem2 : DXBaseLayoutItem
    {
        
        public UILayoutControlItem2LayoutControlItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlGridSumClient UIPnlGridSumClient
        {
            get
            {
                if ((this.mUIPnlGridSumClient == null))
                {
                    this.mUIPnlGridSumClient = new UIPnlGridSumClient(this);
                }
                return this.mUIPnlGridSumClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGridSumClient mUIPnlGridSumClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlGridSumClient : DXTestControl
    {
        
        public UIPnlGridSumClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGridSum";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGsGridControlTable UIGsGridControlTable
        {
            get
            {
                if ((this.mUIGsGridControlTable == null))
                {
                    this.mUIGsGridControlTable = new UIGsGridControlTable(this);
                }
                return this.mUIGsGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGsGridControlTable mUIGsGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsGridControlTable : DXGrid
    {
        
        public UIGsGridControlTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIValgtCell
        {
            get
            {
                if ((this.mUIValgtCell == null))
                {
                    this.mUIValgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]9[Column]clmInclude";
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell;
            }
        }
        
        public DXCell UIValgtCell1
        {
            get
            {
                if ((this.mUIValgtCell1 == null))
                {
                    this.mUIValgtCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]8[Column]clmInclude";
                    this.mUIValgtCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell1.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell1;
            }
        }
        
        public DXCell UIValgtCell2
        {
            get
            {
                if ((this.mUIValgtCell2 == null))
                {
                    this.mUIValgtCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]7[Column]clmInclude";
                    this.mUIValgtCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell2.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell2;
            }
        }
        
        public DXCell UIValgtCell3
        {
            get
            {
                if ((this.mUIValgtCell3 == null))
                {
                    this.mUIValgtCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]6[Column]clmInclude";
                    this.mUIValgtCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell3.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell3;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIValgtCell;
        
        private DXCell mUIValgtCell1;
        
        private DXCell mUIValgtCell2;
        
        private DXCell mUIValgtCell3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSPanelControlClient3 : DXTestControl
    {
        
        public UIGSPanelControlClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlMainClient1 : DXTestControl
    {
        
        public UIPnlMainClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControlMainCustom1 UIGsLayoutControlMainCustom
        {
            get
            {
                if ((this.mUIGsLayoutControlMainCustom == null))
                {
                    this.mUIGsLayoutControlMainCustom = new UIGsLayoutControlMainCustom1(this);
                }
                return this.mUIGsLayoutControlMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControlMainCustom1 mUIGsLayoutControlMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsLayoutControlMainCustom1 : DXTestControl
    {
        
        public UIGsLayoutControlMainCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNaLayoutGroup1 UILayoutControlGroupNaLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNaLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNaLayoutGroup = new UILayoutControlGroupNaLayoutGroup1(this);
                }
                return this.mUILayoutControlGroupNaLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNaLayoutGroup1 mUILayoutControlGroupNaLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlGroupNaLayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNaLayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNeLayoutGroup1 UILayoutControlGroupNeLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNeLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNeLayoutGroup = new UILayoutControlGroupNeLayoutGroup1(this);
                }
                return this.mUILayoutControlGroupNeLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNeLayoutGroup1 mUILayoutControlGroupNeLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlGroupNeLayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNeLayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupNewValues";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILcMainInfoLayoutControlItem1 UILcMainInfoLayoutControlItem
        {
            get
            {
                if ((this.mUILcMainInfoLayoutControlItem == null))
                {
                    this.mUILcMainInfoLayoutControlItem = new UILcMainInfoLayoutControlItem1(this);
                }
                return this.mUILcMainInfoLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainInfoLayoutControlItem1 mUILcMainInfoLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcMainInfoLayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILcMainInfoLayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainInfoClient1 UIPnlMainInfoClient
        {
            get
            {
                if ((this.mUIPnlMainInfoClient == null))
                {
                    this.mUIPnlMainInfoClient = new UIPnlMainInfoClient1(this);
                }
                return this.mUIPnlMainInfoClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainInfoClient1 mUIPnlMainInfoClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlMainInfoClient1 : DXTestControl
    {
        
        public UIPnlMainInfoClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIDeStartDateCustom UIDeStartDateCustom
        {
            get
            {
                if ((this.mUIDeStartDateCustom == null))
                {
                    this.mUIDeStartDateCustom = new UIDeStartDateCustom(this);
                }
                return this.mUIDeStartDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDeStartDateCustom mUIDeStartDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDeStartDateCustom : DXTestControl
    {
        
        public UIDeStartDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "deStartDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow141 : DXWindow
    {
        
        public UIItemWindow141()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GT-3999 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GT-3999 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btOK";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("GT-3999 - Informasjon");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIArbeidsplanKopiavGruWindow : DXWindow
    {
        
        public UIArbeidsplanKopiavGruWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon1 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon1(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon1 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRcMenuRibbon1 : DXRibbon
    {
        
        public UIRcMenuRibbon1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpRosterPlanRibbonPage1 UIRpRosterPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpRosterPlanRibbonPage == null))
                {
                    this.mUIRpRosterPlanRibbonPage = new UIRpRosterPlanRibbonPage1(this);
                }
                return this.mUIRpRosterPlanRibbonPage;
            }
        }
        
        public UIRpPlanRibbonPage1 UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new UIRpPlanRibbonPage1(this);
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpRosterPlanRibbonPage1 mUIRpRosterPlanRibbonPage;
        
        private UIRpPlanRibbonPage1 mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpRosterPlanRibbonPage1 : DXRibbonPage
    {
        
        public UIRpRosterPlanRibbonPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGrpEditRibbonPageGroup UIGrpEditRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpEditRibbonPageGroup == null))
                {
                    this.mUIGrpEditRibbonPageGroup = new UIGrpEditRibbonPageGroup(this);
                }
                return this.mUIGrpEditRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpEditRibbonPageGroup mUIGrpEditRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpEditRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpEditRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEdit";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIRedigerRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIRedigerRibbonBaseButtonItem == null))
                {
                    this.mUIRedigerRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIRedigerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEditMode";
                    this.mUIRedigerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIRedigerRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRedigerRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIRedigerRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpPlanRibbonPage1 : DXRibbonPage
    {
        
        public UIRpPlanRibbonPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpgPlanRibbonPageGroup UIRpgPlanRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgPlanRibbonPageGroup == null))
                {
                    this.mUIRpgPlanRibbonPageGroup = new UIRpgPlanRibbonPageGroup(this);
                }
                return this.mUIRpgPlanRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgPlanRibbonPageGroup mUIRpgPlanRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpgPlanRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgPlanRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIInnstillingerRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIInnstillingerRibbonBaseButtonItem == null))
                {
                    this.mUIInnstillingerRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIInnstillingerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSettings";
                    this.mUIInnstillingerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIInnstillingerRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIInnstillingerRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIInnstillingerRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIArbeidsplanKopiavGruWindow1 : DXWindow
    {
        
        public UIArbeidsplanKopiavGruWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient1 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient1(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        
        public UIRcMenuRibbon2 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon2(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient1 mUIPnlRosterPlanClient;
        
        private UIRcMenuRibbon2 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlRosterPlanClient1 : DXTestControl
    {
        
        public UIPnlRosterPlanClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable1 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable1(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable1 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcRosterPlanTable1 : DXGrid
    {
        
        public UIGcRosterPlanTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_0";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_5";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXTextEdit UIRow0ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow0ColumnRosterCellEdit == null))
                {
                    this.mUIRow0ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow0ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]0[Column]RosterCell_5";
                    this.mUIRow0ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow0ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow0ColumnRosterCellEdit;
            }
        }
        
        public DXCell UIDK6Cell
        {
            get
            {
                if ((this.mUIDK6Cell == null))
                {
                    this.mUIDK6Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDK6Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_12";
                    this.mUIDK6Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDK6Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIDK6Cell;
            }
        }
        
        public DXCell UIDK6Cell1
        {
            get
            {
                if ((this.mUIDK6Cell1 == null))
                {
                    this.mUIDK6Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIDK6Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_19";
                    this.mUIDK6Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDK6Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIDK6Cell1;
            }
        }
        
        public DXCell UIDK6Cell2
        {
            get
            {
                if ((this.mUIDK6Cell2 == null))
                {
                    this.mUIDK6Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIDK6Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_26";
                    this.mUIDK6Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDK6Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIDK6Cell2;
            }
        }
        
        public DXCell UIDK6Cell3
        {
            get
            {
                if ((this.mUIDK6Cell3 == null))
                {
                    this.mUIDK6Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIDK6Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_5";
                    this.mUIDK6Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDK6Cell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIDK6Cell3;
            }
        }
        
        public DXTextEdit UIRow1ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow1ColumnRosterCellEdit == null))
                {
                    this.mUIRow1ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow1ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]1[Column]RosterCell_5";
                    this.mUIRow1ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow1ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow1ColumnRosterCellEdit;
            }
        }
        
        public DXCell UIDK7Cell
        {
            get
            {
                if ((this.mUIDK7Cell == null))
                {
                    this.mUIDK7Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDK7Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_12";
                    this.mUIDK7Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDK7Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIDK7Cell;
            }
        }
        
        public DXCell UIDK7Cell1
        {
            get
            {
                if ((this.mUIDK7Cell1 == null))
                {
                    this.mUIDK7Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIDK7Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_19";
                    this.mUIDK7Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDK7Cell1.WindowTitles.Add("Arbeidsplan");
                }
                return this.mUIDK7Cell1;
            }
        }
        
        public DXCell UIDK7Cell2
        {
            get
            {
                if ((this.mUIDK7Cell2 == null))
                {
                    this.mUIDK7Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIDK7Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_26";
                    this.mUIDK7Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDK7Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIDK7Cell2;
            }
        }
        
        public DXTextEdit UIRow0ColumnRosterCellEdit1
        {
            get
            {
                if ((this.mUIRow0ColumnRosterCellEdit1 == null))
                {
                    this.mUIRow0ColumnRosterCellEdit1 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow0ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]0[Column]RosterCell_6";
                    this.mUIRow0ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow0ColumnRosterCellEdit1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow0ColumnRosterCellEdit1;
            }
        }
        
        public DXTextEdit UIRow0ColumnRosterCellEdit2
        {
            get
            {
                if ((this.mUIRow0ColumnRosterCellEdit2 == null))
                {
                    this.mUIRow0ColumnRosterCellEdit2 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow0ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]0[Column]RosterCell_7";
                    this.mUIRow0ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow0ColumnRosterCellEdit2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow0ColumnRosterCellEdit2;
            }
        }
        
        public DXTextEdit UIRow0ColumnRosterCellEdit3
        {
            get
            {
                if ((this.mUIRow0ColumnRosterCellEdit3 == null))
                {
                    this.mUIRow0ColumnRosterCellEdit3 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow0ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]0[Column]RosterCell_8";
                    this.mUIRow0ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow0ColumnRosterCellEdit3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow0ColumnRosterCellEdit3;
            }
        }
        
        public DXTextEdit UIRow0ColumnRosterCellEdit4
        {
            get
            {
                if ((this.mUIRow0ColumnRosterCellEdit4 == null))
                {
                    this.mUIRow0ColumnRosterCellEdit4 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow0ColumnRosterCellEdit4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]0[Column]RosterCell_12";
                    this.mUIRow0ColumnRosterCellEdit4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow0ColumnRosterCellEdit4.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow0ColumnRosterCellEdit4;
            }
        }
        
        public DXTextEdit UIRow0ColumnRosterCellEdit5
        {
            get
            {
                if ((this.mUIRow0ColumnRosterCellEdit5 == null))
                {
                    this.mUIRow0ColumnRosterCellEdit5 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow0ColumnRosterCellEdit5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]0[Column]RosterCell_19";
                    this.mUIRow0ColumnRosterCellEdit5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow0ColumnRosterCellEdit5.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow0ColumnRosterCellEdit5;
            }
        }
        
        public DXTextEdit UIRow0ColumnRosterCellEdit6
        {
            get
            {
                if ((this.mUIRow0ColumnRosterCellEdit6 == null))
                {
                    this.mUIRow0ColumnRosterCellEdit6 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow0ColumnRosterCellEdit6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]0[Column]RosterCell_26";
                    this.mUIRow0ColumnRosterCellEdit6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow0ColumnRosterCellEdit6.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow0ColumnRosterCellEdit6;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        
        private DXCell mUIItemCell1;
        
        private DXTextEdit mUIRow0ColumnRosterCellEdit;
        
        private DXCell mUIDK6Cell;
        
        private DXCell mUIDK6Cell1;
        
        private DXCell mUIDK6Cell2;
        
        private DXCell mUIDK6Cell3;
        
        private DXTextEdit mUIRow1ColumnRosterCellEdit;
        
        private DXCell mUIDK7Cell;
        
        private DXCell mUIDK7Cell1;
        
        private DXCell mUIDK7Cell2;
        
        private DXTextEdit mUIRow0ColumnRosterCellEdit1;
        
        private DXTextEdit mUIRow0ColumnRosterCellEdit2;
        
        private DXTextEdit mUIRow0ColumnRosterCellEdit3;
        
        private DXTextEdit mUIRow0ColumnRosterCellEdit4;
        
        private DXTextEdit mUIRow0ColumnRosterCellEdit5;
        
        private DXTextEdit mUIRow0ColumnRosterCellEdit6;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRcMenuRibbon2 : DXRibbon
    {
        
        public UIRcMenuRibbon2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpRosterPlanRibbonPage2 UIRpRosterPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpRosterPlanRibbonPage == null))
                {
                    this.mUIRpRosterPlanRibbonPage = new UIRpRosterPlanRibbonPage2(this);
                }
                return this.mUIRpRosterPlanRibbonPage;
            }
        }
        
        public UIRpcLineToolsRibbonPageCategory UIRpcLineToolsRibbonPageCategory
        {
            get
            {
                if ((this.mUIRpcLineToolsRibbonPageCategory == null))
                {
                    this.mUIRpcLineToolsRibbonPageCategory = new UIRpcLineToolsRibbonPageCategory(this);
                }
                return this.mUIRpcLineToolsRibbonPageCategory;
            }
        }
        #endregion
        
        #region Fields
        private UIRpRosterPlanRibbonPage2 mUIRpRosterPlanRibbonPage;
        
        private UIRpcLineToolsRibbonPageCategory mUIRpcLineToolsRibbonPageCategory;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpRosterPlanRibbonPage2 : DXRibbonPage
    {
        
        public UIRpRosterPlanRibbonPage2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGrpInsertToolsRibbonPageGroup UIGrpInsertToolsRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpInsertToolsRibbonPageGroup == null))
                {
                    this.mUIGrpInsertToolsRibbonPageGroup = new UIGrpInsertToolsRibbonPageGroup(this);
                }
                return this.mUIGrpInsertToolsRibbonPageGroup;
            }
        }
        
        public UIGrpEditRibbonPageGroup1 UIGrpEditRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpEditRibbonPageGroup == null))
                {
                    this.mUIGrpEditRibbonPageGroup = new UIGrpEditRibbonPageGroup1(this);
                }
                return this.mUIGrpEditRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpInsertToolsRibbonPageGroup mUIGrpInsertToolsRibbonPageGroup;
        
        private UIGrpEditRibbonPageGroup1 mUIGrpEditRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpInsertToolsRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpInsertToolsRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpInsertTools";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UISettinnRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUISettinnRibbonBaseButtonItem == null))
                {
                    this.mUISettinnRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUISettinnRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnInsert";
                    this.mUISettinnRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUISettinnRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUISettinnRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUISettinnRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpEditRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIGrpEditRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEdit";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIBtnOkRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnOkRibbonBaseButtonItem == null))
                {
                    this.mUIBtnOkRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnOkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIBtnOkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBtnOkRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIBtnOkRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIBtnOkRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpcLineToolsRibbonPageCategory : DXRibbonPageCategory
    {
        
        public UIRpcLineToolsRibbonPageCategory(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpcLineTools";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageCategory";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpLineRibbonPage UIRpLineRibbonPage
        {
            get
            {
                if ((this.mUIRpLineRibbonPage == null))
                {
                    this.mUIRpLineRibbonPage = new UIRpLineRibbonPage(this);
                }
                return this.mUIRpLineRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpLineRibbonPage mUIRpLineRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpLineRibbonPage : DXRibbonPage
    {
        
        public UIRpLineRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpLine";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRibbonPageGroup24RibbonPageGroup UIRibbonPageGroup24RibbonPageGroup
        {
            get
            {
                if ((this.mUIRibbonPageGroup24RibbonPageGroup == null))
                {
                    this.mUIRibbonPageGroup24RibbonPageGroup = new UIRibbonPageGroup24RibbonPageGroup(this);
                }
                return this.mUIRibbonPageGroup24RibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonPageGroup24RibbonPageGroup mUIRibbonPageGroup24RibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRibbonPageGroup24RibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRibbonPageGroup24RibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup24";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIOKRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIOKRibbonBaseButtonItem == null))
                {
                    this.mUIOKRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIOKRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIOKRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIOKRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIOKRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow31 : DXWindow
    {
        
        public UIItemWindow31()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GT-4001 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GT");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("GT-4001 - Informasjon");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        
        public DXButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIJAButton.WindowTitles.Add("GT-4001 - Informasjon");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        
        private DXButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIArbeidsplanInnstilliWindow : DXWindow
    {
        
        public UIArbeidsplanInnstilliWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan - Innstillinger";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public UITcDataTabList UITcDataTabList
        {
            get
            {
                if ((this.mUITcDataTabList == null))
                {
                    this.mUITcDataTabList = new UITcDataTabList(this);
                }
                return this.mUITcDataTabList;
            }
        }
        
        public UIGSPanelControlClient4 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient4(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        
        public UITcDataTabList1 UITcDataTabList1
        {
            get
            {
                if ((this.mUITcDataTabList1 == null))
                {
                    this.mUITcDataTabList1 = new UITcDataTabList1(this);
                }
                return this.mUITcDataTabList1;
            }
        }
        #endregion
        
        #region Fields
        private UITcDataTabList mUITcDataTabList;
        
        private UIGSPanelControlClient4 mUIGSPanelControlClient;
        
        private UITcDataTabList1 mUITcDataTabList1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcDataTabList : DXTestControl
    {
        
        public UITcDataTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcData";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public UITpConfigurationClient UITpConfigurationClient
        {
            get
            {
                if ((this.mUITpConfigurationClient == null))
                {
                    this.mUITpConfigurationClient = new UITpConfigurationClient(this);
                }
                return this.mUITpConfigurationClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpConfigurationClient mUITpConfigurationClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpConfigurationClient : DXTestControl
    {
        
        public UITpConfigurationClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpConfiguration";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public UIPaCenterClient UIPaCenterClient
        {
            get
            {
                if ((this.mUIPaCenterClient == null))
                {
                    this.mUIPaCenterClient = new UIPaCenterClient(this);
                }
                return this.mUIPaCenterClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPaCenterClient mUIPaCenterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPaCenterClient : DXTestControl
    {
        
        public UIPaCenterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paCenter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDate0PopupEdit
        {
            get
            {
                if ((this.mUIPceDate0PopupEdit == null))
                {
                    this.mUIPceDate0PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate[0]";
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDate0PopupEdit.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIPceDate0PopupEdit;
            }
        }
        
        public DXLookUpEdit UILeDisplayStartDateLookUpEdit
        {
            get
            {
                if ((this.mUILeDisplayStartDateLookUpEdit == null))
                {
                    this.mUILeDisplayStartDateLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUILeDisplayStartDateLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "leDisplayStartDate";
                    this.mUILeDisplayStartDateLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    this.mUILeDisplayStartDateLookUpEdit.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUILeDisplayStartDateLookUpEdit;
            }
        }
        
        public DXTextEdit UIENameEdit
        {
            get
            {
                if ((this.mUIENameEdit == null))
                {
                    this.mUIENameEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "eName";
                    this.mUIENameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENameEdit.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIENameEdit;
            }
        }
        
        public DXLookUpEdit UILeRosterplanTypeLookUpEdit
        {
            get
            {
                if ((this.mUILeRosterplanTypeLookUpEdit == null))
                {
                    this.mUILeRosterplanTypeLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUILeRosterplanTypeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "leRosterplanType";
                    this.mUILeRosterplanTypeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    #endregion
                }
                return this.mUILeRosterplanTypeLookUpEdit;
            }
        }
        
        public DXPopupEdit UIPceDate2PopupEdit
        {
            get
            {
                if ((this.mUIPceDate2PopupEdit == null))
                {
                    this.mUIPceDate2PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDate2PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate[2]";
                    this.mUIPceDate2PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDate2PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDate2PopupEdit.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIPceDate2PopupEdit;
            }
        }
        
        public DXTextEdit UIENumber1Edit
        {
            get
            {
                if ((this.mUIENumber1Edit == null))
                {
                    this.mUIENumber1Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENumber1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eNumber[1]";
                    this.mUIENumber1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENumber1Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIENumber1Edit.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIENumber1Edit;
            }
        }
        
        public DXTextEdit UIENumber0Edit
        {
            get
            {
                if ((this.mUIENumber0Edit == null))
                {
                    this.mUIENumber0Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eNumber[0]";
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIENumber0Edit.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIENumber0Edit;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDate0PopupEdit;
        
        private DXLookUpEdit mUILeDisplayStartDateLookUpEdit;
        
        private DXTextEdit mUIENameEdit;
        
        private DXLookUpEdit mUILeRosterplanTypeLookUpEdit;
        
        private DXPopupEdit mUIPceDate2PopupEdit;
        
        private DXTextEdit mUIENumber1Edit;
        
        private DXTextEdit mUIENumber0Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSPanelControlClient4 : DXTestControl
    {
        
        public UIGSPanelControlClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcDataTabList1 : DXTestControl
    {
        
        public UITcDataTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcData";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public UITpConfigurationClient1 UITpConfigurationClient
        {
            get
            {
                if ((this.mUITpConfigurationClient == null))
                {
                    this.mUITpConfigurationClient = new UITpConfigurationClient1(this);
                }
                return this.mUITpConfigurationClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpConfigurationClient1 mUITpConfigurationClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpConfigurationClient1 : DXTestControl
    {
        
        public UITpConfigurationClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpConfiguration";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public UIPaCenterClient1 UIPaCenterClient
        {
            get
            {
                if ((this.mUIPaCenterClient == null))
                {
                    this.mUIPaCenterClient = new UIPaCenterClient1(this);
                }
                return this.mUIPaCenterClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPaCenterClient1 mUIPaCenterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPaCenterClient1 : DXTestControl
    {
        
        public UIPaCenterClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paCenter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public UIEValidToDateCustom UIEValidToDateCustom
        {
            get
            {
                if ((this.mUIEValidToDateCustom == null))
                {
                    this.mUIEValidToDateCustom = new UIEValidToDateCustom(this);
                }
                return this.mUIEValidToDateCustom;
            }
        }
        
        public UIEStartDateCustom UIEStartDateCustom
        {
            get
            {
                if ((this.mUIEStartDateCustom == null))
                {
                    this.mUIEStartDateCustom = new UIEStartDateCustom(this);
                }
                return this.mUIEStartDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEValidToDateCustom mUIEValidToDateCustom;
        
        private UIEStartDateCustom mUIEStartDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEValidToDateCustom : DXTestControl
    {
        
        public UIEValidToDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "eValidToDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEStartDateCustom : DXTestControl
    {
        
        public UIEStartDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "eStartDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRunningapplicationsWindow : WinWindow
    {
        
        public UIRunningapplicationsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Running applications";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MSTaskSwWClass";
            this.WindowTitles.Add("Running applications");
            #endregion
        }
        
        #region Properties
        public UIRunningapplicationsClient UIRunningapplicationsClient
        {
            get
            {
                if ((this.mUIRunningapplicationsClient == null))
                {
                    this.mUIRunningapplicationsClient = new UIRunningapplicationsClient(this);
                }
                return this.mUIRunningapplicationsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIRunningapplicationsClient mUIRunningapplicationsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRunningapplicationsClient : WinClient
    {
        
        public UIRunningapplicationsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Running applications";
            this.WindowTitles.Add("Running applications");
            #endregion
        }
        
        #region Properties
        public WinWindow UIRunningapplicationsWindow
        {
            get
            {
                if ((this.mUIRunningapplicationsWindow == null))
                {
                    this.mUIRunningapplicationsWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIRunningapplicationsWindow.SearchProperties[WinWindow.PropertyNames.Name] = "Running applications";
                    this.mUIRunningapplicationsWindow.SearchProperties[WinWindow.PropertyNames.ClassName] = "MSTaskListWClass";
                    this.mUIRunningapplicationsWindow.WindowTitles.Add("Running applications");
                    #endregion
                }
                return this.mUIRunningapplicationsWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUIRunningapplicationsWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIArbeidsplanKopi_2avGWindow : DXWindow
    {
        
        public UIArbeidsplanKopi_2avGWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient2 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient2(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient2 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlRosterPlanClient2 : DXTestControl
    {
        
        public UIPnlRosterPlanClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable2 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable2(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable2 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcRosterPlanTable2 : DXGrid
    {
        
        public UIGcRosterPlanTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_4";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_18";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_9";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        
        private DXCell mUIItemCell1;
        
        private DXCell mUIItemCell2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63031732ASCLAvWindow15 : WinWindow
    {
        
        public UIGatver63031732ASCLAvWindow15()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow30 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow30(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public DXButton UIEndreButton
        {
            get
            {
                if ((this.mUIEndreButton == null))
                {
                    this.mUIEndreButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIEndreButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEdit";
                    this.mUIEndreButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIEndreButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIEndreButton;
            }
        }
        
        public UIItemWindow115 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow115(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow30 mUIItemWindow;
        
        private DXButton mUIEndreButton;
        
        private UIItemWindow115 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow30 : WinWindow
    {
        
        public UIItemWindow30(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsattClient
        {
            get
            {
                if ((this.mUIAnsattClient == null))
                {
                    this.mUIAnsattClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsattClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAnsattClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsattClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow115 : WinWindow
    {
        
        public UIItemWindow115(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxGridSite";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsatteClient
        {
            get
            {
                if ((this.mUIAnsatteClient == null))
                {
                    this.mUIAnsatteClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsatteClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAnsatteClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsatteClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIStillingsforholdWindow : DXWindow
    {
        
        public UIStillingsforholdWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Stillingsforhold";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public UIPcContentClient3 UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient3(this);
                }
                return this.mUIPcContentClient;
            }
        }
        
        public UIGSDialogFooterBarCustom1 UIGSDialogFooterBarCustom
        {
            get
            {
                if ((this.mUIGSDialogFooterBarCustom == null))
                {
                    this.mUIGSDialogFooterBarCustom = new UIGSDialogFooterBarCustom1(this);
                }
                return this.mUIGSDialogFooterBarCustom;
            }
        }
        
        public UIPcContentClient11 UIPcContentClient1
        {
            get
            {
                if ((this.mUIPcContentClient1 == null))
                {
                    this.mUIPcContentClient1 = new UIPcContentClient11(this);
                }
                return this.mUIPcContentClient1;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient3 mUIPcContentClient;
        
        private UIGSDialogFooterBarCustom1 mUIGSDialogFooterBarCustom;
        
        private UIPcContentClient11 mUIPcContentClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcContentClient3 : DXTestControl
    {
        
        public UIPcContentClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UISePositionPercentEdit
        {
            get
            {
                if ((this.mUISePositionPercentEdit == null))
                {
                    this.mUISePositionPercentEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISePositionPercentEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sePositionPercent";
                    this.mUISePositionPercentEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSpinEdit";
                    this.mUISePositionPercentEdit.WindowTitles.Add("Stillingsforhold");
                    #endregion
                }
                return this.mUISePositionPercentEdit;
            }
        }
        
        public DXPopupEdit UIPceDate1PopupEdit
        {
            get
            {
                if ((this.mUIPceDate1PopupEdit == null))
                {
                    this.mUIPceDate1PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate[1]";
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDate1PopupEdit.WindowTitles.Add("Stillingsforhold");
                    #endregion
                }
                return this.mUIPceDate1PopupEdit;
            }
        }
        
        public DXPopupEdit UIPceDate0PopupEdit
        {
            get
            {
                if ((this.mUIPceDate0PopupEdit == null))
                {
                    this.mUIPceDate0PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate[0]";
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDate0PopupEdit.WindowTitles.Add("Stillingsforhold");
                    #endregion
                }
                return this.mUIPceDate0PopupEdit;
            }
        }
        
        public UIGSPanelControlClient5 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient5(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        
        public UIGSPanelControlClient11 UIGSPanelControlClient1
        {
            get
            {
                if ((this.mUIGSPanelControlClient1 == null))
                {
                    this.mUIGSPanelControlClient1 = new UIGSPanelControlClient11(this);
                }
                return this.mUIGSPanelControlClient1;
            }
        }
        
        public DXTextEdit UITeBaseSalaryEdit
        {
            get
            {
                if ((this.mUITeBaseSalaryEdit == null))
                {
                    this.mUITeBaseSalaryEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITeBaseSalaryEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teBaseSalary";
                    this.mUITeBaseSalaryEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUITeBaseSalaryEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUITeBaseSalaryEdit.WindowTitles.Add("Stillingsforhold");
                    #endregion
                }
                return this.mUITeBaseSalaryEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUISePositionPercentEdit;
        
        private DXPopupEdit mUIPceDate1PopupEdit;
        
        private DXPopupEdit mUIPceDate0PopupEdit;
        
        private UIGSPanelControlClient5 mUIGSPanelControlClient;
        
        private UIGSPanelControlClient11 mUIGSPanelControlClient1;
        
        private DXTextEdit mUITeBaseSalaryEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSPanelControlClient5 : DXTestControl
    {
        
        public UIGSPanelControlClient5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UIGSSearchLookUpEditLookUpEdit
        {
            get
            {
                if ((this.mUIGSSearchLookUpEditLookUpEdit == null))
                {
                    this.mUIGSSearchLookUpEditLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGSSearchLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "slueRuleSet";
                    this.mUIGSSearchLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
                    #endregion
                }
                return this.mUIGSSearchLookUpEditLookUpEdit;
            }
        }
        
        public DXLookUpEdit UIGSSearchLookUpEditLookUpEdit1
        {
            get
            {
                if ((this.mUIGSSearchLookUpEditLookUpEdit1 == null))
                {
                    this.mUIGSSearchLookUpEditLookUpEdit1 = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGSSearchLookUpEditLookUpEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "sluePositionCategory";
                    this.mUIGSSearchLookUpEditLookUpEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
                    #endregion
                }
                return this.mUIGSSearchLookUpEditLookUpEdit1;
            }
        }
        
        public DXLookUpEdit UIGSSearchLookUpEditLookUpEdit2
        {
            get
            {
                if ((this.mUIGSSearchLookUpEditLookUpEdit2 == null))
                {
                    this.mUIGSSearchLookUpEditLookUpEdit2 = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGSSearchLookUpEditLookUpEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "slueWeaAgreement";
                    this.mUIGSSearchLookUpEditLookUpEdit2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
                    #endregion
                }
                return this.mUIGSSearchLookUpEditLookUpEdit2;
            }
        }
        
        public DXTextEdit UITeInternalPositionNuEdit
        {
            get
            {
                if ((this.mUITeInternalPositionNuEdit == null))
                {
                    this.mUITeInternalPositionNuEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITeInternalPositionNuEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teInternalPositionNumber";
                    this.mUITeInternalPositionNuEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUITeInternalPositionNuEdit.WindowTitles.Add("Stillingsforhold");
                    #endregion
                }
                return this.mUITeInternalPositionNuEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUIGSSearchLookUpEditLookUpEdit;
        
        private DXLookUpEdit mUIGSSearchLookUpEditLookUpEdit1;
        
        private DXLookUpEdit mUIGSSearchLookUpEditLookUpEdit2;
        
        private DXTextEdit mUITeInternalPositionNuEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSPanelControlClient11 : DXTestControl
    {
        
        public UIGSPanelControlClient11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcBigGroup";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UIGSSearchLookUpEditLookUpEdit
        {
            get
            {
                if ((this.mUIGSSearchLookUpEditLookUpEdit == null))
                {
                    this.mUIGSSearchLookUpEditLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGSSearchLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "slueUnion";
                    this.mUIGSSearchLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
                    #endregion
                }
                return this.mUIGSSearchLookUpEditLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUIGSSearchLookUpEditLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSDialogFooterBarCustom1 : DXTestControl
    {
        
        public UIGSDialogFooterBarCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dbFooter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDialogFooterBar";
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Stillingsforhold");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcContentClient11 : DXTestControl
    {
        
        public UIPcContentClient11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public UISdeFromDateCustom UISdeFromDateCustom
        {
            get
            {
                if ((this.mUISdeFromDateCustom == null))
                {
                    this.mUISdeFromDateCustom = new UISdeFromDateCustom(this);
                }
                return this.mUISdeFromDateCustom;
            }
        }
        
        public UISdeToDateCustom UISdeToDateCustom
        {
            get
            {
                if ((this.mUISdeToDateCustom == null))
                {
                    this.mUISdeToDateCustom = new UISdeToDateCustom(this);
                }
                return this.mUISdeToDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISdeFromDateCustom mUISdeFromDateCustom;
        
        private UISdeToDateCustom mUISdeToDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISdeFromDateCustom : DXTestControl
    {
        
        public UISdeFromDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeFromDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Stillingsforhold");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISdeToDateCustom : DXTestControl
    {
        
        public UISdeToDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeToDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Stillingsforhold");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIArbeidsplanKopi_2avGWindow1 : DXWindow
    {
        
        public UIArbeidsplanKopi_2avGWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon3 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon3(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        
        public UIPnlRosterPlanClient3 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient3(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        
        public UIRcMenuRibbon11 UIRcMenuRibbon1
        {
            get
            {
                if ((this.mUIRcMenuRibbon1 == null))
                {
                    this.mUIRcMenuRibbon1 = new UIRcMenuRibbon11(this);
                }
                return this.mUIRcMenuRibbon1;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon3 mUIRcMenuRibbon;
        
        private UIPnlRosterPlanClient3 mUIPnlRosterPlanClient;
        
        private UIRcMenuRibbon11 mUIRcMenuRibbon1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRcMenuRibbon3 : DXRibbon
    {
        
        public UIRcMenuRibbon3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpPlanRibbonPage2 UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new UIRpPlanRibbonPage2(this);
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        
        public UIRpcLineToolsRibbonPageCategory1 UIRpcLineToolsRibbonPageCategory
        {
            get
            {
                if ((this.mUIRpcLineToolsRibbonPageCategory == null))
                {
                    this.mUIRpcLineToolsRibbonPageCategory = new UIRpcLineToolsRibbonPageCategory1(this);
                }
                return this.mUIRpcLineToolsRibbonPageCategory;
            }
        }
        #endregion
        
        #region Fields
        private UIRpPlanRibbonPage2 mUIRpPlanRibbonPage;
        
        private UIRpcLineToolsRibbonPageCategory1 mUIRpcLineToolsRibbonPageCategory;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpPlanRibbonPage2 : DXRibbonPage
    {
        
        public UIRpPlanRibbonPage2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpgPlanRibbonPageGroup1 UIRpgPlanRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgPlanRibbonPageGroup == null))
                {
                    this.mUIRpgPlanRibbonPageGroup = new UIRpgPlanRibbonPageGroup1(this);
                }
                return this.mUIRpgPlanRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgPlanRibbonPageGroup1 mUIRpgPlanRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpgPlanRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIRpgPlanRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIAnsatteRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIAnsatteRibbonBaseButtonItem == null))
                {
                    this.mUIAnsatteRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIAnsatteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEmployees";
                    this.mUIAnsatteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIAnsatteRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIAnsatteRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIInnstillingerRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIInnstillingerRibbonBaseButtonItem == null))
                {
                    this.mUIInnstillingerRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIInnstillingerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSettings";
                    this.mUIInnstillingerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIInnstillingerRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIInnstillingerRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIAnsatteRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIInnstillingerRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpcLineToolsRibbonPageCategory1 : DXRibbonPageCategory
    {
        
        public UIRpcLineToolsRibbonPageCategory1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpcLineTools";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageCategory";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpLineRibbonPage1 UIRpLineRibbonPage
        {
            get
            {
                if ((this.mUIRpLineRibbonPage == null))
                {
                    this.mUIRpLineRibbonPage = new UIRpLineRibbonPage1(this);
                }
                return this.mUIRpLineRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpLineRibbonPage1 mUIRpLineRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpLineRibbonPage1 : DXRibbonPage
    {
        
        public UIRpLineRibbonPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpLine";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpgEmployeeLineRibbonPageGroup UIRpgEmployeeLineRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgEmployeeLineRibbonPageGroup == null))
                {
                    this.mUIRpgEmployeeLineRibbonPageGroup = new UIRpgEmployeeLineRibbonPageGroup(this);
                }
                return this.mUIRpgEmployeeLineRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgEmployeeLineRibbonPageGroup mUIRpgEmployeeLineRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpgEmployeeLineRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgEmployeeLineRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgEmployeeLine";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UILinjeinnstillingerRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUILinjeinnstillingerRibbonBaseButtonItem == null))
                {
                    this.mUILinjeinnstillingerRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUILinjeinnstillingerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEditLine";
                    this.mUILinjeinnstillingerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUILinjeinnstillingerRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUILinjeinnstillingerRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUILinjeinnstillingerRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlRosterPlanClient3 : DXTestControl
    {
        
        public UIPnlRosterPlanClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable3 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable3(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable3 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcRosterPlanTable3 : DXGrid
    {
        
        public UIGcRosterPlanTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_2";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_0";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_0";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        
        private DXCell mUIItemCell1;
        
        private DXCell mUIItemCell2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRcMenuRibbon11 : DXRibbon
    {
        
        public UIRcMenuRibbon11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpPlanRibbonPage3 UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new UIRpPlanRibbonPage3(this);
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpPlanRibbonPage3 mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpPlanRibbonPage3 : DXRibbonPage
    {
        
        public UIRpPlanRibbonPage3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpgPlanRibbonPageGroup2 UIRpgPlanRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgPlanRibbonPageGroup == null))
                {
                    this.mUIRpgPlanRibbonPageGroup = new UIRpgPlanRibbonPageGroup2(this);
                }
                return this.mUIRpgPlanRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgPlanRibbonPageGroup2 mUIRpgPlanRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpgPlanRibbonPageGroup2 : DXRibbonPageGroup
    {
        
        public UIRpgPlanRibbonPageGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIAnsatteRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIAnsatteRibbonBaseButtonItem == null))
                {
                    this.mUIAnsatteRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIAnsatteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEmployees";
                    this.mUIAnsatteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIAnsatteRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIAnsatteRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIAnsatteRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAnsatteiArbeidsplanWindow : DXWindow
    {
        
        public UIAnsatteiArbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansatte i Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ansatte i Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlControlClient UIPnlControlClient
        {
            get
            {
                if ((this.mUIPnlControlClient == null))
                {
                    this.mUIPnlControlClient = new UIPnlControlClient(this);
                }
                return this.mUIPnlControlClient;
            }
        }
        
        public UIGSPanelControlClient6 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient6(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        
        public UIPanelControlOuterClient UIPanelControlOuterClient
        {
            get
            {
                if ((this.mUIPanelControlOuterClient == null))
                {
                    this.mUIPanelControlOuterClient = new UIPanelControlOuterClient(this);
                }
                return this.mUIPanelControlOuterClient;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlControlClient mUIPnlControlClient;
        
        private UIGSPanelControlClient6 mUIGSPanelControlClient;
        
        private UIPanelControlOuterClient mUIPanelControlOuterClient;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlControlClient : DXTestControl
    {
        
        public UIPnlControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Ansatte i Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGrpSelectedEmployeesClient UIGrpSelectedEmployeesClient
        {
            get
            {
                if ((this.mUIGrpSelectedEmployeesClient == null))
                {
                    this.mUIGrpSelectedEmployeesClient = new UIGrpSelectedEmployeesClient(this);
                }
                return this.mUIGrpSelectedEmployeesClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpSelectedEmployeesClient mUIGrpSelectedEmployeesClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpSelectedEmployeesClient : DXTestControl
    {
        
        public UIGrpSelectedEmployeesClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpSelectedEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Ansatte i Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcEmployeesTable UIGcEmployeesTable
        {
            get
            {
                if ((this.mUIGcEmployeesTable == null))
                {
                    this.mUIGcEmployeesTable = new UIGcEmployeesTable(this);
                }
                return this.mUIGcEmployeesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcEmployeesTable mUIGcEmployeesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcEmployeesTable : DXGrid
    {
        
        public UIGcEmployeesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Ansatte i Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem100Cell
        {
            get
            {
                if ((this.mUIItem100Cell == null))
                {
                    this.mUIItem100Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem100Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]0[Column]gcolStPercent";
                    this.mUIItem100Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem100Cell.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIItem100Cell;
            }
        }
        
        public DXTextEdit UIRow0ColumngcolStPercEdit
        {
            get
            {
                if ((this.mUIRow0ColumngcolStPercEdit == null))
                {
                    this.mUIRow0ColumngcolStPercEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow0ColumngcolStPercEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesTextEdit[View]gvEmployees[Row]0[Column]gcolStPercent";
                    this.mUIRow0ColumngcolStPercEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow0ColumngcolStPercEdit.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIRow0ColumngcolStPercEdit;
            }
        }
        
        public DXCell UIItem25Cell
        {
            get
            {
                if ((this.mUIItem25Cell == null))
                {
                    this.mUIItem25Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem25Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]2[Column]gcolStPercent";
                    this.mUIItem25Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem25Cell.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIItem25Cell;
            }
        }
        
        public DXTextEdit UIRow2ColumngcolStPercEdit
        {
            get
            {
                if ((this.mUIRow2ColumngcolStPercEdit == null))
                {
                    this.mUIRow2ColumngcolStPercEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow2ColumngcolStPercEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesTextEdit[View]gvEmployees[Row]2[Column]gcolStPercent";
                    this.mUIRow2ColumngcolStPercEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow2ColumngcolStPercEdit.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIRow2ColumngcolStPercEdit;
            }
        }
        
        public DXCell UIValgtCell
        {
            get
            {
                if ((this.mUIValgtCell == null))
                {
                    this.mUIValgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]0[Column]gcolSelectedAll";
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell;
            }
        }
        
        public DXCell UIValgtCell1
        {
            get
            {
                if ((this.mUIValgtCell1 == null))
                {
                    this.mUIValgtCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]1[Column]gcolSelectedAll";
                    this.mUIValgtCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell1.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell1;
            }
        }
        
        public DXCell UIValgtCell2
        {
            get
            {
                if ((this.mUIValgtCell2 == null))
                {
                    this.mUIValgtCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]2[Column]gcolSelectedAll";
                    this.mUIValgtCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell2.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell2;
            }
        }
        
        public DXCell UIValgtCell3
        {
            get
            {
                if ((this.mUIValgtCell3 == null))
                {
                    this.mUIValgtCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]3[Column]gcolSelectedAll";
                    this.mUIValgtCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell3.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell3;
            }
        }
        
        public DXCell UIValgtCell4
        {
            get
            {
                if ((this.mUIValgtCell4 == null))
                {
                    this.mUIValgtCell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]4[Column]gcolSelectedAll";
                    this.mUIValgtCell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell4.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell4;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem100Cell;
        
        private DXTextEdit mUIRow0ColumngcolStPercEdit;
        
        private DXCell mUIItem25Cell;
        
        private DXTextEdit mUIRow2ColumngcolStPercEdit;
        
        private DXCell mUIValgtCell;
        
        private DXCell mUIValgtCell1;
        
        private DXCell mUIValgtCell2;
        
        private DXCell mUIValgtCell3;
        
        private DXCell mUIValgtCell4;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSPanelControlClient6 : DXTestControl
    {
        
        public UIGSPanelControlClient6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Ansatte i Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSave";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        
        public UIPnlDropDownsClient UIPnlDropDownsClient
        {
            get
            {
                if ((this.mUIPnlDropDownsClient == null))
                {
                    this.mUIPnlDropDownsClient = new UIPnlDropDownsClient(this);
                }
                return this.mUIPnlDropDownsClient;
            }
        }
        
        public UIPnlDropDownsClient1 UIPnlDropDownsClient1
        {
            get
            {
                if ((this.mUIPnlDropDownsClient1 == null))
                {
                    this.mUIPnlDropDownsClient1 = new UIPnlDropDownsClient1(this);
                }
                return this.mUIPnlDropDownsClient1;
            }
        }
        
        public DXButton UIVelgalleButton
        {
            get
            {
                if ((this.mUIVelgalleButton == null))
                {
                    this.mUIVelgalleButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAll";
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIVelgalleButton.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIVelgalleButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        
        private UIPnlDropDownsClient mUIPnlDropDownsClient;
        
        private UIPnlDropDownsClient1 mUIPnlDropDownsClient1;
        
        private DXButton mUIVelgalleButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlDropDownsClient : DXTestControl
    {
        
        public UIPnlDropDownsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlDropDowns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UIGsleToSporadicLookUpEdit
        {
            get
            {
                if ((this.mUIGsleToSporadicLookUpEdit == null))
                {
                    this.mUIGsleToSporadicLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGsleToSporadicLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gsleToSporadic";
                    this.mUIGsleToSporadicLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    #endregion
                }
                return this.mUIGsleToSporadicLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUIGsleToSporadicLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlDropDownsClient1 : DXTestControl
    {
        
        public UIPnlDropDownsClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlDropDowns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UIGsleToSporadicLookUpEdit
        {
            get
            {
                if ((this.mUIGsleToSporadicLookUpEdit == null))
                {
                    this.mUIGsleToSporadicLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGsleToSporadicLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gsleToSporadic";
                    this.mUIGsleToSporadicLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    #endregion
                }
                return this.mUIGsleToSporadicLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUIGsleToSporadicLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPanelControlOuterClient : DXTestControl
    {
        
        public UIPanelControlOuterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlOuter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPanelControlLeftClient UIPanelControlLeftClient
        {
            get
            {
                if ((this.mUIPanelControlLeftClient == null))
                {
                    this.mUIPanelControlLeftClient = new UIPanelControlLeftClient(this);
                }
                return this.mUIPanelControlLeftClient;
            }
        }
        
        public UIPanelControlRightClient UIPanelControlRightClient
        {
            get
            {
                if ((this.mUIPanelControlRightClient == null))
                {
                    this.mUIPanelControlRightClient = new UIPanelControlRightClient(this);
                }
                return this.mUIPanelControlRightClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControlLeftClient mUIPanelControlLeftClient;
        
        private UIPanelControlRightClient mUIPanelControlRightClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPanelControlLeftClient : DXTestControl
    {
        
        public UIPanelControlLeftClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlLeft";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UITreeListEmployeesTreeList UITreeListEmployeesTreeList
        {
            get
            {
                if ((this.mUITreeListEmployeesTreeList == null))
                {
                    this.mUITreeListEmployeesTreeList = new UITreeListEmployeesTreeList(this);
                }
                return this.mUITreeListEmployeesTreeList;
            }
        }
        
        public DXButton UIAnsatteButton
        {
            get
            {
                if ((this.mUIAnsatteButton == null))
                {
                    this.mUIAnsatteButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAnsatteButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonAdd";
                    this.mUIAnsatteButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButton";
                    this.mUIAnsatteButton.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIAnsatteButton;
            }
        }
        #endregion
        
        #region Fields
        private UITreeListEmployeesTreeList mUITreeListEmployeesTreeList;
        
        private DXButton mUIAnsatteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITreeListEmployeesTreeList : DXTreeList
    {
        
        public UITreeListEmployeesTreeList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "treeListEmployee";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeList";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        
        public UINode2TreeListNode UINode2TreeListNode
        {
            get
            {
                if ((this.mUINode2TreeListNode == null))
                {
                    this.mUINode2TreeListNode = new UINode2TreeListNode(this);
                }
                return this.mUINode2TreeListNode;
            }
        }
        
        public UINode1TreeListNode UINode1TreeListNode
        {
            get
            {
                if ((this.mUINode1TreeListNode == null))
                {
                    this.mUINode1TreeListNode = new UINode1TreeListNode(this);
                }
                return this.mUINode1TreeListNode;
            }
        }
        
        public UINode3TreeListNode UINode3TreeListNode
        {
            get
            {
                if ((this.mUINode3TreeListNode == null))
                {
                    this.mUINode3TreeListNode = new UINode3TreeListNode(this);
                }
                return this.mUINode3TreeListNode;
            }
        }
        
        public UINode4TreeListNode UINode4TreeListNode
        {
            get
            {
                if ((this.mUINode4TreeListNode == null))
                {
                    this.mUINode4TreeListNode = new UINode4TreeListNode(this);
                }
                return this.mUINode4TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode mUINode0TreeListNode;
        
        private UINode2TreeListNode mUINode2TreeListNode;
        
        private UINode1TreeListNode mUINode1TreeListNode;
        
        private UINode3TreeListNode mUINode3TreeListNode;
        
        private UINode4TreeListNode mUINode4TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode : DXTreeListNode
    {
        
        public UINode0TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode1 UINode0TreeListNode1
        {
            get
            {
                if ((this.mUINode0TreeListNode1 == null))
                {
                    this.mUINode0TreeListNode1 = new UINode0TreeListNode1(this);
                }
                return this.mUINode0TreeListNode1;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode1 mUINode0TreeListNode1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode1 : DXTreeListNode
    {
        
        public UINode0TreeListNode1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode2TreeListNode : DXTreeListNode
    {
        
        public UINode2TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode2 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode2(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode2 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode2 : DXTreeListNode
    {
        
        public UINode0TreeListNode2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem125TreeListCell
        {
            get
            {
                if ((this.mUIItem125TreeListCell == null))
                {
                    this.mUIItem125TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem125TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem125TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem125TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem125TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem125TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode1TreeListNode : DXTreeListNode
    {
        
        public UINode1TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode3 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode3(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode3 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode3 : DXTreeListNode
    {
        
        public UINode0TreeListNode3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem7001HelgeavtaleaTreeListCell
        {
            get
            {
                if ((this.mUIItem7001HelgeavtaleaTreeListCell == null))
                {
                    this.mUIItem7001HelgeavtaleaTreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem7001HelgeavtaleaTreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colDepartmentDisplayNameMain";
                    this.mUIItem7001HelgeavtaleaTreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem7001HelgeavtaleaTreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem7001HelgeavtaleaTreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem7001HelgeavtaleaTreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode3TreeListNode : DXTreeListNode
    {
        
        public UINode3TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode4 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode4(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode4 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode4 : DXTreeListNode
    {
        
        public UINode0TreeListNode4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode4TreeListNode : DXTreeListNode
    {
        
        public UINode4TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode5 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode5(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode5 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode5 : DXTreeListNode
    {
        
        public UINode0TreeListNode5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPanelControlRightClient : DXTestControl
    {
        
        public UIPanelControlRightClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlRight";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom mUIViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIViewHostCustom : DXTestControl
    {
        
        public UIViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcViewClient : DXTestControl
    {
        
        public UIPcViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIEmployeeEditorsViewCustom UIEmployeeEditorsViewCustom
        {
            get
            {
                if ((this.mUIEmployeeEditorsViewCustom == null))
                {
                    this.mUIEmployeeEditorsViewCustom = new UIEmployeeEditorsViewCustom(this);
                }
                return this.mUIEmployeeEditorsViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeEditorsViewCustom mUIEmployeeEditorsViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEmployeeEditorsViewCustom : DXTestControl
    {
        
        public UIEmployeeEditorsViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeEditorsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeEditorsView";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPcContentClient4 UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient4(this);
                }
                return this.mUIPcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient4 mUIPcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcContentClient4 : DXTestControl
    {
        
        public UIPcContentClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIXscContentScrollableControl UIXscContentScrollableControl
        {
            get
            {
                if ((this.mUIXscContentScrollableControl == null))
                {
                    this.mUIXscContentScrollableControl = new UIXscContentScrollableControl(this);
                }
                return this.mUIXscContentScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UIXscContentScrollableControl mUIXscContentScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIXscContentScrollableControl : DXScrollableControl
    {
        
        public UIXscContentScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xscContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraScrollableControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGroupControlViewHostCustom UIGroupControlViewHostCustom
        {
            get
            {
                if ((this.mUIGroupControlViewHostCustom == null))
                {
                    this.mUIGroupControlViewHostCustom = new UIGroupControlViewHostCustom(this);
                }
                return this.mUIGroupControlViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGroupControlViewHostCustom mUIGroupControlViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGroupControlViewHostCustom : DXTestControl
    {
        
        public UIGroupControlViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControlViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControlViewHost";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGroupControlClient UIGroupControlClient
        {
            get
            {
                if ((this.mUIGroupControlClient == null))
                {
                    this.mUIGroupControlClient = new UIGroupControlClient(this);
                }
                return this.mUIGroupControlClient;
            }
        }
        
        public UIGroupControlClient1 UIGroupControlClient1
        {
            get
            {
                if ((this.mUIGroupControlClient1 == null))
                {
                    this.mUIGroupControlClient1 = new UIGroupControlClient1(this);
                }
                return this.mUIGroupControlClient1;
            }
        }
        #endregion
        
        #region Fields
        private UIGroupControlClient mUIGroupControlClient;
        
        private UIGroupControlClient1 mUIGroupControlClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGroupControlClient : DXTestControl
    {
        
        public UIGroupControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControlViewHostGroupControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIEmployeeManagerLineVCustom UIEmployeeManagerLineVCustom
        {
            get
            {
                if ((this.mUIEmployeeManagerLineVCustom == null))
                {
                    this.mUIEmployeeManagerLineVCustom = new UIEmployeeManagerLineVCustom(this);
                }
                return this.mUIEmployeeManagerLineVCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeManagerLineVCustom mUIEmployeeManagerLineVCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEmployeeManagerLineVCustom : DXTestControl
    {
        
        public UIEmployeeManagerLineVCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeManagerLineView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeManagerLineView";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIEPositionPercentEdit
        {
            get
            {
                if ((this.mUIEPositionPercentEdit == null))
                {
                    this.mUIEPositionPercentEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIEPositionPercentEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "ePositionPercent";
                    this.mUIEPositionPercentEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDoubleEdit";
                    this.mUIEPositionPercentEdit.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIEPositionPercentEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIEPositionPercentEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGroupControlClient1 : DXTestControl
    {
        
        public UIGroupControlClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControlViewHostGroupControl[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            #endregion
        }
        
        #region Properties
        public UIEmployeeManagerOvertCustom UIEmployeeManagerOvertCustom
        {
            get
            {
                if ((this.mUIEmployeeManagerOvertCustom == null))
                {
                    this.mUIEmployeeManagerOvertCustom = new UIEmployeeManagerOvertCustom(this);
                }
                return this.mUIEmployeeManagerOvertCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeManagerOvertCustom mUIEmployeeManagerOvertCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEmployeeManagerOvertCustom : DXTestControl
    {
        
        public UIEmployeeManagerOvertCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeManagerOvertimeCodeView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeManagerOvertimeCodeView";
            #endregion
        }
        
        #region Properties
        public UISearchLookUpEditLookUpEdit UISearchLookUpEditLookUpEdit
        {
            get
            {
                if ((this.mUISearchLookUpEditLookUpEdit == null))
                {
                    this.mUISearchLookUpEditLookUpEdit = new UISearchLookUpEditLookUpEdit(this);
                }
                return this.mUISearchLookUpEditLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UISearchLookUpEditLookUpEdit mUISearchLookUpEditLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISearchLookUpEditLookUpEdit : DXLookUpEdit
    {
        
        public UISearchLookUpEditLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "eOvertimeCode";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchLookUpEdit";
            #endregion
        }
        
        #region Properties
        public UIPopupSearchLookUpEdiWindow1 UIPopupSearchLookUpEdiWindow
        {
            get
            {
                if ((this.mUIPopupSearchLookUpEdiWindow == null))
                {
                    this.mUIPopupSearchLookUpEdiWindow = new UIPopupSearchLookUpEdiWindow1(this);
                }
                return this.mUIPopupSearchLookUpEdiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupSearchLookUpEdiWindow1 mUIPopupSearchLookUpEdiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPopupSearchLookUpEdiWindow1 : DXWindow
    {
        
        public UIPopupSearchLookUpEdiWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "eOvertimeCodePopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupSearchLookUpEditForm";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UISearchEditLookUpPopuCustom1 UISearchEditLookUpPopuCustom
        {
            get
            {
                if ((this.mUISearchEditLookUpPopuCustom == null))
                {
                    this.mUISearchEditLookUpPopuCustom = new UISearchEditLookUpPopuCustom1(this);
                }
                return this.mUISearchEditLookUpPopuCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISearchEditLookUpPopuCustom1 mUISearchEditLookUpPopuCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISearchEditLookUpPopuCustom1 : DXTestControl
    {
        
        public UISearchEditLookUpPopuCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SearchEditLookUpPopup";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchEditLookUpPopup";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILCCustom1 UILCCustom
        {
            get
            {
                if ((this.mUILCCustom == null))
                {
                    this.mUILCCustom = new UILCCustom1(this);
                }
                return this.mUILCCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILCCustom1 mUILCCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILCCustom1 : DXTestControl
    {
        
        public UILCCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILcMainLayoutGroup1 UILcMainLayoutGroup
        {
            get
            {
                if ((this.mUILcMainLayoutGroup == null))
                {
                    this.mUILcMainLayoutGroup = new UILcMainLayoutGroup1(this);
                }
                return this.mUILcMainLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainLayoutGroup1 mUILcMainLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcMainLayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILcMainLayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILciGridLayoutControlItem UILciGridLayoutControlItem
        {
            get
            {
                if ((this.mUILciGridLayoutControlItem == null))
                {
                    this.mUILciGridLayoutControlItem = new UILciGridLayoutControlItem(this);
                }
                return this.mUILciGridLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciGridLayoutControlItem mUILciGridLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILciGridLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciGridLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGridControlTable UIGridControlTable
        {
            get
            {
                if ((this.mUIGridControlTable == null))
                {
                    this.mUIGridControlTable = new UIGridControlTable(this);
                }
                return this.mUIGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGridControlTable mUIGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGridControlTable : DXGrid
    {
        
        public UIGridControlTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIFCell
        {
            get
            {
                if ((this.mUIFCell == null))
                {
                    this.mUIFCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIFCell.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]GridControlCell[View]gvOvertimeCode[Row]3[Column]colCodeOver" +
                        "timeCode";
                    this.mUIFCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIFCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIFCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIFCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILinjeinnstillinger16Window : DXWindow
    {
        
        public UILinjeinnstillinger16Window()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Linjeinnstillinger - [16, Helg ]";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Linjeinnstillinger - [16, Helg ]");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl3Client UIGsPanelControl3Client
        {
            get
            {
                if ((this.mUIGsPanelControl3Client == null))
                {
                    this.mUIGsPanelControl3Client = new UIGsPanelControl3Client(this);
                }
                return this.mUIGsPanelControl3Client;
            }
        }
        
        public UIGSPanelControlClient7 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient7(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl3Client mUIGsPanelControl3Client;
        
        private UIGSPanelControlClient7 mUIGSPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsPanelControl3Client : DXTestControl
    {
        
        public UIGsPanelControl3Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public UIGcOvertimeClient UIGcOvertimeClient
        {
            get
            {
                if ((this.mUIGcOvertimeClient == null))
                {
                    this.mUIGcOvertimeClient = new UIGcOvertimeClient(this);
                }
                return this.mUIGcOvertimeClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcOvertimeClient mUIGcOvertimeClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcOvertimeClient : DXTestControl
    {
        
        public UIGcOvertimeClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcOvertime";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UIDrdToSporadicLookUpEdit
        {
            get
            {
                if ((this.mUIDrdToSporadicLookUpEdit == null))
                {
                    this.mUIDrdToSporadicLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIDrdToSporadicLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "drdToSporadic";
                    this.mUIDrdToSporadicLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    #endregion
                }
                return this.mUIDrdToSporadicLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUIDrdToSporadicLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSPanelControlClient7 : DXTestControl
    {
        
        public UIGSPanelControlClient7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Linjeinnstillinger - [16, Helg ]");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Linjeinnstillinger - [16, Helg ]");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGT2004AdvarselWindow : WinWindow
    {
        
        public UIGT2004AdvarselWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "GT-2004 - Advarsel";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfmMessage";
            this.WindowTitles.Add("GT-2004 - Advarsel");
            #endregion
        }
        
        #region Properties
        public UIItemWindow32 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow32(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow32 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow32 : WinWindow
    {
        
        public UIItemWindow32(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.WindowTitles.Add("GT-2004 - Advarsel");
            #endregion
        }
        
        #region Properties
        public UIGT2004AdvarselClient UIGT2004AdvarselClient
        {
            get
            {
                if ((this.mUIGT2004AdvarselClient == null))
                {
                    this.mUIGT2004AdvarselClient = new UIGT2004AdvarselClient(this);
                }
                return this.mUIGT2004AdvarselClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGT2004AdvarselClient mUIGT2004AdvarselClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGT2004AdvarselClient : WinClient
    {
        
        public UIGT2004AdvarselClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("GT-2004 - Advarsel");
            #endregion
        }
        
        #region Properties
        public WinButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[WinButton.PropertyNames.Name] = "Ja";
                    this.mUIJAButton.WindowTitles.Add("GT-2004 - Advarsel");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILoginWindow : WinWindow
    {
        
        public UILoginWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Login";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmLogin";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public UIItemWindow33 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow33(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UILoginWindow1 UILoginWindow1
        {
            get
            {
                if ((this.mUILoginWindow1 == null))
                {
                    this.mUILoginWindow1 = new UILoginWindow1(this);
                }
                return this.mUILoginWindow1;
            }
        }
        
        public UIAUSERSCLWindow UIAUSERSCLWindow
        {
            get
            {
                if ((this.mUIAUSERSCLWindow == null))
                {
                    this.mUIAUSERSCLWindow = new UIAUSERSCLWindow(this);
                }
                return this.mUIAUSERSCLWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow33 mUIItemWindow;
        
        private UILoginWindow1 mUILoginWindow1;
        
        private UIAUSERSCLWindow mUIAUSERSCLWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow33 : WinWindow
    {
        
        public UIItemWindow33(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSEdit";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILoginWindow1 : WinWindow
    {
        
        public UILoginWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Login";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TTabSheet";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public UILoginClient UILoginClient
        {
            get
            {
                if ((this.mUILoginClient == null))
                {
                    this.mUILoginClient = new UILoginClient(this);
                }
                return this.mUILoginClient;
            }
        }
        #endregion
        
        #region Fields
        private UILoginClient mUILoginClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILoginClient : WinClient
    {
        
        public UILoginClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Login";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAUSERSCLWindow : WinWindow
    {
        
        public UIAUSERSCLWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "AUSERSCL";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSEdit";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIResultaterfrasystemsWindow : WinWindow
    {
        
        public UIResultaterfrasystemsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Resultater fra systemsjekk / faste SQL scripts";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfmSQLViewResult";
            this.WindowTitles.Add("Resultater fra systemsjekk / faste SQL scripts");
            #endregion
        }
        
        #region Properties
        public UIResultaterfrasystemsTitleBar UIResultaterfrasystemsTitleBar
        {
            get
            {
                if ((this.mUIResultaterfrasystemsTitleBar == null))
                {
                    this.mUIResultaterfrasystemsTitleBar = new UIResultaterfrasystemsTitleBar(this);
                }
                return this.mUIResultaterfrasystemsTitleBar;
            }
        }
        
        public UIItemWindow34 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow34(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIResultaterfrasystemsTitleBar mUIResultaterfrasystemsTitleBar;
        
        private UIItemWindow34 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIResultaterfrasystemsTitleBar : WinTitleBar
    {
        
        public UIResultaterfrasystemsTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Resultater fra systemsjekk / faste SQL scripts");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Resultater fra systemsjekk / faste SQL scripts");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow34 : WinWindow
    {
        
        public UIItemWindow34(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Resultater fra systemsjekk / faste SQL scripts");
            #endregion
        }
        
        #region Properties
        public WinClient UIResultaterfrasystemsClient
        {
            get
            {
                if ((this.mUIResultaterfrasystemsClient == null))
                {
                    this.mUIResultaterfrasystemsClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIResultaterfrasystemsClient.WindowTitles.Add("Resultater fra systemsjekk / faste SQL scripts");
                    #endregion
                }
                return this.mUIResultaterfrasystemsClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIResultaterfrasystemsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISystemmelding1Window : WinWindow
    {
        
        public UISystemmelding1Window()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Systemmelding (1)";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmSystemMessage";
            this.WindowTitles.Add("Systemmelding (1)");
            #endregion
        }
        
        #region Properties
        public UISystemmelding1TitleBar UISystemmelding1TitleBar
        {
            get
            {
                if ((this.mUISystemmelding1TitleBar == null))
                {
                    this.mUISystemmelding1TitleBar = new UISystemmelding1TitleBar(this);
                }
                return this.mUISystemmelding1TitleBar;
            }
        }
        
        public UIItemWindow35 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow35(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISystemmelding1TitleBar mUISystemmelding1TitleBar;
        
        private UIItemWindow35 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISystemmelding1TitleBar : WinTitleBar
    {
        
        public UISystemmelding1TitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Systemmelding (1)");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Systemmelding (1)");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow35 : WinWindow
    {
        
        public UIItemWindow35(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.WindowTitles.Add("Systemmelding (1)");
            #endregion
        }
        
        #region Properties
        public UISystemmelding1Client UISystemmelding1Client
        {
            get
            {
                if ((this.mUISystemmelding1Client == null))
                {
                    this.mUISystemmelding1Client = new UISystemmelding1Client(this);
                }
                return this.mUISystemmelding1Client;
            }
        }
        #endregion
        
        #region Fields
        private UISystemmelding1Client mUISystemmelding1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISystemmelding1Client : WinClient
    {
        
        public UISystemmelding1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Systemmelding (1)");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Systemmelding (1)");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINivåWindow : DXWindow
    {
        
        public UINivåWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Nivå";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControl1Custom UIGsLayoutControl1Custom
        {
            get
            {
                if ((this.mUIGsLayoutControl1Custom == null))
                {
                    this.mUIGsLayoutControl1Custom = new UIGsLayoutControl1Custom(this);
                }
                return this.mUIGsLayoutControl1Custom;
            }
        }
        
        public UIGsPanelControl2Client UIGsPanelControl2Client
        {
            get
            {
                if ((this.mUIGsPanelControl2Client == null))
                {
                    this.mUIGsPanelControl2Client = new UIGsPanelControl2Client(this);
                }
                return this.mUIGsPanelControl2Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControl1Custom mUIGsLayoutControl1Custom;
        
        private UIGsPanelControl2Client mUIGsPanelControl2Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsLayoutControl1Custom : DXTestControl
    {
        
        public UIGsLayoutControl1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroup1LayoutGroup1 UILayoutControlGroup1LayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroup1LayoutGroup == null))
                {
                    this.mUILayoutControlGroup1LayoutGroup = new UILayoutControlGroup1LayoutGroup1(this);
                }
                return this.mUILayoutControlGroup1LayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroup1LayoutGroup1 mUILayoutControlGroup1LayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlGroup1LayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroup1LayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem1LayoutControlItem1 UILayoutControlItem1LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem1LayoutControlItem == null))
                {
                    this.mUILayoutControlItem1LayoutControlItem = new UILayoutControlItem1LayoutControlItem1(this);
                }
                return this.mUILayoutControlItem1LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem1LayoutControlItem1 mUILayoutControlItem1LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlItem1LayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILayoutControlItem1LayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl1Client2 UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client2(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl1Client2 mUIGsPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsPanelControl1Client2 : DXTestControl
    {
        
        public UIGsPanelControl1Client2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITxtFilterEdit
        {
            get
            {
                if ((this.mUITxtFilterEdit == null))
                {
                    this.mUITxtFilterEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITxtFilterEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtFilter";
                    this.mUITxtFilterEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUITxtFilterEdit.WindowTitles.Add("Nivå");
                    #endregion
                }
                return this.mUITxtFilterEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITxtFilterEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsPanelControl2Client : DXTestControl
    {
        
        public UIGsPanelControl2Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOK";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Nivå");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEndrevakterWindow : DXWindow
    {
        
        public UIEndrevakterWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Endre vakt(er)";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Endre vakt(er)");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl1Client3 UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client3(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        
        public UIGSDialogFooterBarCustom2 UIGSDialogFooterBarCustom
        {
            get
            {
                if ((this.mUIGSDialogFooterBarCustom == null))
                {
                    this.mUIGSDialogFooterBarCustom = new UIGSDialogFooterBarCustom2(this);
                }
                return this.mUIGSDialogFooterBarCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl1Client3 mUIGsPanelControl1Client;
        
        private UIGSDialogFooterBarCustom2 mUIGSDialogFooterBarCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsPanelControl1Client3 : DXTestControl
    {
        
        public UIGsPanelControl1Client3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Endre vakt(er)");
            #endregion
        }
        
        #region Properties
        public UIGcShiftEditClient UIGcShiftEditClient
        {
            get
            {
                if ((this.mUIGcShiftEditClient == null))
                {
                    this.mUIGcShiftEditClient = new UIGcShiftEditClient(this);
                }
                return this.mUIGcShiftEditClient;
            }
        }
        
        public UIGcShiftListClient UIGcShiftListClient
        {
            get
            {
                if ((this.mUIGcShiftListClient == null))
                {
                    this.mUIGcShiftListClient = new UIGcShiftListClient(this);
                }
                return this.mUIGcShiftListClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcShiftEditClient mUIGcShiftEditClient;
        
        private UIGcShiftListClient mUIGcShiftListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcShiftEditClient : DXTestControl
    {
        
        public UIGcShiftEditClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftEdit";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Endre vakt(er)");
            #endregion
        }
        
        #region Properties
        public UIPnlShiftEditScrollableControl UIPnlShiftEditScrollableControl
        {
            get
            {
                if ((this.mUIPnlShiftEditScrollableControl == null))
                {
                    this.mUIPnlShiftEditScrollableControl = new UIPnlShiftEditScrollableControl(this);
                }
                return this.mUIPnlShiftEditScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlShiftEditScrollableControl mUIPnlShiftEditScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlShiftEditScrollableControl : DXScrollableControl
    {
        
        public UIPnlShiftEditScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlShiftEdit";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSScrollableControl";
            this.WindowTitles.Add("Endre vakt(er)");
            #endregion
        }
        
        #region Properties
        public UICbShiftCodesLookUpEdit UICbShiftCodesLookUpEdit
        {
            get
            {
                if ((this.mUICbShiftCodesLookUpEdit == null))
                {
                    this.mUICbShiftCodesLookUpEdit = new UICbShiftCodesLookUpEdit(this);
                }
                return this.mUICbShiftCodesLookUpEdit;
            }
        }
        
        public DXTextEdit UIETime1Edit
        {
            get
            {
                if ((this.mUIETime1Edit == null))
                {
                    this.mUIETime1Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[1]";
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETime1Edit.WindowTitles.Add("Endre vakt(er)");
                    #endregion
                }
                return this.mUIETime1Edit;
            }
        }
        #endregion
        
        #region Fields
        private UICbShiftCodesLookUpEdit mUICbShiftCodesLookUpEdit;
        
        private DXTextEdit mUIETime1Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICbShiftCodesLookUpEdit : DXLookUpEdit
    {
        
        public UICbShiftCodesLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "cbShiftCodes";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
            this.WindowTitles.Add("Endre vakt(er)");
            #endregion
        }
        
        #region Properties
        public DXButton UIEditorButton1Button
        {
            get
            {
                if ((this.mUIEditorButton1Button == null))
                {
                    this.mUIEditorButton1Button = new DXButton(this);
                    #region Search Criteria
                    this.mUIEditorButton1Button.SearchProperties[DXTestControl.PropertyNames.Name] = "cbShiftCodesButton[1]";
                    this.mUIEditorButton1Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
                    this.mUIEditorButton1Button.WindowTitles.Add("Endre vakt(er)");
                    #endregion
                }
                return this.mUIEditorButton1Button;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIEditorButton1Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcShiftListClient : DXTestControl
    {
        
        public UIGcShiftListClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Endre vakt(er)");
            #endregion
        }
        
        #region Properties
        public UIGcShiftsTable1 UIGcShiftsTable
        {
            get
            {
                if ((this.mUIGcShiftsTable == null))
                {
                    this.mUIGcShiftsTable = new UIGcShiftsTable1(this);
                }
                return this.mUIGcShiftsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcShiftsTable1 mUIGcShiftsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcShiftsTable1 : DXGrid
    {
        
        public UIGcShiftsTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Endre vakt(er)");
            #endregion
        }
        
        #region Properties
        public DXCell UIDCell
        {
            get
            {
                if ((this.mUIDCell == null))
                {
                    this.mUIDCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftsGridControlCell[View]gvShifts[Row]0[Column]gccCode";
                    this.mUIDCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDCell.WindowTitles.Add("Endre vakt(er)");
                    #endregion
                }
                return this.mUIDCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIDCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSDialogFooterBarCustom2 : DXTestControl
    {
        
        public UIGSDialogFooterBarCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsDialogFooterBar";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDialogFooterBar";
            this.WindowTitles.Add("Endre vakt(er)");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Endre vakt(er)");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow41 : DXWindow
    {
        
        public UIItemWindow41()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ny vakt";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIGSPanelControlClient8 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient8(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        
        public UIGSDialogFooterBarCustom3 UIGSDialogFooterBarCustom
        {
            get
            {
                if ((this.mUIGSDialogFooterBarCustom == null))
                {
                    this.mUIGSDialogFooterBarCustom = new UIGSDialogFooterBarCustom3(this);
                }
                return this.mUIGSDialogFooterBarCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGSPanelControlClient8 mUIGSPanelControlClient;
        
        private UIGSDialogFooterBarCustom3 mUIGSDialogFooterBarCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSPanelControlClient8 : DXTestControl
    {
        
        public UIGSPanelControlClient8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public UIGSGroupControlClient UIGSGroupControlClient
        {
            get
            {
                if ((this.mUIGSGroupControlClient == null))
                {
                    this.mUIGSGroupControlClient = new UIGSGroupControlClient(this);
                }
                return this.mUIGSGroupControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGSGroupControlClient mUIGSGroupControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSGroupControlClient : DXTestControl
    {
        
        public UIGSGroupControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftEdit";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            #endregion
        }
        
        #region Properties
        public UIGSScrollableControlScrollableControl UIGSScrollableControlScrollableControl
        {
            get
            {
                if ((this.mUIGSScrollableControlScrollableControl == null))
                {
                    this.mUIGSScrollableControlScrollableControl = new UIGSScrollableControlScrollableControl(this);
                }
                return this.mUIGSScrollableControlScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UIGSScrollableControlScrollableControl mUIGSScrollableControlScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSScrollableControlScrollableControl : DXScrollableControl
    {
        
        public UIGSScrollableControlScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlShiftEdit";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSScrollableControl";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UIGSLookUpEditLookUpEdit
        {
            get
            {
                if ((this.mUIGSLookUpEditLookUpEdit == null))
                {
                    this.mUIGSLookUpEditLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGSLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "cbShiftCodes";
                    this.mUIGSLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    #endregion
                }
                return this.mUIGSLookUpEditLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUIGSLookUpEditLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSDialogFooterBarCustom3 : DXTestControl
    {
        
        public UIGSDialogFooterBarCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsDialogFooterBar";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDialogFooterBar";
            this.WindowTitles.Add("Ny vakt");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Ny vakt");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIBytteWindow : DXWindow
    {
        
        public UIBytteWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Bytte";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl1Client4 UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client4(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbtnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDropDownButton";
                    this.mUIOKButton.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        
        public UIGsPanelControl1Client11 UIGsPanelControl1Client1
        {
            get
            {
                if ((this.mUIGsPanelControl1Client1 == null))
                {
                    this.mUIGsPanelControl1Client1 = new UIGsPanelControl1Client11(this);
                }
                return this.mUIGsPanelControl1Client1;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl1Client4 mUIGsPanelControl1Client;
        
        private DXButton mUIOKButton;
        
        private UIGsPanelControl1Client11 mUIGsPanelControl1Client1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsPanelControl1Client4 : DXTestControl
    {
        
        public UIGsPanelControl1Client4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGrpEmployee2Client UIGrpEmployee2Client
        {
            get
            {
                if ((this.mUIGrpEmployee2Client == null))
                {
                    this.mUIGrpEmployee2Client = new UIGrpEmployee2Client(this);
                }
                return this.mUIGrpEmployee2Client;
            }
        }
        
        public UIGsTabTabList UIGsTabTabList
        {
            get
            {
                if ((this.mUIGsTabTabList == null))
                {
                    this.mUIGsTabTabList = new UIGsTabTabList(this);
                }
                return this.mUIGsTabTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpEmployee2Client mUIGrpEmployee2Client;
        
        private UIGsTabTabList mUIGsTabTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpEmployee2Client : DXTestControl
    {
        
        public UIGrpEmployee2Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEmployee2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UISleEmployment2LookUpEdit
        {
            get
            {
                if ((this.mUISleEmployment2LookUpEdit == null))
                {
                    this.mUISleEmployment2LookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUISleEmployment2LookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sleEmployment2";
                    this.mUISleEmployment2LookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
                    #endregion
                }
                return this.mUISleEmployment2LookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUISleEmployment2LookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsTabTabList : DXTestControl
    {
        
        public UIGsTabTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsTab";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UITpShiftExchangeClient UITpShiftExchangeClient
        {
            get
            {
                if ((this.mUITpShiftExchangeClient == null))
                {
                    this.mUITpShiftExchangeClient = new UITpShiftExchangeClient(this);
                }
                return this.mUITpShiftExchangeClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpShiftExchangeClient mUITpShiftExchangeClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpShiftExchangeClient : DXTestControl
    {
        
        public UITpShiftExchangeClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpShiftExchange";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public DXButton UIBtnGiveEmployee2Button
        {
            get
            {
                if ((this.mUIBtnGiveEmployee2Button == null))
                {
                    this.mUIBtnGiveEmployee2Button = new DXButton(this);
                    #region Search Criteria
                    this.mUIBtnGiveEmployee2Button.SearchProperties[DXTestControl.PropertyNames.Name] = "btnGiveEmployee2";
                    this.mUIBtnGiveEmployee2Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIBtnGiveEmployee2Button.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIBtnGiveEmployee2Button.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIBtnGiveEmployee2Button;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIBtnGiveEmployee2Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsPanelControl1Client11 : DXTestControl
    {
        
        public UIGsPanelControl1Client11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGsTabTabList1 UIGsTabTabList
        {
            get
            {
                if ((this.mUIGsTabTabList == null))
                {
                    this.mUIGsTabTabList = new UIGsTabTabList1(this);
                }
                return this.mUIGsTabTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIGsTabTabList1 mUIGsTabTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsTabTabList1 : DXTestControl
    {
        
        public UIGsTabTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsTab";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UITpShiftExchangeClient1 UITpShiftExchangeClient
        {
            get
            {
                if ((this.mUITpShiftExchangeClient == null))
                {
                    this.mUITpShiftExchangeClient = new UITpShiftExchangeClient1(this);
                }
                return this.mUITpShiftExchangeClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpShiftExchangeClient1 mUITpShiftExchangeClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpShiftExchangeClient1 : DXTestControl
    {
        
        public UITpShiftExchangeClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpShiftExchange";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGrpEmployee2ShiftsClient UIGrpEmployee2ShiftsClient
        {
            get
            {
                if ((this.mUIGrpEmployee2ShiftsClient == null))
                {
                    this.mUIGrpEmployee2ShiftsClient = new UIGrpEmployee2ShiftsClient(this);
                }
                return this.mUIGrpEmployee2ShiftsClient;
            }
        }
        
        public DXButton UIBtnGiveEmployee1Button
        {
            get
            {
                if ((this.mUIBtnGiveEmployee1Button == null))
                {
                    this.mUIBtnGiveEmployee1Button = new DXButton(this);
                    #region Search Criteria
                    this.mUIBtnGiveEmployee1Button.SearchProperties[DXTestControl.PropertyNames.Name] = "btnGiveEmployee1";
                    this.mUIBtnGiveEmployee1Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIBtnGiveEmployee1Button.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIBtnGiveEmployee1Button.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIBtnGiveEmployee1Button;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpEmployee2ShiftsClient mUIGrpEmployee2ShiftsClient;
        
        private DXButton mUIBtnGiveEmployee1Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpEmployee2ShiftsClient : DXTestControl
    {
        
        public UIGrpEmployee2ShiftsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEmployee2Shifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGcEmployment2ShiftsTable UIGcEmployment2ShiftsTable
        {
            get
            {
                if ((this.mUIGcEmployment2ShiftsTable == null))
                {
                    this.mUIGcEmployment2ShiftsTable = new UIGcEmployment2ShiftsTable(this);
                }
                return this.mUIGcEmployment2ShiftsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcEmployment2ShiftsTable mUIGcEmployment2ShiftsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcEmployment2ShiftsTable : DXGrid
    {
        
        public UIGcEmployment2ShiftsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployment2Shifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public DXCell UISøndagCell
        {
            get
            {
                if ((this.mUISøndagCell == null))
                {
                    this.mUISøndagCell = new DXCell(this);
                    #region Search Criteria
                    this.mUISøndagCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployment2ShiftsGridControlCell[View]gvEmployment2Shifts[Row]1[Column]colDayOf" +
                        "Week2";
                    this.mUISøndagCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUISøndagCell.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUISøndagCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUISøndagCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIByttemedavdelingWindow : DXWindow
    {
        
        public UIByttemedavdelingWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Bytte med avdeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Bytte med avdeling");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl1Client5 UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client5(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbtnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDropDownButton";
                    this.mUIOKButton.WindowTitles.Add("Bytte med avdeling");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl1Client5 mUIGsPanelControl1Client;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsPanelControl1Client5 : DXTestControl
    {
        
        public UIGsPanelControl1Client5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Bytte med avdeling");
            #endregion
        }
        
        #region Properties
        public UIGsTabTabList2 UIGsTabTabList
        {
            get
            {
                if ((this.mUIGsTabTabList == null))
                {
                    this.mUIGsTabTabList = new UIGsTabTabList2(this);
                }
                return this.mUIGsTabTabList;
            }
        }
        
        public UIGrpEmployee1Client UIGrpEmployee1Client
        {
            get
            {
                if ((this.mUIGrpEmployee1Client == null))
                {
                    this.mUIGrpEmployee1Client = new UIGrpEmployee1Client(this);
                }
                return this.mUIGrpEmployee1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsTabTabList2 mUIGsTabTabList;
        
        private UIGrpEmployee1Client mUIGrpEmployee1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsTabTabList2 : DXTestControl
    {
        
        public UIGsTabTabList2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsTab";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Bytte med avdeling");
            #endregion
        }
        
        #region Properties
        public UITpDepartmentExchangeClient UITpDepartmentExchangeClient
        {
            get
            {
                if ((this.mUITpDepartmentExchangeClient == null))
                {
                    this.mUITpDepartmentExchangeClient = new UITpDepartmentExchangeClient(this);
                }
                return this.mUITpDepartmentExchangeClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpDepartmentExchangeClient mUITpDepartmentExchangeClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpDepartmentExchangeClient : DXTestControl
    {
        
        public UITpDepartmentExchangeClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpDepartmentExchange";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Bytte med avdeling");
            #endregion
        }
        
        #region Properties
        public UIGrpDepartmentShiftsClient UIGrpDepartmentShiftsClient
        {
            get
            {
                if ((this.mUIGrpDepartmentShiftsClient == null))
                {
                    this.mUIGrpDepartmentShiftsClient = new UIGrpDepartmentShiftsClient(this);
                }
                return this.mUIGrpDepartmentShiftsClient;
            }
        }
        
        public DXButton UIVelgledigevakterButton
        {
            get
            {
                if ((this.mUIVelgledigevakterButton == null))
                {
                    this.mUIVelgledigevakterButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVelgledigevakterButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSelectUnoccupiedShifts";
                    this.mUIVelgledigevakterButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIVelgledigevakterButton.WindowTitles.Add("Bytte med avdeling");
                    #endregion
                }
                return this.mUIVelgledigevakterButton;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpDepartmentShiftsClient mUIGrpDepartmentShiftsClient;
        
        private DXButton mUIVelgledigevakterButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpDepartmentShiftsClient : DXTestControl
    {
        
        public UIGrpDepartmentShiftsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpDepartmentShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Bytte med avdeling");
            #endregion
        }
        
        #region Properties
        public UIGcDepartmentExchangeTable UIGcDepartmentExchangeTable
        {
            get
            {
                if ((this.mUIGcDepartmentExchangeTable == null))
                {
                    this.mUIGcDepartmentExchangeTable = new UIGcDepartmentExchangeTable(this);
                }
                return this.mUIGcDepartmentExchangeTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDepartmentExchangeTable mUIGcDepartmentExchangeTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcDepartmentExchangeTable : DXGrid
    {
        
        public UIGcDepartmentExchangeTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentExchange";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Bytte med avdeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIValgtCell
        {
            get
            {
                if ((this.mUIValgtCell == null))
                {
                    this.mUIValgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentExchangeGridControlCell[View]gvDepartmentExchange[Row]1[Column]colGiv" +
                        "eDayOff";
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell.WindowTitles.Add("Bytte med avdeling");
                    #endregion
                }
                return this.mUIValgtCell;
            }
        }
        
        public DXCell UIValgtCell1
        {
            get
            {
                if ((this.mUIValgtCell1 == null))
                {
                    this.mUIValgtCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentExchangeGridControlCell[View]gvDepartmentExchange[Row]1[Column]colGen" +
                        "erateVacant";
                    this.mUIValgtCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell1.WindowTitles.Add("Bytte med avdeling");
                    #endregion
                }
                return this.mUIValgtCell1;
            }
        }
        
        public DXCell UIValgtCell2
        {
            get
            {
                if ((this.mUIValgtCell2 == null))
                {
                    this.mUIValgtCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentExchangeGridControlCell[View]gvDepartmentExchange[Row]0[Column]colGen" +
                        "erateVacant";
                    this.mUIValgtCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell2.WindowTitles.Add("Bytte med avdeling");
                    #endregion
                }
                return this.mUIValgtCell2;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIValgtCell;
        
        private DXCell mUIValgtCell1;
        
        private DXCell mUIValgtCell2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpEmployee1Client : DXTestControl
    {
        
        public UIGrpEmployee1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEmployee1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Bytte med avdeling");
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UISleEmployment1LookUpEdit
        {
            get
            {
                if ((this.mUISleEmployment1LookUpEdit == null))
                {
                    this.mUISleEmployment1LookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUISleEmployment1LookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sleEmployment1";
                    this.mUISleEmployment1LookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
                    this.mUISleEmployment1LookUpEdit.WindowTitles.Add("Bytte med avdeling");
                    #endregion
                }
                return this.mUISleEmployment1LookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUISleEmployment1LookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIVacantShiftsFormWindow : DXWindow
    {
        
        public UIVacantShiftsFormWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControl1Custom1 UIGsLayoutControl1Custom
        {
            get
            {
                if ((this.mUIGsLayoutControl1Custom == null))
                {
                    this.mUIGsLayoutControl1Custom = new UIGsLayoutControl1Custom1(this);
                }
                return this.mUIGsLayoutControl1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControl1Custom1 mUIGsLayoutControl1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsLayoutControl1Custom1 : DXTestControl
    {
        
        public UIGsLayoutControl1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            #endregion
        }
        
        #region Properties
        
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields        
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIForskyvningWindow : DXWindow
    {
        
        public UIForskyvningWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Forskyvning";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIPanClientPanelClient UIPanClientPanelClient
        {
            get
            {
                if ((this.mUIPanClientPanelClient == null))
                {
                    this.mUIPanClientPanelClient = new UIPanClientPanelClient(this);
                }
                return this.mUIPanClientPanelClient;
            }
        }
        
        public UIGSPanelControlClient9 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient9(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        
        public UIPanClientPanelClient1 UIPanClientPanelClient1
        {
            get
            {
                if ((this.mUIPanClientPanelClient1 == null))
                {
                    this.mUIPanClientPanelClient1 = new UIPanClientPanelClient1(this);
                }
                return this.mUIPanClientPanelClient1;
            }
        }
        #endregion
        
        #region Fields
        private UIPanClientPanelClient mUIPanClientPanelClient;
        
        private UIGSPanelControlClient9 mUIGSPanelControlClient;
        
        private UIPanClientPanelClient1 mUIPanClientPanelClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPanClientPanelClient : DXTestControl
    {
        
        public UIPanClientPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panClientPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIBnMenuNavBar UIBnMenuNavBar
        {
            get
            {
                if ((this.mUIBnMenuNavBar == null))
                {
                    this.mUIBnMenuNavBar = new UIBnMenuNavBar(this);
                }
                return this.mUIBnMenuNavBar;
            }
        }
        
        public UIGpcMainClient UIGpcMainClient
        {
            get
            {
                if ((this.mUIGpcMainClient == null))
                {
                    this.mUIGpcMainClient = new UIGpcMainClient(this);
                }
                return this.mUIGpcMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UIBnMenuNavBar mUIBnMenuNavBar;
        
        private UIGpcMainClient mUIGpcMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIBnMenuNavBar : DXNavBar
    {
        
        public UIBnMenuNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "bnMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UILeOvertimeCodeLookUpEdit
        {
            get
            {
                if ((this.mUILeOvertimeCodeLookUpEdit == null))
                {
                    this.mUILeOvertimeCodeLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUILeOvertimeCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "leOvertimeCode";
                    this.mUILeOvertimeCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    this.mUILeOvertimeCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
                    this.mUILeOvertimeCodeLookUpEdit.WindowTitles.Add("Forskyvning");
                    #endregion
                }
                return this.mUILeOvertimeCodeLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUILeOvertimeCodeLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGpcMainClient : DXTestControl
    {
        
        public UIGpcMainClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gpcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UITcClientTabList2 UITcClientTabList
        {
            get
            {
                if ((this.mUITcClientTabList == null))
                {
                    this.mUITcClientTabList = new UITcClientTabList2(this);
                }
                return this.mUITcClientTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcClientTabList2 mUITcClientTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcClientTabList2 : DXTestControl
    {
        
        public UITcClientTabList2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UITpMainClient2 UITpMainClient
        {
            get
            {
                if ((this.mUITpMainClient == null))
                {
                    this.mUITpMainClient = new UITpMainClient2(this);
                }
                return this.mUITpMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpMainClient2 mUITpMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpMainClient2 : DXTestControl
    {
        
        public UITpMainClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIGpcShiftsClient UIGpcShiftsClient
        {
            get
            {
                if ((this.mUIGpcShiftsClient == null))
                {
                    this.mUIGpcShiftsClient = new UIGpcShiftsClient(this);
                }
                return this.mUIGpcShiftsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGpcShiftsClient mUIGpcShiftsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGpcShiftsClient : DXTestControl
    {
        
        public UIGpcShiftsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gpcShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIGcNewShiftsClient UIGcNewShiftsClient
        {
            get
            {
                if ((this.mUIGcNewShiftsClient == null))
                {
                    this.mUIGcNewShiftsClient = new UIGcNewShiftsClient(this);
                }
                return this.mUIGcNewShiftsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcNewShiftsClient mUIGcNewShiftsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcNewShiftsClient : DXTestControl
    {
        
        public UIGcNewShiftsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcNewShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UITcNewShiftTabList UITcNewShiftTabList
        {
            get
            {
                if ((this.mUITcNewShiftTabList == null))
                {
                    this.mUITcNewShiftTabList = new UITcNewShiftTabList(this);
                }
                return this.mUITcNewShiftTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcNewShiftTabList mUITcNewShiftTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcNewShiftTabList : DXTestControl
    {
        
        public UITcNewShiftTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcNewShift";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UITpSimpleShiftCtrlClient UITpSimpleShiftCtrlClient
        {
            get
            {
                if ((this.mUITpSimpleShiftCtrlClient == null))
                {
                    this.mUITpSimpleShiftCtrlClient = new UITpSimpleShiftCtrlClient(this);
                }
                return this.mUITpSimpleShiftCtrlClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpSimpleShiftCtrlClient mUITpSimpleShiftCtrlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpSimpleShiftCtrlClient : DXTestControl
    {
        
        public UITpSimpleShiftCtrlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpSimpleShiftCtrl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIMainPanelClient UIMainPanelClient
        {
            get
            {
                if ((this.mUIMainPanelClient == null))
                {
                    this.mUIMainPanelClient = new UIMainPanelClient(this);
                }
                return this.mUIMainPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIMainPanelClient mUIMainPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMainPanelClient : DXTestControl
    {
        
        public UIMainPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "MainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDatePopupEdit
        {
            get
            {
                if ((this.mUIPceDatePopupEdit == null))
                {
                    this.mUIPceDatePopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDatePopupEdit.WindowTitles.Add("Forskyvning");
                    #endregion
                }
                return this.mUIPceDatePopupEdit;
            }
        }
        
        public DXLookUpEdit UICbShiftCodeLookUpEdit
        {
            get
            {
                if ((this.mUICbShiftCodeLookUpEdit == null))
                {
                    this.mUICbShiftCodeLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUICbShiftCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "cbShiftCode";
                    this.mUICbShiftCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    this.mUICbShiftCodeLookUpEdit.WindowTitles.Add("Forskyvning");
                    #endregion
                }
                return this.mUICbShiftCodeLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDatePopupEdit;
        
        private DXLookUpEdit mUICbShiftCodeLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSPanelControlClient9 : DXTestControl
    {
        
        public UIGSPanelControlClient9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panBottomPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSDropDownButtonButton
        {
            get
            {
                if ((this.mUIGSDropDownButtonButton == null))
                {
                    this.mUIGSDropDownButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSDropDownButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbtnOk";
                    this.mUIGSDropDownButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDropDownButton";
                    this.mUIGSDropDownButtonButton.WindowTitles.Add("Forskyvning");
                    #endregion
                }
                return this.mUIGSDropDownButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSDropDownButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPanClientPanelClient1 : DXTestControl
    {
        
        public UIPanClientPanelClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panClientPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIGpcMainClient1 UIGpcMainClient
        {
            get
            {
                if ((this.mUIGpcMainClient == null))
                {
                    this.mUIGpcMainClient = new UIGpcMainClient1(this);
                }
                return this.mUIGpcMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGpcMainClient1 mUIGpcMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGpcMainClient1 : DXTestControl
    {
        
        public UIGpcMainClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gpcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UITcClientTabList3 UITcClientTabList
        {
            get
            {
                if ((this.mUITcClientTabList == null))
                {
                    this.mUITcClientTabList = new UITcClientTabList3(this);
                }
                return this.mUITcClientTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcClientTabList3 mUITcClientTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcClientTabList3 : DXTestControl
    {
        
        public UITcClientTabList3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UITpMainClient3 UITpMainClient
        {
            get
            {
                if ((this.mUITpMainClient == null))
                {
                    this.mUITpMainClient = new UITpMainClient3(this);
                }
                return this.mUITpMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpMainClient3 mUITpMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpMainClient3 : DXTestControl
    {
        
        public UITpMainClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIGpcShiftsClient1 UIGpcShiftsClient
        {
            get
            {
                if ((this.mUIGpcShiftsClient == null))
                {
                    this.mUIGpcShiftsClient = new UIGpcShiftsClient1(this);
                }
                return this.mUIGpcShiftsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGpcShiftsClient1 mUIGpcShiftsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGpcShiftsClient1 : DXTestControl
    {
        
        public UIGpcShiftsClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gpcShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIGcNewShiftsClient1 UIGcNewShiftsClient
        {
            get
            {
                if ((this.mUIGcNewShiftsClient == null))
                {
                    this.mUIGcNewShiftsClient = new UIGcNewShiftsClient1(this);
                }
                return this.mUIGcNewShiftsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcNewShiftsClient1 mUIGcNewShiftsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcNewShiftsClient1 : DXTestControl
    {
        
        public UIGcNewShiftsClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcNewShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UITcNewShiftTabList1 UITcNewShiftTabList
        {
            get
            {
                if ((this.mUITcNewShiftTabList == null))
                {
                    this.mUITcNewShiftTabList = new UITcNewShiftTabList1(this);
                }
                return this.mUITcNewShiftTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcNewShiftTabList1 mUITcNewShiftTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcNewShiftTabList1 : DXTestControl
    {
        
        public UITcNewShiftTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcNewShift";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UITpSimpleShiftCtrlClient1 UITpSimpleShiftCtrlClient
        {
            get
            {
                if ((this.mUITpSimpleShiftCtrlClient == null))
                {
                    this.mUITpSimpleShiftCtrlClient = new UITpSimpleShiftCtrlClient1(this);
                }
                return this.mUITpSimpleShiftCtrlClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpSimpleShiftCtrlClient1 mUITpSimpleShiftCtrlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpSimpleShiftCtrlClient1 : DXTestControl
    {
        
        public UITpSimpleShiftCtrlClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpSimpleShiftCtrl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIMainPanelClient1 UIMainPanelClient
        {
            get
            {
                if ((this.mUIMainPanelClient == null))
                {
                    this.mUIMainPanelClient = new UIMainPanelClient1(this);
                }
                return this.mUIMainPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIMainPanelClient1 mUIMainPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMainPanelClient1 : DXTestControl
    {
        
        public UIMainPanelClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "MainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIDeDateCustom1 UIDeDateCustom
        {
            get
            {
                if ((this.mUIDeDateCustom == null))
                {
                    this.mUIDeDateCustom = new UIDeDateCustom1(this);
                }
                return this.mUIDeDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDeDateCustom1 mUIDeDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDeDateCustom1 : DXTestControl
    {
        
        public UIDeDateCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "deDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Forskyvning");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatWindow : WinWindow
    {
        
        public UIGatWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMessageForm";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGatClient UIGatClient
        {
            get
            {
                if ((this.mUIGatClient == null))
                {
                    this.mUIGatClient = new UIGatClient(this);
                }
                return this.mUIGatClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGatClient mUIGatClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatClient : WinClient
    {
        
        public UIGatClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Gat";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[WinButton.PropertyNames.Name] = "Yes";
                    this.mUIYesButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIYesButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63031732ASCLAvWindow16 : WinWindow
    {
        
        public UIGatver63031732ASCLAvWindow16()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow36 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow36(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow36 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow36 : WinWindow
    {
        
        public UIItemWindow36(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxGridSite";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UITimelisteClient
        {
            get
            {
                if ((this.mUITimelisteClient == null))
                {
                    this.mUITimelisteClient = new WinClient(this);
                    #region Search Criteria
                    this.mUITimelisteClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUITimelisteClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUITimelisteClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIVaktkategorierWindow : WinWindow
    {
        
        public UIVaktkategorierWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Vaktkategorier";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmRegEdit";
            this.WindowTitles.Add("Vaktkategorier");
            #endregion
        }
        
        #region Properties
        public UIItemWindow37 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow37(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow116 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow116(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemClient1 UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new UIItemClient1(this);
                }
                return this.mUIItemClient;
            }
        }
        
        public UIItemClient11 UIItemClient1
        {
            get
            {
                if ((this.mUIItemClient1 == null))
                {
                    this.mUIItemClient1 = new UIItemClient11(this);
                }
                return this.mUIItemClient1;
            }
        }
        
        public UIVaktkategorierClient UIVaktkategorierClient
        {
            get
            {
                if ((this.mUIVaktkategorierClient == null))
                {
                    this.mUIVaktkategorierClient = new UIVaktkategorierClient(this);
                }
                return this.mUIVaktkategorierClient;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow37 mUIItemWindow;
        
        private UIItemWindow116 mUIItemWindow1;
        
        private UIItemClient1 mUIItemClient;
        
        private UIItemClient11 mUIItemClient1;
        
        private UIVaktkategorierClient mUIVaktkategorierClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow37 : WinWindow
    {
        
        public UIItemWindow37(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxGridSite";
            this.WindowTitles.Add("Vaktkategorier");
            #endregion
        }
        
        #region Properties
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient.WindowTitles.Add("Vaktkategorier");
                    #endregion
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow116 : WinWindow
    {
        
        public UIItemWindow116(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSComboBox";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Vaktkategorier");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIItemComboBox.WindowTitles.Add("Vaktkategorier");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemClient1 : WinClient
    {
        
        public UIItemClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = " ";
            this.WindowTitles.Add("Vaktkategorier");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Vaktkategorier");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemClient11 : WinClient
    {
        
        public UIItemClient11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = " ";
            this.WindowTitles.Add("Vaktkategorier");
            #endregion
        }
        
        #region Properties
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient.SearchProperties[WinControl.PropertyNames.Name] = " ";
                    this.mUIItemClient.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIItemClient.WindowTitles.Add("Vaktkategorier");
                    #endregion
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIVaktkategorierClient : WinClient
    {
        
        public UIVaktkategorierClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Vaktkategorier";
            this.WindowTitles.Add("Vaktkategorier");
            #endregion
        }
        
        #region Properties
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient.SearchProperties[WinControl.PropertyNames.Name] = " ";
                    this.mUIItemClient.WindowTitles.Add("Vaktkategorier");
                    #endregion
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIUtrykningWindow : DXWindow
    {
        
        public UIUtrykningWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Utrykning";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_layoutControlCustom UI_layoutControlCustom
        {
            get
            {
                if ((this.mUI_layoutControlCustom == null))
                {
                    this.mUI_layoutControlCustom = new UI_layoutControlCustom(this);
                }
                return this.mUI_layoutControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UI_layoutControlCustom mUI_layoutControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UI_layoutControlCustom : DXTestControl
    {
        
        public UI_layoutControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_layoutControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UIRootLayoutGroup6 UIRootLayoutGroup
        {
            get
            {
                if ((this.mUIRootLayoutGroup == null))
                {
                    this.mUIRootLayoutGroup = new UIRootLayoutGroup6(this);
                }
                return this.mUIRootLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRootLayoutGroup6 mUIRootLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRootLayoutGroup6 : DXBaseLayoutItem
    {
        
        public UIRootLayoutGroup6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem3LayoutControlItem1 UILayoutControlItem3LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem3LayoutControlItem == null))
                {
                    this.mUILayoutControlItem3LayoutControlItem = new UILayoutControlItem3LayoutControlItem1(this);
                }
                return this.mUILayoutControlItem3LayoutControlItem;
            }
        }
        
        public UILayoutControlItem5LayoutControlItem UILayoutControlItem5LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem5LayoutControlItem == null))
                {
                    this.mUILayoutControlItem5LayoutControlItem = new UILayoutControlItem5LayoutControlItem(this);
                }
                return this.mUILayoutControlItem5LayoutControlItem;
            }
        }
        
        public UI_liOKLayoutControlItem UI_liOKLayoutControlItem
        {
            get
            {
                if ((this.mUI_liOKLayoutControlItem == null))
                {
                    this.mUI_liOKLayoutControlItem = new UI_liOKLayoutControlItem(this);
                }
                return this.mUI_liOKLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem3LayoutControlItem1 mUILayoutControlItem3LayoutControlItem;
        
        private UILayoutControlItem5LayoutControlItem mUILayoutControlItem5LayoutControlItem;
        
        private UI_liOKLayoutControlItem mUI_liOKLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlItem3LayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILayoutControlItem3LayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            #endregion
        }
        
        #region Properties
        public UI_navBarNavBar UI_navBarNavBar
        {
            get
            {
                if ((this.mUI_navBarNavBar == null))
                {
                    this.mUI_navBarNavBar = new UI_navBarNavBar(this);
                }
                return this.mUI_navBarNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UI_navBarNavBar mUI_navBarNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UI_navBarNavBar : DXNavBar
    {
        
        public UI_navBarNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_navBar";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UI_cbCauseCodeLookUpEdit
        {
            get
            {
                if ((this.mUI_cbCauseCodeLookUpEdit == null))
                {
                    this.mUI_cbCauseCodeLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUI_cbCauseCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "_cbCauseCode";
                    this.mUI_cbCauseCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    this.mUI_cbCauseCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
                    #endregion
                }
                return this.mUI_cbCauseCodeLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUI_cbCauseCodeLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlItem5LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem5LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem5";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_tcRightTabList UI_tcRightTabList
        {
            get
            {
                if ((this.mUI_tcRightTabList == null))
                {
                    this.mUI_tcRightTabList = new UI_tcRightTabList(this);
                }
                return this.mUI_tcRightTabList;
            }
        }
        #endregion
        
        #region Fields
        private UI_tcRightTabList mUI_tcRightTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UI_tcRightTabList : DXTestControl
    {
        
        public UI_tcRightTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_tcRight";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_tpCalloutDetailsClient UI_tpCalloutDetailsClient
        {
            get
            {
                if ((this.mUI_tpCalloutDetailsClient == null))
                {
                    this.mUI_tpCalloutDetailsClient = new UI_tpCalloutDetailsClient(this);
                }
                return this.mUI_tpCalloutDetailsClient;
            }
        }
        #endregion
        
        #region Fields
        private UI_tpCalloutDetailsClient mUI_tpCalloutDetailsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UI_tpCalloutDetailsClient : DXTestControl
    {
        
        public UI_tpCalloutDetailsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_tpCalloutDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_periodCreatorCustom UI_periodCreatorCustom
        {
            get
            {
                if ((this.mUI_periodCreatorCustom == null))
                {
                    this.mUI_periodCreatorCustom = new UI_periodCreatorCustom(this);
                }
                return this.mUI_periodCreatorCustom;
            }
        }
        #endregion
        
        #region Fields
        private UI_periodCreatorCustom mUI_periodCreatorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UI_periodCreatorCustom : DXTestControl
    {
        
        public UI_periodCreatorCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_periodCreator";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TwoStepPeriodCreator";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIETime0Edit
        {
            get
            {
                if ((this.mUIETime0Edit == null))
                {
                    this.mUIETime0Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime0Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[0]";
                    this.mUIETime0Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime0Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETime0Edit.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIETime0Edit;
            }
        }
        
        public DXTextEdit UIETime1Edit
        {
            get
            {
                if ((this.mUIETime1Edit == null))
                {
                    this.mUIETime1Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[1]";
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETime1Edit.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIETime1Edit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIETime0Edit;
        
        private DXTextEdit mUIETime1Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UI_liOKLayoutControlItem : DXBaseLayoutItem
    {
        
        public UI_liOKLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_liOK";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "_bOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIConfirmSaveAsWindow : WinWindow
    {
        
        public UIConfirmSaveAsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Confirm Save As";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Confirm Save As");
            #endregion
        }
        
        #region Properties
        public UIConfirmSaveAsPane UIConfirmSaveAsPane
        {
            get
            {
                if ((this.mUIConfirmSaveAsPane == null))
                {
                    this.mUIConfirmSaveAsPane = new UIConfirmSaveAsPane(this);
                }
                return this.mUIConfirmSaveAsPane;
            }
        }
        #endregion
        
        #region Fields
        private UIConfirmSaveAsPane mUIConfirmSaveAsPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIConfirmSaveAsPane : WinPane
    {
        
        public UIConfirmSaveAsPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Confirm Save As";
            this.WindowTitles.Add("Confirm Save As");
            #endregion
        }
        
        #region Properties
        public WinButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[WinButton.PropertyNames.Name] = "Yes";
                    this.mUIYesButton.WindowTitles.Add("Confirm Save As");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        
        public WinButton UINOButton
        {
            get
            {
                if ((this.mUINOButton == null))
                {
                    this.mUINOButton = new WinButton(this);
                    #region Search Criteria
                    this.mUINOButton.SearchProperties[WinButton.PropertyNames.Name] = "No";
                    this.mUINOButton.WindowTitles.Add("Confirm Save As");
                    #endregion
                }
                return this.mUINOButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIYesButton;
        
        private WinButton mUINOButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILeggtilansatteWindow : DXWindow
    {
        
        public UILeggtilansatteWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Legg til ansatte";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcContentClient5 UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient5(this);
                }
                return this.mUIPcContentClient;
            }
        }
        
        public UIGSDialogFooterBarCustom4 UIGSDialogFooterBarCustom
        {
            get
            {
                if ((this.mUIGSDialogFooterBarCustom == null))
                {
                    this.mUIGSDialogFooterBarCustom = new UIGSDialogFooterBarCustom4(this);
                }
                return this.mUIGSDialogFooterBarCustom;
            }
        }
        
        public UIViewHostCustom1 UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom1(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        
        public DXButton UISimpleButtonButton
        {
            get
            {
                if ((this.mUISimpleButtonButton == null))
                {
                    this.mUISimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonOk";
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUISimpleButtonButton.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUISimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient5 mUIPcContentClient;
        
        private UIGSDialogFooterBarCustom4 mUIGSDialogFooterBarCustom;
        
        private UIViewHostCustom1 mUIViewHostCustom;
        
        private DXButton mUISimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcContentClient5 : DXTestControl
    {
        
        public UIPcContentClient5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public DXButton UIVelgalleButton
        {
            get
            {
                if ((this.mUIVelgalleButton == null))
                {
                    this.mUIVelgalleButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSelectAll";
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIVelgalleButton.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUIVelgalleButton;
            }
        }
        
        public DXButton UIVelgingenButton
        {
            get
            {
                if ((this.mUIVelgingenButton == null))
                {
                    this.mUIVelgingenButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVelgingenButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSelectNone";
                    this.mUIVelgingenButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIVelgingenButton.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUIVelgingenButton;
            }
        }
        
        public UIGrpEmployeeSelectorClient UIGrpEmployeeSelectorClient
        {
            get
            {
                if ((this.mUIGrpEmployeeSelectorClient == null))
                {
                    this.mUIGrpEmployeeSelectorClient = new UIGrpEmployeeSelectorClient(this);
                }
                return this.mUIGrpEmployeeSelectorClient;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIVelgalleButton;
        
        private DXButton mUIVelgingenButton;
        
        private UIGrpEmployeeSelectorClient mUIGrpEmployeeSelectorClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpEmployeeSelectorClient : DXTestControl
    {
        
        public UIGrpEmployeeSelectorClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEmployeeSelector";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPnlMainClient2 UIPnlMainClient
        {
            get
            {
                if ((this.mUIPnlMainClient == null))
                {
                    this.mUIPnlMainClient = new UIPnlMainClient2(this);
                }
                return this.mUIPnlMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainClient2 mUIPnlMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlMainClient2 : DXTestControl
    {
        
        public UIPnlMainClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIGcEmployeesTable1 UIGcEmployeesTable
        {
            get
            {
                if ((this.mUIGcEmployeesTable == null))
                {
                    this.mUIGcEmployeesTable = new UIGcEmployeesTable1(this);
                }
                return this.mUIGcEmployeesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcEmployeesTable1 mUIGcEmployeesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcEmployeesTable1 : DXGrid
    {
        
        public UIGcEmployeesTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public DXCell UIValgtCell
        {
            get
            {
                if ((this.mUIValgtCell == null))
                {
                    this.mUIValgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]10[Column]gcolSelected";
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUIValgtCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIValgtCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSDialogFooterBarCustom4 : DXTestControl
    {
        
        public UIGSDialogFooterBarCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dbFooter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDialogFooterBar";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIViewHostCustom1 : DXTestControl
    {
        
        public UIViewHostCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient1 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient1(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient1 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcViewClient1 : DXTestControl
    {
        
        public UIPcViewClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UISelectDepartmentEmplCustom UISelectDepartmentEmplCustom
        {
            get
            {
                if ((this.mUISelectDepartmentEmplCustom == null))
                {
                    this.mUISelectDepartmentEmplCustom = new UISelectDepartmentEmplCustom(this);
                }
                return this.mUISelectDepartmentEmplCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISelectDepartmentEmplCustom mUISelectDepartmentEmplCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISelectDepartmentEmplCustom : DXTestControl
    {
        
        public UISelectDepartmentEmplCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SelectDepartmentEmployeesView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SelectDepartmentEmployeesView";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcContentContainerClient UIPcContentContainerClient
        {
            get
            {
                if ((this.mUIPcContentContainerClient == null))
                {
                    this.mUIPcContentContainerClient = new UIPcContentContainerClient(this);
                }
                return this.mUIPcContentContainerClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentContainerClient mUIPcContentContainerClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcContentContainerClient : DXTestControl
    {
        
        public UIPcContentContainerClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContentContainer";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcContentClient6 UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient6(this);
                }
                return this.mUIPcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient6 mUIPcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcContentClient6 : DXTestControl
    {
        
        public UIPcContentClient6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIGcDepartmentEmployeeTable UIGcDepartmentEmployeeTable
        {
            get
            {
                if ((this.mUIGcDepartmentEmployeeTable == null))
                {
                    this.mUIGcDepartmentEmployeeTable = new UIGcDepartmentEmployeeTable(this);
                }
                return this.mUIGcDepartmentEmployeeTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDepartmentEmployeeTable mUIGcDepartmentEmployeeTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcDepartmentEmployeeTable : DXGrid
    {
        
        public UIGcDepartmentEmployeeTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem10HelgCell
        {
            get
            {
                if ((this.mUIItem10HelgCell == null))
                {
                    this.mUIItem10HelgCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem10HelgCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentEmployeesGridControlCell[View]gvDepartmentEmployees[Row]0[Column]colE" +
                        "mployee";
                    this.mUIItem10HelgCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem10HelgCell.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUIItem10HelgCell;
            }
        }
        
        public DXCell UINNCell
        {
            get
            {
                if ((this.mUINNCell == null))
                {
                    this.mUINNCell = new DXCell(this);
                    #region Search Criteria
                    this.mUINNCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentEmployeesGridControlCell[View]gvDepartmentEmployees[Row]10[Column]col" +
                        "Employee";
                    this.mUINNCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUINNCell.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUINNCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem10HelgCell;
        
        private DXCell mUINNCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIArbeidsplanChapter_5Window : DXWindow
    {
        
        public UIArbeidsplanChapter_5Window()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon4 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon4(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        
        public UIRcMenuRibbon12 UIRcMenuRibbon1
        {
            get
            {
                if ((this.mUIRcMenuRibbon1 == null))
                {
                    this.mUIRcMenuRibbon1 = new UIRcMenuRibbon12(this);
                }
                return this.mUIRcMenuRibbon1;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon4 mUIRcMenuRibbon;
        
        private UIRcMenuRibbon12 mUIRcMenuRibbon1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRcMenuRibbon4 : DXRibbon
    {
        
        public UIRcMenuRibbon4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpRosterPlanRibbonPage3 UIRpRosterPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpRosterPlanRibbonPage == null))
                {
                    this.mUIRpRosterPlanRibbonPage = new UIRpRosterPlanRibbonPage3(this);
                }
                return this.mUIRpRosterPlanRibbonPage;
            }
        }
        
        public UIRpPlanRibbonPage4 UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new UIRpPlanRibbonPage4(this);
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpRosterPlanRibbonPage3 mUIRpRosterPlanRibbonPage;
        
        private UIRpPlanRibbonPage4 mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpRosterPlanRibbonPage3 : DXRibbonPage
    {
        
        public UIRpRosterPlanRibbonPage3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGrpEditRibbonPageGroup2 UIGrpEditRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpEditRibbonPageGroup == null))
                {
                    this.mUIGrpEditRibbonPageGroup = new UIGrpEditRibbonPageGroup2(this);
                }
                return this.mUIGrpEditRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpEditRibbonPageGroup2 mUIGrpEditRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpEditRibbonPageGroup2 : DXRibbonPageGroup
    {
        
        public UIGrpEditRibbonPageGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEdit";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIRedigerRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIRedigerRibbonBaseButtonItem == null))
                {
                    this.mUIRedigerRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIRedigerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEditMode";
                    this.mUIRedigerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIRedigerRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRedigerRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIRedigerRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpPlanRibbonPage4 : DXRibbonPage
    {
        
        public UIRpPlanRibbonPage4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGrpEffectuateNoneRevRibbonPageGroup UIGrpEffectuateNoneRevRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpEffectuateNoneRevRibbonPageGroup == null))
                {
                    this.mUIGrpEffectuateNoneRevRibbonPageGroup = new UIGrpEffectuateNoneRevRibbonPageGroup(this);
                }
                return this.mUIGrpEffectuateNoneRevRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpEffectuateNoneRevRibbonPageGroup mUIGrpEffectuateNoneRevRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpEffectuateNoneRevRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpEffectuateNoneRevRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEffectuate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonItem UIIverksettingRibbonItem
        {
            get
            {
                if ((this.mUIIverksettingRibbonItem == null))
                {
                    this.mUIIverksettingRibbonItem = new DXRibbonItem(this);
                    #region Search Criteria
                    this.mUIIverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "mnuEffectuateRevolving";
                    this.mUIIverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
                    this.mUIIverksettingRibbonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIIverksettingRibbonItem;
            }
        }
        
        public DXRibbonItem UISlettiverksettingRibbonItem
        {
            get
            {
                if ((this.mUISlettiverksettingRibbonItem == null))
                {
                    this.mUISlettiverksettingRibbonItem = new DXRibbonItem(this);
                    #region Search Criteria
                    this.mUISlettiverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "mnuDeleteEff";
                    this.mUISlettiverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
                    this.mUISlettiverksettingRibbonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUISlettiverksettingRibbonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonItem mUIIverksettingRibbonItem;
        
        private DXRibbonItem mUISlettiverksettingRibbonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRcMenuRibbon12 : DXRibbon
    {
        
        public UIRcMenuRibbon12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpPlanRibbonPage5 UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new UIRpPlanRibbonPage5(this);
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpPlanRibbonPage5 mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpPlanRibbonPage5 : DXRibbonPage
    {
        
        public UIRpPlanRibbonPage5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpgPlanRibbonPageGroup3 UIRpgPlanRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgPlanRibbonPageGroup == null))
                {
                    this.mUIRpgPlanRibbonPageGroup = new UIRpgPlanRibbonPageGroup3(this);
                }
                return this.mUIRpgPlanRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgPlanRibbonPageGroup3 mUIRpgPlanRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpgPlanRibbonPageGroup3 : DXRibbonPageGroup
    {
        
        public UIRpgPlanRibbonPageGroup3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIAnsatteRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIAnsatteRibbonBaseButtonItem == null))
                {
                    this.mUIAnsatteRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIAnsatteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEmployees";
                    this.mUIAnsatteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIAnsatteRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIAnsatteRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIAnsatteRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIArbeidsplanChapter_5Window1 : DXWindow
    {
        
        public UIArbeidsplanChapter_5Window1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient4 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient4(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        
        public UIRcMenuRibbon5 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon5(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        
        public UIPnlRosterPlanClient11 UIPnlRosterPlanClient1
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient1 == null))
                {
                    this.mUIPnlRosterPlanClient1 = new UIPnlRosterPlanClient11(this);
                }
                return this.mUIPnlRosterPlanClient1;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient4 mUIPnlRosterPlanClient;
        
        private UIRcMenuRibbon5 mUIRcMenuRibbon;
        
        private UIPnlRosterPlanClient11 mUIPnlRosterPlanClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlRosterPlanClient4 : DXTestControl
    {
        
        public UIPnlRosterPlanClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable4 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable4(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable4 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcRosterPlanTable4 : DXGrid
    {
        
        public UIGcRosterPlanTable4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_61";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_84";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        
        private DXCell mUIItemCell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRcMenuRibbon5 : DXRibbon
    {
        
        public UIRcMenuRibbon5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpRosterPlanRibbonPage4 UIRpRosterPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpRosterPlanRibbonPage == null))
                {
                    this.mUIRpRosterPlanRibbonPage = new UIRpRosterPlanRibbonPage4(this);
                }
                return this.mUIRpRosterPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpRosterPlanRibbonPage4 mUIRpRosterPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpRosterPlanRibbonPage4 : DXRibbonPage
    {
        
        public UIRpRosterPlanRibbonPage4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGrpEditRibbonPageGroup3 UIGrpEditRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpEditRibbonPageGroup == null))
                {
                    this.mUIGrpEditRibbonPageGroup = new UIGrpEditRibbonPageGroup3(this);
                }
                return this.mUIGrpEditRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpEditRibbonPageGroup3 mUIGrpEditRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpEditRibbonPageGroup3 : DXRibbonPageGroup
    {
        
        public UIGrpEditRibbonPageGroup3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEdit";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIBtnOkRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnOkRibbonBaseButtonItem == null))
                {
                    this.mUIBtnOkRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnOkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIBtnOkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBtnOkRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIBtnOkRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIBtnOkRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlRosterPlanClient11 : DXTestControl
    {
        
        public UIPnlRosterPlanClient11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable5 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable5(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable5 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcRosterPlanTable5 : DXGrid
    {
        
        public UIGcRosterPlanTable5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_0";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow51 : DXWindow
    {
        
        public UIItemWindow51()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GT-4003 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GT-4003 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("GT-4003 - Informasjon");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63031732ASCLAvWindow17 : WinWindow
    {
        
        public UIGatver63031732ASCLAvWindow17()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow38 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow38(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow38 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow38 : WinWindow
    {
        
        public UIItemWindow38(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsattClient
        {
            get
            {
                if ((this.mUIAnsattClient == null))
                {
                    this.mUIAnsattClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsattClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAnsattClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsattClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63031732ASCLAvWindow18 : WinWindow
    {
        
        public UIGatver63031732ASCLAvWindow18()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow39 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow39(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow117 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow117(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow210 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow210(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow310 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow310(this);
                }
                return this.mUIItemWindow3;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow39 mUIItemWindow;
        
        private UIItemWindow117 mUIItemWindow1;
        
        private UIItemWindow210 mUIItemWindow2;
        
        private UIItemWindow310 mUIItemWindow3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow39 : WinWindow
    {
        
        public UIItemWindow39(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "10";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIAnsattClient UIAnsattClient
        {
            get
            {
                if ((this.mUIAnsattClient == null))
                {
                    this.mUIAnsattClient = new UIAnsattClient(this);
                }
                return this.mUIAnsattClient;
            }
        }
        #endregion
        
        #region Fields
        private UIAnsattClient mUIAnsattClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAnsattClient : WinClient
    {
        
        public UIAnsattClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow117 : WinWindow
    {
        
        public UIItemWindow117(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSEdit";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "12";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow210 : WinWindow
    {
        
        public UIItemWindow210(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSEdit";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "24";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow310 : WinWindow
    {
        
        public UIItemWindow310(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSEdit";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "13";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63031732ASCLAvWindow19 : WinWindow
    {
        
        public UIGatver63031732ASCLAvWindow19()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow40 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow40(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow40 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow40 : WinWindow
    {
        
        public UIItemWindow40(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver63031732ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvClient == null))
                {
                    this.mUIGatver63031732ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver63031732ASCLAvClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGatver63031732ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver63031732ASCLAvClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63031732ASCLAvWindow20 : WinWindow
    {
        
        public UIGatver63031732ASCLAvWindow20()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow42 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow42(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow42 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow42 : WinWindow
    {
        
        public UIItemWindow42(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver63031732ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver63031732ASCLAvClient == null))
                {
                    this.mUIGatver63031732ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver63031732ASCLAvClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGatver63031732ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver63031732ASCLAvClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63031732ASCLAvWindow21 : WinWindow
    {
        
        public UIGatver63031732ASCLAvWindow21()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow118 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow118(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow118 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow118 : WinWindow
    {
        
        public UIItemWindow118(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIAvdelingClient
        {
            get
            {
                if ((this.mUIAvdelingClient == null))
                {
                    this.mUIAvdelingClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAvdelingClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAvdelingClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAvdelingClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63031732ASCLAvWindow22 : WinWindow
    {
        
        public UIGatver63031732ASCLAvWindow22()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPaToolbarClient UIPaToolbarClient
        {
            get
            {
                if ((this.mUIPaToolbarClient == null))
                {
                    this.mUIPaToolbarClient = new UIPaToolbarClient(this);
                }
                return this.mUIPaToolbarClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPaToolbarClient mUIPaToolbarClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPaToolbarClient : DXTestControl
    {
        
        public UIPaToolbarClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paToolbar";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXButton UINyvaktkodeButton
        {
            get
            {
                if ((this.mUINyvaktkodeButton == null))
                {
                    this.mUINyvaktkodeButton = new DXButton(this);
                    #region Search Criteria
                    this.mUINyvaktkodeButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnNewShiftcode";
                    this.mUINyvaktkodeButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDropDownButton";
                    this.mUINyvaktkodeButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUINyvaktkodeButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUINyvaktkodeButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINyvaktkodeWindow : DXWindow
    {
        
        public UINyvaktkodeWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ny vaktkode";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ny vaktkode");
            #endregion
        }
        
        #region Properties
        public UIPcContentClient7 UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient7(this);
                }
                return this.mUIPcContentClient;
            }
        }
        
        public UIGSDialogFooterBarCustom5 UIGSDialogFooterBarCustom
        {
            get
            {
                if ((this.mUIGSDialogFooterBarCustom == null))
                {
                    this.mUIGSDialogFooterBarCustom = new UIGSDialogFooterBarCustom5(this);
                }
                return this.mUIGSDialogFooterBarCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient7 mUIPcContentClient;
        
        private UIGSDialogFooterBarCustom5 mUIGSDialogFooterBarCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcContentClient7 : DXTestControl
    {
        
        public UIPcContentClient7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny vaktkode");
            #endregion
        }
        
        #region Properties
        public UIPaNormalShiftcodePanClient UIPaNormalShiftcodePanClient
        {
            get
            {
                if ((this.mUIPaNormalShiftcodePanClient == null))
                {
                    this.mUIPaNormalShiftcodePanClient = new UIPaNormalShiftcodePanClient(this);
                }
                return this.mUIPaNormalShiftcodePanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPaNormalShiftcodePanClient mUIPaNormalShiftcodePanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPaNormalShiftcodePanClient : DXTestControl
    {
        
        public UIPaNormalShiftcodePanClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paNormalShiftcodePanels";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny vaktkode");
            #endregion
        }
        
        #region Properties
        public UITcShiftCodeTypesTabList UITcShiftCodeTypesTabList
        {
            get
            {
                if ((this.mUITcShiftCodeTypesTabList == null))
                {
                    this.mUITcShiftCodeTypesTabList = new UITcShiftCodeTypesTabList(this);
                }
                return this.mUITcShiftCodeTypesTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcShiftCodeTypesTabList mUITcShiftCodeTypesTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcShiftCodeTypesTabList : DXTestControl
    {
        
        public UITcShiftCodeTypesTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcShiftCodeTypes";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Ny vaktkode");
            #endregion
        }
        
        #region Properties
        public UITpNormalShiftCodeClient UITpNormalShiftCodeClient
        {
            get
            {
                if ((this.mUITpNormalShiftCodeClient == null))
                {
                    this.mUITpNormalShiftCodeClient = new UITpNormalShiftCodeClient(this);
                }
                return this.mUITpNormalShiftCodeClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpNormalShiftCodeClient mUITpNormalShiftCodeClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpNormalShiftCodeClient : DXTestControl
    {
        
        public UITpNormalShiftCodeClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpNormalShiftCode";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Ny vaktkode");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITe_NSC_CodeEdit
        {
            get
            {
                if ((this.mUITe_NSC_CodeEdit == null))
                {
                    this.mUITe_NSC_CodeEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITe_NSC_CodeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "te_NSC_Code";
                    this.mUITe_NSC_CodeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUITe_NSC_CodeEdit.WindowTitles.Add("Ny vaktkode");
                    #endregion
                }
                return this.mUITe_NSC_CodeEdit;
            }
        }
        
        public DXTextEdit UIETime2Edit
        {
            get
            {
                if ((this.mUIETime2Edit == null))
                {
                    this.mUIETime2Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime2Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[2]";
                    this.mUIETime2Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime2Edit.WindowTitles.Add("Ny vaktkode");
                    #endregion
                }
                return this.mUIETime2Edit;
            }
        }
        
        public DXTextEdit UIETime5Edit
        {
            get
            {
                if ((this.mUIETime5Edit == null))
                {
                    this.mUIETime5Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime5Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[5]";
                    this.mUIETime5Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime5Edit.WindowTitles.Add("Ny vaktkode");
                    #endregion
                }
                return this.mUIETime5Edit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITe_NSC_CodeEdit;
        
        private DXTextEdit mUIETime2Edit;
        
        private DXTextEdit mUIETime5Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSDialogFooterBarCustom5 : DXTestControl
    {
        
        public UIGSDialogFooterBarCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dbFooter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDialogFooterBar";
            this.WindowTitles.Add("Ny vaktkode");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Ny vaktkode");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIArbeidsplanChapter_6Window : DXWindow
    {
        
        public UIArbeidsplanChapter_6Window()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon6 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon6(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        
        public UIRcMenuRibbon13 UIRcMenuRibbon1
        {
            get
            {
                if ((this.mUIRcMenuRibbon1 == null))
                {
                    this.mUIRcMenuRibbon1 = new UIRcMenuRibbon13(this);
                }
                return this.mUIRcMenuRibbon1;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon6 mUIRcMenuRibbon;
        
        private UIRcMenuRibbon13 mUIRcMenuRibbon1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRcMenuRibbon6 : DXRibbon
    {
        
        public UIRcMenuRibbon6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpPlanRibbonPage6 UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new UIRpPlanRibbonPage6(this);
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpPlanRibbonPage6 mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpPlanRibbonPage6 : DXRibbonPage
    {
        
        public UIRpPlanRibbonPage6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGrpEffectuateRevolviRibbonPageGroup1 UIGrpEffectuateRevolviRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpEffectuateRevolviRibbonPageGroup == null))
                {
                    this.mUIGrpEffectuateRevolviRibbonPageGroup = new UIGrpEffectuateRevolviRibbonPageGroup1(this);
                }
                return this.mUIGrpEffectuateRevolviRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpEffectuateRevolviRibbonPageGroup1 mUIGrpEffectuateRevolviRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpEffectuateRevolviRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIGrpEffectuateRevolviRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEffectuate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonItem UIIverksettingRibbonItem
        {
            get
            {
                if ((this.mUIIverksettingRibbonItem == null))
                {
                    this.mUIIverksettingRibbonItem = new DXRibbonItem(this);
                    #region Search Criteria
                    this.mUIIverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "mnuEffectuateRevolving";
                    this.mUIIverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
                    this.mUIIverksettingRibbonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIIverksettingRibbonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonItem mUIIverksettingRibbonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRcMenuRibbon13 : DXRibbon
    {
        
        public UIRcMenuRibbon13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpPlanRibbonPage7 UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new UIRpPlanRibbonPage7(this);
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpPlanRibbonPage7 mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpPlanRibbonPage7 : DXRibbonPage
    {
        
        public UIRpPlanRibbonPage7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpgPlanRibbonPageGroup4 UIRpgPlanRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgPlanRibbonPageGroup == null))
                {
                    this.mUIRpgPlanRibbonPageGroup = new UIRpgPlanRibbonPageGroup4(this);
                }
                return this.mUIRpgPlanRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgPlanRibbonPageGroup4 mUIRpgPlanRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpgPlanRibbonPageGroup4 : DXRibbonPageGroup
    {
        
        public UIRpgPlanRibbonPageGroup4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIAnsatteRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIAnsatteRibbonBaseButtonItem == null))
                {
                    this.mUIAnsatteRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIAnsatteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEmployees";
                    this.mUIAnsatteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIAnsatteRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIAnsatteRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIAnsatteRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver64034203ASCLAvWindow : WinWindow
    {
        
        public UIGatver64034203ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIStandaloneBarDockConCustom2 UIStandaloneBarDockConCustom
        {
            get
            {
                if ((this.mUIStandaloneBarDockConCustom == null))
                {
                    this.mUIStandaloneBarDockConCustom = new UIStandaloneBarDockConCustom2(this);
                }
                return this.mUIStandaloneBarDockConCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIStandaloneBarDockConCustom2 mUIStandaloneBarDockConCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIStandaloneBarDockConCustom2 : DXTestControl
    {
        
        public UIStandaloneBarDockConCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "standaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StandaloneBarDockControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIMainmenuMenuBar2 UIMainmenuMenuBar
        {
            get
            {
                if ((this.mUIMainmenuMenuBar == null))
                {
                    this.mUIMainmenuMenuBar = new UIMainmenuMenuBar2(this);
                }
                return this.mUIMainmenuMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIMainmenuMenuBar2 mUIMainmenuMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMainmenuMenuBar2 : DXMenu
    {
        
        public UIMainmenuMenuBar2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Main menu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIVelgdatoBarItem1 UIVelgdatoBarItem
        {
            get
            {
                if ((this.mUIVelgdatoBarItem == null))
                {
                    this.mUIVelgdatoBarItem = new UIVelgdatoBarItem1(this);
                }
                return this.mUIVelgdatoBarItem;
            }
        }
        
        public DXMenuBaseButtonItem UIVelgdatoBarBaseButtonItem
        {
            get
            {
                if ((this.mUIVelgdatoBarBaseButtonItem == null))
                {
                    this.mUIVelgdatoBarBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIVelgdatoBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDatePicker";
                    this.mUIVelgdatoBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
                    this.mUIVelgdatoBarBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIVelgdatoBarBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private UIVelgdatoBarItem1 mUIVelgdatoBarItem;
        
        private DXMenuBaseButtonItem mUIVelgdatoBarBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIVelgdatoBarItem1 : DXMenuItem
    {
        
        public UIVelgdatoBarItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDatePicker";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPopupContainerBarConMenu1 UIPopupContainerBarConMenu
        {
            get
            {
                if ((this.mUIPopupContainerBarConMenu == null))
                {
                    this.mUIPopupContainerBarConMenu = new UIPopupContainerBarConMenu1(this);
                }
                return this.mUIPopupContainerBarConMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupContainerBarConMenu1 mUIPopupContainerBarConMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPopupContainerBarConMenu1 : DXMenu
    {
        
        public UIPopupContainerBarConMenu1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerBarControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPpcDatePickerClient1 UIPpcDatePickerClient
        {
            get
            {
                if ((this.mUIPpcDatePickerClient == null))
                {
                    this.mUIPpcDatePickerClient = new UIPpcDatePickerClient1(this);
                }
                return this.mUIPpcDatePickerClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPpcDatePickerClient1 mUIPpcDatePickerClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPpcDatePickerClient1 : DXTestControl
    {
        
        public UIPpcDatePickerClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ppcDatePicker";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDatePopupEdit
        {
            get
            {
                if ((this.mUIPceDatePopupEdit == null))
                {
                    this.mUIPceDatePopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDatePopupEdit.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIPceDatePopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDatePopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver64339312ASCLAvWindow : WinWindow
    {
        
        public UIGatver64339312ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow43 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow43(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow43 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow43 : WinWindow
    {
        
        public UIItemWindow43(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsattClient
        {
            get
            {
                if ((this.mUIAnsattClient == null))
                {
                    this.mUIAnsattClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsattClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAnsattClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsattClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIBeregningsreglerWindow : DXWindow
    {
        
        public UIBeregningsreglerWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Beregningsregler";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Beregningsregler");
            #endregion
        }
        
        #region Properties
        public DXButton UIMaximizeButton
        {
            get
            {
                if ((this.mUIMaximizeButton == null))
                {
                    this.mUIMaximizeButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIMaximizeButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Maximize";
                    this.mUIMaximizeButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleButton";
                    this.mUIMaximizeButton.WindowTitles.Add("Beregningsregler");
                    #endregion
                }
                return this.mUIMaximizeButton;
            }
        }
        
        public UIPcContentClient8 UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient8(this);
                }
                return this.mUIPcContentClient;
            }
        }
        
        public DXButton UILukkButton
        {
            get
            {
                if ((this.mUILukkButton == null))
                {
                    this.mUILukkButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUILukkButton.WindowTitles.Add("Beregningsregler");
                    #endregion
                }
                return this.mUILukkButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIMaximizeButton;
        
        private UIPcContentClient8 mUIPcContentClient;
        
        private DXButton mUILukkButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcContentClient8 : DXTestControl
    {
        
        public UIPcContentClient8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Beregningsregler");
            #endregion
        }
        
        #region Properties
        public UISplitContainerControSplitContainerControl UISplitContainerControSplitContainerControl
        {
            get
            {
                if ((this.mUISplitContainerControSplitContainerControl == null))
                {
                    this.mUISplitContainerControSplitContainerControl = new UISplitContainerControSplitContainerControl(this);
                }
                return this.mUISplitContainerControSplitContainerControl;
            }
        }
        #endregion
        
        #region Fields
        private UISplitContainerControSplitContainerControl mUISplitContainerControSplitContainerControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISplitContainerControSplitContainerControl : DXSplitContainerControl
    {
        
        public UISplitContainerControSplitContainerControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitContainerControl";
            this.WindowTitles.Add("Beregningsregler");
            #endregion
        }
        
        #region Properties
        public UISplitGroupPanelClient UISplitGroupPanelClient
        {
            get
            {
                if ((this.mUISplitGroupPanelClient == null))
                {
                    this.mUISplitGroupPanelClient = new UISplitGroupPanelClient(this);
                }
                return this.mUISplitGroupPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UISplitGroupPanelClient mUISplitGroupPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISplitGroupPanelClient : DXTestControl
    {
        
        public UISplitGroupPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl1SplitGroupPanel[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
            this.WindowTitles.Add("Beregningsregler");
            #endregion
        }
        
        #region Properties
        public UIGcRuleTypesTable UIGcRuleTypesTable
        {
            get
            {
                if ((this.mUIGcRuleTypesTable == null))
                {
                    this.mUIGcRuleTypesTable = new UIGcRuleTypesTable(this);
                }
                return this.mUIGcRuleTypesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRuleTypesTable mUIGcRuleTypesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcRuleTypesTable : DXGrid
    {
        
        public UIGcRuleTypesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRuleTypes";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Beregningsregler");
            #endregion
        }
        
        #region Properties
        public DXCell UIUtrykningpåhjemmevakCell
        {
            get
            {
                if ((this.mUIUtrykningpåhjemmevakCell == null))
                {
                    this.mUIUtrykningpåhjemmevakCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIUtrykningpåhjemmevakCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRuleTypesGridControlCell[View]gvRuleTypes[Row]26[Column]gvcRuleTypesName";
                    this.mUIUtrykningpåhjemmevakCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIUtrykningpåhjemmevakCell.WindowTitles.Add("Beregningsregler");
                    #endregion
                }
                return this.mUIUtrykningpåhjemmevakCell;
            }
        }
        
        public DXCell UIUtrykningpåhjemmevakCell1
        {
            get
            {
                if ((this.mUIUtrykningpåhjemmevakCell1 == null))
                {
                    this.mUIUtrykningpåhjemmevakCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIUtrykningpåhjemmevakCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRuleTypesGridControlCell[View]gvRuleTypes[Row]27[Column]gvcRuleTypesName";
                    this.mUIUtrykningpåhjemmevakCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIUtrykningpåhjemmevakCell1.WindowTitles.Add("Beregningsregler");
                    #endregion
                }
                return this.mUIUtrykningpåhjemmevakCell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIUtrykningpåhjemmevakCell;
        
        private DXCell mUIUtrykningpåhjemmevakCell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEndreberegningsregelWindow : DXWindow
    {
        
        public UIEndreberegningsregelWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Endre beregningsregel";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Endre beregningsregel");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl1Client6 UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client6(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Endre beregningsregel");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl1Client6 mUIGsPanelControl1Client;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsPanelControl1Client6 : DXTestControl
    {
        
        public UIGsPanelControl1Client6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Endre beregningsregel");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl2Client1 UIGsPanelControl2Client
        {
            get
            {
                if ((this.mUIGsPanelControl2Client == null))
                {
                    this.mUIGsPanelControl2Client = new UIGsPanelControl2Client1(this);
                }
                return this.mUIGsPanelControl2Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl2Client1 mUIGsPanelControl2Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsPanelControl2Client1 : DXTestControl
    {
        
        public UIGsPanelControl2Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Endre beregningsregel");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UICeInactiveCheckBox
        {
            get
            {
                if ((this.mUICeInactiveCheckBox == null))
                {
                    this.mUICeInactiveCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUICeInactiveCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "ceInactive";
                    this.mUICeInactiveCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUICeInactiveCheckBox.WindowTitles.Add("Endre beregningsregel");
                    #endregion
                }
                return this.mUICeInactiveCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUICeInactiveCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver65141810ASCLAvWindow : WinWindow
    {
        
        public UIGatver65141810ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcMainPanelClient2 UIPcMainPanelClient
        {
            get
            {
                if ((this.mUIPcMainPanelClient == null))
                {
                    this.mUIPcMainPanelClient = new UIPcMainPanelClient2(this);
                }
                return this.mUIPcMainPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcMainPanelClient2 mUIPcMainPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcMainPanelClient2 : DXTestControl
    {
        
        public UIPcMainPanelClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITcPanListsTabList2 UITcPanListsTabList
        {
            get
            {
                if ((this.mUITcPanListsTabList == null))
                {
                    this.mUITcPanListsTabList = new UITcPanListsTabList2(this);
                }
                return this.mUITcPanListsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcPanListsTabList2 mUITcPanListsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcPanListsTabList2 : DXTestControl
    {
        
        public UITcPanListsTabList2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcPanLists";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITpRosterPlanListClient2 UITpRosterPlanListClient
        {
            get
            {
                if ((this.mUITpRosterPlanListClient == null))
                {
                    this.mUITpRosterPlanListClient = new UITpRosterPlanListClient2(this);
                }
                return this.mUITpRosterPlanListClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpRosterPlanListClient2 mUITpRosterPlanListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpRosterPlanListClient2 : DXTestControl
    {
        
        public UITpRosterPlanListClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpRosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRosterPlanListCustom UIRosterPlanListCustom
        {
            get
            {
                if ((this.mUIRosterPlanListCustom == null))
                {
                    this.mUIRosterPlanListCustom = new UIRosterPlanListCustom(this);
                }
                return this.mUIRosterPlanListCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRosterPlanListCustom mUIRosterPlanListCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRosterPlanListCustom : DXTestControl
    {
        
        public UIRosterPlanListCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RosterPlanList";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPnlGridClient2 UIPnlGridClient
        {
            get
            {
                if ((this.mUIPnlGridClient == null))
                {
                    this.mUIPnlGridClient = new UIPnlGridClient2(this);
                }
                return this.mUIPnlGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGridClient2 mUIPnlGridClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlGridClient2 : DXTestControl
    {
        
        public UIPnlGridClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRibbonControlRibbon2 UIRibbonControlRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRibbon == null))
                {
                    this.mUIRibbonControlRibbon = new UIRibbonControlRibbon2(this);
                }
                return this.mUIRibbonControlRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonControlRibbon2 mUIRibbonControlRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRibbonControlRibbon2 : DXRibbon
    {
        
        public UIRibbonControlRibbon2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRpHomeRibbonPage UIRpHomeRibbonPage
        {
            get
            {
                if ((this.mUIRpHomeRibbonPage == null))
                {
                    this.mUIRpHomeRibbonPage = new UIRpHomeRibbonPage(this);
                }
                return this.mUIRpHomeRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpHomeRibbonPage mUIRpHomeRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpHomeRibbonPage : DXRibbonPage
    {
        
        public UIRpHomeRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpHome";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRpgPlanRibbonPageGroup5 UIRpgPlanRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgPlanRibbonPageGroup == null))
                {
                    this.mUIRpgPlanRibbonPageGroup = new UIRpgPlanRibbonPageGroup5(this);
                }
                return this.mUIRpgPlanRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgPlanRibbonPageGroup5 mUIRpgPlanRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpgPlanRibbonPageGroup5 : DXRibbonPageGroup
    {
        
        public UIRpgPlanRibbonPageGroup5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UINYRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUINYRibbonBaseButtonItem == null))
                {
                    this.mUINYRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUINYRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiNewPlan";
                    this.mUINYRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUINYRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUINYRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUINYRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver66042292ASCLAvWindow : WinWindow
    {
        
        public UIGatver66042292ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIStandaloneBarDockConCustom3 UIStandaloneBarDockConCustom
        {
            get
            {
                if ((this.mUIStandaloneBarDockConCustom == null))
                {
                    this.mUIStandaloneBarDockConCustom = new UIStandaloneBarDockConCustom3(this);
                }
                return this.mUIStandaloneBarDockConCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIStandaloneBarDockConCustom3 mUIStandaloneBarDockConCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIStandaloneBarDockConCustom3 : DXTestControl
    {
        
        public UIStandaloneBarDockConCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "standaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StandaloneBarDockControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIMainmenuMenuBar3 UIMainmenuMenuBar
        {
            get
            {
                if ((this.mUIMainmenuMenuBar == null))
                {
                    this.mUIMainmenuMenuBar = new UIMainmenuMenuBar3(this);
                }
                return this.mUIMainmenuMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIMainmenuMenuBar3 mUIMainmenuMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMainmenuMenuBar3 : DXMenu
    {
        
        public UIMainmenuMenuBar3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Main menu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIVelgdatoBarItem2 UIVelgdatoBarItem
        {
            get
            {
                if ((this.mUIVelgdatoBarItem == null))
                {
                    this.mUIVelgdatoBarItem = new UIVelgdatoBarItem2(this);
                }
                return this.mUIVelgdatoBarItem;
            }
        }
        #endregion
        
        #region Fields
        private UIVelgdatoBarItem2 mUIVelgdatoBarItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIVelgdatoBarItem2 : DXMenuItem
    {
        
        public UIVelgdatoBarItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDatePicker";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPopupContainerBarConMenu2 UIPopupContainerBarConMenu
        {
            get
            {
                if ((this.mUIPopupContainerBarConMenu == null))
                {
                    this.mUIPopupContainerBarConMenu = new UIPopupContainerBarConMenu2(this);
                }
                return this.mUIPopupContainerBarConMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupContainerBarConMenu2 mUIPopupContainerBarConMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPopupContainerBarConMenu2 : DXMenu
    {
        
        public UIPopupContainerBarConMenu2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerBarControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPpcDatePickerClient2 UIPpcDatePickerClient
        {
            get
            {
                if ((this.mUIPpcDatePickerClient == null))
                {
                    this.mUIPpcDatePickerClient = new UIPpcDatePickerClient2(this);
                }
                return this.mUIPpcDatePickerClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPpcDatePickerClient2 mUIPpcDatePickerClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPpcDatePickerClient2 : DXTestControl
    {
        
        public UIPpcDatePickerClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ppcDatePicker";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UISdeDateCustom UISdeDateCustom
        {
            get
            {
                if ((this.mUISdeDateCustom == null))
                {
                    this.mUISdeDateCustom = new UISdeDateCustom(this);
                }
                return this.mUISdeDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISdeDateCustom mUISdeDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISdeDateCustom : DXTestControl
    {
        
        public UISdeDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver66042292ASCLAvWindow1 : WinWindow
    {
        
        public UIGatver66042292ASCLAvWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow44 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow44(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow119 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow119(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow44 mUIItemWindow;
        
        private UIItemWindow119 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow44 : WinWindow
    {
        
        public UIItemWindow44(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver66042292ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver66042292ASCLAvClient == null))
                {
                    this.mUIGatver66042292ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver66042292ASCLAvClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGatver66042292ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver66042292ASCLAvClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow119 : WinWindow
    {
        
        public UIItemWindow119(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIAvdelingClient
        {
            get
            {
                if ((this.mUIAvdelingClient == null))
                {
                    this.mUIAvdelingClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAvdelingClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAvdelingClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAvdelingClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIArbeidsplanChapter_6Window1 : DXWindow
    {
        
        public UIArbeidsplanChapter_6Window1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon7 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon7(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon7 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRcMenuRibbon7 : DXRibbon
    {
        
        public UIRcMenuRibbon7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonPage UIRpRosterPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpRosterPlanRibbonPage == null))
                {
                    this.mUIRpRosterPlanRibbonPage = new DXRibbonPage(this);
                    #region Search Criteria
                    this.mUIRpRosterPlanRibbonPage.SearchProperties[DXTestControl.PropertyNames.Name] = "rpRosterPlan";
                    this.mUIRpRosterPlanRibbonPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
                    this.mUIRpRosterPlanRibbonPage.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRpRosterPlanRibbonPage;
            }
        }
        
        public UIRpPlanRibbonPage8 UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new UIRpPlanRibbonPage8(this);
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonPage mUIRpRosterPlanRibbonPage;
        
        private UIRpPlanRibbonPage8 mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpPlanRibbonPage8 : DXRibbonPage
    {
        
        public UIRpPlanRibbonPage8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpgPlanRibbonPageGroup6 UIRpgPlanRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgPlanRibbonPageGroup == null))
                {
                    this.mUIRpgPlanRibbonPageGroup = new UIRpgPlanRibbonPageGroup6(this);
                }
                return this.mUIRpgPlanRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgPlanRibbonPageGroup6 mUIRpgPlanRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpgPlanRibbonPageGroup6 : DXRibbonPageGroup
    {
        
        public UIRpgPlanRibbonPageGroup6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIAnsatteRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIAnsatteRibbonBaseButtonItem == null))
                {
                    this.mUIAnsatteRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIAnsatteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEmployees";
                    this.mUIAnsatteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIAnsatteRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIAnsatteRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIAnsatteRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIArbeidsplanChapter_5Window2 : DXWindow
    {
        
        public UIArbeidsplanChapter_5Window2()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon8 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon8(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon8 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRcMenuRibbon8 : DXRibbon
    {
        
        public UIRcMenuRibbon8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpPlanRibbonPage9 UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new UIRpPlanRibbonPage9(this);
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpPlanRibbonPage9 mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpPlanRibbonPage9 : DXRibbonPage
    {
        
        public UIRpPlanRibbonPage9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRibbonPageGroup9RibbonPageGroup UIRibbonPageGroup9RibbonPageGroup
        {
            get
            {
                if ((this.mUIRibbonPageGroup9RibbonPageGroup == null))
                {
                    this.mUIRibbonPageGroup9RibbonPageGroup = new UIRibbonPageGroup9RibbonPageGroup(this);
                }
                return this.mUIRibbonPageGroup9RibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonPageGroup9RibbonPageGroup mUIRibbonPageGroup9RibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRibbonPageGroup9RibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRibbonPageGroup9RibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup9";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIRedigerRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIRedigerRibbonBaseButtonItem == null))
                {
                    this.mUIRedigerRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIRedigerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEditMode";
                    this.mUIRedigerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIRedigerRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRedigerRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIBtnOkRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnOkRibbonBaseButtonItem == null))
                {
                    this.mUIBtnOkRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnOkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIBtnOkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBtnOkRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIBtnOkRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIRedigerRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIBtnOkRibbonBaseButtonItem;
        #endregion
    }
}
#endregion