// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _028_Test_Helligdagsberegning_kalenderplan
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v18_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        /// <summary>
        /// CheckAfterInsertDshifts - Use 'CheckAfterInsertDshiftsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAfterInsertDshifts()
        {
            #region Variable Declarations
            DXCell uIItem10av10Cell = this.UIArbeidsplanKalenderpWindow2.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem10av10Cell;
            DXCell uIItem4av4Cell = this.UIArbeidsplanKalenderpWindow2.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem4av4Cell;
            DXCell uIItem10av10Cell1 = this.UIArbeidsplanKalenderpWindow2.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem10av10Cell1;
            DXCell uIItem4av4Cell1 = this.UIArbeidsplanKalenderpWindow2.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem4av4Cell1;
            #endregion

            // Verify that the 'ValueAsString' property of '10 av 10' cell equals '10 av 10'
            Assert.AreEqual(this.CheckAfterInsertDshiftsExpectedValues.UIItem10av10CellValueAsString, uIItem10av10Cell.ValueAsString, "Feil i SH(Andersson)");

            // Verify that the 'ValueAsString' property of '4 av 4' cell equals '4 av 4'
            Assert.AreEqual(this.CheckAfterInsertDshiftsExpectedValues.UIItem4av4CellValueAsString, uIItem4av4Cell.ValueAsString, "Feil i H(Andresson)");
        }
        
        /// <summary>
        /// CheckAnderssonValues - Use 'CheckAnderssonValuesExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAnderssonValues()
        {
            #region Variable Declarations
            DXCell uIItem10av10Cell = this.UIArbeidsplanKalenderpWindow2.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem10av10Cell;
            DXCell uIItem4av4Cell = this.UIArbeidsplanKalenderpWindow2.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem4av4Cell;
            DXCell uIItem4av0Cell = this.UIArbeidsplanKalenderpWindow2.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem4av0Cell;
            #endregion

            // Verify that the 'ValueAsString' property of '10 av 10' cell equals '0 av 10'
            Assert.AreEqual(this.CheckAnderssonValuesExpectedValues.UIItem10av10CellValueAsString, uIItem10av10Cell.ValueAsString, "Feil i SH(Andresson)");

            // Verify that the 'ValueAsString' property of '4 av 4' cell equals '0 av 4'
            Assert.AreEqual(this.CheckAnderssonValuesExpectedValues.UIItem4av4CellValueAsString, uIItem4av4Cell.ValueAsString, "Feil i H(Andresson)");

            // Verify that the 'ValueAsString' property of '4 av 0' cell equals '4 av 0'
            Assert.AreEqual(this.CheckAnderssonValuesExpectedValues.UIItem4av0CellValueAsString, uIItem4av0Cell.ValueAsString, "Feil i F3(Andresson)");
        }
        
        /// <summary>
        /// InsertDshifts - Use 'InsertDshiftsParams' to pass parameters into this method.
        /// </summary>
        public void InsertAnderssonDshifts()
        {
            #region Variable Declarations
            DXCell uIF3Cell = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIF3Cell;
            DXTextEdit uIRow0ColumnRosterCellEdit = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow0ColumnRosterCellEdit;
            DXCell uIF3Cell1 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIF3Cell1;
            DXTextEdit uIRow0ColumnRosterCellEdit1 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow0ColumnRosterCellEdit1;
            DXCell uIItemCell4 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell4;
            DXTextEdit uIRow0ColumnRosterCellEdit2 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow0ColumnRosterCellEdit2;
            DXCell uIF3Cell2 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIF3Cell2;
            DXTextEdit uIRow0ColumnRosterCellEdit3 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow0ColumnRosterCellEdit3;
            DXCell uIItemCell13 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell13;
            DXTextEdit uIRow0ColumnRosterCellEdit41 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow0ColumnRosterCellEdit41;
            DXCell uIF3Cell3 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIF3Cell3;
            DXTextEdit uIRow0ColumnRosterCellEdit4 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow0ColumnRosterCellEdit4;
            DXCell uIItemCell21 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell21;
            DXTextEdit uIRow0ColumnRosterCellEdit6 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow0ColumnRosterCellEdit6;
            DXCell uIItemCell31 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell31;
            DXTextEdit uIRow0ColumnRosterCellEdit7 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow0ColumnRosterCellEdit7;
            DXCell uIItemCell10 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell10;
            DXTextEdit uIRow0ColumnRosterCellEdit5 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow0ColumnRosterCellEdit5;
            DXCell uIItemCell51 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell51;
            DXTextEdit uIRow0ColumnRosterCellEdit9 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow0ColumnRosterCellEdit9;
            #endregion

            // Click 'F3' cell
            Mouse.Click(uIF3Cell, new Point(17, 10));
            
            // Click 'F3' cell
            Mouse.Click(uIF3Cell, new Point(17, 10));

            // Type 'd{Tab}' in '[Row]0[Column]RosterCell_3' text box
            Keyboard.SendKeys(uIRow0ColumnRosterCellEdit, this.InsertDshiftsParams.UIRow0ColumnRosterCellEditSendKeys, ModifierKeys.None);

            // Click 'F3' cell
            Mouse.Click(uIF3Cell1, new Point(15, 8));

            // Type 'd{Tab}' in '[Row]0[Column]RosterCell_4' text box
            Keyboard.SendKeys(uIRow0ColumnRosterCellEdit1, this.InsertDshiftsParams.UIRow0ColumnRosterCellEdit1SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell4, new Point(22, 8));
            
            // Click cell
            Mouse.Click(uIItemCell4, new Point(22, 8));

            // Type 'd{Tab}' in '[Row]0[Column]RosterCell_6' text box
            Keyboard.SendKeys(uIRow0ColumnRosterCellEdit2, this.InsertDshiftsParams.UIRow0ColumnRosterCellEdit2SendKeys, ModifierKeys.None);

            // Click 'F3' cell
            Mouse.Click(uIF3Cell2, new Point(18, 8));

            // Type 'd{Tab}' in '[Row]0[Column]RosterCell_7' text box
            Keyboard.SendKeys(uIRow0ColumnRosterCellEdit3, this.InsertDshiftsParams.UIRow0ColumnRosterCellEdit3SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell13, new Point(17, 8));

            // Click cell
            Mouse.Click(uIItemCell13, new Point(17, 8));

            // Type 'd{Tab}' in '[Row]0[Column]RosterCell_13' text box
            Keyboard.SendKeys(uIRow0ColumnRosterCellEdit41, this.InsertDshiftsParams.UIRow0ColumnRosterCellEdit41SendKeys, ModifierKeys.None);

            // Click 'F3' cell
            Mouse.Click(uIF3Cell3, new Point(17, 8));

            // Click 'F3' cell
            Mouse.Click(uIF3Cell3, new Point(17, 8));

            // Type 'd{Tab}' in '[Row]0[Column]RosterCell_17' text box
            Keyboard.SendKeys(uIRow0ColumnRosterCellEdit4, this.InsertDshiftsParams.UIRow0ColumnRosterCellEdit4SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell21, new Point(17, 7));

            // Click cell
            Mouse.Click(uIItemCell21, new Point(17, 7));

            // Type 'd{Tab}' in '[Row]0[Column]RosterCell_20' text box
            Keyboard.SendKeys(uIRow0ColumnRosterCellEdit6, this.InsertDshiftsParams.UIRow0ColumnRosterCellEdit6SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell31, new Point(17, 8));
            
            // Click cell
            Mouse.Click(uIItemCell31, new Point(17, 8));

            // Type 'd{Tab}' in '[Row]0[Column]RosterCell_27' text box
            Keyboard.SendKeys(uIRow0ColumnRosterCellEdit7, this.InsertDshiftsParams.UIRow0ColumnRosterCellEdit7SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell10, new Point(17, 8));

            // Click cell
            Mouse.Click(uIItemCell10, new Point(17, 8));

            // Type 'd{Tab}' in '[Row]0[Column]RosterCell_33' text box
            Keyboard.SendKeys(uIRow0ColumnRosterCellEdit5, this.InsertDshiftsParams.UIRow0ColumnRosterCellEdit5SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell51, new Point(18, 9));

            // Type 'd{Tab}' in '[Row]0[Column]RosterCell_34' text box
            Keyboard.SendKeys(uIRow0ColumnRosterCellEdit9, this.InsertDshiftsParams.UIRow0ColumnRosterCellEdit9ValueAsString + this.InsertDshiftsParams.UIRow0ColumnRosterCellEdit9SendKeys, ModifierKeys.None);
        }

        public void InsertDahlinLine1Nshifts()
        {
            #region Variable Declarations

            DXCell uIItemCell = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell;
            DXTextEdit uIRow1ColumnRosterCellEdit = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow1ColumnRosterCellEdit;
            DXCell uIItemCell1 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell1;
            DXTextEdit uIRow1ColumnRosterCellEdit1 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow1ColumnRosterCellEdit1;
            DXCell uIItemCell5 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell5;
            DXTextEdit uIRow1ColumnRosterCellEdit2 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow1ColumnRosterCellEdit2;
            DXCell uIItemCell6 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell6;
            DXTextEdit uIRow1ColumnRosterCellEdit3 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow1ColumnRosterCellEdit3;
            DXCell uIDCell4 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIDCell4;
            DXTextEdit uIRow1ColumnRosterCellEdit41 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow1ColumnRosterCellEdit41;
            DXCell uIItemCell8 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell8;
            DXTextEdit uIRow1ColumnRosterCellEdit4 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow1ColumnRosterCellEdit4;
            DXCell uIDCell6 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIDCell6;
            DXTextEdit uIRow1ColumnRosterCellEdit6 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow1ColumnRosterCellEdit6;
            DXCell uIDCell7 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIDCell7;
            DXTextEdit uIRow1ColumnRosterCellEdit7 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow1ColumnRosterCellEdit7;
            DXCell uIItemCell11 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell11;
            DXTextEdit uIRow1ColumnRosterCellEdit5 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow1ColumnRosterCellEdit5;
            DXCell uIDCell9 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIDCell9;
            DXTextEdit uIRow1ColumnRosterCellEdit9 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow1ColumnRosterCellEdit9;
            #endregion
            
            // Click cell
            Mouse.Click(uIItemCell, new Point(16, 8));

            // Type 'd{Tab}' in '[Row]1[Column]RosterCell_3' text box
            Keyboard.SendKeys(uIRow1ColumnRosterCellEdit, "n{Tab}", ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell1, new Point(12, 8));

            // Type 'd{Tab}' in '[Row]1[Column]RosterCell_4' text box
            Keyboard.SendKeys(uIRow1ColumnRosterCellEdit1, "{DELETE}{Tab}", ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell5, new Point(22, 7));

            // Click cell
            Mouse.Click(uIItemCell5, new Point(22, 7));

            // Type 'd{Tab}' in '[Row]1[Column]RosterCell_6' text box
            Keyboard.SendKeys(uIRow1ColumnRosterCellEdit2, "n{Tab}", ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell6, new Point(8, 6));

            // Type 'd{Tab}' in '[Row]1[Column]RosterCell_7' text box
            Keyboard.SendKeys(uIRow1ColumnRosterCellEdit3, "{DELETE}{Tab}", ModifierKeys.None);

            // Click 'D' cell
            Mouse.Click(uIDCell4, new Point(19, 11));

            // Click 'D' cell
            Mouse.Click(uIDCell4, new Point(19, 11));

            // Type 'd{Tab}' in '[Row]1[Column]RosterCell_13' text box
            Keyboard.SendKeys(uIRow1ColumnRosterCellEdit41, "n{Tab}", ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell8, new Point(11, 5));

            // Click cell
            Mouse.Click(uIItemCell8, new Point(11, 7));

            // Type 'd{Tab}' in '[Row]1[Column]RosterCell_17' text box
            Keyboard.SendKeys(uIRow1ColumnRosterCellEdit4, "{DELETE}{Tab}", ModifierKeys.None);

            // Click 'D' cell
            Mouse.Click(uIDCell6, new Point(15, 10));

            // Click 'D' cell
            Mouse.Click(uIDCell6, new Point(15, 10));

            // Type 'd{Tab}' in '[Row]1[Column]RosterCell_20' text box
            Keyboard.SendKeys(uIRow1ColumnRosterCellEdit6, "n{Tab}", ModifierKeys.None);

            // Click 'D' cell
            Mouse.Click(uIDCell7, new Point(24, 9));

            // Click 'D' cell
            Mouse.Click(uIDCell7, new Point(24, 9));

            // Type 'd{Tab}' in '[Row]1[Column]RosterCell_27' text box
            Keyboard.SendKeys(uIRow1ColumnRosterCellEdit7, "{DELETE}{Tab}", ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell11, new Point(20, 8));

            // Click cell
            Mouse.Click(uIItemCell11, new Point(20, 8));

            // Type 'd{Tab}' in '[Row]1[Column]RosterCell_33' text box
            Keyboard.SendKeys(uIRow1ColumnRosterCellEdit5, "n{Tab}", ModifierKeys.None);

            // Click 'D' cell
            Mouse.Click(uIDCell9, new Point(11, 12));

            // Type 'd{Tab}' in '[Row]1[Column]RosterCell_34' text box
            Keyboard.SendKeys(uIRow1ColumnRosterCellEdit9, "{DELETE}{Tab}", ModifierKeys.None);
        }
                
        /// <summary>
        /// InsertRavelliNshifts - Use 'InsertRavelliNshiftsParams' to pass parameters into this method.
        /// </summary>
        public void InsertDahlinLine2Nshifts()
        {
            #region Variable Declarations
            DXCell uIItemCell2 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell2;
            DXTextEdit uIRow2ColumnRosterCellEdit = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow2ColumnRosterCellEdit;
            DXCell uIItemCell3 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell3;
            DXTextEdit uIRow2ColumnRosterCellEdit1 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow2ColumnRosterCellEdit1;
            DXCell uIItemCell7 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell7;
            DXTextEdit uIRow2ColumnRosterCellEdit2 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow2ColumnRosterCellEdit2;
            DXCell uIDCell = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIDCell;
            DXTextEdit uIRow2ColumnRosterCellEdit3 = this.UIArbeidsplanKalenderpWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow2ColumnRosterCellEdit3;
            #endregion
            

            // Click cell
            Mouse.Click(uIItemCell2, new Point(20, 9));

            // Type 'n{Tab}' in '[Row]2[Column]RosterCell_3' text box
            Keyboard.SendKeys(uIRow2ColumnRosterCellEdit, this.InsertRavelliNshiftsParams.UIRow2ColumnRosterCellEditSendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell3, new Point(13, 9));

            // Type 'n{Tab}' in '[Row]2[Column]RosterCell_4' text box
            Keyboard.SendKeys(uIRow2ColumnRosterCellEdit1, this.InsertRavelliNshiftsParams.UIRow2ColumnRosterCellEdit1SendKeys, ModifierKeys.None);
            
            // Click cell
            Mouse.Click(uIItemCell7, new Point(13, 9));

            // Type 'n{Tab}' in '[Row]2[Column]RosterCell_6' text box
            Keyboard.SendKeys(uIRow2ColumnRosterCellEdit2, InsertRavelliNshiftsParams.UIRow2ColumnRosterCellEditSendKeys, ModifierKeys.None);

            // Click 'D' cell
            Mouse.Click(uIDCell, new Point(13, 7));

            // Type 'n{Tab}' in '[Row]2[Column]RosterCell_7' text box
            Keyboard.SendKeys(uIRow2ColumnRosterCellEdit3, this.InsertRavelliNshiftsParams.UIRow2ColumnRosterCellEdit3SendKeys, ModifierKeys.None);
        }
        
     
                
        /// <summary>
        /// SelectRosterplanTypeCalendarplan - Use 'SelectRosterplanTypeCalendarplanParams' to pass parameters into this method.
        /// </summary>
        public void SelectRosterplanTypeCalendarplan()
        {
            #region Variable Declarations
            DXLookUpEdit uILeRosterplanTypeLookUpEdit = this.UIArbeidsplanInnstilliWindow.UITcDataTabList.UITpConfigurationClient.UIPaCenterClient.UILeRosterplanTypeLookUpEdit;
            #endregion

            // Type 'Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.Configuration.RosterplanConfigurationController+RosterplanTypeDefinition' in 'leRosterplanType' LookUpEdit
            //ValueTypeName
            uILeRosterplanTypeLookUpEdit.ValueTypeName = this.SelectRosterplanTypeCalendarplanParams.UILeRosterplanTypeLookUpEditValueTypeName;

            // Type 'Kalenderplan' in 'leRosterplanType' LookUpEdit
            //ValueAsString
            uILeRosterplanTypeLookUpEdit.ValueAsString = this.SelectRosterplanTypeCalendarplanParams.UILeRosterplanTypeLookUpEditValueAsString;
        }
        
        /// <summary>
        /// SetCalendarplanName - Use 'SetCalendarplanNameParams' to pass parameters into this method.
        /// </summary>
        public void SetCalendarplanName()
        {
            #region Variable Declarations
            DXTextEdit uIENameEdit = this.UIArbeidsplanInnstilliWindow.UITcDataTabList.UITpConfigurationClient.UIPaCenterClient.UIENameEdit;
            #endregion

            // Type 'Kalenderplan' in 'eName' text box
            //ValueAsString
            uIENameEdit.ValueAsString = this.SetCalendarplanNameParams.UIENameEditValueAsString;

            // Type '{Tab}' in 'eName' text box
            Keyboard.SendKeys(uIENameEdit, this.SetCalendarplanNameParams.UIENameEditSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// SetCalendarplanWeeks - Use 'SetCalendarplanWeeksParams' to pass parameters into this method.
        /// </summary>
        public void SetCalendarplanWeeks()
        {
            #region Variable Declarations
            DXTextEdit uIENumber1Edit = this.UIArbeidsplanInnstilliWindow.UITcDataTabList.UITpConfigurationClient.UIPaCenterClient.UIENumber1Edit;
            #endregion

            // Type '5 [SelectionStart]0[SelectionLength]1' in 'eNumber[1]' text box
            //ValueAsString
            uIENumber1Edit.ValueAsString = this.SetCalendarplanWeeksParams.UIENumber1EditValueAsString;
        }
        
        #region Properties
        public virtual CheckAfterDeleteRavelliShiftsExpectedValues CheckAfterDeleteRavelliShiftsExpectedValues
        {
            get
            {
                if ((this.mCheckAfterDeleteRavelliShiftsExpectedValues == null))
                {
                    this.mCheckAfterDeleteRavelliShiftsExpectedValues = new CheckAfterDeleteRavelliShiftsExpectedValues();
                }
                return this.mCheckAfterDeleteRavelliShiftsExpectedValues;
            }
        }
        
        public virtual CheckAfterInsertDshiftsExpectedValues CheckAfterInsertDshiftsExpectedValues
        {
            get
            {
                if ((this.mCheckAfterInsertDshiftsExpectedValues == null))
                {
                    this.mCheckAfterInsertDshiftsExpectedValues = new CheckAfterInsertDshiftsExpectedValues();
                }
                return this.mCheckAfterInsertDshiftsExpectedValues;
            }
        }
        
        public virtual CheckAfterInsertNilsonKK1shiftsWeek18ExpectedValues CheckAfterInsertNilsonKK1shiftsWeek18ExpectedValues
        {
            get
            {
                if ((this.mCheckAfterInsertNilsonKK1shiftsWeek18ExpectedValues == null))
                {
                    this.mCheckAfterInsertNilsonKK1shiftsWeek18ExpectedValues = new CheckAfterInsertNilsonKK1shiftsWeek18ExpectedValues();
                }
                return this.mCheckAfterInsertNilsonKK1shiftsWeek18ExpectedValues;
            }
        }
        
        public virtual CheckAfterInsertNilsonKK2shiftsWeek17ExpectedValues CheckAfterInsertNilsonKK2shiftsWeek17ExpectedValues
        {
            get
            {
                if ((this.mCheckAfterInsertNilsonKK2shiftsWeek17ExpectedValues == null))
                {
                    this.mCheckAfterInsertNilsonKK2shiftsWeek17ExpectedValues = new CheckAfterInsertNilsonKK2shiftsWeek17ExpectedValues();
                }
                return this.mCheckAfterInsertNilsonKK2shiftsWeek17ExpectedValues;
            }
        }
        
        public virtual CheckAfterInsertRavelliNshiftsExpectedValues CheckAfterInsertRavelliNshiftsExpectedValues
        {
            get
            {
                if ((this.mCheckAfterInsertRavelliNshiftsExpectedValues == null))
                {
                    this.mCheckAfterInsertRavelliNshiftsExpectedValues = new CheckAfterInsertRavelliNshiftsExpectedValues();
                }
                return this.mCheckAfterInsertRavelliNshiftsExpectedValues;
            }
        }
        
        public virtual CheckAfterInsertRavelliNshifts2ExpectedValues CheckAfterInsertRavelliNshifts2ExpectedValues
        {
            get
            {
                if ((this.mCheckAfterInsertRavelliNshifts2ExpectedValues == null))
                {
                    this.mCheckAfterInsertRavelliNshifts2ExpectedValues = new CheckAfterInsertRavelliNshifts2ExpectedValues();
                }
                return this.mCheckAfterInsertRavelliNshifts2ExpectedValues;
            }
        }
        
        public virtual CheckAfterInsertRavelliNshiftsWeek16_1ExpectedValues CheckAfterInsertRavelliNshiftsWeek16_1ExpectedValues
        {
            get
            {
                if ((this.mCheckAfterInsertRavelliNshiftsWeek16_1ExpectedValues == null))
                {
                    this.mCheckAfterInsertRavelliNshiftsWeek16_1ExpectedValues = new CheckAfterInsertRavelliNshiftsWeek16_1ExpectedValues();
                }
                return this.mCheckAfterInsertRavelliNshiftsWeek16_1ExpectedValues;
            }
        }
        
        public virtual CheckAfterInsertRavelliNshiftsWeek16_2ExpectedValues CheckAfterInsertRavelliNshiftsWeek16_2ExpectedValues
        {
            get
            {
                if ((this.mCheckAfterInsertRavelliNshiftsWeek16_2ExpectedValues == null))
                {
                    this.mCheckAfterInsertRavelliNshiftsWeek16_2ExpectedValues = new CheckAfterInsertRavelliNshiftsWeek16_2ExpectedValues();
                }
                return this.mCheckAfterInsertRavelliNshiftsWeek16_2ExpectedValues;
            }
        }
        
        public virtual CheckAfterInsertRavelliNshiftsWeek16_3ExpectedValues CheckAfterInsertRavelliNshiftsWeek16_3ExpectedValues
        {
            get
            {
                if ((this.mCheckAfterInsertRavelliNshiftsWeek16_3ExpectedValues == null))
                {
                    this.mCheckAfterInsertRavelliNshiftsWeek16_3ExpectedValues = new CheckAfterInsertRavelliNshiftsWeek16_3ExpectedValues();
                }
                return this.mCheckAfterInsertRavelliNshiftsWeek16_3ExpectedValues;
            }
        }
        
        public virtual CheckAnderssonValuesExpectedValues CheckAnderssonValuesExpectedValues
        {
            get
            {
                if ((this.mCheckAnderssonValuesExpectedValues == null))
                {
                    this.mCheckAnderssonValuesExpectedValues = new CheckAnderssonValuesExpectedValues();
                }
                return this.mCheckAnderssonValuesExpectedValues;
            }
        }
        
        public virtual CheckF3shiftsExpectedValues CheckF3shiftsExpectedValues
        {
            get
            {
                if ((this.mCheckF3shiftsExpectedValues == null))
                {
                    this.mCheckF3shiftsExpectedValues = new CheckF3shiftsExpectedValues();
                }
                return this.mCheckF3shiftsExpectedValues;
            }
        }
        
        public virtual InsertDshiftsParams InsertDshiftsParams
        {
            get
            {
                if ((this.mInsertDshiftsParams == null))
                {
                    this.mInsertDshiftsParams = new InsertDshiftsParams();
                }
                return this.mInsertDshiftsParams;
            }
        }
        
        public virtual InsertNilsonKK1shiftsWeek18Params InsertNilsonKK1shiftsWeek18Params
        {
            get
            {
                if ((this.mInsertNilsonKK1shiftsWeek18Params == null))
                {
                    this.mInsertNilsonKK1shiftsWeek18Params = new InsertNilsonKK1shiftsWeek18Params();
                }
                return this.mInsertNilsonKK1shiftsWeek18Params;
            }
        }
        
        public virtual InsertNilsonKK2shiftsWeek17Params InsertNilsonKK2shiftsWeek17Params
        {
            get
            {
                if ((this.mInsertNilsonKK2shiftsWeek17Params == null))
                {
                    this.mInsertNilsonKK2shiftsWeek17Params = new InsertNilsonKK2shiftsWeek17Params();
                }
                return this.mInsertNilsonKK2shiftsWeek17Params;
            }
        }
        
        public virtual InsertNilsonKK2shiftsWeek18Params InsertNilsonKK2shiftsWeek18Params
        {
            get
            {
                if ((this.mInsertNilsonKK2shiftsWeek18Params == null))
                {
                    this.mInsertNilsonKK2shiftsWeek18Params = new InsertNilsonKK2shiftsWeek18Params();
                }
                return this.mInsertNilsonKK2shiftsWeek18Params;
            }
        }
        
        public virtual InsertRavelliNshiftsParams InsertRavelliNshiftsParams
        {
            get
            {
                if ((this.mInsertRavelliNshiftsParams == null))
                {
                    this.mInsertRavelliNshiftsParams = new InsertRavelliNshiftsParams();
                }
                return this.mInsertRavelliNshiftsParams;
            }
        }
        
        public virtual InsertRavelliNshifts2Params InsertRavelliNshifts2Params
        {
            get
            {
                if ((this.mInsertRavelliNshifts2Params == null))
                {
                    this.mInsertRavelliNshifts2Params = new InsertRavelliNshifts2Params();
                }
                return this.mInsertRavelliNshifts2Params;
            }
        }
        
        public virtual InsertRavelliNshiftsWeek16_1Params InsertRavelliNshiftsWeek16_1Params
        {
            get
            {
                if ((this.mInsertRavelliNshiftsWeek16_1Params == null))
                {
                    this.mInsertRavelliNshiftsWeek16_1Params = new InsertRavelliNshiftsWeek16_1Params();
                }
                return this.mInsertRavelliNshiftsWeek16_1Params;
            }
        }
        
        public virtual InsertRavelliNshiftsWeek16_2Params InsertRavelliNshiftsWeek16_2Params
        {
            get
            {
                if ((this.mInsertRavelliNshiftsWeek16_2Params == null))
                {
                    this.mInsertRavelliNshiftsWeek16_2Params = new InsertRavelliNshiftsWeek16_2Params();
                }
                return this.mInsertRavelliNshiftsWeek16_2Params;
            }
        }
        
        public virtual InsertRavelliNshiftsWeek16_3Params InsertRavelliNshiftsWeek16_3Params
        {
            get
            {
                if ((this.mInsertRavelliNshiftsWeek16_3Params == null))
                {
                    this.mInsertRavelliNshiftsWeek16_3Params = new InsertRavelliNshiftsWeek16_3Params();
                }
                return this.mInsertRavelliNshiftsWeek16_3Params;
            }
        }
        
        public virtual SelectRosterplanTypeCalendarplanParams SelectRosterplanTypeCalendarplanParams
        {
            get
            {
                if ((this.mSelectRosterplanTypeCalendarplanParams == null))
                {
                    this.mSelectRosterplanTypeCalendarplanParams = new SelectRosterplanTypeCalendarplanParams();
                }
                return this.mSelectRosterplanTypeCalendarplanParams;
            }
        }
        
        public virtual SetCalendarplanNameParams SetCalendarplanNameParams
        {
            get
            {
                if ((this.mSetCalendarplanNameParams == null))
                {
                    this.mSetCalendarplanNameParams = new SetCalendarplanNameParams();
                }
                return this.mSetCalendarplanNameParams;
            }
        }
        
        public virtual SetCalendarplanWeeksParams SetCalendarplanWeeksParams
        {
            get
            {
                if ((this.mSetCalendarplanWeeksParams == null))
                {
                    this.mSetCalendarplanWeeksParams = new SetCalendarplanWeeksParams();
                }
                return this.mSetCalendarplanWeeksParams;
            }
        }
        
        public UIArbeidsplanInnstilliWindow UIArbeidsplanInnstilliWindow
        {
            get
            {
                if ((this.mUIArbeidsplanInnstilliWindow == null))
                {
                    this.mUIArbeidsplanInnstilliWindow = new UIArbeidsplanInnstilliWindow();
                }
                return this.mUIArbeidsplanInnstilliWindow;
            }
        }
        
        public UILeggtilansatteWindow UILeggtilansatteWindow
        {
            get
            {
                if ((this.mUILeggtilansatteWindow == null))
                {
                    this.mUILeggtilansatteWindow = new UILeggtilansatteWindow();
                }
                return this.mUILeggtilansatteWindow;
            }
        }
        
        public UIAnsatteiarbeidsplanWindow UIAnsatteiarbeidsplanWindow
        {
            get
            {
                if ((this.mUIAnsatteiarbeidsplanWindow == null))
                {
                    this.mUIAnsatteiarbeidsplanWindow = new UIAnsatteiarbeidsplanWindow();
                }
                return this.mUIAnsatteiarbeidsplanWindow;
            }
        }
        
        public UIArbeidsplanKalenderpWindow UIArbeidsplanKalenderpWindow
        {
            get
            {
                if ((this.mUIArbeidsplanKalenderpWindow == null))
                {
                    this.mUIArbeidsplanKalenderpWindow = new UIArbeidsplanKalenderpWindow();
                }
                return this.mUIArbeidsplanKalenderpWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2();
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIArbeidsplanKalenderpWindow1 UIArbeidsplanKalenderpWindow1
        {
            get
            {
                if ((this.mUIArbeidsplanKalenderpWindow1 == null))
                {
                    this.mUIArbeidsplanKalenderpWindow1 = new UIArbeidsplanKalenderpWindow1();
                }
                return this.mUIArbeidsplanKalenderpWindow1;
            }
        }
        
        public UIArbeidsplanKalenderpWindow2 UIArbeidsplanKalenderpWindow2
        {
            get
            {
                if ((this.mUIArbeidsplanKalenderpWindow2 == null))
                {
                    this.mUIArbeidsplanKalenderpWindow2 = new UIArbeidsplanKalenderpWindow2();
                }
                return this.mUIArbeidsplanKalenderpWindow2;
            }
        }
        #endregion
        
        #region Fields
        private CheckAfterDeleteRavelliShiftsExpectedValues mCheckAfterDeleteRavelliShiftsExpectedValues;
        
        private CheckAfterInsertDshiftsExpectedValues mCheckAfterInsertDshiftsExpectedValues;
        
        private CheckAfterInsertNilsonKK1shiftsWeek18ExpectedValues mCheckAfterInsertNilsonKK1shiftsWeek18ExpectedValues;
        
        private CheckAfterInsertNilsonKK2shiftsWeek17ExpectedValues mCheckAfterInsertNilsonKK2shiftsWeek17ExpectedValues;
        
        private CheckAfterInsertRavelliNshiftsExpectedValues mCheckAfterInsertRavelliNshiftsExpectedValues;
        
        private CheckAfterInsertRavelliNshifts2ExpectedValues mCheckAfterInsertRavelliNshifts2ExpectedValues;
        
        private CheckAfterInsertRavelliNshiftsWeek16_1ExpectedValues mCheckAfterInsertRavelliNshiftsWeek16_1ExpectedValues;
        
        private CheckAfterInsertRavelliNshiftsWeek16_2ExpectedValues mCheckAfterInsertRavelliNshiftsWeek16_2ExpectedValues;
        
        private CheckAfterInsertRavelliNshiftsWeek16_3ExpectedValues mCheckAfterInsertRavelliNshiftsWeek16_3ExpectedValues;
        
        private CheckAnderssonValuesExpectedValues mCheckAnderssonValuesExpectedValues;
        
        private CheckF3shiftsExpectedValues mCheckF3shiftsExpectedValues;
        
        private InsertDshiftsParams mInsertDshiftsParams;
        
        private InsertNilsonKK1shiftsWeek18Params mInsertNilsonKK1shiftsWeek18Params;
        
        private InsertNilsonKK2shiftsWeek17Params mInsertNilsonKK2shiftsWeek17Params;
        
        private InsertNilsonKK2shiftsWeek18Params mInsertNilsonKK2shiftsWeek18Params;
        
        private InsertRavelliNshiftsParams mInsertRavelliNshiftsParams;
        
        private InsertRavelliNshifts2Params mInsertRavelliNshifts2Params;
        
        private InsertRavelliNshiftsWeek16_1Params mInsertRavelliNshiftsWeek16_1Params;
        
        private InsertRavelliNshiftsWeek16_2Params mInsertRavelliNshiftsWeek16_2Params;
        
        private InsertRavelliNshiftsWeek16_3Params mInsertRavelliNshiftsWeek16_3Params;
        
        private SelectRosterplanTypeCalendarplanParams mSelectRosterplanTypeCalendarplanParams;
        
        private SetCalendarplanNameParams mSetCalendarplanNameParams;
        
        private SetCalendarplanWeeksParams mSetCalendarplanWeeksParams;
        
        private UIArbeidsplanInnstilliWindow mUIArbeidsplanInnstilliWindow;
        
        private UILeggtilansatteWindow mUILeggtilansatteWindow;
        
        private UIAnsatteiarbeidsplanWindow mUIAnsatteiarbeidsplanWindow;
        
        private UIArbeidsplanKalenderpWindow mUIArbeidsplanKalenderpWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIArbeidsplanKalenderpWindow1 mUIArbeidsplanKalenderpWindow1;
        
        private UIArbeidsplanKalenderpWindow2 mUIArbeidsplanKalenderpWindow2;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAfterDeleteRavelliShifts'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAfterDeleteRavelliShiftsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '4 av 10' cell equals '0 av 10'
        /// </summary>
        public string UIItem4av10CellValueAsString = "0 av 10";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '3 av 4' cell equals '0 av 4'
        /// </summary>
        public string UIItem3av4CellValueAsString = "0 av 4";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '50,65' cell equals '0'
        /// </summary>
        public string UIItem5065CellValueAsString = "0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAfterInsertDshifts'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAfterInsertDshiftsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '10 av 10' cell equals '10 av 10'
        /// </summary>
        public string UIItem10av10CellValueAsString = "10 av 10";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '4 av 4' cell equals '4 av 4'
        /// </summary>
        public string UIItem4av4CellValueAsString = "4 av 4";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '10 av 10' cell equals '10 av 10'
        /// </summary>
        public string UIItem10av10Cell1ValueAsString = "10 av 10";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '4 av 4' cell equals '4 av 4'
        /// </summary>
        public string UIItem4av4Cell1ValueAsString = "4 av 4";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAfterInsertNilsonKK1shiftsWeek18'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAfterInsertNilsonKK1shiftsWeek18ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '10 av 10' cell equals '0 av 10'
        /// </summary>
        public string UIItem10av10Cell1Text = "0 av 10";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '4 av 4' cell equals '0 av 4'
        /// </summary>
        public string UIItem4av4Cell1ValueAsString = "0 av 4";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAfterInsertNilsonKK2shiftsWeek17'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAfterInsertNilsonKK2shiftsWeek17ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '10 av 10' cell equals '0 av 10'
        /// </summary>
        public string UIItem10av10Cell1ValueAsString = "0 av 10";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '4 av 4' cell equals '0 av 4'
        /// </summary>
        public string UIItem4av4Cell1ValueAsString = "0 av 4";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '1,33' cell equals '1,33'
        /// </summary>
        public string UIItem133CellValueAsString = "1,33";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAfterInsertRavelliNshifts'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAfterInsertRavelliNshiftsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '4 av 10' cell equals '4 av 10'
        /// </summary>
        public string UIItem4av10CellValueAsString = "4 av 10";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '3 av 4' cell equals '3 av 4'
        /// </summary>
        public string UIItem3av4CellValueAsString = "3 av 4";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '50,65' cell equals '50,65'
        /// </summary>
        public string UIItem5065CellValueAsString = "50,65";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAfterInsertRavelliNshifts2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAfterInsertRavelliNshifts2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '4 av 10' cell equals '6 av 10'
        /// </summary>
        public string UIItem4av10CellValueAsString = "6 av 10";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '3 av 4' cell equals '3 av 4'
        /// </summary>
        public string UIItem3av4CellValueAsString = "3 av 4";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '50,65' cell equals '63,98'
        /// </summary>
        public string UIItem5065CellValueAsString = "63,98";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAfterInsertRavelliNshiftsWeek16_1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAfterInsertRavelliNshiftsWeek16_1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '4 av 10' cell equals '2 av 10'
        /// </summary>
        public string UIItem4av10CellValueAsString = "2 av 10";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '3 av 4' cell equals '2 av 4'
        /// </summary>
        public string UIItem3av4CellValueAsString = "2 av 4";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '50,65' cell equals '42,66'
        /// </summary>
        public string UIItem5065CellValueAsString = "42,66";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAfterInsertRavelliNshiftsWeek16_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAfterInsertRavelliNshiftsWeek16_2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '4 av 10' cell equals '4 av 10'
        /// </summary>
        public string UIItem4av10CellValueAsString = "4 av 10";
        
        /// <summary>
        /// Verify that the 'ClassName' property of '3 av 4' cell equals 'GridControlCell'
        /// </summary>
        public string UIItem3av4CellClassName = "GridControlCell";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '50,65' cell equals '50,65'
        /// </summary>
        public string UIItem5065CellValueAsString = "50,65";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAfterInsertRavelliNshiftsWeek16_3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAfterInsertRavelliNshiftsWeek16_3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '4 av 10' cell equals '8 av 10'
        /// </summary>
        public string UIItem4av10CellValueAsString = "8 av 10";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '3 av 4' cell equals '2 av 4'
        /// </summary>
        public string UIItem3av4CellValueAsString = "2 av 4";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAnderssonValues'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAnderssonValuesExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '10 av 10' cell equals '0 av 10'
        /// </summary>
        public string UIItem10av10CellValueAsString = "0 av 10";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '4 av 4' cell equals '0 av 4'
        /// </summary>
        public string UIItem4av4CellValueAsString = "0 av 4";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '4 av 0' cell equals '4 av 0'
        /// </summary>
        public string UIItem4av0CellValueAsString = "4 av 0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckF3shifts'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckF3shiftsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'F3' cell equals 'F3'
        /// </summary>
        public string UIF3CellValueAsString = "F3";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'F3' cell equals 'F3'
        /// </summary>
        public string UIF3Cell1ValueAsString = "F3";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals ''
        /// </summary>
        public string UIItemCellValueAsString = "";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'F3' cell equals 'F3'
        /// </summary>
        public string UIF3Cell2ValueAsString = "F3";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'F3' cell equals 'F3'
        /// </summary>
        public string UIF3Cell3ValueAsString = "F3";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals ''
        /// </summary>
        public string UIItemCell1ValueAsString = "";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals ''
        /// </summary>
        public string UIItemCell2ValueAsString = "";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals ''
        /// </summary>
        public string UIItemCell3ValueAsString = "";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals ''
        /// </summary>
        public string UIItemCell4ValueAsString = "";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals ''
        /// </summary>
        public string UIItemCell5ValueAsString = "";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals ''
        /// </summary>
        public string UIItemCell6ValueAsString = "";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals ''
        /// </summary>
        public string UIItemCell7ValueAsString = "";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals ''
        /// </summary>
        public string UIItemCell8ValueAsString = "";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals ''
        /// </summary>
        public string UIItemCell9ValueAsString = "";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals ''
        /// </summary>
        public string UIItemCell10ValueAsString = "";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals ''
        /// </summary>
        public string UIItemCell11ValueAsString = "";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals ''
        /// </summary>
        public string UIItemCell12ValueAsString = "";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals ''
        /// </summary>
        public string UIItemCell13ValueAsString = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InsertDshifts'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InsertDshiftsParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.DataStructures.PlanShift' in 'F3' cell
        /// </summary>
        public string UIF3CellValueTypeName = "Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.DataStructures.PlanShift";
        
        /// <summary>
        /// Type 'D' in 'F3' cell
        /// </summary>
        public string UIF3CellValueAsString = "D";
        
        /// <summary>
        /// Type 'd{Tab}' in '[Row]0[Column]RosterCell_3' text box
        /// </summary>
        public string UIRow0ColumnRosterCellEditSendKeys = "d{Tab}";
        
        /// <summary>
        /// Type 'd{Tab}' in '[Row]0[Column]RosterCell_4' text box
        /// </summary>
        public string UIRow0ColumnRosterCellEdit1SendKeys = "d{Tab}";
        
        /// <summary>
        /// Type 'Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.DataStructures.PlanShift' in cell
        /// </summary>
        public string UIItemCell4ValueTypeName = "Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.DataStructures.PlanShift";
        
        /// <summary>
        /// Type 'D' in cell
        /// </summary>
        public string UIItemCell4ValueAsString = "D";
        
        /// <summary>
        /// Type 'd{Tab}' in '[Row]0[Column]RosterCell_6' text box
        /// </summary>
        public string UIRow0ColumnRosterCellEdit2SendKeys = "d{Tab}";
        
        /// <summary>
        /// Type 'd{Tab}' in '[Row]0[Column]RosterCell_7' text box
        /// </summary>
        public string UIRow0ColumnRosterCellEdit3SendKeys = "d{Tab}";
        
        /// <summary>
        /// Type 'Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.DataStructures.PlanShift' in cell
        /// </summary>
        public string UIItemCell13ValueTypeName = "Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.DataStructures.PlanShift";
        
        /// <summary>
        /// Type 'D' in cell
        /// </summary>
        public string UIItemCell13ValueAsString = "D";
        
        /// <summary>
        /// Type 'd{Tab}' in '[Row]0[Column]RosterCell_13' text box
        /// </summary>
        public string UIRow0ColumnRosterCellEdit41SendKeys = "d{Tab}";
        
        /// <summary>
        /// Type 'Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.DataStructures.PlanShift' in 'F3' cell
        /// </summary>
        public string UIF3Cell3ValueTypeName = "Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.DataStructures.PlanShift";
        
        /// <summary>
        /// Type 'D' in 'F3' cell
        /// </summary>
        public string UIF3Cell3ValueAsString = "D";
        
        /// <summary>
        /// Type 'd{Tab}' in '[Row]0[Column]RosterCell_17' text box
        /// </summary>
        public string UIRow0ColumnRosterCellEdit4SendKeys = "d{Tab}";
        
        /// <summary>
        /// Type 'Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.DataStructures.PlanShift' in cell
        /// </summary>
        public string UIItemCell21ValueTypeName = "Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.DataStructures.PlanShift";
        
        /// <summary>
        /// Type 'D' in cell
        /// </summary>
        public string UIItemCell21ValueAsString = "D";
        
        /// <summary>
        /// Type 'd{Tab}' in '[Row]0[Column]RosterCell_20' text box
        /// </summary>
        public string UIRow0ColumnRosterCellEdit6SendKeys = "d{Tab}";
        
        /// <summary>
        /// Type 'Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.DataStructures.PlanShift' in cell
        /// </summary>
        public string UIItemCell31ValueTypeName = "Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.DataStructures.PlanShift";
        
        /// <summary>
        /// Type 'D' in cell
        /// </summary>
        public string UIItemCell31ValueAsString = "D";
        
        /// <summary>
        /// Type 'd{Tab}' in '[Row]0[Column]RosterCell_27' text box
        /// </summary>
        public string UIRow0ColumnRosterCellEdit7SendKeys = "d{Tab}";
        
        /// <summary>
        /// Type 'd{Tab}' in '[Row]0[Column]RosterCell_33' text box
        /// </summary>
        public string UIRow0ColumnRosterCellEdit5SendKeys = "d{Tab}";
        
        /// <summary>
        /// Type 'd' in '[Row]0[Column]RosterCell_34' text box
        /// </summary>
        public string UIRow0ColumnRosterCellEdit9ValueAsString = "d";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]0[Column]RosterCell_34' text box
        /// </summary>
        public string UIRow0ColumnRosterCellEdit9SendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.DataStructures.PlanShift' in cell
        /// </summary>
        public string UIItemCellValueTypeName = "Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.DataStructures.PlanShift";
        
    
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InsertNilsonKK1shiftsWeek18'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InsertNilsonKK1shiftsWeek18Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'kk1' in '[Row]1[Column]RosterCell_16' text box
        /// </summary>
        public string UIRow1ColumnRosterCellEdit10ValueAsString = "kk1";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]1[Column]RosterCell_16' text box
        /// </summary>
        public string UIRow1ColumnRosterCellEdit10SendKeys = "{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InsertNilsonKK2shiftsWeek17'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InsertNilsonKK2shiftsWeek17Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'kk2' in '[Row]1[Column]RosterCell_8' text box
        /// </summary>
        public string UIRow1ColumnRosterCellEdit8ValueAsString = "kk2";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]1[Column]RosterCell_8' text box
        /// </summary>
        public string UIRow1ColumnRosterCellEdit8SendKeys = "{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InsertNilsonKK2shiftsWeek18'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InsertNilsonKK2shiftsWeek18Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'kk2' in '[Row]1[Column]RosterCell_18' text box
        /// </summary>
        public string UIRow1ColumnRosterCellEdit11ValueAsString = "kk2";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]1[Column]RosterCell_18' text box
        /// </summary>
        public string UIRow1ColumnRosterCellEdit11SendKeys = "{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InsertRavelliNshifts'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InsertRavelliNshiftsParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.DataStructures.PlanShift' in cell
        /// </summary>
        public string UIItemCell2ValueTypeName = "Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.DataStructures.PlanShift";
        
        /// <summary>
        /// Type 'N' in cell
        /// </summary>
        public string UIItemCell2ValueAsString = "N";
        
        /// <summary>
        /// Type 'n{Tab}' in '[Row]2[Column]RosterCell_3' text box
        /// </summary>
        public string UIRow2ColumnRosterCellEditSendKeys = "{DELETE}{Tab}";
        
        /// <summary>
        /// Type 'n{Tab}' in '[Row]2[Column]RosterCell_4' text box
        /// </summary>
        public string UIRow2ColumnRosterCellEdit1SendKeys = "n{Tab}";
        
        /// <summary>
        /// Type 'Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.DataStructures.PlanShift' in cell
        /// </summary>
        public string UIItemCell7ValueTypeName = "Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.DataStructures.PlanShift";
        
        /// <summary>
        /// Type 'N' in cell
        /// </summary>
        public string UIItemCell7ValueAsString = "N";
        
        /// <summary>
        /// Type 'n{Tab}' in '[Row]2[Column]RosterCell_6' text box
        /// </summary>
        public string UIRow2ColumnRosterCellEdit2SendKeys = "n{Tab}";
        
        /// <summary>
        /// Type 'n{Tab}' in '[Row]2[Column]RosterCell_7' text box
        /// </summary>
        public string UIRow2ColumnRosterCellEdit3SendKeys = "n{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InsertRavelliNshifts2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InsertRavelliNshifts2Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'n{Tab}' in '[Row]2[Column]RosterCell_33' text box
        /// </summary>
        public string UIRow2ColumnRosterCellEdit5SendKeys = "n{Tab}";
        
        /// <summary>
        /// Type 'n{Tab}' in '[Row]2[Column]RosterCell_34' text box
        /// </summary>
        public string UIRow2ColumnRosterCellEdit14SendKeys = "n{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InsertRavelliNshiftsWeek16_1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InsertRavelliNshiftsWeek16_1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'n{Tab}' in '[Row]2[Column]RosterCell_3' text box
        /// </summary>
        public string UIRow2ColumnRosterCellEditSendKeys = "n{Tab}";
        
        /// <summary>
        /// Type 'n' in '[Row]2[Column]RosterCell_4' text box
        /// </summary>
        public string UIRow2ColumnRosterCellEdit1ValueAsString = "n";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]2[Column]RosterCell_4' text box
        /// </summary>
        public string UIRow2ColumnRosterCellEdit1SendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'n{Tab}' in '[Row]2[Column]RosterCell_6' text box
        /// </summary>
        public string UIRow2ColumnRosterCellEdit2SendKeys = "n{Tab}";
        
        /// <summary>
        /// Type 'n' in '[Row]2[Column]RosterCell_7' text box
        /// </summary>
        public string UIRow2ColumnRosterCellEdit3ValueAsString = "n";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]2[Column]RosterCell_7' text box
        /// </summary>
        public string UIRow2ColumnRosterCellEdit3SendKeys = "{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InsertRavelliNshiftsWeek16_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InsertRavelliNshiftsWeek16_2Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'n{Tab}' in '[Row]2[Column]RosterCell_2' text box
        /// </summary>
        public string UIRow2ColumnRosterCellEdit6SendKeys = "n{Tab}";
        
        /// <summary>
        /// Type 'n' in '[Row]2[Column]RosterCell_3' text box
        /// </summary>
        public string UIRow2ColumnRosterCellEditValueAsString = "n";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]2[Column]RosterCell_3' text box
        /// </summary>
        public string UIRow2ColumnRosterCellEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'n{Tab}' in '[Row]2[Column]RosterCell_5' text box
        /// </summary>
        public string UIRow2ColumnRosterCellEdit21SendKeys = "n{Tab}";
        
        /// <summary>
        /// Type 'n{Tab}' in '[Row]2[Column]RosterCell_6' text box
        /// </summary>
        public string UIRow2ColumnRosterCellEdit2SendKeys = "n{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InsertRavelliNshiftsWeek16_3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InsertRavelliNshiftsWeek16_3Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'n{Tab}' in '[Row]2[Column]RosterCell_2' text box
        /// </summary>
        public string UIRow2ColumnRosterCellEdit6SendKeys = "n{Tab}";
        
        /// <summary>
        /// Type 'n{Tab}' in '[Row]2[Column]RosterCell_5' text box
        /// </summary>
        public string UIRow2ColumnRosterCellEdit21SendKeys = "n{Tab}";
        
        /// <summary>
        /// Type 'n{Tab}' in '[Row]2[Column]RosterCell_12' text box
        /// </summary>
        public string UIRow2ColumnRosterCellEdit22SendKeys = "n{Tab}";
        
        /// <summary>
        /// Type 'n{Tab}' in '[Row]2[Column]RosterCell_16' text box
        /// </summary>
        public string UIRow2ColumnRosterCellEdit31SendKeys = "n{Tab}";
        
        /// <summary>
        /// Type 'n{Tab}' in '[Row]2[Column]RosterCell_19' text box
        /// </summary>
        public string UIRow2ColumnRosterCellEdit41SendKeys = "n{Tab}";
        
        /// <summary>
        /// Type 'n{Tab}' in '[Row]2[Column]RosterCell_26' text box
        /// </summary>
        public string UIRow2ColumnRosterCellEdit51SendKeys = "n{Tab}";
        
        /// <summary>
        /// Type 'n{Tab}' in '[Row]2[Column]RosterCell_32' text box
        /// </summary>
        public string UIRow2ColumnRosterCellEdit61SendKeys = "n{Tab}";
        
        /// <summary>
        /// Type 'n{Tab}' in '[Row]2[Column]RosterCell_33' text box
        /// </summary>
        public string UIRow2ColumnRosterCellEdit5SendKeys = "n{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectRosterplanTypeCalendarplan'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SelectRosterplanTypeCalendarplanParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.Configuration.RosterplanConfigurationController+RosterplanTypeDefinition' in 'leRosterplanType' LookUpEdit
        /// </summary>
        public string UILeRosterplanTypeLookUpEditValueTypeName = "Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.Configuration.RosterplanConfigu" +
            "rationController+RosterplanTypeDefinition";
        
        /// <summary>
        /// Type 'Kalenderplan' in 'leRosterplanType' LookUpEdit
        /// </summary>
        public string UILeRosterplanTypeLookUpEditValueAsString = "Kalenderplan";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SetCalendarplanName'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SetCalendarplanNameParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Kalenderplan' in 'eName' text box
        /// </summary>
        public string UIENameEditValueAsString = "Kalenderplan";
        
        /// <summary>
        /// Type '{Tab}' in 'eName' text box
        /// </summary>
        public string UIENameEditSendKeys = "{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SetCalendarplanWeeks'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SetCalendarplanWeeksParams
    {
        
        #region Fields
        /// <summary>
        /// Type '5 [SelectionStart]0[SelectionLength]1' in 'eNumber[1]' text box
        /// </summary>
        public string UIENumber1EditValueAsString = "5 [SelectionStart]0[SelectionLength]1";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanInnstilliWindow : DXWindow
    {
        
        public UIArbeidsplanInnstilliWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan - Innstillinger";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public UITcDataTabList UITcDataTabList
        {
            get
            {
                if ((this.mUITcDataTabList == null))
                {
                    this.mUITcDataTabList = new UITcDataTabList(this);
                }
                return this.mUITcDataTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcDataTabList mUITcDataTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcDataTabList : DXTestControl
    {
        
        public UITcDataTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcData";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public UITpConfigurationClient UITpConfigurationClient
        {
            get
            {
                if ((this.mUITpConfigurationClient == null))
                {
                    this.mUITpConfigurationClient = new UITpConfigurationClient(this);
                }
                return this.mUITpConfigurationClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpConfigurationClient mUITpConfigurationClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpConfigurationClient : DXTestControl
    {
        
        public UITpConfigurationClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpConfiguration";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public UIPaCenterClient UIPaCenterClient
        {
            get
            {
                if ((this.mUIPaCenterClient == null))
                {
                    this.mUIPaCenterClient = new UIPaCenterClient(this);
                }
                return this.mUIPaCenterClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPaCenterClient mUIPaCenterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPaCenterClient : DXTestControl
    {
        
        public UIPaCenterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paCenter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UILeRosterplanTypeLookUpEdit
        {
            get
            {
                if ((this.mUILeRosterplanTypeLookUpEdit == null))
                {
                    this.mUILeRosterplanTypeLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUILeRosterplanTypeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "leRosterplanType";
                    this.mUILeRosterplanTypeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    #endregion
                }
                return this.mUILeRosterplanTypeLookUpEdit;
            }
        }
        
        public DXTextEdit UIENameEdit
        {
            get
            {
                if ((this.mUIENameEdit == null))
                {
                    this.mUIENameEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "eName";
                    this.mUIENameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENameEdit.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIENameEdit;
            }
        }
        
        public UIEStartDateCustom UIEStartDateCustom
        {
            get
            {
                if ((this.mUIEStartDateCustom == null))
                {
                    this.mUIEStartDateCustom = new UIEStartDateCustom(this);
                }
                return this.mUIEStartDateCustom;
            }
        }
        
        public DXTextEdit UIENumber1Edit
        {
            get
            {
                if ((this.mUIENumber1Edit == null))
                {
                    this.mUIENumber1Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENumber1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eNumber[1]";
                    this.mUIENumber1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENumber1Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIENumber1Edit.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIENumber1Edit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUILeRosterplanTypeLookUpEdit;
        
        private DXTextEdit mUIENameEdit;
        
        private UIEStartDateCustom mUIEStartDateCustom;
        
        private DXTextEdit mUIENumber1Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEStartDateCustom : DXTestControl
    {
        
        public UIEStartDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "eStartDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILeggtilansatteWindow : DXWindow
    {
        
        public UILeggtilansatteWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Legg til ansatte";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom mUIViewHostCustom;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIViewHostCustom : DXTestControl
    {
        
        public UIViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcViewClient : DXTestControl
    {
        
        public UIPcViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UISelectDepartmentEmplCustom UISelectDepartmentEmplCustom
        {
            get
            {
                if ((this.mUISelectDepartmentEmplCustom == null))
                {
                    this.mUISelectDepartmentEmplCustom = new UISelectDepartmentEmplCustom(this);
                }
                return this.mUISelectDepartmentEmplCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISelectDepartmentEmplCustom mUISelectDepartmentEmplCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISelectDepartmentEmplCustom : DXTestControl
    {
        
        public UISelectDepartmentEmplCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SelectDepartmentEmployeesView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SelectDepartmentEmployeesView";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcContentContainerClient UIPcContentContainerClient
        {
            get
            {
                if ((this.mUIPcContentContainerClient == null))
                {
                    this.mUIPcContentContainerClient = new UIPcContentContainerClient(this);
                }
                return this.mUIPcContentContainerClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentContainerClient mUIPcContentContainerClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcContentContainerClient : DXTestControl
    {
        
        public UIPcContentContainerClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContentContainer";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcContentClient UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient(this);
                }
                return this.mUIPcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient mUIPcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcContentClient : DXTestControl
    {
        
        public UIPcContentClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIGcDepartmentEmployeeTable UIGcDepartmentEmployeeTable
        {
            get
            {
                if ((this.mUIGcDepartmentEmployeeTable == null))
                {
                    this.mUIGcDepartmentEmployeeTable = new UIGcDepartmentEmployeeTable(this);
                }
                return this.mUIGcDepartmentEmployeeTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDepartmentEmployeeTable mUIGcDepartmentEmployeeTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcDepartmentEmployeeTable : DXGrid
    {
        
        public UIGcDepartmentEmployeeTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public DXCell UIAnderssonKennethCell
        {
            get
            {
                if ((this.mUIAnderssonKennethCell == null))
                {
                    this.mUIAnderssonKennethCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIAnderssonKennethCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentEmployeesGridControlCell[View]gvDepartmentEmployees[Row]0[Column]colE" +
                        "mployee";
                    this.mUIAnderssonKennethCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIAnderssonKennethCell.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUIAnderssonKennethCell;
            }
        }
        
        public DXCell UINilssonRolandCell
        {
            get
            {
                if ((this.mUINilssonRolandCell == null))
                {
                    this.mUINilssonRolandCell = new DXCell(this);
                    #region Search Criteria
                    this.mUINilssonRolandCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentEmployeesGridControlCell[View]gvDepartmentEmployees[Row]8[Column]colE" +
                        "mployee";
                    this.mUINilssonRolandCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUINilssonRolandCell.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUINilssonRolandCell;
            }
        }
        
        public DXCell UIRavelliThomasCell
        {
            get
            {
                if ((this.mUIRavelliThomasCell == null))
                {
                    this.mUIRavelliThomasCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIRavelliThomasCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentEmployeesGridControlCell[View]gvDepartmentEmployees[Row]9[Column]colE" +
                        "mployee";
                    this.mUIRavelliThomasCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIRavelliThomasCell.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUIRavelliThomasCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIAnderssonKennethCell;
        
        private DXCell mUINilssonRolandCell;
        
        private DXCell mUIRavelliThomasCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAnsatteiarbeidsplanWindow : DXWindow
    {
        
        public UIAnsatteiarbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansatte i arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanKalenderpWindow : DXWindow
    {
        
        public UIArbeidsplanKalenderpWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient : DXTestControl
    {
        
        public UIPnlRosterPlanClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable : DXGrid
    {
        
        public UIGcRosterPlanTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIF3Cell
        {
            get
            {
                if ((this.mUIF3Cell == null))
                {
                    this.mUIF3Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIF3Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_3";
                    this.mUIF3Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIF3Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIF3Cell;
            }
        }
        
        public DXTextEdit UIRow0ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow0ColumnRosterCellEdit == null))
                {
                    this.mUIRow0ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow0ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]0[Column]RosterCell_3";
                    this.mUIRow0ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow0ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow0ColumnRosterCellEdit;
            }
        }
        
        public DXCell UIF3Cell1
        {
            get
            {
                if ((this.mUIF3Cell1 == null))
                {
                    this.mUIF3Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIF3Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_4";
                    this.mUIF3Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIF3Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIF3Cell1;
            }
        }
        
        public DXTextEdit UIRow0ColumnRosterCellEdit1
        {
            get
            {
                if ((this.mUIRow0ColumnRosterCellEdit1 == null))
                {
                    this.mUIRow0ColumnRosterCellEdit1 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow0ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]0[Column]RosterCell_4";
                    this.mUIRow0ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow0ColumnRosterCellEdit1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow0ColumnRosterCellEdit1;
            }
        }
        
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_3";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXTextEdit UIRow1ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow1ColumnRosterCellEdit == null))
                {
                    this.mUIRow1ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow1ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]1[Column]RosterCell_3";
                    this.mUIRow1ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow1ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow1ColumnRosterCellEdit;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_4";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXTextEdit UIRow1ColumnRosterCellEdit1
        {
            get
            {
                if ((this.mUIRow1ColumnRosterCellEdit1 == null))
                {
                    this.mUIRow1ColumnRosterCellEdit1 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow1ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]1[Column]RosterCell_4";
                    this.mUIRow1ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow1ColumnRosterCellEdit1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow1ColumnRosterCellEdit1;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_3";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        
        public DXTextEdit UIRow2ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow2ColumnRosterCellEdit == null))
                {
                    this.mUIRow2ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow2ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]2[Column]RosterCell_3";
                    this.mUIRow2ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow2ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow2ColumnRosterCellEdit;
            }
        }
        
        public DXCell UIItemCell3
        {
            get
            {
                if ((this.mUIItemCell3 == null))
                {
                    this.mUIItemCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_4";
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell3;
            }
        }
        
        public DXTextEdit UIRow2ColumnRosterCellEdit1
        {
            get
            {
                if ((this.mUIRow2ColumnRosterCellEdit1 == null))
                {
                    this.mUIRow2ColumnRosterCellEdit1 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow2ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]2[Column]RosterCell_4";
                    this.mUIRow2ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow2ColumnRosterCellEdit1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow2ColumnRosterCellEdit1;
            }
        }
        
        public DXCell UIItemCell4
        {
            get
            {
                if ((this.mUIItemCell4 == null))
                {
                    this.mUIItemCell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_6";
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell4.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell4;
            }
        }
        
        public DXTextEdit UIRow0ColumnRosterCellEdit2
        {
            get
            {
                if ((this.mUIRow0ColumnRosterCellEdit2 == null))
                {
                    this.mUIRow0ColumnRosterCellEdit2 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow0ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]0[Column]RosterCell_6";
                    this.mUIRow0ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow0ColumnRosterCellEdit2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow0ColumnRosterCellEdit2;
            }
        }
        
        public DXCell UIF3Cell2
        {
            get
            {
                if ((this.mUIF3Cell2 == null))
                {
                    this.mUIF3Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIF3Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_7";
                    this.mUIF3Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIF3Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIF3Cell2;
            }
        }
        
        public DXTextEdit UIRow0ColumnRosterCellEdit3
        {
            get
            {
                if ((this.mUIRow0ColumnRosterCellEdit3 == null))
                {
                    this.mUIRow0ColumnRosterCellEdit3 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow0ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]0[Column]RosterCell_7";
                    this.mUIRow0ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow0ColumnRosterCellEdit3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow0ColumnRosterCellEdit3;
            }
        }
        
        public DXCell UIItemCell5
        {
            get
            {
                if ((this.mUIItemCell5 == null))
                {
                    this.mUIItemCell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_6";
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell5.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell5;
            }
        }
        
        public DXTextEdit UIRow1ColumnRosterCellEdit2
        {
            get
            {
                if ((this.mUIRow1ColumnRosterCellEdit2 == null))
                {
                    this.mUIRow1ColumnRosterCellEdit2 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow1ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]1[Column]RosterCell_6";
                    this.mUIRow1ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow1ColumnRosterCellEdit2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow1ColumnRosterCellEdit2;
            }
        }
        
        public DXCell UIItemCell6
        {
            get
            {
                if ((this.mUIItemCell6 == null))
                {
                    this.mUIItemCell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_7";
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell6.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell6;
            }
        }
        
        public DXTextEdit UIRow1ColumnRosterCellEdit3
        {
            get
            {
                if ((this.mUIRow1ColumnRosterCellEdit3 == null))
                {
                    this.mUIRow1ColumnRosterCellEdit3 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow1ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]1[Column]RosterCell_7";
                    this.mUIRow1ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow1ColumnRosterCellEdit3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow1ColumnRosterCellEdit3;
            }
        }
        
        public DXCell UIItemCell7
        {
            get
            {
                if ((this.mUIItemCell7 == null))
                {
                    this.mUIItemCell7 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_6";
                    this.mUIItemCell7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell7.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell7;
            }
        }
        
        public DXTextEdit UIRow2ColumnRosterCellEdit2
        {
            get
            {
                if ((this.mUIRow2ColumnRosterCellEdit2 == null))
                {
                    this.mUIRow2ColumnRosterCellEdit2 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow2ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]2[Column]RosterCell_6";
                    this.mUIRow2ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow2ColumnRosterCellEdit2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow2ColumnRosterCellEdit2;
            }
        }
        
        public DXCell UIDCell
        {
            get
            {
                if ((this.mUIDCell == null))
                {
                    this.mUIDCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_7";
                    this.mUIDCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIDCell;
            }
        }
        
        public DXTextEdit UIRow2ColumnRosterCellEdit3
        {
            get
            {
                if ((this.mUIRow2ColumnRosterCellEdit3 == null))
                {
                    this.mUIRow2ColumnRosterCellEdit3 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow2ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]2[Column]RosterCell_7";
                    this.mUIRow2ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow2ColumnRosterCellEdit3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow2ColumnRosterCellEdit3;
            }
        }
        
        public DXCell UIF3Cell3
        {
            get
            {
                if ((this.mUIF3Cell3 == null))
                {
                    this.mUIF3Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIF3Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_17";
                    this.mUIF3Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIF3Cell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIF3Cell3;
            }
        }
        
        public DXTextEdit UIRow0ColumnRosterCellEdit4
        {
            get
            {
                if ((this.mUIRow0ColumnRosterCellEdit4 == null))
                {
                    this.mUIRow0ColumnRosterCellEdit4 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow0ColumnRosterCellEdit4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]0[Column]RosterCell_17";
                    this.mUIRow0ColumnRosterCellEdit4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow0ColumnRosterCellEdit4.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow0ColumnRosterCellEdit4;
            }
        }
        
        public DXCell UIItemCell8
        {
            get
            {
                if ((this.mUIItemCell8 == null))
                {
                    this.mUIItemCell8 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell8.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_17";
                    this.mUIItemCell8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell8.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell8;
            }
        }
        
        public DXTextEdit UIRow1ColumnRosterCellEdit4
        {
            get
            {
                if ((this.mUIRow1ColumnRosterCellEdit4 == null))
                {
                    this.mUIRow1ColumnRosterCellEdit4 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow1ColumnRosterCellEdit4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]1[Column]RosterCell_17";
                    this.mUIRow1ColumnRosterCellEdit4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow1ColumnRosterCellEdit4.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow1ColumnRosterCellEdit4;
            }
        }
        
        public DXCell UIItemCell9
        {
            get
            {
                if ((this.mUIItemCell9 == null))
                {
                    this.mUIItemCell9 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell9.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_17";
                    this.mUIItemCell9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell9.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell9;
            }
        }
        
        public DXTextEdit UIRow2ColumnRosterCellEdit4
        {
            get
            {
                if ((this.mUIRow2ColumnRosterCellEdit4 == null))
                {
                    this.mUIRow2ColumnRosterCellEdit4 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow2ColumnRosterCellEdit4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]2[Column]RosterCell_17";
                    this.mUIRow2ColumnRosterCellEdit4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow2ColumnRosterCellEdit4.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow2ColumnRosterCellEdit4;
            }
        }
        
        public DXCell UIItemCell10
        {
            get
            {
                if ((this.mUIItemCell10 == null))
                {
                    this.mUIItemCell10 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell10.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_33";
                    this.mUIItemCell10.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell10.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell10;
            }
        }
        
        public DXTextEdit UIRow0ColumnRosterCellEdit5
        {
            get
            {
                if ((this.mUIRow0ColumnRosterCellEdit5 == null))
                {
                    this.mUIRow0ColumnRosterCellEdit5 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow0ColumnRosterCellEdit5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]0[Column]RosterCell_33";
                    this.mUIRow0ColumnRosterCellEdit5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow0ColumnRosterCellEdit5.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow0ColumnRosterCellEdit5;
            }
        }
        
        public DXCell UIItemCell11
        {
            get
            {
                if ((this.mUIItemCell11 == null))
                {
                    this.mUIItemCell11 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell11.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_33";
                    this.mUIItemCell11.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell11.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell11;
            }
        }
        
        public DXTextEdit UIRow1ColumnRosterCellEdit5
        {
            get
            {
                if ((this.mUIRow1ColumnRosterCellEdit5 == null))
                {
                    this.mUIRow1ColumnRosterCellEdit5 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow1ColumnRosterCellEdit5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]1[Column]RosterCell_33";
                    this.mUIRow1ColumnRosterCellEdit5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow1ColumnRosterCellEdit5.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow1ColumnRosterCellEdit5;
            }
        }
        
        public DXCell UIItemCell12
        {
            get
            {
                if ((this.mUIItemCell12 == null))
                {
                    this.mUIItemCell12 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell12.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_33";
                    this.mUIItemCell12.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell12.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell12;
            }
        }
        
        public DXTextEdit UIRow2ColumnRosterCellEdit5
        {
            get
            {
                if ((this.mUIRow2ColumnRosterCellEdit5 == null))
                {
                    this.mUIRow2ColumnRosterCellEdit5 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow2ColumnRosterCellEdit5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]2[Column]RosterCell_33";
                    this.mUIRow2ColumnRosterCellEdit5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow2ColumnRosterCellEdit5.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow2ColumnRosterCellEdit5;
            }
        }
        
        public DXCell UIItemCell13
        {
            get
            {
                if ((this.mUIItemCell13 == null))
                {
                    this.mUIItemCell13 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell13.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_13";
                    this.mUIItemCell13.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell13.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell13;
            }
        }
        
        public DXTextEdit UIRow0ColumnRosterCellEdit41
        {
            get
            {
                if ((this.mUIRow0ColumnRosterCellEdit41 == null))
                {
                    this.mUIRow0ColumnRosterCellEdit41 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow0ColumnRosterCellEdit41.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]0[Column]RosterCell_13";
                    this.mUIRow0ColumnRosterCellEdit41.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow0ColumnRosterCellEdit41.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow0ColumnRosterCellEdit41;
            }
        }
        
        public DXCell UIItemCell21
        {
            get
            {
                if ((this.mUIItemCell21 == null))
                {
                    this.mUIItemCell21 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell21.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_20";
                    this.mUIItemCell21.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell21.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell21;
            }
        }
        
        public DXTextEdit UIRow0ColumnRosterCellEdit6
        {
            get
            {
                if ((this.mUIRow0ColumnRosterCellEdit6 == null))
                {
                    this.mUIRow0ColumnRosterCellEdit6 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow0ColumnRosterCellEdit6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]0[Column]RosterCell_20";
                    this.mUIRow0ColumnRosterCellEdit6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow0ColumnRosterCellEdit6.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow0ColumnRosterCellEdit6;
            }
        }
        
        public DXCell UIItemCell31
        {
            get
            {
                if ((this.mUIItemCell31 == null))
                {
                    this.mUIItemCell31 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell31.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_27";
                    this.mUIItemCell31.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell31.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell31;
            }
        }
        
        public DXTextEdit UIRow0ColumnRosterCellEdit7
        {
            get
            {
                if ((this.mUIRow0ColumnRosterCellEdit7 == null))
                {
                    this.mUIRow0ColumnRosterCellEdit7 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow0ColumnRosterCellEdit7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]0[Column]RosterCell_27";
                    this.mUIRow0ColumnRosterCellEdit7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow0ColumnRosterCellEdit7.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow0ColumnRosterCellEdit7;
            }
        }
        
        public DXCell UIItemCell51
        {
            get
            {
                if ((this.mUIItemCell51 == null))
                {
                    this.mUIItemCell51 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell51.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_34";
                    this.mUIItemCell51.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell51.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell51;
            }
        }
        
        public DXTextEdit UIRow0ColumnRosterCellEdit9
        {
            get
            {
                if ((this.mUIRow0ColumnRosterCellEdit9 == null))
                {
                    this.mUIRow0ColumnRosterCellEdit9 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow0ColumnRosterCellEdit9.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]0[Column]RosterCell_34";
                    this.mUIRow0ColumnRosterCellEdit9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow0ColumnRosterCellEdit9.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow0ColumnRosterCellEdit9;
            }
        }
        
        public DXCell UIDCell4
        {
            get
            {
                if ((this.mUIDCell4 == null))
                {
                    this.mUIDCell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIDCell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_13";
                    this.mUIDCell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDCell4.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIDCell4;
            }
        }
        
        public DXTextEdit UIRow1ColumnRosterCellEdit41
        {
            get
            {
                if ((this.mUIRow1ColumnRosterCellEdit41 == null))
                {
                    this.mUIRow1ColumnRosterCellEdit41 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow1ColumnRosterCellEdit41.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]1[Column]RosterCell_13";
                    this.mUIRow1ColumnRosterCellEdit41.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow1ColumnRosterCellEdit41.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow1ColumnRosterCellEdit41;
            }
        }
        
        public DXCell UIDCell6
        {
            get
            {
                if ((this.mUIDCell6 == null))
                {
                    this.mUIDCell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIDCell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_20";
                    this.mUIDCell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDCell6.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIDCell6;
            }
        }
        
        public DXTextEdit UIRow1ColumnRosterCellEdit6
        {
            get
            {
                if ((this.mUIRow1ColumnRosterCellEdit6 == null))
                {
                    this.mUIRow1ColumnRosterCellEdit6 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow1ColumnRosterCellEdit6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]1[Column]RosterCell_20";
                    this.mUIRow1ColumnRosterCellEdit6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow1ColumnRosterCellEdit6.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow1ColumnRosterCellEdit6;
            }
        }
        
        public DXCell UIDCell7
        {
            get
            {
                if ((this.mUIDCell7 == null))
                {
                    this.mUIDCell7 = new DXCell(this);
                    #region Search Criteria
                    this.mUIDCell7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_27";
                    this.mUIDCell7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDCell7.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIDCell7;
            }
        }
        
        public DXTextEdit UIRow1ColumnRosterCellEdit7
        {
            get
            {
                if ((this.mUIRow1ColumnRosterCellEdit7 == null))
                {
                    this.mUIRow1ColumnRosterCellEdit7 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow1ColumnRosterCellEdit7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]1[Column]RosterCell_27";
                    this.mUIRow1ColumnRosterCellEdit7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow1ColumnRosterCellEdit7.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow1ColumnRosterCellEdit7;
            }
        }
        
        public DXCell UIDCell9
        {
            get
            {
                if ((this.mUIDCell9 == null))
                {
                    this.mUIDCell9 = new DXCell(this);
                    #region Search Criteria
                    this.mUIDCell9.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_34";
                    this.mUIDCell9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDCell9.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIDCell9;
            }
        }
        
        public DXTextEdit UIRow1ColumnRosterCellEdit9
        {
            get
            {
                if ((this.mUIRow1ColumnRosterCellEdit9 == null))
                {
                    this.mUIRow1ColumnRosterCellEdit9 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow1ColumnRosterCellEdit9.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]1[Column]RosterCell_34";
                    this.mUIRow1ColumnRosterCellEdit9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow1ColumnRosterCellEdit9.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow1ColumnRosterCellEdit9;
            }
        }
        
        public DXCell UIItemCell91
        {
            get
            {
                if ((this.mUIItemCell91 == null))
                {
                    this.mUIItemCell91 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell91.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_13";
                    this.mUIItemCell91.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell91.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell91;
            }
        }
        
        public DXTextEdit UIRow2ColumnRosterCellEdit9
        {
            get
            {
                if ((this.mUIRow2ColumnRosterCellEdit9 == null))
                {
                    this.mUIRow2ColumnRosterCellEdit9 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow2ColumnRosterCellEdit9.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]2[Column]RosterCell_13";
                    this.mUIRow2ColumnRosterCellEdit9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow2ColumnRosterCellEdit9.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow2ColumnRosterCellEdit9;
            }
        }
        
        public DXCell UIItemCell111
        {
            get
            {
                if ((this.mUIItemCell111 == null))
                {
                    this.mUIItemCell111 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell111.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_20";
                    this.mUIItemCell111.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell111.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell111;
            }
        }
        
        public DXTextEdit UIRow2ColumnRosterCellEdit11
        {
            get
            {
                if ((this.mUIRow2ColumnRosterCellEdit11 == null))
                {
                    this.mUIRow2ColumnRosterCellEdit11 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow2ColumnRosterCellEdit11.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]2[Column]RosterCell_20";
                    this.mUIRow2ColumnRosterCellEdit11.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow2ColumnRosterCellEdit11.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow2ColumnRosterCellEdit11;
            }
        }
        
        public DXCell UIItemCell121
        {
            get
            {
                if ((this.mUIItemCell121 == null))
                {
                    this.mUIItemCell121 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell121.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_27";
                    this.mUIItemCell121.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell121.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell121;
            }
        }
        
        public DXTextEdit UIRow2ColumnRosterCellEdit12
        {
            get
            {
                if ((this.mUIRow2ColumnRosterCellEdit12 == null))
                {
                    this.mUIRow2ColumnRosterCellEdit12 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow2ColumnRosterCellEdit12.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]2[Column]RosterCell_27";
                    this.mUIRow2ColumnRosterCellEdit12.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow2ColumnRosterCellEdit12.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow2ColumnRosterCellEdit12;
            }
        }
        
        public DXCell UIItemCell14
        {
            get
            {
                if ((this.mUIItemCell14 == null))
                {
                    this.mUIItemCell14 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell14.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_34";
                    this.mUIItemCell14.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell14.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell14;
            }
        }
        
        public DXTextEdit UIRow2ColumnRosterCellEdit14
        {
            get
            {
                if ((this.mUIRow2ColumnRosterCellEdit14 == null))
                {
                    this.mUIRow2ColumnRosterCellEdit14 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow2ColumnRosterCellEdit14.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]2[Column]RosterCell_34";
                    this.mUIRow2ColumnRosterCellEdit14.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow2ColumnRosterCellEdit14.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow2ColumnRosterCellEdit14;
            }
        }
        
        public DXCell UIRavelliThomasCell
        {
            get
            {
                if ((this.mUIRavelliThomasCell == null))
                {
                    this.mUIRavelliThomasCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIRavelliThomasCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_EmployeeName";
                    this.mUIRavelliThomasCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIRavelliThomasCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRavelliThomasCell;
            }
        }
        
        public DXCell UIItemCell15
        {
            get
            {
                if ((this.mUIItemCell15 == null))
                {
                    this.mUIItemCell15 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell15.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_0";
                    this.mUIItemCell15.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell15.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell15;
            }
        }
        
        public DXCell UIItemCell16
        {
            get
            {
                if ((this.mUIItemCell16 == null))
                {
                    this.mUIItemCell16 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell16.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_2";
                    this.mUIItemCell16.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell16.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell16;
            }
        }
        
        public DXTextEdit UIRow2ColumnRosterCellEdit6
        {
            get
            {
                if ((this.mUIRow2ColumnRosterCellEdit6 == null))
                {
                    this.mUIRow2ColumnRosterCellEdit6 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow2ColumnRosterCellEdit6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]2[Column]RosterCell_2";
                    this.mUIRow2ColumnRosterCellEdit6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow2ColumnRosterCellEdit6.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow2ColumnRosterCellEdit6;
            }
        }
        
        public DXCell UIItemCell22
        {
            get
            {
                if ((this.mUIItemCell22 == null))
                {
                    this.mUIItemCell22 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell22.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_5";
                    this.mUIItemCell22.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell22.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell22;
            }
        }
        
        public DXTextEdit UIRow2ColumnRosterCellEdit21
        {
            get
            {
                if ((this.mUIRow2ColumnRosterCellEdit21 == null))
                {
                    this.mUIRow2ColumnRosterCellEdit21 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow2ColumnRosterCellEdit21.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]2[Column]RosterCell_5";
                    this.mUIRow2ColumnRosterCellEdit21.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow2ColumnRosterCellEdit21.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow2ColumnRosterCellEdit21;
            }
        }
        
        public DXCell UIItemCell23
        {
            get
            {
                if ((this.mUIItemCell23 == null))
                {
                    this.mUIItemCell23 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell23.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_12";
                    this.mUIItemCell23.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell23.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell23;
            }
        }
        
        public DXTextEdit UIRow2ColumnRosterCellEdit22
        {
            get
            {
                if ((this.mUIRow2ColumnRosterCellEdit22 == null))
                {
                    this.mUIRow2ColumnRosterCellEdit22 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow2ColumnRosterCellEdit22.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]2[Column]RosterCell_12";
                    this.mUIRow2ColumnRosterCellEdit22.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow2ColumnRosterCellEdit22.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow2ColumnRosterCellEdit22;
            }
        }
        
        public DXCell UIItemCell32
        {
            get
            {
                if ((this.mUIItemCell32 == null))
                {
                    this.mUIItemCell32 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell32.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_16";
                    this.mUIItemCell32.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell32.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell32;
            }
        }
        
        public DXTextEdit UIRow2ColumnRosterCellEdit31
        {
            get
            {
                if ((this.mUIRow2ColumnRosterCellEdit31 == null))
                {
                    this.mUIRow2ColumnRosterCellEdit31 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow2ColumnRosterCellEdit31.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]2[Column]RosterCell_16";
                    this.mUIRow2ColumnRosterCellEdit31.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow2ColumnRosterCellEdit31.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow2ColumnRosterCellEdit31;
            }
        }
        
        public DXCell UIItemCell41
        {
            get
            {
                if ((this.mUIItemCell41 == null))
                {
                    this.mUIItemCell41 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell41.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_19";
                    this.mUIItemCell41.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell41.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell41;
            }
        }
        
        public DXTextEdit UIRow2ColumnRosterCellEdit41
        {
            get
            {
                if ((this.mUIRow2ColumnRosterCellEdit41 == null))
                {
                    this.mUIRow2ColumnRosterCellEdit41 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow2ColumnRosterCellEdit41.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]2[Column]RosterCell_19";
                    this.mUIRow2ColumnRosterCellEdit41.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow2ColumnRosterCellEdit41.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow2ColumnRosterCellEdit41;
            }
        }
        
        public DXCell UIItemCell52
        {
            get
            {
                if ((this.mUIItemCell52 == null))
                {
                    this.mUIItemCell52 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell52.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_26";
                    this.mUIItemCell52.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell52.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell52;
            }
        }
        
        public DXTextEdit UIRow2ColumnRosterCellEdit51
        {
            get
            {
                if ((this.mUIRow2ColumnRosterCellEdit51 == null))
                {
                    this.mUIRow2ColumnRosterCellEdit51 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow2ColumnRosterCellEdit51.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]2[Column]RosterCell_26";
                    this.mUIRow2ColumnRosterCellEdit51.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow2ColumnRosterCellEdit51.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow2ColumnRosterCellEdit51;
            }
        }
        
        public DXCell UIItemCell61
        {
            get
            {
                if ((this.mUIItemCell61 == null))
                {
                    this.mUIItemCell61 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell61.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_32";
                    this.mUIItemCell61.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell61.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell61;
            }
        }
        
        public DXTextEdit UIRow2ColumnRosterCellEdit61
        {
            get
            {
                if ((this.mUIRow2ColumnRosterCellEdit61 == null))
                {
                    this.mUIRow2ColumnRosterCellEdit61 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow2ColumnRosterCellEdit61.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]2[Column]RosterCell_32";
                    this.mUIRow2ColumnRosterCellEdit61.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow2ColumnRosterCellEdit61.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow2ColumnRosterCellEdit61;
            }
        }
        
        public DXCell UIItemCell17
        {
            get
            {
                if ((this.mUIItemCell17 == null))
                {
                    this.mUIItemCell17 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell17.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_8";
                    this.mUIItemCell17.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell17.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell17;
            }
        }
        
        public DXTextEdit UIRow1ColumnRosterCellEdit8
        {
            get
            {
                if ((this.mUIRow1ColumnRosterCellEdit8 == null))
                {
                    this.mUIRow1ColumnRosterCellEdit8 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow1ColumnRosterCellEdit8.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]1[Column]RosterCell_8";
                    this.mUIRow1ColumnRosterCellEdit8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow1ColumnRosterCellEdit8.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow1ColumnRosterCellEdit8;
            }
        }
        
        public DXCell UIItemCell18
        {
            get
            {
                if ((this.mUIItemCell18 == null))
                {
                    this.mUIItemCell18 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell18.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_16";
                    this.mUIItemCell18.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell18.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell18;
            }
        }
        
        public DXTextEdit UIRow1ColumnRosterCellEdit10
        {
            get
            {
                if ((this.mUIRow1ColumnRosterCellEdit10 == null))
                {
                    this.mUIRow1ColumnRosterCellEdit10 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow1ColumnRosterCellEdit10.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]1[Column]RosterCell_16";
                    this.mUIRow1ColumnRosterCellEdit10.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow1ColumnRosterCellEdit10.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow1ColumnRosterCellEdit10;
            }
        }
        
        public DXCell UIItemCell19
        {
            get
            {
                if ((this.mUIItemCell19 == null))
                {
                    this.mUIItemCell19 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell19.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_18";
                    this.mUIItemCell19.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell19.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell19;
            }
        }
        
        public DXTextEdit UIRow1ColumnRosterCellEdit11
        {
            get
            {
                if ((this.mUIRow1ColumnRosterCellEdit11 == null))
                {
                    this.mUIRow1ColumnRosterCellEdit11 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow1ColumnRosterCellEdit11.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]1[Column]RosterCell_18";
                    this.mUIRow1ColumnRosterCellEdit11.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow1ColumnRosterCellEdit11.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow1ColumnRosterCellEdit11;
            }
        }
        
        public DXCell UINilssonRolandCell
        {
            get
            {
                if ((this.mUINilssonRolandCell == null))
                {
                    this.mUINilssonRolandCell = new DXCell(this);
                    #region Search Criteria
                    this.mUINilssonRolandCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_EmployeeName";
                    this.mUINilssonRolandCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUINilssonRolandCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUINilssonRolandCell;
            }
        }
        
        public DXCell UIItemCell20
        {
            get
            {
                if ((this.mUIItemCell20 == null))
                {
                    this.mUIItemCell20 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell20.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_0";
                    this.mUIItemCell20.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell20.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell20;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIF3Cell;
        
        private DXTextEdit mUIRow0ColumnRosterCellEdit;
        
        private DXCell mUIF3Cell1;
        
        private DXTextEdit mUIRow0ColumnRosterCellEdit1;
        
        private DXCell mUIItemCell;
        
        private DXTextEdit mUIRow1ColumnRosterCellEdit;
        
        private DXCell mUIItemCell1;
        
        private DXTextEdit mUIRow1ColumnRosterCellEdit1;
        
        private DXCell mUIItemCell2;
        
        private DXTextEdit mUIRow2ColumnRosterCellEdit;
        
        private DXCell mUIItemCell3;
        
        private DXTextEdit mUIRow2ColumnRosterCellEdit1;
        
        private DXCell mUIItemCell4;
        
        private DXTextEdit mUIRow0ColumnRosterCellEdit2;
        
        private DXCell mUIF3Cell2;
        
        private DXTextEdit mUIRow0ColumnRosterCellEdit3;
        
        private DXCell mUIItemCell5;
        
        private DXTextEdit mUIRow1ColumnRosterCellEdit2;
        
        private DXCell mUIItemCell6;
        
        private DXTextEdit mUIRow1ColumnRosterCellEdit3;
        
        private DXCell mUIItemCell7;
        
        private DXTextEdit mUIRow2ColumnRosterCellEdit2;
        
        private DXCell mUIDCell;
        
        private DXTextEdit mUIRow2ColumnRosterCellEdit3;
        
        private DXCell mUIF3Cell3;
        
        private DXTextEdit mUIRow0ColumnRosterCellEdit4;
        
        private DXCell mUIItemCell8;
        
        private DXTextEdit mUIRow1ColumnRosterCellEdit4;
        
        private DXCell mUIItemCell9;
        
        private DXTextEdit mUIRow2ColumnRosterCellEdit4;
        
        private DXCell mUIItemCell10;
        
        private DXTextEdit mUIRow0ColumnRosterCellEdit5;
        
        private DXCell mUIItemCell11;
        
        private DXTextEdit mUIRow1ColumnRosterCellEdit5;
        
        private DXCell mUIItemCell12;
        
        private DXTextEdit mUIRow2ColumnRosterCellEdit5;
        
        private DXCell mUIItemCell13;
        
        private DXTextEdit mUIRow0ColumnRosterCellEdit41;
        
        private DXCell mUIItemCell21;
        
        private DXTextEdit mUIRow0ColumnRosterCellEdit6;
        
        private DXCell mUIItemCell31;
        
        private DXTextEdit mUIRow0ColumnRosterCellEdit7;
        
        private DXCell mUIItemCell51;
        
        private DXTextEdit mUIRow0ColumnRosterCellEdit9;
        
        private DXCell mUIDCell4;
        
        private DXTextEdit mUIRow1ColumnRosterCellEdit41;
        
        private DXCell mUIDCell6;
        
        private DXTextEdit mUIRow1ColumnRosterCellEdit6;
        
        private DXCell mUIDCell7;
        
        private DXTextEdit mUIRow1ColumnRosterCellEdit7;
        
        private DXCell mUIDCell9;
        
        private DXTextEdit mUIRow1ColumnRosterCellEdit9;
        
        private DXCell mUIItemCell91;
        
        private DXTextEdit mUIRow2ColumnRosterCellEdit9;
        
        private DXCell mUIItemCell111;
        
        private DXTextEdit mUIRow2ColumnRosterCellEdit11;
        
        private DXCell mUIItemCell121;
        
        private DXTextEdit mUIRow2ColumnRosterCellEdit12;
        
        private DXCell mUIItemCell14;
        
        private DXTextEdit mUIRow2ColumnRosterCellEdit14;
        
        private DXCell mUIRavelliThomasCell;
        
        private DXCell mUIItemCell15;
        
        private DXCell mUIItemCell16;
        
        private DXTextEdit mUIRow2ColumnRosterCellEdit6;
        
        private DXCell mUIItemCell22;
        
        private DXTextEdit mUIRow2ColumnRosterCellEdit21;
        
        private DXCell mUIItemCell23;
        
        private DXTextEdit mUIRow2ColumnRosterCellEdit22;
        
        private DXCell mUIItemCell32;
        
        private DXTextEdit mUIRow2ColumnRosterCellEdit31;
        
        private DXCell mUIItemCell41;
        
        private DXTextEdit mUIRow2ColumnRosterCellEdit41;
        
        private DXCell mUIItemCell52;
        
        private DXTextEdit mUIRow2ColumnRosterCellEdit51;
        
        private DXCell mUIItemCell61;
        
        private DXTextEdit mUIRow2ColumnRosterCellEdit61;
        
        private DXCell mUIItemCell17;
        
        private DXTextEdit mUIRow1ColumnRosterCellEdit8;
        
        private DXCell mUIItemCell18;
        
        private DXTextEdit mUIRow1ColumnRosterCellEdit10;
        
        private DXCell mUIItemCell19;
        
        private DXTextEdit mUIRow1ColumnRosterCellEdit11;
        
        private DXCell mUINilssonRolandCell;
        
        private DXCell mUIItemCell20;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIPopupMenuBarControlMenu UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupMenuBarControlMenu mUIPopupMenuBarControlMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupMenuBarControlMenu : DXMenu
    {
        
        public UIPopupMenuBarControlMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBarButtonItemLink7MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink7MenuBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink7MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink7MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[7]";
                    this.mUIBarButtonItemLink7MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBarButtonItemLink7MenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UISlettMenuBaseButtonItem
        {
            get
            {
                if ((this.mUISlettMenuBaseButtonItem == null))
                {
                    this.mUISlettMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUISlettMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[3]";
                    this.mUISlettMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUISlettMenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBarButtonItemLink7MenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUISlettMenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow2 : DXWindow
    {
        
        public UIItemWindow2()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GT-4001 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GT-4001 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("GT-4001 - Informasjon");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanKalenderpWindow1 : DXWindow
    {
        
        public UIArbeidsplanKalenderpWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient1 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient1(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient1 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient1 : DXTestControl
    {
        
        public UIPnlRosterPlanClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable1 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable1(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable1 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable1 : DXGrid
    {
        
        public UIGcRosterPlanTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIF3Cell
        {
            get
            {
                if ((this.mUIF3Cell == null))
                {
                    this.mUIF3Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIF3Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_3";
                    this.mUIF3Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIF3Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIF3Cell;
            }
        }
        
        public DXCell UIF3Cell1
        {
            get
            {
                if ((this.mUIF3Cell1 == null))
                {
                    this.mUIF3Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIF3Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_4";
                    this.mUIF3Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIF3Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIF3Cell1;
            }
        }
        
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_6";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIF3Cell2
        {
            get
            {
                if ((this.mUIF3Cell2 == null))
                {
                    this.mUIF3Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIF3Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_7";
                    this.mUIF3Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIF3Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIF3Cell2;
            }
        }
        
        public DXCell UIF3Cell3
        {
            get
            {
                if ((this.mUIF3Cell3 == null))
                {
                    this.mUIF3Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIF3Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_17";
                    this.mUIF3Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIF3Cell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIF3Cell3;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_33";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_3";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        
        public DXCell UIItemCell3
        {
            get
            {
                if ((this.mUIItemCell3 == null))
                {
                    this.mUIItemCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_4";
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell3;
            }
        }
        
        public DXCell UIItemCell4
        {
            get
            {
                if ((this.mUIItemCell4 == null))
                {
                    this.mUIItemCell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_6";
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell4.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell4;
            }
        }
        
        public DXCell UIItemCell5
        {
            get
            {
                if ((this.mUIItemCell5 == null))
                {
                    this.mUIItemCell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_7";
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell5.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell5;
            }
        }
        
        public DXCell UIItemCell6
        {
            get
            {
                if ((this.mUIItemCell6 == null))
                {
                    this.mUIItemCell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_17";
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell6.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell6;
            }
        }
        
        public DXCell UIItemCell7
        {
            get
            {
                if ((this.mUIItemCell7 == null))
                {
                    this.mUIItemCell7 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_33";
                    this.mUIItemCell7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell7.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell7;
            }
        }
        
        public DXCell UIItemCell8
        {
            get
            {
                if ((this.mUIItemCell8 == null))
                {
                    this.mUIItemCell8 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell8.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_3";
                    this.mUIItemCell8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell8.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell8;
            }
        }
        
        public DXCell UIItemCell9
        {
            get
            {
                if ((this.mUIItemCell9 == null))
                {
                    this.mUIItemCell9 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell9.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_4";
                    this.mUIItemCell9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell9.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell9;
            }
        }
        
        public DXCell UIItemCell10
        {
            get
            {
                if ((this.mUIItemCell10 == null))
                {
                    this.mUIItemCell10 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell10.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_6";
                    this.mUIItemCell10.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell10.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell10;
            }
        }
        
        public DXCell UIItemCell11
        {
            get
            {
                if ((this.mUIItemCell11 == null))
                {
                    this.mUIItemCell11 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell11.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_7";
                    this.mUIItemCell11.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell11.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell11;
            }
        }
        
        public DXCell UIItemCell12
        {
            get
            {
                if ((this.mUIItemCell12 == null))
                {
                    this.mUIItemCell12 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell12.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_17";
                    this.mUIItemCell12.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell12.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell12;
            }
        }
        
        public DXCell UIItemCell13
        {
            get
            {
                if ((this.mUIItemCell13 == null))
                {
                    this.mUIItemCell13 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell13.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_33";
                    this.mUIItemCell13.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell13.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell13;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIF3Cell;
        
        private DXCell mUIF3Cell1;
        
        private DXCell mUIItemCell;
        
        private DXCell mUIF3Cell2;
        
        private DXCell mUIF3Cell3;
        
        private DXCell mUIItemCell1;
        
        private DXCell mUIItemCell2;
        
        private DXCell mUIItemCell3;
        
        private DXCell mUIItemCell4;
        
        private DXCell mUIItemCell5;
        
        private DXCell mUIItemCell6;
        
        private DXCell mUIItemCell7;
        
        private DXCell mUIItemCell8;
        
        private DXCell mUIItemCell9;
        
        private DXCell mUIItemCell10;
        
        private DXCell mUIItemCell11;
        
        private DXCell mUIItemCell12;
        
        private DXCell mUIItemCell13;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanKalenderpWindow2 : DXWindow
    {
        
        public UIArbeidsplanKalenderpWindow2()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient2 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient2(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient2 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient2 : DXTestControl
    {
        
        public UIPnlRosterPlanClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIDpnlColumnsDockPanel UIDpnlColumnsDockPanel
        {
            get
            {
                if ((this.mUIDpnlColumnsDockPanel == null))
                {
                    this.mUIDpnlColumnsDockPanel = new UIDpnlColumnsDockPanel(this);
                }
                return this.mUIDpnlColumnsDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpnlColumnsDockPanel mUIDpnlColumnsDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDpnlColumnsDockPanel : DXDockPanel
    {
        
        public UIDpnlColumnsDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlColumns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIDockPanel1_ContainerCustom UIDockPanel1_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel1_ContainerCustom == null))
                {
                    this.mUIDockPanel1_ContainerCustom = new UIDockPanel1_ContainerCustom(this);
                }
                return this.mUIDockPanel1_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel1_ContainerCustom mUIDockPanel1_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDockPanel1_ContainerCustom : DXTestControl
    {
        
        public UIDockPanel1_ContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcExtraGridTable UIGcExtraGridTable
        {
            get
            {
                if ((this.mUIGcExtraGridTable == null))
                {
                    this.mUIGcExtraGridTable = new UIGcExtraGridTable(this);
                }
                return this.mUIGcExtraGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcExtraGridTable mUIGcExtraGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcExtraGridTable : DXGrid
    {
        
        public UIGcExtraGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem10av10Cell
        {
            get
            {
                if ((this.mUIItem10av10Cell == null))
                {
                    this.mUIItem10av10Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem10av10Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_SH";
                    this.mUIItem10av10Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem10av10Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem10av10Cell;
            }
        }
        
        public DXCell UIItem4av4Cell
        {
            get
            {
                if ((this.mUIItem4av4Cell == null))
                {
                    this.mUIItem4av4Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4av4Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_H";
                    this.mUIItem4av4Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4av4Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem4av4Cell;
            }
        }
        
        public DXCell UIItem10av10Cell1
        {
            get
            {
                if ((this.mUIItem10av10Cell1 == null))
                {
                    this.mUIItem10av10Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem10av10Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_SH";
                    this.mUIItem10av10Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem10av10Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem10av10Cell1;
            }
        }
        
        public DXCell UIItem4av4Cell1
        {
            get
            {
                if ((this.mUIItem4av4Cell1 == null))
                {
                    this.mUIItem4av4Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4av4Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_H";
                    this.mUIItem4av4Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4av4Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem4av4Cell1;
            }
        }
        
        public DXCell UIItem4av0Cell
        {
            get
            {
                if ((this.mUIItem4av0Cell == null))
                {
                    this.mUIItem4av0Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4av0Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_F3";
                    this.mUIItem4av0Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4av0Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem4av0Cell;
            }
        }
        
        public DXCell UIItem4av10Cell
        {
            get
            {
                if ((this.mUIItem4av10Cell == null))
                {
                    this.mUIItem4av10Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4av10Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_SH";
                    this.mUIItem4av10Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4av10Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem4av10Cell;
            }
        }
        
        public DXCell UIItem3av4Cell
        {
            get
            {
                if ((this.mUIItem3av4Cell == null))
                {
                    this.mUIItem3av4Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3av4Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_H";
                    this.mUIItem3av4Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3av4Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3av4Cell;
            }
        }
        
        public DXCell UIItem5065Cell
        {
            get
            {
                if ((this.mUIItem5065Cell == null))
                {
                    this.mUIItem5065Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem5065Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_ColumnB";
                    this.mUIItem5065Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem5065Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem5065Cell;
            }
        }
        
        public DXCell UIItem133Cell
        {
            get
            {
                if ((this.mUIItem133Cell == null))
                {
                    this.mUIItem133Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem133Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_ColumnB";
                    this.mUIItem133Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem133Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem133Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem10av10Cell;
        
        private DXCell mUIItem4av4Cell;
        
        private DXCell mUIItem10av10Cell1;
        
        private DXCell mUIItem4av4Cell1;
        
        private DXCell mUIItem4av0Cell;
        
        private DXCell mUIItem4av10Cell;
        
        private DXCell mUIItem3av4Cell;
        
        private DXCell mUIItem5065Cell;
        
        private DXCell mUIItem133Cell;
        #endregion
    }
}
