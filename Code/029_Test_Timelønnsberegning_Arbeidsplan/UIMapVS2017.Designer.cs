// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _029_Test_Timelønnsberegning_Arbeidsplan.UIMapVS2017Classes
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v19_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMapVS2017
    {
        
        /// <summary>
        /// RightClickBettBrageCell
        /// </summary>
        public void RightClickBettBrageCell()
        {
            #region Variable Declarations
            DXCell uIBettBrageCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIBettBrageCell1;
            #endregion

            // Right-Click 'Bett, Brage' cell
            Mouse.Click(uIBettBrageCell1, MouseButtons.Right, ModifierKeys.None, new Point(102, 12));
        }
        
        #region Properties
        public UIArbeidsplanWindow UIArbeidsplanWindow
        {
            get
            {
                if ((this.mUIArbeidsplanWindow == null))
                {
                    this.mUIArbeidsplanWindow = new UIArbeidsplanWindow();
                }
                return this.mUIArbeidsplanWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIArbeidsplanWindow mUIArbeidsplanWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIArbeidsplanWindow : DXWindow
    {
        
        public UIArbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlRosterPlanClient : DXTestControl
    {
        
        public UIPnlRosterPlanClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRosterPlanGrid1Custom UIRosterPlanGrid1Custom
        {
            get
            {
                if ((this.mUIRosterPlanGrid1Custom == null))
                {
                    this.mUIRosterPlanGrid1Custom = new UIRosterPlanGrid1Custom(this);
                }
                return this.mUIRosterPlanGrid1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIRosterPlanGrid1Custom mUIRosterPlanGrid1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRosterPlanGrid1Custom : DXTestControl
    {
        
        public UIRosterPlanGrid1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rosterPlanGrid1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RosterPlanGrid";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRosterPlanTable : DXGrid
    {
        
        public UIGcRosterPlanTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIBettBrageCell
        {
            get
            {
                if ((this.mUIBettBrageCell == null))
                {
                    this.mUIBettBrageCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBettBrageCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]3[Column]ColumnHandle1";
                    this.mUIBettBrageCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBettBrageCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIBettBrageCell;
            }
        }
        
        public DXCell UIBettBrageCell1
        {
            get
            {
                if ((this.mUIBettBrageCell1 == null))
                {
                    this.mUIBettBrageCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIBettBrageCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]3[Column]EmployeeName";
                    this.mUIBettBrageCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBettBrageCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIBettBrageCell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIBettBrageCell;
        
        private DXCell mUIBettBrageCell1;
        #endregion
    }
}
