// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _023_Test_Omregnet_Tid
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v18_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// CancelEditLinesettingsChopin
        /// </summary>
        public void CancelEditLinesettingsChopin()
        {
            #region Variable Declarations
            DXButton uIAvbrytButton = this.UILinjeinnstillingerChWindow.UIGsPanelControl2Client.UIAvbrytButton;
            #endregion

            // Click '&Avbryt' button
            Mouse.Click(uIAvbrytButton, new Point(1, 1));
        }
        
        /// <summary>
        /// CheckBachLine2_step_5_USum_OT - Use 'CheckBachLine2_step_5_USum_OTExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckBachLine2_step_5_USum_OT()
        {
            #region Variable Declarations
            DXCell uIItem3637Cell = this.UIArbeidsplanOmregnettWindow2.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem3637Cell;
            DXCell uIItem3687Cell = this.UIArbeidsplanOmregnettWindow2.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem3687Cell;
            DXCell uIItem4837Cell = this.UIArbeidsplanOmregnettWindow2.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem4837Cell;
            DXCell uIItem567Cell = this.UIArbeidsplanOmregnettWindow2.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem567Cell;
            DXCell uIItem3074Cell = this.UIArbeidsplanOmregnettWindow2.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem3074Cell;
            DXCell uIItem3099Cell = this.UIArbeidsplanOmregnettWindow2.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem3099Cell;
            DXCell uIItem2675Cell = this.UIArbeidsplanOmregnettWindow2.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem2675Cell;
            DXCell uIItem3094Cell = this.UIArbeidsplanOmregnettWindow2.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem3094Cell;
            #endregion

            // Verify that the 'ValueAsString' property of '36,37' cell equals '36,37'
            Assert.AreEqual(this.CheckBachLine2_step_5_USum_OTExpectedValues.UIItem3637CellValueAsString, uIItem3637Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '36,87' cell equals '36,87'
            Assert.AreEqual(this.CheckBachLine2_step_5_USum_OTExpectedValues.UIItem3687CellValueAsString, uIItem3687Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '48,37' cell equals '48,37'
            Assert.AreEqual(this.CheckBachLine2_step_5_USum_OTExpectedValues.UIItem4837CellValueAsString, uIItem4837Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '56,7' cell equals '56,7'
            Assert.AreEqual(this.CheckBachLine2_step_5_USum_OTExpectedValues.UIItem567CellValueAsString, uIItem567Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '30,74' cell equals '30,74'
            Assert.AreEqual(this.CheckBachLine2_step_5_USum_OTExpectedValues.UIItem3074CellValueAsString, uIItem3074Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '30,99' cell equals '30,99'
            Assert.AreEqual(this.CheckBachLine2_step_5_USum_OTExpectedValues.UIItem3099CellValueAsString, uIItem3099Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '26,75' cell equals '26,75'
            Assert.AreEqual(this.CheckBachLine2_step_5_USum_OTExpectedValues.UIItem2675CellValueAsString, uIItem2675Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '30,94' cell equals '30,94'
            Assert.AreEqual(this.CheckBachLine2_step_5_USum_OTExpectedValues.UIItem3094CellValueAsString, uIItem3094Cell.ValueAsString);
        }
        
        /// <summary>
        /// CheckBachLine2_step_6_Calculations - Use 'CheckBachLine2_step_6_CalculationsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckBachLine2_step_6_Calculations()
        {
            UIMapVS2017.CheckBachLine2_step_6_Calculations();
        }
        
        /// <summary>
        /// CheckBachLine2Week1_step_7_USum_OT - Use 'CheckBachLine2Week1_step_7_USum_OTExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckBachLine2Week1_step_7_USum_OT()
        {
            #region Variable Declarations
            DXCell uIItem3098Cell = this.UIArbeidsplanOmregnettWindow1.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem3098Cell;
            DXCell uIItem3198Cell = this.UIArbeidsplanOmregnettWindow4.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem3198Cell;
            #endregion

            // Verify that the 'ValueAsString' property of '30,98' cell equals '30,98'
            Assert.AreEqual(this.CheckBachLine2Week1_step_7_USum_OTExpectedValues.UIItem3098CellValueAsString, uIItem3098Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '31,98' cell equals '31,98'
            Assert.AreEqual(this.CheckBachLine2Week1_step_7_USum_OTExpectedValues.UIItem3198CellValueAsString, uIItem3198Cell.ValueAsString);
        }
        
        /// <summary>
        /// CheckBeethovenLine1_step_1 - Use 'CheckBeethovenLine1_step_1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckBeethovenLine1_step_1()
        {
            UIMapVS2017.CheckBeethovenLine1_step_1();
        }
        
        /// <summary>
        /// CheckBeethovenLine1_step_2 - Use 'CheckBeethovenLine1_step_2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckBeethovenLine1_step_2()
        {
            UIMapVS2017.CheckBeethovenLine1_step_2();
        }
        
        /// <summary>
        /// CheckBeethovenLine1_step_3_OT - Use 'CheckBeethovenLine1_step_3_OTExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckBeethovenLine1_step_3_OT()
        {
            #region Variable Declarations
            DXCell uIItem295Cell = this.UIArbeidsplanOmregnettWindow1.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem295Cell;
            DXCell uIItem5633Cell = this.UIArbeidsplanOmregnettWindow1.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem5633Cell;
            DXCell uIItem3025Cell = this.UIArbeidsplanOmregnettWindow1.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem3025Cell;
            DXCell uIItem3188Cell = this.UIArbeidsplanOmregnettWindow1.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem3188Cell;
            #endregion

            // Verify that the 'ValueAsString' property of '29,5' cell equals '29,5'
            Assert.AreEqual(this.CheckBeethovenLine1_step_3_OTExpectedValues.UIItem295CellValueAsString, uIItem295Cell.ValueAsString, "Wrong Value");

            // Verify that the 'ValueAsString' property of '56,33' cell equals '56,33'
            Assert.AreEqual(this.CheckBeethovenLine1_step_3_OTExpectedValues.UIItem5633CellValueAsString, uIItem5633Cell.ValueAsString, "Wrong Value");

            // Verify that the 'ValueAsString' property of '30,25' cell equals '30,25'
            Assert.AreEqual(this.CheckBeethovenLine1_step_3_OTExpectedValues.UIItem3025CellValueAsString, uIItem3025Cell.ValueAsString, "Wrong Value");

            // Verify that the 'ValueAsString' property of '31,88' cell equals '31,88'
            Assert.AreEqual(this.CheckBeethovenLine1_step_3_OTExpectedValues.UIItem3188CellValueAsString, uIItem3188Cell.ValueAsString, "Wrong Value");
        }
        
        /// <summary>
        /// CheckBeethovenLine1_step_3_USum - Use 'CheckBeethovenLine1_step_3_USumExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckBeethovenLine1_step_3_USum()
        {
            #region Variable Declarations
            DXCell uIItem29Cell = this.UIArbeidsplanOmregnettWindow1.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem29Cell;
            DXCell uIItem48Cell = this.UIArbeidsplanOmregnettWindow1.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem48Cell;
            DXCell uIItem30Cell = this.UIArbeidsplanOmregnettWindow1.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem30Cell;
            DXCell uIItem275Cell = this.UIArbeidsplanOmregnettWindow1.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem275Cell;
            #endregion

            // Verify that the 'ValueAsString' property of '29' cell equals '29'
            Assert.AreEqual(this.CheckBeethovenLine1_step_3_USumExpectedValues.UIItem29CellValueAsString, uIItem29Cell.ValueAsString, "Wrong Value");

            // Verify that the 'ValueAsString' property of '48' cell equals '48'
            Assert.AreEqual(this.CheckBeethovenLine1_step_3_USumExpectedValues.UIItem48CellValueAsString, uIItem48Cell.ValueAsString, "Wrong Value");

            // Verify that the 'ValueAsString' property of '30' cell equals '30'
            Assert.AreEqual(this.CheckBeethovenLine1_step_3_USumExpectedValues.UIItem30CellValueAsString, uIItem30Cell.ValueAsString, "Wrong Value");

            // Verify that the 'ValueAsString' property of '27,5' cell equals '27,5'
            Assert.AreEqual(this.CheckBeethovenLine1_step_3_USumExpectedValues.UIItem275CellValueAsString, uIItem275Cell.ValueAsString, "Wrong Value");
        }
        
        /// <summary>
        /// CheckBeethovenLine1_step_4_Calculations - Use 'CheckBeethovenLine1_step_4_CalculationsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckBeethovenLine1_step_4_Calculations()
        {
            UIMapVS2017.CheckBeethovenLine1_step_4_Calculations();
        }
        
        /// <summary>
        /// CheckChopinDetailsTab_step_14 - Use 'CheckChopinDetailsTab_step_14ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckChopinDetailsTab_step_14()
        {
            #region Variable Declarations
            DXCell uIItem1182Cell = this.UIGatver65142408ASCLAvWindow.UIBankBalanceListContrCustom.UIGcBankBalancesTable.UIItem1182Cell;
            DXCell uIItem775Cell = this.UIGatver65142408ASCLAvWindow.UIBankBalanceListContrCustom.UIGcBankBalancesTable.UIItem775Cell;
            #endregion

            // Verify that the 'ValueAsString' property of '-11,82' cell equals '-11.82'
            Assert.AreEqual(this.CheckChopinDetailsTab_step_14ExpectedValues.UIItem1182CellValueAsString, uIItem1182Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '-7,75' cell equals '-7.75'
            Assert.AreEqual(this.CheckChopinDetailsTab_step_14ExpectedValues.UIItem775CellValueAsString, uIItem775Cell.ValueAsString);
        }
        
        /// <summary>
        /// CheckChopinLine3_step_12_Calculations - Use 'CheckChopinLine3_step_12_CalculationsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckChopinLine3_step_12_Calculations()
        {
            UIMapVS2017.CheckChopinLine3_step_12_Calculations();
        }

        /// <summary>
        /// CheckChopinLine3_step_12_USum_OT - Use 'CheckChopinLine3_step_12_USum_OTExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckChopinLine3_step_12_USum_OT()
        {
            #region Variable Declarations
            DXCell uIItem7Cell = this.UIArbeidsplanOmregnettWindow3.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem7Cell;
            DXCell uIItem775Cell = this.UIArbeidsplanOmregnettWindow15.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem775Cell;
            #endregion

            // Verify that the 'ValueAsString' property of '7' cell equals '7'
            Assert.AreEqual(this.CheckChopinLine3_step_12_USum_OTExpectedValues.UIItem7CellValueAsString, uIItem7Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '7,75' cell equals '7,75'
            Assert.AreEqual(this.CheckChopinLine3_step_12_USum_OTExpectedValues.UIItem775CellValueAsString, uIItem775Cell.ValueAsString);
        }
        
        /// <summary>
        /// CheckChopinLine3Week1_step_10_Calculations - Use 'CheckChopinLine3Week1_step_10_CalculationsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckChopinLine3Week1_step_10_Calculations()
        {
            UIMapVS2017.CheckChopinLine3Week1_step_10_Calculations();
        }
        
        /// <summary>
        /// CheckChopinLine3Week1_step_9_USum_OT - Use 'CheckChopinLine3Week1_step_9_USum_OTExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckChopinLine3Week1_step_9_USum_OT()
        {
            #region Variable Declarations
            DXCell uIItem3033Cell = this.UIArbeidsplanOmregnettWindow6.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem3033Cell;
            DXCell uIItem3125Cell = this.UIArbeidsplanOmregnettWindow7.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem3125Cell;
            DXCell uIItem7Cell = this.UIArbeidsplanOmregnettWindow8.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem7Cell;
            DXCell uIItem775Cell = this.UIArbeidsplanOmregnettWindow9.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem775Cell;
            DXCell uIItem1922Cell = this.UIArbeidsplanOmregnettWindow10.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem1922Cell;
            DXCell uIItem1922Cell1 = this.UIArbeidsplanOmregnettWindow11.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem1922Cell;
            DXCell uIItem1033Cell = this.UIArbeidsplanOmregnettWindow12.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem1033Cell;
            DXCell uIItem1186Cell = this.UIArbeidsplanOmregnettWindow13.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem1186Cell;
            #endregion

            // Verify that the 'ValueAsString' property of '30,33' cell equals '30,33'
            Assert.AreEqual(this.CheckChopinLine3Week1_step_9_USum_OTExpectedValues.UIItem3033CellValueAsString, uIItem3033Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '31,25' cell equals '31,25'
            Assert.AreEqual(this.CheckChopinLine3Week1_step_9_USum_OTExpectedValues.UIItem3125CellValueAsString, uIItem3125Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '7' cell equals '7'
            Assert.AreEqual(this.CheckChopinLine3Week1_step_9_USum_OTExpectedValues.UIItem7CellValueAsString, uIItem7Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '7,75' cell equals '7,75'
            Assert.AreEqual(this.CheckChopinLine3Week1_step_9_USum_OTExpectedValues.UIItem775CellValueAsString, uIItem775Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '19,22' cell equals '19,22'
            Assert.AreEqual(this.CheckChopinLine3Week1_step_9_USum_OTExpectedValues.UIItem1922CellValueAsString, uIItem1922Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '19,22' cell equals '19,22'
            Assert.AreEqual(this.CheckChopinLine3Week1_step_9_USum_OTExpectedValues.UIItem1922CellValueAsString1, uIItem1922Cell1.ValueAsString);

            // Verify that the 'ValueAsString' property of '10,33' cell equals '10,33'
            Assert.AreEqual(this.CheckChopinLine3Week1_step_9_USum_OTExpectedValues.UIItem1033CellValueAsString, uIItem1033Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '11,86' cell equals '11,86'
            Assert.AreEqual(this.CheckChopinLine3Week1_step_9_USum_OTExpectedValues.UIItem1186CellValueAsString, uIItem1186Cell.ValueAsString);
        }
        
        /// <summary>
        /// CheckExpandAllBankDetails - Use 'CheckExpandAllBankDetailsParams' to pass parameters into this method.
        /// </summary>
        public void CheckExpandAllBankDetails()
        {
            #region Variable Declarations
            DXCheckBox uICeExpandRowsCheckBox = this.UIGatver65041137ASCLAvWindow.UIBankBalanceListContrCustom.UICeExpandRowsCheckBox;
            #endregion

            // Select 'ceExpandRows' check box
            uICeExpandRowsCheckBox.Checked = this.CheckExpandAllBankDetailsParams.UICeExpandRowsCheckBoxChecked;
        }
        
        /// <summary>
        /// CheckMozartDetailsTabPhase3_step_21 - Use 'CheckMozartDetailsTabPhase3_step_21ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckMozartDetailsTabPhase3_step_21()
        {
            #region Variable Declarations
            DXCell uITimerukesumiuke1fradCell = this.UIArbeidsplanØnskeplanWindow36.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpShiftDetailsClient.UIGcShiftDetailsTable.UITimerukesumiuke1fradCell;
            DXCell uIItem10Cell = this.UIArbeidsplanØnskeplanWindow36.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpShiftDetailsClient.UIGcShiftDetailsTable.UIItem10Cell;
            DXCell uITimerukesumiuke1fradCell1 = this.UIArbeidsplanØnskeplanWindow36.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpShiftDetailsClient.UIGcShiftDetailsTable.UITimerukesumiuke1fradCell1;
            DXCell uIItem12Cell = this.UIArbeidsplanØnskeplanWindow36.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpShiftDetailsClient.UIGcShiftDetailsTable.UIItem12Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Timer ukesum i uke 1 fra denne vakten (ink faktor, uten omregnet tid)' cell equals 'Timer ukesum i uke 1 fra denne vakten (ink faktor, uten omregnet tid)'
            Assert.AreEqual(this.CheckMozartDetailsTabPhase3_step_21ExpectedValues.UITimerukesumiuke1fradCellValueAsString, uITimerukesumiuke1fradCell.ValueAsString);

            // Verify that the 'ValueAsString' property of '10' cell equals '10'
            Assert.AreEqual(this.CheckMozartDetailsTabPhase3_step_21ExpectedValues.UIItem10CellValueAsString, uIItem10Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of 'Timer ukesum i uke 1 fra denne vakten (ink faktor, omregnet tid)' cell equals 'Timer ukesum i uke 1 fra denne vakten (ink faktor, omregnet tid)'
            Assert.AreEqual(this.CheckMozartDetailsTabPhase3_step_21ExpectedValues.UITimerukesumiuke1fradCell1ValueAsString, uITimerukesumiuke1fradCell1.ValueAsString);

            // Verify that the 'ValueAsString' property of '12' cell equals '12'
            Assert.AreEqual(this.CheckMozartDetailsTabPhase3_step_21ExpectedValues.UIItem12CellValueAsString, uIItem12Cell.ValueAsString);
        }
        
        /// <summary>
        /// CheckMozartDetailsTabPhase3_step_22 - Use 'CheckMozartDetailsTabPhase3_step_22ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckMozartDetailsTabPhase3_step_22()
        {
            #region Variable Declarations
            DXCell uIFaktisklengdeomregneCell = this.UIArbeidsplanØnskeplanWindow36.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpShiftDetailsClient.UIGcShiftDetailsTable.UIFaktisklengdeomregneCell;
            DXCell uIItem12Cell = this.UIArbeidsplanØnskeplanWindow40.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpShiftDetailsClient.UIGcShiftDetailsTable.UIItem12Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Faktisk lengde omregnet tid (pause og faktor beregnet)' cell equals 'Faktisk lengde omregnet tid (pause og faktor beregnet)'
            Assert.AreEqual(this.CheckMozartDetailsTabPhase3_step_22ExpectedValues.UIFaktisklengdeomregneCellValueAsString, uIFaktisklengdeomregneCell.ValueAsString);

            // Verify that the 'ValueAsString' property of '12' cell equals '12'
            Assert.AreEqual(this.CheckMozartDetailsTabPhase3_step_22ExpectedValues.UIItem12CellValueAsString, uIItem12Cell.ValueAsString);
        }
        
        /// <summary>
        /// CheckMozartLine1_step_16_Calculations - Use 'CheckMozartLine1_step_16_CalculationsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckMozartLine1_step_16_Calculations()
        {
            UIMapVS2017.CheckMozartLine1_step_16_Calculations();
        }
        
        /// <summary>
        /// CheckMozartLine1_step_17_USum_OT - Use 'CheckMozartLine1_step_17_USum_OTExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckMozartLine1_step_17_USum_OT()
        {
            #region Variable Declarations
            DXCell uIItem47Cell = this.UIArbeidsplanØnskeplanWindow12.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem47Cell;
            DXCell uIItem4417Cell = this.UIArbeidsplanØnskeplanWindow6.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem4417Cell;
            #endregion

            // Verify that the 'ValueAsString' property of '47' cell equals '47'
            Assert.AreEqual(this.CheckMozartLine1_step_17_USum_OTExpectedValues.UIItem47CellValueAsString, uIItem47Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '44,17' cell equals '56,17'
            Assert.AreEqual(this.CheckMozartLine1_step_17_USum_OTExpectedValues.UIItem4417CellValueAsString, uIItem4417Cell.ValueAsString);
        }

        /// <summary>
        /// CheckMozartLine1_step_23_Calculations - Use 'CheckMozartLine1_step_23_CalculationsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckMozartLine1_step_23_Calculations()
        {
            UIMapVS2017.CheckMozartLine1_step_23_Calculations();
        }
        
        /// <summary>
        /// CheckMozartOmregnetTidSumPhase2_step_19 - Use 'CheckMozartOmregnetTidSumPhase2_step_19ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckMozartOmregnetTidSumPhase2_step_19()
        {
            #region Variable Declarations
            DXCell uIItem34Cell = this.UIArbeidsplanØnskeplanWindow26.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem34Cell;
            DXCell uIItem38Cell = this.UIArbeidsplanØnskeplanWindow27.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem38Cell;
            DXCell uIItem21Cell = this.UIArbeidsplanØnskeplanWindow28.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem21Cell;
            DXCell uIItem2175Cell = this.UIArbeidsplanØnskeplanWindow29.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem2175Cell;
            DXCell uIItem47Cell = this.UIArbeidsplanØnskeplanWindow30.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem47Cell;
            DXCell uIItem5625Cell = this.UIArbeidsplanØnskeplanWindow31.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem5625Cell;
            #endregion

            // Verify that the 'ValueAsString' property of '34' cell equals '34'
            Assert.AreEqual(this.CheckMozartOmregnetTidSumPhase2_step_19ExpectedValues.UIItem34CellValueAsString, uIItem34Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '38' cell equals '38'
            Assert.AreEqual(this.CheckMozartOmregnetTidSumPhase2_step_19ExpectedValues.UIItem38CellValueAsString, uIItem38Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '21' cell equals '21'
            Assert.AreEqual(this.CheckMozartOmregnetTidSumPhase2_step_19ExpectedValues.UIItem21CellValueAsString, uIItem21Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '21,75' cell equals '21,75'
            Assert.AreEqual(this.CheckMozartOmregnetTidSumPhase2_step_19ExpectedValues.UIItem2175CellValueAsString, uIItem2175Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '47' cell equals '47'
            Assert.AreEqual(this.CheckMozartOmregnetTidSumPhase2_step_19ExpectedValues.UIItem47CellValueAsString, uIItem47Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '56,25' cell equals '56,25'
            Assert.AreEqual(this.CheckMozartOmregnetTidSumPhase2_step_19ExpectedValues.UIItem5625CellValueAsString, uIItem5625Cell.ValueAsString);
        }
        
        /// <summary>
        /// CheckMozartOmregnetTidSumPhase3_step_21 - Use 'CheckMozartOmregnetTidSumPhase3_step_21ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckMozartOmregnetTidSumPhase3_step_21()
        {
            #region Variable Declarations
            DXCell uIItem34Cell = this.UIArbeidsplanØnskeplanWindow34.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem34Cell;
            DXCell uIItem38Cell = this.UIArbeidsplanØnskeplanWindow35.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem38Cell;
            #endregion

            // Verify that the 'ValueAsString' property of '34' cell equals '34'
            Assert.AreEqual(this.CheckMozartOmregnetTidSumPhase3_step_21ExpectedValues.UIItem34CellValueAsString, uIItem34Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '38' cell equals '38'
            Assert.AreEqual(this.CheckMozartOmregnetTidSumPhase3_step_21ExpectedValues.UIItem38CellValueAsString, uIItem38Cell.ValueAsString);
        }
        
        /// <summary>
        /// CheckMozartOmregnetTidSumWeek1_step_15 - Use 'CheckMozartOmregnetTidSumWeek1_step_15ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckMozartOmregnetTidSumWeek1_step_15()
        {
            #region Variable Declarations
            DXCell uIItem285Cell = this.UIArbeidsplanØnskeplanWindow2.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem285Cell;
            #endregion

            // Verify that the 'ValueAsString' property of '28,5' cell equals '28,5'
            Assert.AreEqual(this.CheckMozartOmregnetTidSumWeek1_step_15ExpectedValues.UIItem285CellValueAsString, uIItem285Cell.ValueAsString);
        }
        
        /// <summary>
        /// CheckMozartOmregnetTidSumWeek3_step_16 - Use 'CheckMozartOmregnetTidSumWeek3_step_16ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckMozartOmregnetTidSumWeek3_step_16()
        {
            #region Variable Declarations
            DXCell uIItem4417Cell = this.UIArbeidsplanØnskeplanWindow6.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem4417Cell;
            #endregion

            // Verify that the 'ValueAsString' property of '44,17' cell equals '44,17'
            Assert.AreEqual(this.CheckMozartOmregnetTidSumWeek3_step_16ExpectedValues.UIItem4417CellValueAsString, uIItem4417Cell.ValueAsString);
        }
        
        /// <summary>
        /// CheckOmregnetTidDisabled - Use 'CheckOmregnetTidDisabledExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckOmregnetTidDisabled()
        {
            #region Variable Declarations
            DXRadioButton uIRadioGroupItemRadioButton = this.UILinjeinnstillingerChWindow.UIGsPanelControl3Client.UIRgCalculatedTimeRadioGroup.UIRadioGroupItemRadioButton;
            #endregion

            // Verify that the 'Enabled' property of 'RadioGroupItem' radio button equals 'False'
            Assert.AreEqual(this.CheckOmregnetTidDisabledExpectedValues.UIRadioGroupItemRadioButtonEnabled, uIRadioGroupItemRadioButton.Enabled, "Omregnet tid not disabled");
        }

        /// <summary>
        /// CheckSchubertLine2_step_24_Calculations - Use 'CheckSchubertLine2_step_24_CalculationsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSchubertLine2_step_24_Calculations()
        {
            UIMapVS2017.CheckSchubertLine2_step_24_Calculations();
        }
        
        /// <summary>
        /// ClickEditPlan
        /// </summary>
        public void ClickEditPlan()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIRedigerRibbonBaseButtonItem = this.UIArbeidsplanOmregnettWindow1.UIRcMenuRibbon.UIRpFilterRibbonPage.UIRibbonPageGroup10RibbonPageGroup.UIRedigerRibbonBaseButtonItem;
            #endregion

            // Click 'Rediger' RibbonBaseButtonItem
            Mouse.Click(uIRedigerRibbonBaseButtonItem, new Point(34, 41));
        }
        
        /// <summary>
        /// ClickOkEdit
        /// </summary>
        public void ClickOkEdit()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIBtnOkRibbonBaseButtonItem = this.UIArbeidsplanOmregnettWindow3.UIRcMenuRibbon.UIRpFilterRibbonPage.UIRibbonPageGroup10RibbonPageGroup.UIBtnOkRibbonBaseButtonItem;
            #endregion

            // Click 'btnOk' RibbonBaseButtonItem
            Mouse.Click(uIBtnOkRibbonBaseButtonItem, new Point(28, 8));
        }
        
        /// <summary>
        /// ClickOkEditStep14
        /// </summary>
        public void ClickOkEditStep14()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIBtnOkRibbonBaseButtonItem = this.UIArbeidsplanOmregnettWindow3.UIRcMenuRibbon.UIRpFilterRibbonPage.UIRibbonPageGroup10RibbonPageGroup.UIBtnOkRibbonBaseButtonItem;
            #endregion

            // Click 'btnOk' RibbonBaseButtonItem
            Mouse.Click(uIBtnOkRibbonBaseButtonItem, new Point(33, 8));
        }
        
        /// <summary>
        /// ClickOkEditWishPlan
        /// </summary>
        public void ClickOkEditWishPlan()
        {
            UICommon.ClickRosterplanPlanTab();
            UICommon.ClickOKEditRosterPlanFromPlantab();
        }
        
        /// <summary>
        /// CloseRosterPlanWithCloseButton
        /// </summary>
        public void CloseRosterPlanWithCloseButton()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIBtnCloseRibbonBaseButtonItem = this.UIArbeidsplanOmregnettWindow1.UIRcMenuRibbon.UIRpRosterPlanRibbonPage.UIGrpCloseRibbonPageGroup.UIBtnCloseRibbonBaseButtonItem;
            #endregion

            // Click 'btnClose' RibbonBaseButtonItem
            Mouse.Click(uIBtnCloseRibbonBaseButtonItem, new Point(28, 27));
        }
        
        /// <summary>
        /// CloseRosterPlanWithXbutton
        /// </summary>
        public void CloseRosterPlanWithXbutton()
        {
            #region Variable Declarations
            DXButton uICloseButton = this.UIItemWindow3.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(19, 5));
        }
        
        /// <summary>
        /// CloseWishPlan
        /// </summary>
        public void CloseWishPlan()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIBtnCloseRibbonBaseButtonItem = this.UIArbeidsplanØnskeplanWindow.UIRcMenuRibbon.UIRpRosterPlanRibbonPage.UIGrpCloseRibbonPageGroup.UIBtnCloseRibbonBaseButtonItem;
            #endregion

            // Click 'btnClose' RibbonBaseButtonItem
            Mouse.Click(uIBtnCloseRibbonBaseButtonItem, new Point(32, 29));
        }
        
        /// <summary>
        /// EditBachLine2_step_5 - Use 'EditBachLine2_step_5Params' to pass parameters into this method.
        /// </summary>
        public void EditBachLine2_step_5()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uIBarButtonItemLink1MenuBaseButtonItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UIBarButtonItemLink1MenuBaseButtonItem;
            DXRadioGroup uIRgCalculatedTimeRadioGroup = this.UILinjeinnstillingerBaWindow.UIGsPanelControl3Client.UIRgCalculatedTimeRadioGroup;
            DXButton uIGSSimpleButtonButton = this.UILinjeinnstillingerBaWindow.UIGSPanelControlClient.UIGSSimpleButtonButton;
            #endregion

            // Right-Click 'Bach, Johann Sebastian' cell
            UIMapVS2017.RightClickBachCell();

            // Click 'BarButtonItemLink[1]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink1MenuBaseButtonItem, new Point(69, 8));

            // Type '1' in 'rgCalculatedTime' RadioGroup
            //SelectedIndex
            uIRgCalculatedTimeRadioGroup.SelectedIndex = this.EditBachLine2_step_5Params.UIRgCalculatedTimeRadioGroupSelectedIndex;

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// EditBeethovenLine1_step_2 - Use 'EditBeethovenLine1_step_2Params' to pass parameters into this method.
        /// </summary>
        public void EditBeethovenLine1_step_2()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uIBarButtonItemLink1MenuBaseButtonItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UIBarButtonItemLink1MenuBaseButtonItem;
            DXRadioGroup uIRgCalculatedTimeRadioGroup = this.UILinjeinnstillingerBeWindow.UIGsPanelControl3Client.UIRgCalculatedTimeRadioGroup;
            DXButton uIOKButton = this.UILinjeinnstillingerBeWindow.UIGsPanelControl2Client.UIOKButton;
            #endregion

            // Right-Click 'Beethoven, Ludwig Van' cell
            UIMapVS2017.RightClickBeethovenCell();

            // Click 'BarButtonItemLink[1]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink1MenuBaseButtonItem, new Point(71, 9));

            // Type '1' in 'rgCalculatedTime' RadioGroup
            //SelectedIndex
            uIRgCalculatedTimeRadioGroup.SelectedIndex = this.EditBeethovenLine1_step_2Params.UIRgCalculatedTimeRadioGroupSelectedIndex;

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// EditMozartLinePhase2UnlockEditShifts
        /// </summary>
        public void EditMozartLinePhase2UnlockEditShifts()
        {
            #region Variable Declarations
            DXCell uIItemCell = this.UIArbeidsplanØnskeplanWindow13.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell;
            DXMenuBaseButtonItem uIBarButtonItemLink6MenuBaseButtonItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UIBarButtonItemLink6MenuBaseButtonItem;
            #endregion

            // Right-Click cell
            Mouse.Click(uIItemCell, MouseButtons.Right, ModifierKeys.None, new Point(20, 8));

            // Click 'BarButtonItemLink[7]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink6MenuBaseButtonItem, new Point(118, 8));
        }
        
        /// <summary>
        /// EditMozartLineToUseOmregnetTid - Use 'EditMozartLineToUseOmregnetTidParams' to pass parameters into this method.
        /// </summary>
        public void EditMozartLineToUseOmregnetTid()
        {
            #region Variable Declarations
             DXMenuBaseButtonItem uIBarButtonItemLink1MenuBaseButtonItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UIBarButtonItemLink1MenuBaseButtonItem;
            DXRadioGroup uIRgCalculatedTimeRadioGroup = this.UILinjeinnstillingerMoWindow.UIGsPanelControl3Client.UIRgCalculatedTimeRadioGroup;
            DXButton uIGSSimpleButtonButton = this.UILinjeinnstillingerMoWindow.UIGSPanelControlClient.UIGSSimpleButtonButton;
            #endregion

            // Right-Click 'Mozart, Wolfgang Amadeus' cell Line 1
            UIMapVS2017.RightClickBeethovenCell();

            // Click 'BarButtonItemLink[1]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink1MenuBaseButtonItem, new Point(82, 9));

            // Type '1' in 'rgCalculatedTime' RadioGroup
            //SelectedIndex
            uIRgCalculatedTimeRadioGroup.SelectedIndex = this.EditMozartLineToUseOmregnetTidParams.UIRgCalculatedTimeRadioGroupSelectedIndex;

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// EditMozartLineUnlockEditShifts
        /// </summary>
        public void EditMozartLineUnlockEditShifts()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uIBarButtonItemLink5MenuBaseButtonItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UIBarButtonItemLink5MenuBaseButtonItem;
            #endregion

            //Right-Click 'Mozart, Wolfgang Amadeus' cell Line 1
            UIMapVS2017.RightClickMozartCell();

            // Click 'BarButtonItemLink[6]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink5MenuBaseButtonItem, new Point(145, 8));
        }
        
        /// <summary>
        /// EditSchubertLineToUseOmregnetTid - Use 'EditSchubertLineToUseOmregnetTidParams' to pass parameters into this method.
        /// </summary>
        public void EditSchubertLineToUseOmregnetTid()
        {
            #region Variable Declarations
           DXMenuBaseButtonItem uIBarButtonItemLink1MenuBaseButtonItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UIBarButtonItemLink1MenuBaseButtonItem;
            DXRadioGroup uIRgCalculatedTimeRadioGroup = this.UILinjeinnstillingerScWindow.UIGsPanelControl3Client.UIRgCalculatedTimeRadioGroup;
            DXButton uIGSSimpleButtonButton = this.UILinjeinnstillingerScWindow.UIGSPanelControlClient.UIGSSimpleButtonButton;
            #endregion

            // Right-Click 'Schubert, Franz' cell
            UIMapVS2017.RightClickSchubertCell();

            // Click 'BarButtonItemLink[1]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink1MenuBaseButtonItem, new Point(76, 8));

            // Type '1' in 'rgCalculatedTime' RadioGroup
            //SelectedIndex
            uIRgCalculatedTimeRadioGroup.SelectedIndex = this.EditSchubertLineToUseOmregnetTidParams.UIRgCalculatedTimeRadioGroupSelectedIndex;

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// EffectuateChopinLine3_step_14
        /// </summary>
        public void EffectuateChopinLine3_step_14()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uIBarButtonItemLink3MenuBaseButtonItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UIBarButtonItemLink3MenuBaseButtonItem;
            DXButton uIIverksett2linjerButton = this.UIIverksetteWindow.UIPnlButtonsClient.UIIverksett2linjerButton;
            DXButton uIGSSimpleButtonButton = this.UIItemWindow11.UIGSSimpleButtonButton;
            DXButton uIGSSimpleButtonButton1 = this.UIItemWindow21.UIGSPanelControlClient.UIGSSimpleButtonButton;
            DXRibbonPage uIRpRosterPlanRibbonPage = this.UIArbeidsplanOmregnettWindow1.UIRcMenuRibbon.UIRpRosterPlanRibbonPage;
            #endregion

            // Right-Click 'Chopin, Frederic' cell
            UIMapVS2017.RightClickChopinCell();

            // Click 'BarButtonItemLink[3]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink3MenuBaseButtonItem, new Point(88, 12));

            // Click 'Iverksett 2 linjer' button
            Mouse.Click(uIIverksett2linjerButton, new Point(1, 1));

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton1, new Point(1, 1));

            // Click 'rpRosterPlan' RibbonPage
            Mouse.Click(uIRpRosterPlanRibbonPage, new Point(26, 12));
        }
        
        /// <summary>
        /// EffectuateTwoLines_step_25
        /// </summary>
        public void EffectuateTwoLines_step_25()
        {
            #region Variable Declarations
            DXRibbonPage uIRpPlanRibbonPage = this.UIArbeidsplanØnskeplanWindow.UIRcMenuRibbon.UIRpPlanRibbonPage;
            DXRibbonItem uIIverksettingRibbonItem = this.UIArbeidsplanØnskeplanWindow.UIRcMenuRibbon.UIRpPlanRibbonPage.UIGrpEffectuateWishRibbonPageGroup.UIIverksettingRibbonItem;
            DXMenuBaseButtonItem uIBtnWishEffectuateMenuBaseButtonItem = this.UIItemWindow1.UISubMenuBarControlMenu.UIBtnWishEffectuateMenuBaseButtonItem;
            DXButton uIIverksett2linjerButton = this.UIIverksetteWindow.UIPnlButtonsClient.UIIverksett2linjerButton;
            DXButton uIGSSimpleButtonButton = this.UIItemWindow11.UIGSSimpleButtonButton;
            DXButton uIGSSimpleButtonButton1 = this.UIItemWindow21.UIGSPanelControlClient.UIGSSimpleButtonButton;
            DXRibbonPage uIRpRosterPlanRibbonPage = this.UIArbeidsplanØnskeplanWindow.UIRcMenuRibbon.UIRpRosterPlanRibbonPage;
            #endregion

            // Click 'rpPlan' RibbonPage
            Mouse.Click(uIRpPlanRibbonPage, new Point(22, 9));

            // Click 'Iverksetting' RibbonItem
            Mouse.Click(uIIverksettingRibbonItem, new Point(51, 9));

            // Click 'btnWishEffectuate' MenuBaseButtonItem
            Mouse.Click(uIBtnWishEffectuateMenuBaseButtonItem, new Point(114, 11));

            // Click 'Iverksett 2 linjer' button
            Mouse.Click(uIIverksett2linjerButton, new Point(1, 1));

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton1, new Point(1, 1));

            // Click 'rpRosterPlan' RibbonPage
            Mouse.Click(uIRpRosterPlanRibbonPage, new Point(23, 10));
        }
        
        /// <summary>
        /// InsertAshiftMozartTuAndThuWeek1 - Use 'InsertAshiftMozartTuAndThuWeek1Params' to pass parameters into this method.
        /// </summary>
        public void InsertAshiftMozartTuAndThuWeek1()
        {
            #region Variable Declarations
            DXCell uIDCell = this.UIArbeidsplanØnskeplanWindow1.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIDCell;
            DXGrid uIGcRosterPlanTable = this.UIArbeidsplanØnskeplanWindow1.UIPnlRosterPlanClient.UIGcRosterPlanTable;
            DXTextEdit uIRow0ColumnRosterCellEdit = this.UIArbeidsplanØnskeplanWindow1.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow0ColumnRosterCellEdit;
            DXCell uIDCell1 = this.UIArbeidsplanØnskeplanWindow1.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIDCell1;
            DXTextEdit uIRow0ColumnRosterCellEdit1 = this.UIArbeidsplanØnskeplanWindow1.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow0ColumnRosterCellEdit1;
            #endregion

            // Click 'D' cell
            Mouse.Click(uIDCell, new Point(16, 11));

            // Type 'a' in 'gcRosterPlan' table
            Keyboard.SendKeys(uIGcRosterPlanTable, this.InsertAshiftMozartTuAndThuWeek1Params.UIGcRosterPlanTableSendKeys, ModifierKeys.None);

            // Type '{Tab}' in '[Row]0[Column]RosterCell_1' text box
            Keyboard.SendKeys(uIRow0ColumnRosterCellEdit, this.InsertAshiftMozartTuAndThuWeek1Params.UIRow0ColumnRosterCellEditSendKeys, ModifierKeys.None);

            // Click 'D' cell
            Mouse.Click(uIDCell1, new Point(17, 8));

            // Type 'a' in 'gcRosterPlan' table
            Keyboard.SendKeys(uIGcRosterPlanTable, this.InsertAshiftMozartTuAndThuWeek1Params.UIGcRosterPlanTableSendKeys1, ModifierKeys.None);

            // Type '{Tab}' in '[Row]0[Column]RosterCell_4' text box
            Keyboard.SendKeys(uIRow0ColumnRosterCellEdit1, this.InsertAshiftMozartTuAndThuWeek1Params.UIRow0ColumnRosterCellEdit1SendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// InsertDshiftMozartSunWeek3 - Use 'InsertDshiftMozartSunWeek3Params' to pass parameters into this method.
        /// </summary>
        public void InsertDshiftMozartSunWeek3()
        {
            #region Variable Declarations
            DXCell uINCell = this.UIArbeidsplanØnskeplanWindow3.UIPnlRosterPlanClient.UIGcRosterPlanTable.UINCell;
            DXGrid uIGcRosterPlanTable = this.UIArbeidsplanØnskeplanWindow4.UIPnlRosterPlanClient.UIGcRosterPlanTable;
            DXTextEdit uIRow0ColumnRosterCellEdit = this.UIArbeidsplanØnskeplanWindow5.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow0ColumnRosterCellEdit;
            #endregion

            // Click 'N' cell
            Mouse.Click(uINCell, new Point(19, 10));

            // Type 'd' in 'gcRosterPlan' table
            Keyboard.SendKeys(uIGcRosterPlanTable, this.InsertDshiftMozartSunWeek3Params.UIGcRosterPlanTableSendKeys, ModifierKeys.None);

            // Type '{Tab}' in '[Row]0[Column]RosterCell_20' text box
            Keyboard.SendKeys(uIRow0ColumnRosterCellEdit, this.InsertDshiftMozartSunWeek3Params.UIRow0ColumnRosterCellEditSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// InsertNshiftMozartWedWeek3 - Use 'InsertNshiftMozartWedWeek3Params' to pass parameters into this method.
        /// </summary>
        public void InsertNshiftMozartWedWeek3()
        {
            #region Variable Declarations
            DXCell uIItemCell = this.UIArbeidsplanØnskeplanWindow9.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell;
            DXGrid uIGcRosterPlanTable = this.UIArbeidsplanØnskeplanWindow10.UIPnlRosterPlanClient.UIGcRosterPlanTable;
            DXTextEdit uIRow0ColumnRosterCellEdit = this.UIArbeidsplanØnskeplanWindow11.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow0ColumnRosterCellEdit;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell, new Point(17, 12));

            // Type 'n' in 'gcRosterPlan' table
            Keyboard.SendKeys(uIGcRosterPlanTable, this.InsertNshiftMozartWedWeek3Params.UIGcRosterPlanTableSendKeys, ModifierKeys.None);

            // Type '{Tab}' in '[Row]0[Column]RosterCell_16' text box
            Keyboard.SendKeys(uIRow0ColumnRosterCellEdit, this.InsertNshiftMozartWedWeek3Params.UIRow0ColumnRosterCellEditSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// MarkF4shift_step_22
        /// </summary>
        public void MarkF4shift_step_22()
        {
            #region Variable Declarations
            DXCell uIItemCell = this.UIArbeidsplanØnskeplanWindow37.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell, new Point(13, 11));
        }
        
        /// <summary>
        /// OpenEditLinesettingsChopin
        /// </summary>
        public void OpenEditLinesettingsChopin()
        {
            #region Variable Declarations
           DXMenuBaseButtonItem uIBarButtonItemLink1MenuBaseButtonItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UIBarButtonItemLink1MenuBaseButtonItem;
            #endregion

            // Right-Click 'Chopin, Frederic' cell
            UIMapVS2017.RightClickChopinCell();

            // Click 'BarButtonItemLink[1]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink1MenuBaseButtonItem, new Point(168, 13));
        }
        
        /// <summary>
        /// OpenMozartSaldotidDetails
        /// </summary>
        public void OpenMozartSaldotidDetails()
        {
            #region Variable Declarations
            DXButton uISaldotidButton = this.UIGatver64339666ASCLAvWindow1.UIBankBalanceListContrCustom.UIGcBankBalancesTable.UISaldotidButton;
            #endregion

            // Click 'Saldotid' button
            Mouse.Click(uISaldotidButton, new Point(4, 3));
        }
        
        /// <summary>
        /// OpenSchubertSaldotidDetails
        /// </summary>
        public void OpenSchubertSaldotidDetails()
        {
            #region Variable Declarations
            DXButton uISaldotidButton = this.UIGatver64339666ASCLAvWindow2.UIBankBalanceListContrCustom.UIGcBankBalancesTable.UISaldotidButton;
            #endregion

            // Click 'Saldotid' button
            Mouse.Click(uISaldotidButton, new Point(4, 4));
        }
        
        /// <summary>
        /// OpenWhishPlan
        /// </summary>
        public void OpenWhishPlan()
        {
            #region Variable Declarations
            DXCell uIØnskeplanforOmregnetCell = this.UIGatver65041137ASCLAvWindow1.UIPcMainPanelClient.UITcPanListsTabList.UITpWishPlanListClient.UIWishPlanListCustom.UIGsPanelControl2Client.UIGcWishPeriodsTable.UIØnskeplanforOmregnetCell;
            #endregion

            // Double-Click 'Ønskeplan for Omregnet tid Baseplan' cell
            Mouse.DoubleClick(uIØnskeplanforOmregnetCell, new Point(90, 9));
        }
        
        /// <summary>
        /// SelectDetailsTabAndMarkF3shift_step_21
        /// </summary>
        public void SelectDetailsTabAndMarkF3shift_step_21()
        {
            #region Variable Declarations
            DXCell uIItemCell = this.UIArbeidsplanØnskeplanWindow32.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell;
            #endregion

            UICommon.UIMapVS2017.SelectRosterplanSubTab(CommonUIFunctions.UIMapVS2017Classes.UIMapVS2017.RosterplanTabs.Detaljer);
            
            // Click cell
            Mouse.Click(uIItemCell, new Point(20, 11));
        }
        
        /// <summary>
        /// SelectFilterArbedeidsplanberegning
        /// </summary>
        public void SelectFilterArbedeidsplanberegning()
        {
            #region Variable Declarations
            DXRibbonPage uIRpFilterRibbonPage = this.UIArbeidsplanOmregnettWindow1.UIRcMenuRibbon.UIRpFilterRibbonPage;
            DXRibbonEditItem uIDdlCustomizeColumnsRibbonEditItem = this.UIArbeidsplanOmregnettWindow1.UIRcMenuRibbon.UIRpFilterRibbonPage.UIRpgFilterRibbonPageGroup.UIDdlCustomizeColumnsRibbonEditItem;
            DXListBoxItem uIArbeidsplanberegningListItem = this.UIArbeidsplanOmregnettWindow1.UIRcMenuRibbon.UIComboBoxEditComboBox.UIComboBoxPopupListBoxWindow.UIComboBoxPopupListBoxList.UIArbeidsplanberegningListItem;
            #endregion

            // Click 'rpFilter' RibbonPage
            Mouse.Click(uIRpFilterRibbonPage, new Point(55, 12));

            // Click 'ddlCustomizeColumns' RibbonEditItem
            Mouse.Click(uIDdlCustomizeColumnsRibbonEditItem, new Point(163, 13));

            // Click 'Arbeidsplanberegning' list item
            Mouse.Click(uIArbeidsplanberegningListItem, new Point(85, 6));
        }
        
        /// <summary>
        /// SelectMozartBank
        /// </summary>
        public void SelectMozartBank()
        {
            #region Variable Declarations
            WinClient uIAnsatteClient = this.UIGatver64339666ASCLAvWindow.UIItemWindow2.UIAnsatteClient;
            #endregion

            // Click 'Ansatte' client
            Mouse.Click(uIAnsatteClient, new Point(65, 93));
        }
        
        /// <summary>
        /// SelectSchubertBank
        /// </summary>
        public void SelectSchubertBank()
        {
            #region Variable Declarations
            WinClient uIAnsatteClient = this.UIGatver64339666ASCLAvWindow1.UIItemWindow.UIAnsatteClient;
            #endregion

            // Click 'Ansatte' client
            Mouse.Click(uIAnsatteClient, new Point(30, 112));
        }
        
        /// <summary>
        /// SelectSetWhishplanToPhase1
        /// </summary>
        public void SelectSetWhishplanToPhase1()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIEndretilfase1RibbonBaseButtonItem = this.UIGatver65041137ASCLAvWindow1.UIPcMainPanelClient.UITcPanListsTabList.UITpWishPlanListClient.UIWishPlanListCustom.UIGsPanelControl2Client.UIRibbonControl1Ribbon.UIRpHomeRibbonPage.UIRpgPeriodRibbonPageGroup.UIEndretilfase1RibbonBaseButtonItem;
            #endregion

            // Click 'Endre til fase 1' RibbonBaseButtonItem
            Mouse.Click(uIEndretilfase1RibbonBaseButtonItem, new Point(35, 10));
            UICommon.UIMapVS2017.ClickYesInChangeWishplanPhaseConfirmationWindow();
        }
        
        /// <summary>
        /// SetWhishplanInEditMode
        /// </summary>
        public void SetWhishplanInEditMode()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIRedigerRibbonBaseButtonItem = this.UIArbeidsplanØnskeplanWindow.UIRcMenuRibbon.UIRpRosterPlanRibbonPage.UIGrpEditRibbonPageGroup.UIRedigerRibbonBaseButtonItem;
            #endregion

            // Click 'Rediger' RibbonBaseButtonItem
            Mouse.Click(uIRedigerRibbonBaseButtonItem, new Point(24, 29));
        }
        
        /// <summary>
        /// SetWhishplanToPhase2
        /// </summary>
        public void SetWhishplanToPhase2()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIEndretilfase2RibbonBaseButtonItem = this.UIGatver65041137ASCLAvWindow1.UIPcMainPanelClient.UITcPanListsTabList.UITpWishPlanListClient.UIWishPlanListCustom.UIGsPanelControl2Client.UIRibbonControl1Ribbon.UIRpHomeRibbonPage.UIRpgPeriodRibbonPageGroup.UIEndretilfase2RibbonBaseButtonItem;
            #endregion

            // Click 'Endre til fase 2' RibbonBaseButtonItem
            Mouse.Click(uIEndretilfase2RibbonBaseButtonItem, new Point(37, 10));
            UICommon.UIMapVS2017.ClickYesInChangeWishplanPhaseConfirmationWindow();
        }
        
        /// <summary>
        /// SetWhishplanToPhase3
        /// </summary>
        public void SetWhishplanToPhase3()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIEndretilfase3RibbonBaseButtonItem = this.UIGatver65041137ASCLAvWindow1.UIPcMainPanelClient.UITcPanListsTabList.UITpWishPlanListClient.UIWishPlanListCustom.UIGsPanelControl2Client.UIRibbonControl1Ribbon.UIRpHomeRibbonPage.UIRpgPeriodRibbonPageGroup.UIEndretilfase3RibbonBaseButtonItem;
            #endregion

            // Click 'Endre til fase 3' RibbonBaseButtonItem
            Mouse.Click(uIEndretilfase3RibbonBaseButtonItem, new Point(40, 12));
            UICommon.UIMapVS2017.ClickYesInChangeWishplanPhaseConfirmationWindow();
        }
        
        /// <summary>
        /// ShowOtherInAbsenceWindow
        /// </summary>
        public void ShowOtherInAbsenceWindow()
        {
            #region Variable Declarations
            DXNavBarGroup uIAnnetNavBarGroup = this.UIFraværiarbeidsplanWindow.UINbcAbsenceNavBar.UIAnnetNavBarGroup;
            #endregion

            // Click 'Annet' NavBarGroup
            Mouse.Click(uIAnnetNavBarGroup, new Point(47, 19));
        }
        
        /// <summary>
        /// ShowWeeksumTotalOnly - Use 'ShowWeeksumTotalOnlyParams' to pass parameters into this method.
        /// </summary>
        public void ShowWeeksumTotalOnly()
        {
            #region Variable Declarations
            DXRibbonEditItem uIUkesumRibbonEditItem = this.UIArbeidsplanOmregnettWindow2.UIRcMenuRibbon.UIRpFilterRibbonPage.UIGrpFilterAndVisualRibbonPageGroup.UIUkesumRibbonEditItem;
            DXButton uIEditorButton0Button = this.UIArbeidsplanOmregnettWindow2.UIRcMenuRibbon.UIPopupContainerEditPopupEdit.UIEditorButton0Button;
            DXRadioGroup uIRgSumFilterRadioGroup = this.UIArbeidsplanOmregnettWindow2.UIRcMenuRibbon.UIPopupContainerEditPopupEdit.UIPopupContainerFormWindow.UIPccSumFilterClient.UIPcSumFilterClient.UIRgSumFilterRadioGroup;
            #endregion

            // Click 'Ukesum' RibbonEditItem
            Mouse.Click(uIUkesumRibbonEditItem, new Point(176, 13));

            // Click 'EditorButton0' button
            Mouse.Click(uIEditorButton0Button, new Point(8, 13));

            // Type '1' in 'rgSumFilter' RadioGroup
            //SelectedIndex
            uIRgSumFilterRadioGroup.SelectedIndex = this.ShowWeeksumTotalOnlyParams.UIRgSumFilterRadioGroupSelectedIndex;
        }
        
        #region Properties
        public virtual CheckBachLine2_step_5_USum_OTExpectedValues CheckBachLine2_step_5_USum_OTExpectedValues
        {
            get
            {
                if ((this.mCheckBachLine2_step_5_USum_OTExpectedValues == null))
                {
                    this.mCheckBachLine2_step_5_USum_OTExpectedValues = new CheckBachLine2_step_5_USum_OTExpectedValues();
                }
                return this.mCheckBachLine2_step_5_USum_OTExpectedValues;
            }
        }
        
        public virtual CheckBachLine2_step_6_CalculationsExpectedValues CheckBachLine2_step_6_CalculationsExpectedValues
        {
            get
            {
                if ((this.mCheckBachLine2_step_6_CalculationsExpectedValues == null))
                {
                    this.mCheckBachLine2_step_6_CalculationsExpectedValues = new CheckBachLine2_step_6_CalculationsExpectedValues();
                }
                return this.mCheckBachLine2_step_6_CalculationsExpectedValues;
            }
        }
        
        public virtual CheckBachLine2Week1_step_7_USum_OTExpectedValues CheckBachLine2Week1_step_7_USum_OTExpectedValues
        {
            get
            {
                if ((this.mCheckBachLine2Week1_step_7_USum_OTExpectedValues == null))
                {
                    this.mCheckBachLine2Week1_step_7_USum_OTExpectedValues = new CheckBachLine2Week1_step_7_USum_OTExpectedValues();
                }
                return this.mCheckBachLine2Week1_step_7_USum_OTExpectedValues;
            }
        }
        
        public virtual CheckBeethovenLine1_step_1ExpectedValues CheckBeethovenLine1_step_1ExpectedValues
        {
            get
            {
                if ((this.mCheckBeethovenLine1_step_1ExpectedValues == null))
                {
                    this.mCheckBeethovenLine1_step_1ExpectedValues = new CheckBeethovenLine1_step_1ExpectedValues();
                }
                return this.mCheckBeethovenLine1_step_1ExpectedValues;
            }
        }
        
        public virtual CheckBeethovenLine1_step_2ExpectedValues CheckBeethovenLine1_step_2ExpectedValues
        {
            get
            {
                if ((this.mCheckBeethovenLine1_step_2ExpectedValues == null))
                {
                    this.mCheckBeethovenLine1_step_2ExpectedValues = new CheckBeethovenLine1_step_2ExpectedValues();
                }
                return this.mCheckBeethovenLine1_step_2ExpectedValues;
            }
        }
        
        public virtual CheckBeethovenLine1_step_3_OTExpectedValues CheckBeethovenLine1_step_3_OTExpectedValues
        {
            get
            {
                if ((this.mCheckBeethovenLine1_step_3_OTExpectedValues == null))
                {
                    this.mCheckBeethovenLine1_step_3_OTExpectedValues = new CheckBeethovenLine1_step_3_OTExpectedValues();
                }
                return this.mCheckBeethovenLine1_step_3_OTExpectedValues;
            }
        }
        
        public virtual CheckBeethovenLine1_step_3_USumExpectedValues CheckBeethovenLine1_step_3_USumExpectedValues
        {
            get
            {
                if ((this.mCheckBeethovenLine1_step_3_USumExpectedValues == null))
                {
                    this.mCheckBeethovenLine1_step_3_USumExpectedValues = new CheckBeethovenLine1_step_3_USumExpectedValues();
                }
                return this.mCheckBeethovenLine1_step_3_USumExpectedValues;
            }
        }
        
        public virtual CheckBeethovenLine1_step_4_CalculationsExpectedValues CheckBeethovenLine1_step_4_CalculationsExpectedValues
        {
            get
            {
                if ((this.mCheckBeethovenLine1_step_4_CalculationsExpectedValues == null))
                {
                    this.mCheckBeethovenLine1_step_4_CalculationsExpectedValues = new CheckBeethovenLine1_step_4_CalculationsExpectedValues();
                }
                return this.mCheckBeethovenLine1_step_4_CalculationsExpectedValues;
            }
        }
        
        public virtual CheckChopinDetailsTab_step_14ExpectedValues CheckChopinDetailsTab_step_14ExpectedValues
        {
            get
            {
                if ((this.mCheckChopinDetailsTab_step_14ExpectedValues == null))
                {
                    this.mCheckChopinDetailsTab_step_14ExpectedValues = new CheckChopinDetailsTab_step_14ExpectedValues();
                }
                return this.mCheckChopinDetailsTab_step_14ExpectedValues;
            }
        }
        
        public virtual CheckChopinLine3_step_12_CalculationsExpectedValues CheckChopinLine3_step_12_CalculationsExpectedValues
        {
            get
            {
                if ((this.mCheckChopinLine3_step_12_CalculationsExpectedValues == null))
                {
                    this.mCheckChopinLine3_step_12_CalculationsExpectedValues = new CheckChopinLine3_step_12_CalculationsExpectedValues();
                }
                return this.mCheckChopinLine3_step_12_CalculationsExpectedValues;
            }
        }
        
        public virtual CheckChopinLine3_step_12_USum_OTExpectedValues CheckChopinLine3_step_12_USum_OTExpectedValues
        {
            get
            {
                if ((this.mCheckChopinLine3_step_12_USum_OTExpectedValues == null))
                {
                    this.mCheckChopinLine3_step_12_USum_OTExpectedValues = new CheckChopinLine3_step_12_USum_OTExpectedValues();
                }
                return this.mCheckChopinLine3_step_12_USum_OTExpectedValues;
            }
        }
        
        public virtual CheckChopinLine3Week1_step_10_CalculationsExpectedValues CheckChopinLine3Week1_step_10_CalculationsExpectedValues
        {
            get
            {
                if ((this.mCheckChopinLine3Week1_step_10_CalculationsExpectedValues == null))
                {
                    this.mCheckChopinLine3Week1_step_10_CalculationsExpectedValues = new CheckChopinLine3Week1_step_10_CalculationsExpectedValues();
                }
                return this.mCheckChopinLine3Week1_step_10_CalculationsExpectedValues;
            }
        }
        
        public virtual CheckChopinLine3Week1_step_9_USum_OTExpectedValues CheckChopinLine3Week1_step_9_USum_OTExpectedValues
        {
            get
            {
                if ((this.mCheckChopinLine3Week1_step_9_USum_OTExpectedValues == null))
                {
                    this.mCheckChopinLine3Week1_step_9_USum_OTExpectedValues = new CheckChopinLine3Week1_step_9_USum_OTExpectedValues();
                }
                return this.mCheckChopinLine3Week1_step_9_USum_OTExpectedValues;
            }
        }
        
        public virtual CheckExpandAllBankDetailsParams CheckExpandAllBankDetailsParams
        {
            get
            {
                if ((this.mCheckExpandAllBankDetailsParams == null))
                {
                    this.mCheckExpandAllBankDetailsParams = new CheckExpandAllBankDetailsParams();
                }
                return this.mCheckExpandAllBankDetailsParams;
            }
        }
        
        public virtual CheckMozartDetailsTabPhase3_step_21ExpectedValues CheckMozartDetailsTabPhase3_step_21ExpectedValues
        {
            get
            {
                if ((this.mCheckMozartDetailsTabPhase3_step_21ExpectedValues == null))
                {
                    this.mCheckMozartDetailsTabPhase3_step_21ExpectedValues = new CheckMozartDetailsTabPhase3_step_21ExpectedValues();
                }
                return this.mCheckMozartDetailsTabPhase3_step_21ExpectedValues;
            }
        }
        
        public virtual CheckMozartDetailsTabPhase3_step_22ExpectedValues CheckMozartDetailsTabPhase3_step_22ExpectedValues
        {
            get
            {
                if ((this.mCheckMozartDetailsTabPhase3_step_22ExpectedValues == null))
                {
                    this.mCheckMozartDetailsTabPhase3_step_22ExpectedValues = new CheckMozartDetailsTabPhase3_step_22ExpectedValues();
                }
                return this.mCheckMozartDetailsTabPhase3_step_22ExpectedValues;
            }
        }
        
        public virtual CheckMozartLine1_step_16_CalculationsExpectedValues CheckMozartLine1_step_16_CalculationsExpectedValues
        {
            get
            {
                if ((this.mCheckMozartLine1_step_16_CalculationsExpectedValues == null))
                {
                    this.mCheckMozartLine1_step_16_CalculationsExpectedValues = new CheckMozartLine1_step_16_CalculationsExpectedValues();
                }
                return this.mCheckMozartLine1_step_16_CalculationsExpectedValues;
            }
        }
        
        public virtual CheckMozartLine1_step_17_USum_OTExpectedValues CheckMozartLine1_step_17_USum_OTExpectedValues
        {
            get
            {
                if ((this.mCheckMozartLine1_step_17_USum_OTExpectedValues == null))
                {
                    this.mCheckMozartLine1_step_17_USum_OTExpectedValues = new CheckMozartLine1_step_17_USum_OTExpectedValues();
                }
                return this.mCheckMozartLine1_step_17_USum_OTExpectedValues;
            }
        }
        
        public virtual CheckMozartLine1_step_23_CalculationsExpectedValues CheckMozartLine1_step_23_CalculationsExpectedValues
        {
            get
            {
                if ((this.mCheckMozartLine1_step_23_CalculationsExpectedValues == null))
                {
                    this.mCheckMozartLine1_step_23_CalculationsExpectedValues = new CheckMozartLine1_step_23_CalculationsExpectedValues();
                }
                return this.mCheckMozartLine1_step_23_CalculationsExpectedValues;
            }
        }
        
        public virtual CheckMozartOmregnetTidSumPhase2_step_19ExpectedValues CheckMozartOmregnetTidSumPhase2_step_19ExpectedValues
        {
            get
            {
                if ((this.mCheckMozartOmregnetTidSumPhase2_step_19ExpectedValues == null))
                {
                    this.mCheckMozartOmregnetTidSumPhase2_step_19ExpectedValues = new CheckMozartOmregnetTidSumPhase2_step_19ExpectedValues();
                }
                return this.mCheckMozartOmregnetTidSumPhase2_step_19ExpectedValues;
            }
        }
        
        public virtual CheckMozartOmregnetTidSumPhase3_step_21ExpectedValues CheckMozartOmregnetTidSumPhase3_step_21ExpectedValues
        {
            get
            {
                if ((this.mCheckMozartOmregnetTidSumPhase3_step_21ExpectedValues == null))
                {
                    this.mCheckMozartOmregnetTidSumPhase3_step_21ExpectedValues = new CheckMozartOmregnetTidSumPhase3_step_21ExpectedValues();
                }
                return this.mCheckMozartOmregnetTidSumPhase3_step_21ExpectedValues;
            }
        }
        
        public virtual CheckMozartOmregnetTidSumWeek1_step_15ExpectedValues CheckMozartOmregnetTidSumWeek1_step_15ExpectedValues
        {
            get
            {
                if ((this.mCheckMozartOmregnetTidSumWeek1_step_15ExpectedValues == null))
                {
                    this.mCheckMozartOmregnetTidSumWeek1_step_15ExpectedValues = new CheckMozartOmregnetTidSumWeek1_step_15ExpectedValues();
                }
                return this.mCheckMozartOmregnetTidSumWeek1_step_15ExpectedValues;
            }
        }
        
        public virtual CheckMozartOmregnetTidSumWeek3_step_16ExpectedValues CheckMozartOmregnetTidSumWeek3_step_16ExpectedValues
        {
            get
            {
                if ((this.mCheckMozartOmregnetTidSumWeek3_step_16ExpectedValues == null))
                {
                    this.mCheckMozartOmregnetTidSumWeek3_step_16ExpectedValues = new CheckMozartOmregnetTidSumWeek3_step_16ExpectedValues();
                }
                return this.mCheckMozartOmregnetTidSumWeek3_step_16ExpectedValues;
            }
        }
        
        public virtual CheckOmregnetTidDisabledExpectedValues CheckOmregnetTidDisabledExpectedValues
        {
            get
            {
                if ((this.mCheckOmregnetTidDisabledExpectedValues == null))
                {
                    this.mCheckOmregnetTidDisabledExpectedValues = new CheckOmregnetTidDisabledExpectedValues();
                }
                return this.mCheckOmregnetTidDisabledExpectedValues;
            }
        }
        
        public virtual CheckSchubertLine2_step_24_CalculationsExpectedValues CheckSchubertLine2_step_24_CalculationsExpectedValues
        {
            get
            {
                if ((this.mCheckSchubertLine2_step_24_CalculationsExpectedValues == null))
                {
                    this.mCheckSchubertLine2_step_24_CalculationsExpectedValues = new CheckSchubertLine2_step_24_CalculationsExpectedValues();
                }
                return this.mCheckSchubertLine2_step_24_CalculationsExpectedValues;
            }
        }
        
        public virtual EditBachLine2_step_5Params EditBachLine2_step_5Params
        {
            get
            {
                if ((this.mEditBachLine2_step_5Params == null))
                {
                    this.mEditBachLine2_step_5Params = new EditBachLine2_step_5Params();
                }
                return this.mEditBachLine2_step_5Params;
            }
        }
        
        public virtual EditBeethovenLine1_step_2Params EditBeethovenLine1_step_2Params
        {
            get
            {
                if ((this.mEditBeethovenLine1_step_2Params == null))
                {
                    this.mEditBeethovenLine1_step_2Params = new EditBeethovenLine1_step_2Params();
                }
                return this.mEditBeethovenLine1_step_2Params;
            }
        }
        
        public virtual EditMozartLineToUseOmregnetTidParams EditMozartLineToUseOmregnetTidParams
        {
            get
            {
                if ((this.mEditMozartLineToUseOmregnetTidParams == null))
                {
                    this.mEditMozartLineToUseOmregnetTidParams = new EditMozartLineToUseOmregnetTidParams();
                }
                return this.mEditMozartLineToUseOmregnetTidParams;
            }
        }
        
        public virtual EditSchubertLineToUseOmregnetTidParams EditSchubertLineToUseOmregnetTidParams
        {
            get
            {
                if ((this.mEditSchubertLineToUseOmregnetTidParams == null))
                {
                    this.mEditSchubertLineToUseOmregnetTidParams = new EditSchubertLineToUseOmregnetTidParams();
                }
                return this.mEditSchubertLineToUseOmregnetTidParams;
            }
        }
        
        public virtual InsertAshiftMozartTuAndThuWeek1Params InsertAshiftMozartTuAndThuWeek1Params
        {
            get
            {
                if ((this.mInsertAshiftMozartTuAndThuWeek1Params == null))
                {
                    this.mInsertAshiftMozartTuAndThuWeek1Params = new InsertAshiftMozartTuAndThuWeek1Params();
                }
                return this.mInsertAshiftMozartTuAndThuWeek1Params;
            }
        }
        
        public virtual InsertDshiftMozartSunWeek3Params InsertDshiftMozartSunWeek3Params
        {
            get
            {
                if ((this.mInsertDshiftMozartSunWeek3Params == null))
                {
                    this.mInsertDshiftMozartSunWeek3Params = new InsertDshiftMozartSunWeek3Params();
                }
                return this.mInsertDshiftMozartSunWeek3Params;
            }
        }
        
        public virtual InsertNshiftMozartWedWeek3Params InsertNshiftMozartWedWeek3Params
        {
            get
            {
                if ((this.mInsertNshiftMozartWedWeek3Params == null))
                {
                    this.mInsertNshiftMozartWedWeek3Params = new InsertNshiftMozartWedWeek3Params();
                }
                return this.mInsertNshiftMozartWedWeek3Params;
            }
        }
        
        public virtual ShowWeeksumTotalOnlyParams ShowWeeksumTotalOnlyParams
        {
            get
            {
                if ((this.mShowWeeksumTotalOnlyParams == null))
                {
                    this.mShowWeeksumTotalOnlyParams = new ShowWeeksumTotalOnlyParams();
                }
                return this.mShowWeeksumTotalOnlyParams;
            }
        }
        
        public UIGatver64339251ASCLAvWindow UIGatver64339251ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver64339251ASCLAvWindow == null))
                {
                    this.mUIGatver64339251ASCLAvWindow = new UIGatver64339251ASCLAvWindow();
                }
                return this.mUIGatver64339251ASCLAvWindow;
            }
        }
        
        public UIRPL24006InformasjonWindow UIRPL24006InformasjonWindow
        {
            get
            {
                if ((this.mUIRPL24006InformasjonWindow == null))
                {
                    this.mUIRPL24006InformasjonWindow = new UIRPL24006InformasjonWindow();
                }
                return this.mUIRPL24006InformasjonWindow;
            }
        }
        
        public UIArbeidsplanOmregnettWindow UIArbeidsplanOmregnettWindow
        {
            get
            {
                if ((this.mUIArbeidsplanOmregnettWindow == null))
                {
                    this.mUIArbeidsplanOmregnettWindow = new UIArbeidsplanOmregnettWindow();
                }
                return this.mUIArbeidsplanOmregnettWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIArbeidsplanOmregnettWindow1 UIArbeidsplanOmregnettWindow1
        {
            get
            {
                if ((this.mUIArbeidsplanOmregnettWindow1 == null))
                {
                    this.mUIArbeidsplanOmregnettWindow1 = new UIArbeidsplanOmregnettWindow1();
                }
                return this.mUIArbeidsplanOmregnettWindow1;
            }
        }
        
        public UIItemWindow11 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow11();
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UILinjeinnstillingerBeWindow UILinjeinnstillingerBeWindow
        {
            get
            {
                if ((this.mUILinjeinnstillingerBeWindow == null))
                {
                    this.mUILinjeinnstillingerBeWindow = new UILinjeinnstillingerBeWindow();
                }
                return this.mUILinjeinnstillingerBeWindow;
            }
        }
        
        public UIArbeidsplanOmregnettWindow2 UIArbeidsplanOmregnettWindow2
        {
            get
            {
                if ((this.mUIArbeidsplanOmregnettWindow2 == null))
                {
                    this.mUIArbeidsplanOmregnettWindow2 = new UIArbeidsplanOmregnettWindow2();
                }
                return this.mUIArbeidsplanOmregnettWindow2;
            }
        }
        
        public UILinjeinnstillingerBaWindow UILinjeinnstillingerBaWindow
        {
            get
            {
                if ((this.mUILinjeinnstillingerBaWindow == null))
                {
                    this.mUILinjeinnstillingerBaWindow = new UILinjeinnstillingerBaWindow();
                }
                return this.mUILinjeinnstillingerBaWindow;
            }
        }
        
        public UIArbeidsplanOmregnettWindow3 UIArbeidsplanOmregnettWindow3
        {
            get
            {
                if ((this.mUIArbeidsplanOmregnettWindow3 == null))
                {
                    this.mUIArbeidsplanOmregnettWindow3 = new UIArbeidsplanOmregnettWindow3();
                }
                return this.mUIArbeidsplanOmregnettWindow3;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2();
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIUtjevningsvaktWindow UIUtjevningsvaktWindow
        {
            get
            {
                if ((this.mUIUtjevningsvaktWindow == null))
                {
                    this.mUIUtjevningsvaktWindow = new UIUtjevningsvaktWindow();
                }
                return this.mUIUtjevningsvaktWindow;
            }
        }
        
        public UIArbeidsplanOmregnettWindow4 UIArbeidsplanOmregnettWindow4
        {
            get
            {
                if ((this.mUIArbeidsplanOmregnettWindow4 == null))
                {
                    this.mUIArbeidsplanOmregnettWindow4 = new UIArbeidsplanOmregnettWindow4();
                }
                return this.mUIArbeidsplanOmregnettWindow4;
            }
        }
        
        public UILinjeinnstillingerChWindow UILinjeinnstillingerChWindow
        {
            get
            {
                if ((this.mUILinjeinnstillingerChWindow == null))
                {
                    this.mUILinjeinnstillingerChWindow = new UILinjeinnstillingerChWindow();
                }
                return this.mUILinjeinnstillingerChWindow;
            }
        }
        
        public UIArbeidsplanOmregnettWindow5 UIArbeidsplanOmregnettWindow5
        {
            get
            {
                if ((this.mUIArbeidsplanOmregnettWindow5 == null))
                {
                    this.mUIArbeidsplanOmregnettWindow5 = new UIArbeidsplanOmregnettWindow5();
                }
                return this.mUIArbeidsplanOmregnettWindow5;
            }
        }
        
        public UIArbeidsplanOmregnettWindow6 UIArbeidsplanOmregnettWindow6
        {
            get
            {
                if ((this.mUIArbeidsplanOmregnettWindow6 == null))
                {
                    this.mUIArbeidsplanOmregnettWindow6 = new UIArbeidsplanOmregnettWindow6();
                }
                return this.mUIArbeidsplanOmregnettWindow6;
            }
        }
        
        public UIArbeidsplanOmregnettWindow7 UIArbeidsplanOmregnettWindow7
        {
            get
            {
                if ((this.mUIArbeidsplanOmregnettWindow7 == null))
                {
                    this.mUIArbeidsplanOmregnettWindow7 = new UIArbeidsplanOmregnettWindow7();
                }
                return this.mUIArbeidsplanOmregnettWindow7;
            }
        }
        
        public UIArbeidsplanOmregnettWindow8 UIArbeidsplanOmregnettWindow8
        {
            get
            {
                if ((this.mUIArbeidsplanOmregnettWindow8 == null))
                {
                    this.mUIArbeidsplanOmregnettWindow8 = new UIArbeidsplanOmregnettWindow8();
                }
                return this.mUIArbeidsplanOmregnettWindow8;
            }
        }
        
        public UIArbeidsplanOmregnettWindow9 UIArbeidsplanOmregnettWindow9
        {
            get
            {
                if ((this.mUIArbeidsplanOmregnettWindow9 == null))
                {
                    this.mUIArbeidsplanOmregnettWindow9 = new UIArbeidsplanOmregnettWindow9();
                }
                return this.mUIArbeidsplanOmregnettWindow9;
            }
        }
        
        public UIArbeidsplanOmregnettWindow10 UIArbeidsplanOmregnettWindow10
        {
            get
            {
                if ((this.mUIArbeidsplanOmregnettWindow10 == null))
                {
                    this.mUIArbeidsplanOmregnettWindow10 = new UIArbeidsplanOmregnettWindow10();
                }
                return this.mUIArbeidsplanOmregnettWindow10;
            }
        }
        
        public UIArbeidsplanOmregnettWindow11 UIArbeidsplanOmregnettWindow11
        {
            get
            {
                if ((this.mUIArbeidsplanOmregnettWindow11 == null))
                {
                    this.mUIArbeidsplanOmregnettWindow11 = new UIArbeidsplanOmregnettWindow11();
                }
                return this.mUIArbeidsplanOmregnettWindow11;
            }
        }
        
        public UIArbeidsplanOmregnettWindow12 UIArbeidsplanOmregnettWindow12
        {
            get
            {
                if ((this.mUIArbeidsplanOmregnettWindow12 == null))
                {
                    this.mUIArbeidsplanOmregnettWindow12 = new UIArbeidsplanOmregnettWindow12();
                }
                return this.mUIArbeidsplanOmregnettWindow12;
            }
        }
        
        public UIArbeidsplanOmregnettWindow13 UIArbeidsplanOmregnettWindow13
        {
            get
            {
                if ((this.mUIArbeidsplanOmregnettWindow13 == null))
                {
                    this.mUIArbeidsplanOmregnettWindow13 = new UIArbeidsplanOmregnettWindow13();
                }
                return this.mUIArbeidsplanOmregnettWindow13;
            }
        }
        
        public UIArbeidsplanOmregnettWindow14 UIArbeidsplanOmregnettWindow14
        {
            get
            {
                if ((this.mUIArbeidsplanOmregnettWindow14 == null))
                {
                    this.mUIArbeidsplanOmregnettWindow14 = new UIArbeidsplanOmregnettWindow14();
                }
                return this.mUIArbeidsplanOmregnettWindow14;
            }
        }
        
        public UIItemWindow3 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow3();
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIGatver64339511ASCLAvWindow UIGatver64339511ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver64339511ASCLAvWindow == null))
                {
                    this.mUIGatver64339511ASCLAvWindow = new UIGatver64339511ASCLAvWindow();
                }
                return this.mUIGatver64339511ASCLAvWindow;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow UIArbeidsplanØnskeplanWindow
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow = new UIArbeidsplanØnskeplanWindow();
                }
                return this.mUIArbeidsplanØnskeplanWindow;
            }
        }
        
        public UILinjeinnstillingerMoWindow UILinjeinnstillingerMoWindow
        {
            get
            {
                if ((this.mUILinjeinnstillingerMoWindow == null))
                {
                    this.mUILinjeinnstillingerMoWindow = new UILinjeinnstillingerMoWindow();
                }
                return this.mUILinjeinnstillingerMoWindow;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow1 UIArbeidsplanØnskeplanWindow1
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow1 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow1 = new UIArbeidsplanØnskeplanWindow1();
                }
                return this.mUIArbeidsplanØnskeplanWindow1;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow2 UIArbeidsplanØnskeplanWindow2
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow2 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow2 = new UIArbeidsplanØnskeplanWindow2();
                }
                return this.mUIArbeidsplanØnskeplanWindow2;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow3 UIArbeidsplanØnskeplanWindow3
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow3 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow3 = new UIArbeidsplanØnskeplanWindow3();
                }
                return this.mUIArbeidsplanØnskeplanWindow3;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow4 UIArbeidsplanØnskeplanWindow4
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow4 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow4 = new UIArbeidsplanØnskeplanWindow4();
                }
                return this.mUIArbeidsplanØnskeplanWindow4;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow5 UIArbeidsplanØnskeplanWindow5
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow5 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow5 = new UIArbeidsplanØnskeplanWindow5();
                }
                return this.mUIArbeidsplanØnskeplanWindow5;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow6 UIArbeidsplanØnskeplanWindow6
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow6 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow6 = new UIArbeidsplanØnskeplanWindow6();
                }
                return this.mUIArbeidsplanØnskeplanWindow6;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow7 UIArbeidsplanØnskeplanWindow7
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow7 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow7 = new UIArbeidsplanØnskeplanWindow7();
                }
                return this.mUIArbeidsplanØnskeplanWindow7;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow8 UIArbeidsplanØnskeplanWindow8
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow8 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow8 = new UIArbeidsplanØnskeplanWindow8();
                }
                return this.mUIArbeidsplanØnskeplanWindow8;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow9 UIArbeidsplanØnskeplanWindow9
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow9 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow9 = new UIArbeidsplanØnskeplanWindow9();
                }
                return this.mUIArbeidsplanØnskeplanWindow9;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow10 UIArbeidsplanØnskeplanWindow10
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow10 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow10 = new UIArbeidsplanØnskeplanWindow10();
                }
                return this.mUIArbeidsplanØnskeplanWindow10;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow11 UIArbeidsplanØnskeplanWindow11
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow11 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow11 = new UIArbeidsplanØnskeplanWindow11();
                }
                return this.mUIArbeidsplanØnskeplanWindow11;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow12 UIArbeidsplanØnskeplanWindow12
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow12 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow12 = new UIArbeidsplanØnskeplanWindow12();
                }
                return this.mUIArbeidsplanØnskeplanWindow12;
            }
        }
        
        public UIGatver64339666ASCLAvWindow UIGatver64339666ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver64339666ASCLAvWindow == null))
                {
                    this.mUIGatver64339666ASCLAvWindow = new UIGatver64339666ASCLAvWindow();
                }
                return this.mUIGatver64339666ASCLAvWindow;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow13 UIArbeidsplanØnskeplanWindow13
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow13 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow13 = new UIArbeidsplanØnskeplanWindow13();
                }
                return this.mUIArbeidsplanØnskeplanWindow13;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow14 UIArbeidsplanØnskeplanWindow14
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow14 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow14 = new UIArbeidsplanØnskeplanWindow14();
                }
                return this.mUIArbeidsplanØnskeplanWindow14;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow15 UIArbeidsplanØnskeplanWindow15
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow15 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow15 = new UIArbeidsplanØnskeplanWindow15();
                }
                return this.mUIArbeidsplanØnskeplanWindow15;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow16 UIArbeidsplanØnskeplanWindow16
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow16 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow16 = new UIArbeidsplanØnskeplanWindow16();
                }
                return this.mUIArbeidsplanØnskeplanWindow16;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow17 UIArbeidsplanØnskeplanWindow17
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow17 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow17 = new UIArbeidsplanØnskeplanWindow17();
                }
                return this.mUIArbeidsplanØnskeplanWindow17;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow18 UIArbeidsplanØnskeplanWindow18
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow18 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow18 = new UIArbeidsplanØnskeplanWindow18();
                }
                return this.mUIArbeidsplanØnskeplanWindow18;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow19 UIArbeidsplanØnskeplanWindow19
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow19 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow19 = new UIArbeidsplanØnskeplanWindow19();
                }
                return this.mUIArbeidsplanØnskeplanWindow19;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow20 UIArbeidsplanØnskeplanWindow20
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow20 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow20 = new UIArbeidsplanØnskeplanWindow20();
                }
                return this.mUIArbeidsplanØnskeplanWindow20;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow21 UIArbeidsplanØnskeplanWindow21
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow21 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow21 = new UIArbeidsplanØnskeplanWindow21();
                }
                return this.mUIArbeidsplanØnskeplanWindow21;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow22 UIArbeidsplanØnskeplanWindow22
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow22 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow22 = new UIArbeidsplanØnskeplanWindow22();
                }
                return this.mUIArbeidsplanØnskeplanWindow22;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow23 UIArbeidsplanØnskeplanWindow23
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow23 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow23 = new UIArbeidsplanØnskeplanWindow23();
                }
                return this.mUIArbeidsplanØnskeplanWindow23;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow24 UIArbeidsplanØnskeplanWindow24
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow24 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow24 = new UIArbeidsplanØnskeplanWindow24();
                }
                return this.mUIArbeidsplanØnskeplanWindow24;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow25 UIArbeidsplanØnskeplanWindow25
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow25 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow25 = new UIArbeidsplanØnskeplanWindow25();
                }
                return this.mUIArbeidsplanØnskeplanWindow25;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow26 UIArbeidsplanØnskeplanWindow26
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow26 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow26 = new UIArbeidsplanØnskeplanWindow26();
                }
                return this.mUIArbeidsplanØnskeplanWindow26;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow27 UIArbeidsplanØnskeplanWindow27
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow27 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow27 = new UIArbeidsplanØnskeplanWindow27();
                }
                return this.mUIArbeidsplanØnskeplanWindow27;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow28 UIArbeidsplanØnskeplanWindow28
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow28 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow28 = new UIArbeidsplanØnskeplanWindow28();
                }
                return this.mUIArbeidsplanØnskeplanWindow28;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow29 UIArbeidsplanØnskeplanWindow29
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow29 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow29 = new UIArbeidsplanØnskeplanWindow29();
                }
                return this.mUIArbeidsplanØnskeplanWindow29;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow30 UIArbeidsplanØnskeplanWindow30
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow30 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow30 = new UIArbeidsplanØnskeplanWindow30();
                }
                return this.mUIArbeidsplanØnskeplanWindow30;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow31 UIArbeidsplanØnskeplanWindow31
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow31 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow31 = new UIArbeidsplanØnskeplanWindow31();
                }
                return this.mUIArbeidsplanØnskeplanWindow31;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow32 UIArbeidsplanØnskeplanWindow32
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow32 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow32 = new UIArbeidsplanØnskeplanWindow32();
                }
                return this.mUIArbeidsplanØnskeplanWindow32;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow33 UIArbeidsplanØnskeplanWindow33
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow33 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow33 = new UIArbeidsplanØnskeplanWindow33();
                }
                return this.mUIArbeidsplanØnskeplanWindow33;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow34 UIArbeidsplanØnskeplanWindow34
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow34 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow34 = new UIArbeidsplanØnskeplanWindow34();
                }
                return this.mUIArbeidsplanØnskeplanWindow34;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow35 UIArbeidsplanØnskeplanWindow35
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow35 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow35 = new UIArbeidsplanØnskeplanWindow35();
                }
                return this.mUIArbeidsplanØnskeplanWindow35;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow36 UIArbeidsplanØnskeplanWindow36
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow36 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow36 = new UIArbeidsplanØnskeplanWindow36();
                }
                return this.mUIArbeidsplanØnskeplanWindow36;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow37 UIArbeidsplanØnskeplanWindow37
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow37 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow37 = new UIArbeidsplanØnskeplanWindow37();
                }
                return this.mUIArbeidsplanØnskeplanWindow37;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow38 UIArbeidsplanØnskeplanWindow38
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow38 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow38 = new UIArbeidsplanØnskeplanWindow38();
                }
                return this.mUIArbeidsplanØnskeplanWindow38;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow39 UIArbeidsplanØnskeplanWindow39
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow39 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow39 = new UIArbeidsplanØnskeplanWindow39();
                }
                return this.mUIArbeidsplanØnskeplanWindow39;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow40 UIArbeidsplanØnskeplanWindow40
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow40 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow40 = new UIArbeidsplanØnskeplanWindow40();
                }
                return this.mUIArbeidsplanØnskeplanWindow40;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow41 UIArbeidsplanØnskeplanWindow41
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow41 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow41 = new UIArbeidsplanØnskeplanWindow41();
                }
                return this.mUIArbeidsplanØnskeplanWindow41;
            }
        }
        
        public UILinjeinnstillingerScWindow UILinjeinnstillingerScWindow
        {
            get
            {
                if ((this.mUILinjeinnstillingerScWindow == null))
                {
                    this.mUILinjeinnstillingerScWindow = new UILinjeinnstillingerScWindow();
                }
                return this.mUILinjeinnstillingerScWindow;
            }
        }
        
        public UIIverksetteWindow UIIverksetteWindow
        {
            get
            {
                if ((this.mUIIverksetteWindow == null))
                {
                    this.mUIIverksetteWindow = new UIIverksetteWindow();
                }
                return this.mUIIverksetteWindow;
            }
        }
        
        public UIItemWindow111 UIItemWindow11
        {
            get
            {
                if ((this.mUIItemWindow11 == null))
                {
                    this.mUIItemWindow11 = new UIItemWindow111();
                }
                return this.mUIItemWindow11;
            }
        }
        
        public UIItemWindow211 UIItemWindow21
        {
            get
            {
                if ((this.mUIItemWindow21 == null))
                {
                    this.mUIItemWindow21 = new UIItemWindow211();
                }
                return this.mUIItemWindow21;
            }
        }
        
        public UIGatver64339666ASCLAvWindow1 UIGatver64339666ASCLAvWindow1
        {
            get
            {
                if ((this.mUIGatver64339666ASCLAvWindow1 == null))
                {
                    this.mUIGatver64339666ASCLAvWindow1 = new UIGatver64339666ASCLAvWindow1();
                }
                return this.mUIGatver64339666ASCLAvWindow1;
            }
        }
        
        public UIGatver64339666ASCLAvWindow2 UIGatver64339666ASCLAvWindow2
        {
            get
            {
                if ((this.mUIGatver64339666ASCLAvWindow2 == null))
                {
                    this.mUIGatver64339666ASCLAvWindow2 = new UIGatver64339666ASCLAvWindow2();
                }
                return this.mUIGatver64339666ASCLAvWindow2;
            }
        }
        
        public UIGT4000BekreftWindow UIGT4000BekreftWindow
        {
            get
            {
                if ((this.mUIGT4000BekreftWindow == null))
                {
                    this.mUIGT4000BekreftWindow = new UIGT4000BekreftWindow();
                }
                return this.mUIGT4000BekreftWindow;
            }
        }
        
        public UIFraværiarbeidsplanWindow UIFraværiarbeidsplanWindow
        {
            get
            {
                if ((this.mUIFraværiarbeidsplanWindow == null))
                {
                    this.mUIFraværiarbeidsplanWindow = new UIFraværiarbeidsplanWindow();
                }
                return this.mUIFraværiarbeidsplanWindow;
            }
        }
        
        public UIItemWindow121 UIItemWindow12
        {
            get
            {
                if ((this.mUIItemWindow12 == null))
                {
                    this.mUIItemWindow12 = new UIItemWindow121();
                }
                return this.mUIItemWindow12;
            }
        }
        
        public UIFraværiarbeidsplanWindow1 UIFraværiarbeidsplanWindow1
        {
            get
            {
                if ((this.mUIFraværiarbeidsplanWindow1 == null))
                {
                    this.mUIFraværiarbeidsplanWindow1 = new UIFraværiarbeidsplanWindow1();
                }
                return this.mUIFraværiarbeidsplanWindow1;
            }
        }
        
        public UIArbeidsplanOmregnettWindow15 UIArbeidsplanOmregnettWindow15
        {
            get
            {
                if ((this.mUIArbeidsplanOmregnettWindow15 == null))
                {
                    this.mUIArbeidsplanOmregnettWindow15 = new UIArbeidsplanOmregnettWindow15();
                }
                return this.mUIArbeidsplanOmregnettWindow15;
            }
        }
        
        public UIGatver64339716ASCLAvWindow UIGatver64339716ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver64339716ASCLAvWindow == null))
                {
                    this.mUIGatver64339716ASCLAvWindow = new UIGatver64339716ASCLAvWindow();
                }
                return this.mUIGatver64339716ASCLAvWindow;
            }
        }
        
        public UIGatver64339716ASCLAvWindow1 UIGatver64339716ASCLAvWindow1
        {
            get
            {
                if ((this.mUIGatver64339716ASCLAvWindow1 == null))
                {
                    this.mUIGatver64339716ASCLAvWindow1 = new UIGatver64339716ASCLAvWindow1();
                }
                return this.mUIGatver64339716ASCLAvWindow1;
            }
        }
        
        public UIGatver65041137ASCLAvWindow UIGatver65041137ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver65041137ASCLAvWindow == null))
                {
                    this.mUIGatver65041137ASCLAvWindow = new UIGatver65041137ASCLAvWindow();
                }
                return this.mUIGatver65041137ASCLAvWindow;
            }
        }
        
        public UIGatver65041137ASCLAvWindow1 UIGatver65041137ASCLAvWindow1
        {
            get
            {
                if ((this.mUIGatver65041137ASCLAvWindow1 == null))
                {
                    this.mUIGatver65041137ASCLAvWindow1 = new UIGatver65041137ASCLAvWindow1();
                }
                return this.mUIGatver65041137ASCLAvWindow1;
            }
        }
        
        public UIArbeidsplanØnskeplanWindow42 UIArbeidsplanØnskeplanWindow42
        {
            get
            {
                if ((this.mUIArbeidsplanØnskeplanWindow42 == null))
                {
                    this.mUIArbeidsplanØnskeplanWindow42 = new UIArbeidsplanØnskeplanWindow42();
                }
                return this.mUIArbeidsplanØnskeplanWindow42;
            }
        }
        
        public UIGatver65142408ASCLAvWindow UIGatver65142408ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver65142408ASCLAvWindow == null))
                {
                    this.mUIGatver65142408ASCLAvWindow = new UIGatver65142408ASCLAvWindow();
                }
                return this.mUIGatver65142408ASCLAvWindow;
            }
        }
        #endregion
        
        #region Fields
        private CheckBachLine2_step_5_USum_OTExpectedValues mCheckBachLine2_step_5_USum_OTExpectedValues;
        
        private CheckBachLine2_step_6_CalculationsExpectedValues mCheckBachLine2_step_6_CalculationsExpectedValues;
        
        private CheckBachLine2Week1_step_7_USum_OTExpectedValues mCheckBachLine2Week1_step_7_USum_OTExpectedValues;
        
        private CheckBeethovenLine1_step_1ExpectedValues mCheckBeethovenLine1_step_1ExpectedValues;
        
        private CheckBeethovenLine1_step_2ExpectedValues mCheckBeethovenLine1_step_2ExpectedValues;
        
        private CheckBeethovenLine1_step_3_OTExpectedValues mCheckBeethovenLine1_step_3_OTExpectedValues;
        
        private CheckBeethovenLine1_step_3_USumExpectedValues mCheckBeethovenLine1_step_3_USumExpectedValues;
        
        private CheckBeethovenLine1_step_4_CalculationsExpectedValues mCheckBeethovenLine1_step_4_CalculationsExpectedValues;
        
        private CheckChopinDetailsTab_step_14ExpectedValues mCheckChopinDetailsTab_step_14ExpectedValues;
        
        private CheckChopinLine3_step_12_CalculationsExpectedValues mCheckChopinLine3_step_12_CalculationsExpectedValues;
        
        private CheckChopinLine3_step_12_USum_OTExpectedValues mCheckChopinLine3_step_12_USum_OTExpectedValues;
        
        private CheckChopinLine3Week1_step_10_CalculationsExpectedValues mCheckChopinLine3Week1_step_10_CalculationsExpectedValues;
        
        private CheckChopinLine3Week1_step_9_USum_OTExpectedValues mCheckChopinLine3Week1_step_9_USum_OTExpectedValues;
        
        private CheckExpandAllBankDetailsParams mCheckExpandAllBankDetailsParams;
        
        private CheckMozartDetailsTabPhase3_step_21ExpectedValues mCheckMozartDetailsTabPhase3_step_21ExpectedValues;
        
        private CheckMozartDetailsTabPhase3_step_22ExpectedValues mCheckMozartDetailsTabPhase3_step_22ExpectedValues;
        
        private CheckMozartLine1_step_16_CalculationsExpectedValues mCheckMozartLine1_step_16_CalculationsExpectedValues;
        
        private CheckMozartLine1_step_17_USum_OTExpectedValues mCheckMozartLine1_step_17_USum_OTExpectedValues;
        
        private CheckMozartLine1_step_23_CalculationsExpectedValues mCheckMozartLine1_step_23_CalculationsExpectedValues;
        
        private CheckMozartOmregnetTidSumPhase2_step_19ExpectedValues mCheckMozartOmregnetTidSumPhase2_step_19ExpectedValues;
        
        private CheckMozartOmregnetTidSumPhase3_step_21ExpectedValues mCheckMozartOmregnetTidSumPhase3_step_21ExpectedValues;
        
        private CheckMozartOmregnetTidSumWeek1_step_15ExpectedValues mCheckMozartOmregnetTidSumWeek1_step_15ExpectedValues;
        
        private CheckMozartOmregnetTidSumWeek3_step_16ExpectedValues mCheckMozartOmregnetTidSumWeek3_step_16ExpectedValues;
        
        private CheckOmregnetTidDisabledExpectedValues mCheckOmregnetTidDisabledExpectedValues;
        
        private CheckSchubertLine2_step_24_CalculationsExpectedValues mCheckSchubertLine2_step_24_CalculationsExpectedValues;
        
        private EditBachLine2_step_5Params mEditBachLine2_step_5Params;
        
        private EditBeethovenLine1_step_2Params mEditBeethovenLine1_step_2Params;
        
        private EditMozartLineToUseOmregnetTidParams mEditMozartLineToUseOmregnetTidParams;
        
        private EditSchubertLineToUseOmregnetTidParams mEditSchubertLineToUseOmregnetTidParams;
        
        private InsertAshiftMozartTuAndThuWeek1Params mInsertAshiftMozartTuAndThuWeek1Params;
        
        private InsertDshiftMozartSunWeek3Params mInsertDshiftMozartSunWeek3Params;
        
        private InsertNshiftMozartWedWeek3Params mInsertNshiftMozartWedWeek3Params;
        
        private ShowWeeksumTotalOnlyParams mShowWeeksumTotalOnlyParams;
        
        private UIGatver64339251ASCLAvWindow mUIGatver64339251ASCLAvWindow;
        
        private UIRPL24006InformasjonWindow mUIRPL24006InformasjonWindow;
        
        private UIArbeidsplanOmregnettWindow mUIArbeidsplanOmregnettWindow;
        
        private UIItemWindow1 mUIItemWindow;
        
        private UIArbeidsplanOmregnettWindow1 mUIArbeidsplanOmregnettWindow1;
        
        private UIItemWindow11 mUIItemWindow1;
        
        private UILinjeinnstillingerBeWindow mUILinjeinnstillingerBeWindow;
        
        private UIArbeidsplanOmregnettWindow2 mUIArbeidsplanOmregnettWindow2;
        
        private UILinjeinnstillingerBaWindow mUILinjeinnstillingerBaWindow;
        
        private UIArbeidsplanOmregnettWindow3 mUIArbeidsplanOmregnettWindow3;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIUtjevningsvaktWindow mUIUtjevningsvaktWindow;
        
        private UIArbeidsplanOmregnettWindow4 mUIArbeidsplanOmregnettWindow4;
        
        private UILinjeinnstillingerChWindow mUILinjeinnstillingerChWindow;
        
        private UIArbeidsplanOmregnettWindow5 mUIArbeidsplanOmregnettWindow5;
        
        private UIArbeidsplanOmregnettWindow6 mUIArbeidsplanOmregnettWindow6;
        
        private UIArbeidsplanOmregnettWindow7 mUIArbeidsplanOmregnettWindow7;
        
        private UIArbeidsplanOmregnettWindow8 mUIArbeidsplanOmregnettWindow8;
        
        private UIArbeidsplanOmregnettWindow9 mUIArbeidsplanOmregnettWindow9;
        
        private UIArbeidsplanOmregnettWindow10 mUIArbeidsplanOmregnettWindow10;
        
        private UIArbeidsplanOmregnettWindow11 mUIArbeidsplanOmregnettWindow11;
        
        private UIArbeidsplanOmregnettWindow12 mUIArbeidsplanOmregnettWindow12;
        
        private UIArbeidsplanOmregnettWindow13 mUIArbeidsplanOmregnettWindow13;
        
        private UIArbeidsplanOmregnettWindow14 mUIArbeidsplanOmregnettWindow14;
        
        private UIItemWindow3 mUIItemWindow3;
        
        private UIGatver64339511ASCLAvWindow mUIGatver64339511ASCLAvWindow;
        
        private UIArbeidsplanØnskeplanWindow mUIArbeidsplanØnskeplanWindow;
        
        private UILinjeinnstillingerMoWindow mUILinjeinnstillingerMoWindow;
        
        private UIArbeidsplanØnskeplanWindow1 mUIArbeidsplanØnskeplanWindow1;
        
        private UIArbeidsplanØnskeplanWindow2 mUIArbeidsplanØnskeplanWindow2;
        
        private UIArbeidsplanØnskeplanWindow3 mUIArbeidsplanØnskeplanWindow3;
        
        private UIArbeidsplanØnskeplanWindow4 mUIArbeidsplanØnskeplanWindow4;
        
        private UIArbeidsplanØnskeplanWindow5 mUIArbeidsplanØnskeplanWindow5;
        
        private UIArbeidsplanØnskeplanWindow6 mUIArbeidsplanØnskeplanWindow6;
        
        private UIArbeidsplanØnskeplanWindow7 mUIArbeidsplanØnskeplanWindow7;
        
        private UIArbeidsplanØnskeplanWindow8 mUIArbeidsplanØnskeplanWindow8;
        
        private UIArbeidsplanØnskeplanWindow9 mUIArbeidsplanØnskeplanWindow9;
        
        private UIArbeidsplanØnskeplanWindow10 mUIArbeidsplanØnskeplanWindow10;
        
        private UIArbeidsplanØnskeplanWindow11 mUIArbeidsplanØnskeplanWindow11;
        
        private UIArbeidsplanØnskeplanWindow12 mUIArbeidsplanØnskeplanWindow12;
        
        private UIGatver64339666ASCLAvWindow mUIGatver64339666ASCLAvWindow;
        
        private UIArbeidsplanØnskeplanWindow13 mUIArbeidsplanØnskeplanWindow13;
        
        private UIArbeidsplanØnskeplanWindow14 mUIArbeidsplanØnskeplanWindow14;
        
        private UIArbeidsplanØnskeplanWindow15 mUIArbeidsplanØnskeplanWindow15;
        
        private UIArbeidsplanØnskeplanWindow16 mUIArbeidsplanØnskeplanWindow16;
        
        private UIArbeidsplanØnskeplanWindow17 mUIArbeidsplanØnskeplanWindow17;
        
        private UIArbeidsplanØnskeplanWindow18 mUIArbeidsplanØnskeplanWindow18;
        
        private UIArbeidsplanØnskeplanWindow19 mUIArbeidsplanØnskeplanWindow19;
        
        private UIArbeidsplanØnskeplanWindow20 mUIArbeidsplanØnskeplanWindow20;
        
        private UIArbeidsplanØnskeplanWindow21 mUIArbeidsplanØnskeplanWindow21;
        
        private UIArbeidsplanØnskeplanWindow22 mUIArbeidsplanØnskeplanWindow22;
        
        private UIArbeidsplanØnskeplanWindow23 mUIArbeidsplanØnskeplanWindow23;
        
        private UIArbeidsplanØnskeplanWindow24 mUIArbeidsplanØnskeplanWindow24;
        
        private UIArbeidsplanØnskeplanWindow25 mUIArbeidsplanØnskeplanWindow25;
        
        private UIArbeidsplanØnskeplanWindow26 mUIArbeidsplanØnskeplanWindow26;
        
        private UIArbeidsplanØnskeplanWindow27 mUIArbeidsplanØnskeplanWindow27;
        
        private UIArbeidsplanØnskeplanWindow28 mUIArbeidsplanØnskeplanWindow28;
        
        private UIArbeidsplanØnskeplanWindow29 mUIArbeidsplanØnskeplanWindow29;
        
        private UIArbeidsplanØnskeplanWindow30 mUIArbeidsplanØnskeplanWindow30;
        
        private UIArbeidsplanØnskeplanWindow31 mUIArbeidsplanØnskeplanWindow31;
        
        private UIArbeidsplanØnskeplanWindow32 mUIArbeidsplanØnskeplanWindow32;
        
        private UIArbeidsplanØnskeplanWindow33 mUIArbeidsplanØnskeplanWindow33;
        
        private UIArbeidsplanØnskeplanWindow34 mUIArbeidsplanØnskeplanWindow34;
        
        private UIArbeidsplanØnskeplanWindow35 mUIArbeidsplanØnskeplanWindow35;
        
        private UIArbeidsplanØnskeplanWindow36 mUIArbeidsplanØnskeplanWindow36;
        
        private UIArbeidsplanØnskeplanWindow37 mUIArbeidsplanØnskeplanWindow37;
        
        private UIArbeidsplanØnskeplanWindow38 mUIArbeidsplanØnskeplanWindow38;
        
        private UIArbeidsplanØnskeplanWindow39 mUIArbeidsplanØnskeplanWindow39;
        
        private UIArbeidsplanØnskeplanWindow40 mUIArbeidsplanØnskeplanWindow40;
        
        private UIArbeidsplanØnskeplanWindow41 mUIArbeidsplanØnskeplanWindow41;
        
        private UILinjeinnstillingerScWindow mUILinjeinnstillingerScWindow;
        
        private UIIverksetteWindow mUIIverksetteWindow;
        
        private UIItemWindow111 mUIItemWindow11;
        
        private UIItemWindow211 mUIItemWindow21;
        
        private UIGatver64339666ASCLAvWindow1 mUIGatver64339666ASCLAvWindow1;
        
        private UIGatver64339666ASCLAvWindow2 mUIGatver64339666ASCLAvWindow2;
        
        private UIGT4000BekreftWindow mUIGT4000BekreftWindow;
        
        private UIFraværiarbeidsplanWindow mUIFraværiarbeidsplanWindow;
        
        private UIItemWindow121 mUIItemWindow12;
        
        private UIFraværiarbeidsplanWindow1 mUIFraværiarbeidsplanWindow1;
        
        private UIArbeidsplanOmregnettWindow15 mUIArbeidsplanOmregnettWindow15;
        
        private UIGatver64339716ASCLAvWindow mUIGatver64339716ASCLAvWindow;
        
        private UIGatver64339716ASCLAvWindow1 mUIGatver64339716ASCLAvWindow1;
        
        private UIGatver65041137ASCLAvWindow mUIGatver65041137ASCLAvWindow;
        
        private UIGatver65041137ASCLAvWindow1 mUIGatver65041137ASCLAvWindow1;
        
        private UIArbeidsplanØnskeplanWindow42 mUIArbeidsplanØnskeplanWindow42;
        
        private UIGatver65142408ASCLAvWindow mUIGatver65142408ASCLAvWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckBachLine2_step_5_USum_OT'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckBachLine2_step_5_USum_OTExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '36,37' cell equals '36,37'
        /// </summary>
        public string UIItem3637CellValueAsString = "36,37";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '36,87' cell equals '36,87'
        /// </summary>
        public string UIItem3687CellValueAsString = "36,87";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '48,37' cell equals '48,37'
        /// </summary>
        public string UIItem4837CellValueAsString = "48,37";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '56,7' cell equals '56,7'
        /// </summary>
        public string UIItem567CellValueAsString = "56,7";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '30,74' cell equals '30,74'
        /// </summary>
        public string UIItem3074CellValueAsString = "30,74";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '30,99' cell equals '30,99'
        /// </summary>
        public string UIItem3099CellValueAsString = "30,99";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '26,75' cell equals '26,75'
        /// </summary>
        public string UIItem2675CellValueAsString = "26,75";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '30,94' cell equals '30,94'
        /// </summary>
        public string UIItem3094CellValueAsString = "30,94";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckBachLine2_step_6_Calculations'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckBachLine2_step_6_CalculationsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '35,5' cell equals '35,5'
        /// </summary>
        public string UIItem355CellValueAsString = "35,5";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '35,56' cell equals '35,56'
        /// </summary>
        public string UIItem3556CellValueAsString = "35,56";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '142' cell equals '142'
        /// </summary>
        public string UIItem142CellValueAsString = "142";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '142,23' cell equals '142,23'
        /// </summary>
        public string UIItem14223CellValueAsString = "142,23";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '155,5' cell equals '155,5'
        /// </summary>
        public string UIItem1555CellValueAsString = "155,5";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '38,88' cell equals '38,88'
        /// </summary>
        public string UIItem3888CellValueAsString = "38,88";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '-5,5' cell equals '-5,5'
        /// </summary>
        public string UIItem55CellValueAsString = "-5,5";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '-' cell equals '-'
        /// </summary>
        public string UIItemCellValueAsString = "-";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '100,16%' cell equals '100,16%'
        /// </summary>
        public string UIItem10016CellValueAsString = "100,16%";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckBachLine2Week1_step_7_USum_OT'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckBachLine2Week1_step_7_USum_OTExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '30,98' cell equals '30,98'
        /// </summary>
        public string UIItem3098CellValueAsString = "30,98";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '31,98' cell equals '31,98'
        /// </summary>
        public string UIItem3198CellValueAsString = "31,98";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckBeethovenLine1_step_1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckBeethovenLine1_step_1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '-' cell equals '-'
        /// </summary>
        public string UIItemCellValueAsString = "-";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '-' cell equals '-'
        /// </summary>
        public string UIItemCell1ValueAsString = "-";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals ''
        /// </summary>
        public string UIItemCell2ValueAsString = "";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '-' cell equals '-'
        /// </summary>
        public string UIItemCell3ValueAsString = "-";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0CellValueAsString = "0";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0Cell1ValueAsString = "0";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0Cell2ValueAsString = "0";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0Cell3ValueAsString = "0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckBeethovenLine1_step_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckBeethovenLine1_step_2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '147,96' cell equals '147,96'
        /// </summary>
        public string UIItem14796CellValueAsString = "147,96";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '36,99' cell equals '36,99'
        /// </summary>
        public string UIItem3699CellValueAsString = "36,99";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '2,04' cell equals '2,04'
        /// </summary>
        public string UIItem204CellValueAsString = "2,04";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckBeethovenLine1_step_3_OT'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckBeethovenLine1_step_3_OTExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '29,5' cell equals '29,5'
        /// </summary>
        public string UIItem295CellValueAsString = "29,5";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '56,33' cell equals '56,33'
        /// </summary>
        public string UIItem5633CellValueAsString = "56,33";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '30,25' cell equals '30,25'
        /// </summary>
        public string UIItem3025CellValueAsString = "30,25";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '31,88' cell equals '31,88'
        /// </summary>
        public string UIItem3188CellValueAsString = "31,88";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckBeethovenLine1_step_3_USum'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckBeethovenLine1_step_3_USumExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '29' cell equals '29'
        /// </summary>
        public string UIItem29CellValueAsString = "29";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '48' cell equals '48'
        /// </summary>
        public string UIItem48CellValueAsString = "48";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '30' cell equals '30'
        /// </summary>
        public string UIItem30CellValueAsString = "30";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '27,5' cell equals '27,5'
        /// </summary>
        public string UIItem275CellValueAsString = "27,5";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckBeethovenLine1_step_4_Calculations'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckBeethovenLine1_step_4_CalculationsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '35,5' cell equals '35,5'
        /// </summary>
        public string UIItem355CellValueAsString = "35,5";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '33,63' cell equals '33,63'
        /// </summary>
        public string UIItem3363CellValueAsString = "33,63";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '142' cell equals '142'
        /// </summary>
        public string UIItem142CellValueAsString = "142";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '134,5' cell equals '134,5'
        /// </summary>
        public string UIItem1345CellValueAsString = "134,5";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '147,96' cell equals '147,96'
        /// </summary>
        public string UIItem14796CellValueAsString = "147,96";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '36,99' cell equals '36,99'
        /// </summary>
        public string UIItem3699CellValueAsString = "36,99";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '2,04' cell equals '2,04'
        /// </summary>
        public string UIItem204CellValueAsString = "2,04";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '94,72%' cell equals '94,72%'
        /// </summary>
        public string UIItem9472CellValueAsString = "94,72%";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckChopinDetailsTab_step_14'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckChopinDetailsTab_step_14ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '-11,82' cell equals '-11.82'
        /// </summary>
        public string UIItem1182CellValueAsString = "-11.82";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '-7,75' cell equals '-7.75'
        /// </summary>
        public string UIItem775CellValueAsString = "-7.75";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckChopinLine3_step_12_Calculations'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckChopinLine3_step_12_CalculationsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '17' cell equals '17'
        /// </summary>
        public string UIItem17CellValueAsString = "17";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '68' cell equals '68'
        /// </summary>
        public string UIItem68CellValueAsString = "68";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '71,19' cell equals '71,19'
        /// </summary>
        public string UIItem7119CellValueAsString = "71,19";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '17,8' cell equals '17,8'
        /// </summary>
        public string UIItem178CellValueAsString = "17,8";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '78,81' cell equals '78,81'
        /// </summary>
        public string UIItem7881CellValueAsString = "78,81";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckChopinLine3_step_12_USum_OT'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckChopinLine3_step_12_USum_OTExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '7' cell equals '7'
        /// </summary>
        public string UIItem7CellValueAsString = "7";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '7,75' cell equals '7,75'
        /// </summary>
        public string UIItem775CellValueAsString = "7,75";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckChopinLine3Week1_step_10_Calculations'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckChopinLine3Week1_step_10_CalculationsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '35,5' cell equals '35,5'
        /// </summary>
        public string UIItem355CellValueAsString = "35,5";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '16,72' cell equals '16,72'
        /// </summary>
        public string UIItem1672CellValueAsString = "16,72";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '142' cell equals '142'
        /// </summary>
        public string UIItem142CellValueAsString = "142";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '66,89' cell equals '66,89'
        /// </summary>
        public string UIItem6689CellValueAsString = "66,89";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '70,08' cell equals '70,08'
        /// </summary>
        public string UIItem7008CellValueAsString = "70,08";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '17,52' cell equals '17,52'
        /// </summary>
        public string UIItem1752CellValueAsString = "17,52";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '-' cell equals '-'
        /// </summary>
        public string UIItemCellValueAsString = "-";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '79,92' cell equals '79,92'
        /// </summary>
        public string UIItem7992CellValueAsString = "79,92";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '47,1%' cell equals '47,1%'
        /// </summary>
        public string UIItem471CellValueAsString = "47,1%";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckChopinLine3Week1_step_9_USum_OT'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckChopinLine3Week1_step_9_USum_OTExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '30,33' cell equals '30,33'
        /// </summary>
        public string UIItem3033CellValueAsString = "30,33";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '31,25' cell equals '31,25'
        /// </summary>
        public string UIItem3125CellValueAsString = "31,25";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '7' cell equals '7'
        /// </summary>
        public string UIItem7CellValueAsString = "7";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '7,75' cell equals '7,75'
        /// </summary>
        public string UIItem775CellValueAsString = "7,75";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '19,22' cell equals '19,22'
        /// </summary>
        public string UIItem1922CellValueAsString = "19,22";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '19,22' cell equals '19,22'
        /// </summary>
        public string UIItem1922CellValueAsString1 = "19,22";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '10,33' cell equals '10,33'
        /// </summary>
        public string UIItem1033CellValueAsString = "10,33";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '11,86' cell equals '11,86'
        /// </summary>
        public string UIItem1186CellValueAsString = "11,86";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckExpandAllBankDetails'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckExpandAllBankDetailsParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'ceExpandRows' check box
        /// </summary>
        public bool UICeExpandRowsCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckMozartDetailsTabPhase3_step_21'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckMozartDetailsTabPhase3_step_21ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Timer ukesum i uke 1 fra denne vakten (ink faktor, uten omregnet tid)' cell equals 'Timer ukesum i uke 1 fra denne vakten (ink faktor, uten omregnet tid)'
        /// </summary>
        public string UITimerukesumiuke1fradCellValueAsString = "Timer ukesum i uke 1 fra denne vakten (ink faktor, uten omregnet tid)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '10' cell equals '10'
        /// </summary>
        public string UIItem10CellValueAsString = "10";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Timer ukesum i uke 1 fra denne vakten (ink faktor, omregnet tid)' cell equals 'Timer ukesum i uke 1 fra denne vakten (ink faktor, omregnet tid)'
        /// </summary>
        public string UITimerukesumiuke1fradCell1ValueAsString = "Timer ukesum i uke 1 fra denne vakten (ink faktor, omregnet tid)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '12' cell equals '12'
        /// </summary>
        public string UIItem12CellValueAsString = "12";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckMozartDetailsTabPhase3_step_22'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckMozartDetailsTabPhase3_step_22ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Faktisk lengde omregnet tid (pause og faktor beregnet)' cell equals 'Faktisk lengde omregnet tid (pause og faktor beregnet)'
        /// </summary>
        public string UIFaktisklengdeomregneCellValueAsString = "Faktisk lengde omregnet tid (pause og faktor beregnet)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '12' cell equals '12'
        /// </summary>
        public string UIItem12CellValueAsString = "12";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckMozartLine1_step_16_Calculations'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckMozartLine1_step_16_CalculationsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '101,67' cell equals '101,67'
        /// </summary>
        public string UIItem10167CellValueAsString = "101,67";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '10,83' cell equals '10,83'
        /// </summary>
        public string UIItem1083CellValueAsString = "10,83";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckMozartLine1_step_17_USum_OT'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckMozartLine1_step_17_USum_OTExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '47' cell equals '47'
        /// </summary>
        public string UIItem47CellValueAsString = "47";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '44,17' cell equals '56,17'
        /// </summary>
        public string UIItem4417CellValueAsString = "56,17";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckMozartLine1_step_23_Calculations'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckMozartLine1_step_23_CalculationsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '38,67' cell equals '38,67'
        /// </summary>
        public string UIItem3867CellValueAsString = "38,67";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '-4,5' cell equals '-4,5'
        /// </summary>
        public string UIItem45CellValueAsString = "-4,5";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '95,77%' cell equals '95,77%'
        /// </summary>
        public string UIItem9577CellValueAsString = "95,77%";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0,96' cell equals '0,96'
        /// </summary>
        public string UIItem096CellValueAsString = "0,96";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '5,46' cell equals '5,46'
        /// </summary>
        public string UIItem546CellValueAsString = "5,46";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckMozartOmregnetTidSumPhase2_step_19'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckMozartOmregnetTidSumPhase2_step_19ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '34' cell equals '34'
        /// </summary>
        public string UIItem34CellValueAsString = "34";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '38' cell equals '38'
        /// </summary>
        public string UIItem38CellValueAsString = "38";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '21' cell equals '21'
        /// </summary>
        public string UIItem21CellValueAsString = "21";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '21,75' cell equals '21,75'
        /// </summary>
        public string UIItem2175CellValueAsString = "21,75";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '47' cell equals '47'
        /// </summary>
        public string UIItem47CellValueAsString = "47";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '56,25' cell equals '56,25'
        /// </summary>
        public string UIItem5625CellValueAsString = "56,25";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckMozartOmregnetTidSumPhase3_step_21'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckMozartOmregnetTidSumPhase3_step_21ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '34' cell equals '34'
        /// </summary>
        public string UIItem34CellValueAsString = "34";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '38' cell equals '38'
        /// </summary>
        public string UIItem38CellValueAsString = "38";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckMozartOmregnetTidSumWeek1_step_15'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckMozartOmregnetTidSumWeek1_step_15ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '28,5' cell equals '28,5'
        /// </summary>
        public string UIItem285CellValueAsString = "28,5";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckMozartOmregnetTidSumWeek3_step_16'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckMozartOmregnetTidSumWeek3_step_16ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '44,17' cell equals '44,17'
        /// </summary>
        public string UIItem4417CellValueAsString = "44,17";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckOmregnetTidDisabled'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckOmregnetTidDisabledExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'RadioGroupItem' radio button equals 'False'
        /// </summary>
        public bool UIRadioGroupItemRadioButtonEnabled = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSchubertLine2_step_24_Calculations'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckSchubertLine2_step_24_CalculationsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '20,03' cell equals '20,03'
        /// </summary>
        public string UIItem2003CellValueAsString = "20,03";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '1,75' cell equals '1,75'
        /// </summary>
        public string UIItem175CellValueAsString = "1,75";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '51,64%' cell equals '51,64%'
        /// </summary>
        public string UIItem5164CellValueAsString = "51,64%";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '3,74' cell equals '3,74'
        /// </summary>
        public string UIItem374CellValueAsString = "3,74";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '1,99' cell equals '1,99'
        /// </summary>
        public string UIItem199CellValueAsString = "1,99";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditBachLine2_step_5'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class EditBachLine2_step_5Params
    {
        
        #region Fields
        /// <summary>
        /// Type '1' in 'rgCalculatedTime' RadioGroup
        /// </summary>
        public int UIRgCalculatedTimeRadioGroupSelectedIndex = 1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditBeethovenLine1_step_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class EditBeethovenLine1_step_2Params
    {
        
        #region Fields
        /// <summary>
        /// Type '1' in 'rgCalculatedTime' RadioGroup
        /// </summary>
        public int UIRgCalculatedTimeRadioGroupSelectedIndex = 1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditMozartLineToUseOmregnetTid'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class EditMozartLineToUseOmregnetTidParams
    {
        
        #region Fields
        /// <summary>
        /// Type '1' in 'rgCalculatedTime' RadioGroup
        /// </summary>
        public int UIRgCalculatedTimeRadioGroupSelectedIndex = 1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditSchubertLineToUseOmregnetTid'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class EditSchubertLineToUseOmregnetTidParams
    {
        
        #region Fields
        /// <summary>
        /// Type '1' in 'rgCalculatedTime' RadioGroup
        /// </summary>
        public int UIRgCalculatedTimeRadioGroupSelectedIndex = 1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InsertAshiftMozartTuAndThuWeek1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InsertAshiftMozartTuAndThuWeek1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'a' in 'gcRosterPlan' table
        /// </summary>
        public string UIGcRosterPlanTableSendKeys = "a";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]0[Column]RosterCell_1' text box
        /// </summary>
        public string UIRow0ColumnRosterCellEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'a' in 'gcRosterPlan' table
        /// </summary>
        public string UIGcRosterPlanTableSendKeys1 = "a";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]0[Column]RosterCell_4' text box
        /// </summary>
        public string UIRow0ColumnRosterCellEdit1SendKeys = "{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InsertDshiftMozartSunWeek3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InsertDshiftMozartSunWeek3Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'd' in 'gcRosterPlan' table
        /// </summary>
        public string UIGcRosterPlanTableSendKeys = "d";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]0[Column]RosterCell_20' text box
        /// </summary>
        public string UIRow0ColumnRosterCellEditSendKeys = "{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InsertNshiftMozartWedWeek3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InsertNshiftMozartWedWeek3Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'n' in 'gcRosterPlan' table
        /// </summary>
        public string UIGcRosterPlanTableSendKeys = "n";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]0[Column]RosterCell_16' text box
        /// </summary>
        public string UIRow0ColumnRosterCellEditSendKeys = "{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ShowWeeksumTotalOnly'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ShowWeeksumTotalOnlyParams
    {
        
        #region Fields
        /// <summary>
        /// Type '1' in 'rgSumFilter' RadioGroup
        /// </summary>
        public int UIRgSumFilterRadioGroupSelectedIndex = 1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver64339251ASCLAvWindow : WinWindow
    {
        
        public UIGatver64339251ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat ver.", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat ver. 6.4.3.39251 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIPcMainPanelClient UIPcMainPanelClient
        {
            get
            {
                if ((this.mUIPcMainPanelClient == null))
                {
                    this.mUIPcMainPanelClient = new UIPcMainPanelClient(this);
                }
                return this.mUIPcMainPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIPcMainPanelClient mUIPcMainPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39251 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver64339251ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver64339251ASCLAvClient == null))
                {
                    this.mUIGatver64339251ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver64339251ASCLAvClient.WindowTitles.Add("Gat ver. 6.4.3.39251 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
                    this.mUIGatver64339251ASCLAvClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIGatver64339251ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver64339251ASCLAvClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcMainPanelClient : DXTestControl
    {
        
        public UIPcMainPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39251 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UITcPanListsTabList UITcPanListsTabList
        {
            get
            {
                if ((this.mUITcPanListsTabList == null))
                {
                    this.mUITcPanListsTabList = new UITcPanListsTabList(this);
                }
                return this.mUITcPanListsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcPanListsTabList mUITcPanListsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcPanListsTabList : DXTestControl
    {
        
        public UITcPanListsTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcPanLists";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39251 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UITpRosterPlanListClient UITpRosterPlanListClient
        {
            get
            {
                if ((this.mUITpRosterPlanListClient == null))
                {
                    this.mUITpRosterPlanListClient = new UITpRosterPlanListClient(this);
                }
                return this.mUITpRosterPlanListClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpRosterPlanListClient mUITpRosterPlanListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpRosterPlanListClient : DXTestControl
    {
        
        public UITpRosterPlanListClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpRosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Gat ver. 6.4.3.39251 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UIPnlGridClient UIPnlGridClient
        {
            get
            {
                if ((this.mUIPnlGridClient == null))
                {
                    this.mUIPnlGridClient = new UIPnlGridClient(this);
                }
                return this.mUIPnlGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGridClient mUIPnlGridClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlGridClient : DXTestControl
    {
        
        public UIPnlGridClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.3.39251 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlansTable UIGcRosterPlansTable
        {
            get
            {
                if ((this.mUIGcRosterPlansTable == null))
                {
                    this.mUIGcRosterPlansTable = new UIGcRosterPlansTable(this);
                }
                return this.mUIGcRosterPlansTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlansTable mUIGcRosterPlansTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlansTable : DXGrid
    {
        
        public UIGcRosterPlansTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlans";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39251 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public DXCell UIOmregnettidKalenderpCell
        {
            get
            {
                if ((this.mUIOmregnettidKalenderpCell == null))
                {
                    this.mUIOmregnettidKalenderpCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIOmregnettidKalenderpCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlansGridControlCell[View]gvRosterPlans[Row]1[Column]gcolPlan";
                    this.mUIOmregnettidKalenderpCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIOmregnettidKalenderpCell.WindowTitles.Add("Gat ver. 6.4.3.39251 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
                    #endregion
                }
                return this.mUIOmregnettidKalenderpCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIOmregnettidKalenderpCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRPL24006InformasjonWindow : DXWindow
    {
        
        public UIRPL24006InformasjonWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RPL2-4006 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("RPL2-4006 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIJAButton.WindowTitles.Add("RPL2-4006 - Informasjon");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanOmregnettWindow : DXWindow
    {
        
        public UIArbeidsplanOmregnettWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        
        public UIRcMenuRibbon UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient mUIPnlRosterPlanClient;
        
        private UIRcMenuRibbon mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient : DXTestControl
    {
        
        public UIPnlRosterPlanClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIDpnlColumnsDockPanel UIDpnlColumnsDockPanel
        {
            get
            {
                if ((this.mUIDpnlColumnsDockPanel == null))
                {
                    this.mUIDpnlColumnsDockPanel = new UIDpnlColumnsDockPanel(this);
                }
                return this.mUIDpnlColumnsDockPanel;
            }
        }
        
        public UIGcRosterPlanTable UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIDpnlColumnsDockPanel mUIDpnlColumnsDockPanel;
        
        private UIGcRosterPlanTable mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDpnlColumnsDockPanel : DXDockPanel
    {
        
        public UIDpnlColumnsDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlColumns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Lesemodus, planen er låst av Darello, Rob" +
                    "inho )");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIDockPanel1_ContainerCustom UIDockPanel1_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel1_ContainerCustom == null))
                {
                    this.mUIDockPanel1_ContainerCustom = new UIDockPanel1_ContainerCustom(this);
                }
                return this.mUIDockPanel1_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel1_ContainerCustom mUIDockPanel1_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDockPanel1_ContainerCustom : DXTestControl
    {
        
        public UIDockPanel1_ContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Lesemodus, planen er låst av Darello, Rob" +
                    "inho )");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcExtraGridTable UIGcExtraGridTable
        {
            get
            {
                if ((this.mUIGcExtraGridTable == null))
                {
                    this.mUIGcExtraGridTable = new UIGcExtraGridTable(this);
                }
                return this.mUIGcExtraGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcExtraGridTable mUIGcExtraGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcExtraGridTable : DXGrid
    {
        
        public UIGcExtraGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Lesemodus, planen er låst av Darello, Rob" +
                    "inho )");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_ActualWorkingHoursAs" +
                        "CalculatatedTime";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Lesemodus, planen er låst av Darello, Rob" +
                            "inho )");
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_ActualWeekAverageWor" +
                        "kingHoursAsCalculatedTime";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Lesemodus, planen er låst av Darello, Rob" +
                            "inho )");
                    this.mUIItemCell1.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_CalculatedTimeReduct" +
                        "ion";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Lesemodus, planen er låst av Darello, Rob" +
                            "inho )");
                    this.mUIItemCell2.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        
        public DXCell UIItemCell3
        {
            get
            {
                if ((this.mUIItemCell3 == null))
                {
                    this.mUIItemCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_CalculatedTimeLeftOv" +
                        "er";
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell3.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Lesemodus, planen er låst av Darello, Rob" +
                            "inho )");
                    this.mUIItemCell3.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItemCell3;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        
        private DXCell mUIItemCell1;
        
        private DXCell mUIItemCell2;
        
        private DXCell mUIItemCell3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable : DXGrid
    {
        
        public UIGcRosterPlanTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Lesemodus, planen er låst av Darello, Rob" +
                    "inho )");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem0Cell
        {
            get
            {
                if ((this.mUIItem0Cell == null))
                {
                    this.mUIItem0Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalCalculat" +
                        "edSum_1";
                    this.mUIItem0Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Lesemodus, planen er låst av Darello, Rob" +
                            "inho )");
                    this.mUIItem0Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem0Cell;
            }
        }
        
        public DXCell UIItem0Cell1
        {
            get
            {
                if ((this.mUIItem0Cell1 == null))
                {
                    this.mUIItem0Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalCalculat" +
                        "edSum_2";
                    this.mUIItem0Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell1.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Lesemodus, planen er låst av Darello, Rob" +
                            "inho )");
                    this.mUIItem0Cell1.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem0Cell1;
            }
        }
        
        public DXCell UIItem0Cell2
        {
            get
            {
                if ((this.mUIItem0Cell2 == null))
                {
                    this.mUIItem0Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalCalculat" +
                        "edSum_3";
                    this.mUIItem0Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell2.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Lesemodus, planen er låst av Darello, Rob" +
                            "inho )");
                    this.mUIItem0Cell2.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem0Cell2;
            }
        }
        
        public DXCell UIItem0Cell3
        {
            get
            {
                if ((this.mUIItem0Cell3 == null))
                {
                    this.mUIItem0Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalCalculat" +
                        "edSum_4";
                    this.mUIItem0Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell3.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Lesemodus, planen er låst av Darello, Rob" +
                            "inho )");
                    this.mUIItem0Cell3.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem0Cell3;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem0Cell;
        
        private DXCell mUIItem0Cell1;
        
        private DXCell mUIItem0Cell2;
        
        private DXCell mUIItem0Cell3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon : DXRibbon
    {
        
        public UIRcMenuRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpSupportToolsRibbonPage UIRpSupportToolsRibbonPage
        {
            get
            {
                if ((this.mUIRpSupportToolsRibbonPage == null))
                {
                    this.mUIRpSupportToolsRibbonPage = new UIRpSupportToolsRibbonPage(this);
                }
                return this.mUIRpSupportToolsRibbonPage;
            }
        }
        
        public DXRibbonPage UIRpRosterPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpRosterPlanRibbonPage == null))
                {
                    this.mUIRpRosterPlanRibbonPage = new DXRibbonPage(this);
                    #region Search Criteria
                    this.mUIRpRosterPlanRibbonPage.SearchProperties[DXTestControl.PropertyNames.Name] = "rpRosterPlan";
                    this.mUIRpRosterPlanRibbonPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
                    this.mUIRpRosterPlanRibbonPage.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRpRosterPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpSupportToolsRibbonPage mUIRpSupportToolsRibbonPage;
        
        private DXRibbonPage mUIRpRosterPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpSupportToolsRibbonPage : DXRibbonPage
    {
        
        public UIRpSupportToolsRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpSupportTools";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpgTestCaseRibbonPageGroup UIRpgTestCaseRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgTestCaseRibbonPageGroup == null))
                {
                    this.mUIRpgTestCaseRibbonPageGroup = new UIRpgTestCaseRibbonPageGroup(this);
                }
                return this.mUIRpgTestCaseRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgTestCaseRibbonPageGroup mUIRpgTestCaseRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpgTestCaseRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgTestCaseRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgTestCase";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UILåsoppplanRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUILåsoppplanRibbonBaseButtonItem == null))
                {
                    this.mUILåsoppplanRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUILåsoppplanRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnUnlockRoster";
                    this.mUILåsoppplanRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUILåsoppplanRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUILåsoppplanRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUILåsoppplanRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow1 : DXWindow
    {
        
        public UIItemWindow1()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RPL2-4005 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("RPL2-4005 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("RPL2-4005 - Informasjon");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanOmregnettWindow1 : DXWindow
    {
        
        public UIArbeidsplanOmregnettWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient1 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient1(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        
        public UIRcMenuRibbon1 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon1(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient1 mUIPnlRosterPlanClient;
        
        private UIRcMenuRibbon1 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient1 : DXTestControl
    {
        
        public UIPnlRosterPlanClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable1 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable1(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        
        public UIDpnlColumnsDockPanel1 UIDpnlColumnsDockPanel
        {
            get
            {
                if ((this.mUIDpnlColumnsDockPanel == null))
                {
                    this.mUIDpnlColumnsDockPanel = new UIDpnlColumnsDockPanel1(this);
                }
                return this.mUIDpnlColumnsDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable1 mUIGcRosterPlanTable;
        
        private UIDpnlColumnsDockPanel1 mUIDpnlColumnsDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable1 : DXGrid
    {
        
        public UIGcRosterPlanTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIBeethovenLudwigVanCell
        {
            get
            {
                if ((this.mUIBeethovenLudwigVanCell == null))
                {
                    this.mUIBeethovenLudwigVanCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBeethovenLudwigVanCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_EmployeeName";
                    this.mUIBeethovenLudwigVanCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBeethovenLudwigVanCell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIBeethovenLudwigVanCell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIBeethovenLudwigVanCell;
            }
        }
        
        public DXCell UIItem295Cell
        {
            get
            {
                if ((this.mUIItem295Cell == null))
                {
                    this.mUIItem295Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem295Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalCalculat" +
                        "edSum_1";
                    this.mUIItem295Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem295Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem295Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem295Cell;
            }
        }
        
        public DXCell UIItem5633Cell
        {
            get
            {
                if ((this.mUIItem5633Cell == null))
                {
                    this.mUIItem5633Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem5633Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalCalculat" +
                        "edSum_2";
                    this.mUIItem5633Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem5633Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem5633Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem5633Cell;
            }
        }
        
        public DXCell UIItem3025Cell
        {
            get
            {
                if ((this.mUIItem3025Cell == null))
                {
                    this.mUIItem3025Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3025Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalCalculat" +
                        "edSum_3";
                    this.mUIItem3025Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3025Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem3025Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem3025Cell;
            }
        }
        
        public DXCell UIItem3188Cell
        {
            get
            {
                if ((this.mUIItem3188Cell == null))
                {
                    this.mUIItem3188Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3188Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalCalculat" +
                        "edSum_4";
                    this.mUIItem3188Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3188Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem3188Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem3188Cell;
            }
        }
        
        public DXCell UIItem29Cell
        {
            get
            {
                if ((this.mUIItem29Cell == null))
                {
                    this.mUIItem29Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem29Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalSum_1";
                    this.mUIItem29Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem29Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem29Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem29Cell;
            }
        }
        
        public DXCell UIItem48Cell
        {
            get
            {
                if ((this.mUIItem48Cell == null))
                {
                    this.mUIItem48Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem48Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalSum_2";
                    this.mUIItem48Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem48Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem48Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem48Cell;
            }
        }
        
        public DXCell UIItem30Cell
        {
            get
            {
                if ((this.mUIItem30Cell == null))
                {
                    this.mUIItem30Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem30Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalSum_3";
                    this.mUIItem30Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem30Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem30Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem30Cell;
            }
        }
        
        public DXCell UIItem275Cell
        {
            get
            {
                if ((this.mUIItem275Cell == null))
                {
                    this.mUIItem275Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem275Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalSum_4";
                    this.mUIItem275Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem275Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem275Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem275Cell;
            }
        }
        
        public DXCell UIItem3098Cell
        {
            get
            {
                if ((this.mUIItem3098Cell == null))
                {
                    this.mUIItem3098Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3098Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalSum_1";
                    this.mUIItem3098Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3098Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem3098Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIBeethovenLudwigVanCell;
        
        private DXCell mUIItem295Cell;
        
        private DXCell mUIItem5633Cell;
        
        private DXCell mUIItem3025Cell;
        
        private DXCell mUIItem3188Cell;
        
        private DXCell mUIItem29Cell;
        
        private DXCell mUIItem48Cell;
        
        private DXCell mUIItem30Cell;
        
        private DXCell mUIItem275Cell;
        
        private DXCell mUIItem3098Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDpnlColumnsDockPanel1 : DXDockPanel
    {
        
        public UIDpnlColumnsDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlColumns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIDockPanel1_ContainerCustom1 UIDockPanel1_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel1_ContainerCustom == null))
                {
                    this.mUIDockPanel1_ContainerCustom = new UIDockPanel1_ContainerCustom1(this);
                }
                return this.mUIDockPanel1_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel1_ContainerCustom1 mUIDockPanel1_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDockPanel1_ContainerCustom1 : DXTestControl
    {
        
        public UIDockPanel1_ContainerCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcExtraGridTable1 UIGcExtraGridTable
        {
            get
            {
                if ((this.mUIGcExtraGridTable == null))
                {
                    this.mUIGcExtraGridTable = new UIGcExtraGridTable1(this);
                }
                return this.mUIGcExtraGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcExtraGridTable1 mUIGcExtraGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcExtraGridTable1 : DXGrid
    {
        
        public UIGcExtraGridTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem14796Cell
        {
            get
            {
                if ((this.mUIItem14796Cell == null))
                {
                    this.mUIItem14796Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem14796Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_ActualWorkingHoursAs" +
                        "CalculatatedTime";
                    this.mUIItem14796Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem14796Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem14796Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem14796Cell;
            }
        }
        
        public DXCell UIItem3699Cell
        {
            get
            {
                if ((this.mUIItem3699Cell == null))
                {
                    this.mUIItem3699Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3699Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_ActualWeekAverageWor" +
                        "kingHoursAsCalculatedTime";
                    this.mUIItem3699Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3699Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem3699Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem3699Cell;
            }
        }
        
        public DXCell UIItem204Cell
        {
            get
            {
                if ((this.mUIItem204Cell == null))
                {
                    this.mUIItem204Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem204Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_CalculatedTimeLeftOv" +
                        "er";
                    this.mUIItem204Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem204Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem204Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem204Cell;
            }
        }
        
        public DXCell UIItem355Cell
        {
            get
            {
                if ((this.mUIItem355Cell == null))
                {
                    this.mUIItem355Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem355Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_HoursPerWeekBasedOnP" +
                        "osition";
                    this.mUIItem355Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem355Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem355Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem355Cell;
            }
        }
        
        public DXCell UIItem3363Cell
        {
            get
            {
                if ((this.mUIItem3363Cell == null))
                {
                    this.mUIItem3363Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3363Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_HoursPerWeekAverage";
                    this.mUIItem3363Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3363Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem3363Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem3363Cell;
            }
        }
        
        public DXCell UIItem142Cell
        {
            get
            {
                if ((this.mUIItem142Cell == null))
                {
                    this.mUIItem142Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem142Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_TotalWorkingHoursBas" +
                        "edOnPosition";
                    this.mUIItem142Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem142Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem142Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem142Cell;
            }
        }
        
        public DXCell UIItem1345Cell
        {
            get
            {
                if ((this.mUIItem1345Cell == null))
                {
                    this.mUIItem1345Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1345Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_TotalWorkingHoursFor" +
                        "Line";
                    this.mUIItem1345Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1345Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem1345Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem1345Cell;
            }
        }
        
        public DXCell UIItem9472Cell
        {
            get
            {
                if ((this.mUIItem9472Cell == null))
                {
                    this.mUIItem9472Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem9472Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_ActualPositionDiffer" +
                        "ence";
                    this.mUIItem9472Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem9472Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem9472Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem9472Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem14796Cell;
        
        private DXCell mUIItem3699Cell;
        
        private DXCell mUIItem204Cell;
        
        private DXCell mUIItem355Cell;
        
        private DXCell mUIItem3363Cell;
        
        private DXCell mUIItem142Cell;
        
        private DXCell mUIItem1345Cell;
        
        private DXCell mUIItem9472Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon1 : DXRibbon
    {
        
        public UIRcMenuRibbon1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIRpFilterRibbonPage UIRpFilterRibbonPage
        {
            get
            {
                if ((this.mUIRpFilterRibbonPage == null))
                {
                    this.mUIRpFilterRibbonPage = new UIRpFilterRibbonPage(this);
                }
                return this.mUIRpFilterRibbonPage;
            }
        }
        
        public UIComboBoxEditComboBox UIComboBoxEditComboBox
        {
            get
            {
                if ((this.mUIComboBoxEditComboBox == null))
                {
                    this.mUIComboBoxEditComboBox = new UIComboBoxEditComboBox(this);
                }
                return this.mUIComboBoxEditComboBox;
            }
        }
        
        public UIRpRosterPlanRibbonPage UIRpRosterPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpRosterPlanRibbonPage == null))
                {
                    this.mUIRpRosterPlanRibbonPage = new UIRpRosterPlanRibbonPage(this);
                }
                return this.mUIRpRosterPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpFilterRibbonPage mUIRpFilterRibbonPage;
        
        private UIComboBoxEditComboBox mUIComboBoxEditComboBox;
        
        private UIRpRosterPlanRibbonPage mUIRpRosterPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpFilterRibbonPage : DXRibbonPage
    {
        
        public UIRpFilterRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIRpgFilterRibbonPageGroup UIRpgFilterRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgFilterRibbonPageGroup == null))
                {
                    this.mUIRpgFilterRibbonPageGroup = new UIRpgFilterRibbonPageGroup(this);
                }
                return this.mUIRpgFilterRibbonPageGroup;
            }
        }
        
        public UIRibbonPageGroup10RibbonPageGroup UIRibbonPageGroup10RibbonPageGroup
        {
            get
            {
                if ((this.mUIRibbonPageGroup10RibbonPageGroup == null))
                {
                    this.mUIRibbonPageGroup10RibbonPageGroup = new UIRibbonPageGroup10RibbonPageGroup(this);
                }
                return this.mUIRibbonPageGroup10RibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgFilterRibbonPageGroup mUIRpgFilterRibbonPageGroup;
        
        private UIRibbonPageGroup10RibbonPageGroup mUIRibbonPageGroup10RibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpgFilterRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgFilterRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXRibbonEditItem UIDdlCustomizeColumnsRibbonEditItem
        {
            get
            {
                if ((this.mUIDdlCustomizeColumnsRibbonEditItem == null))
                {
                    this.mUIDdlCustomizeColumnsRibbonEditItem = new DXRibbonEditItem(this);
                    #region Search Criteria
                    this.mUIDdlCustomizeColumnsRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "ddlCustomizeColumns";
                    this.mUIDdlCustomizeColumnsRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonEditItem";
                    this.mUIDdlCustomizeColumnsRibbonEditItem.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIDdlCustomizeColumnsRibbonEditItem.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIDdlCustomizeColumnsRibbonEditItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonEditItem mUIDdlCustomizeColumnsRibbonEditItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRibbonPageGroup10RibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRibbonPageGroup10RibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup10";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIRedigerRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIRedigerRibbonBaseButtonItem == null))
                {
                    this.mUIRedigerRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIRedigerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEditMode";
                    this.mUIRedigerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIRedigerRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIRedigerRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIRedigerRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIRedigerRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIComboBoxEditComboBox : DXComboBox
    {
        
        public UIComboBoxEditComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuComboBoxEdit[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIComboBoxPopupListBoxWindow UIComboBoxPopupListBoxWindow
        {
            get
            {
                if ((this.mUIComboBoxPopupListBoxWindow == null))
                {
                    this.mUIComboBoxPopupListBoxWindow = new UIComboBoxPopupListBoxWindow(this);
                }
                return this.mUIComboBoxPopupListBoxWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIComboBoxPopupListBoxWindow mUIComboBoxPopupListBoxWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIComboBoxPopupListBoxWindow : DXWindow
    {
        
        public UIComboBoxPopupListBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuComboBoxEdit[0]PopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxPopupListBoxForm";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIComboBoxPopupListBoxList UIComboBoxPopupListBoxList
        {
            get
            {
                if ((this.mUIComboBoxPopupListBoxList == null))
                {
                    this.mUIComboBoxPopupListBoxList = new UIComboBoxPopupListBoxList(this);
                }
                return this.mUIComboBoxPopupListBoxList;
            }
        }
        #endregion
        
        #region Fields
        private UIComboBoxPopupListBoxList mUIComboBoxPopupListBoxList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIComboBoxPopupListBoxList : DXListBox
    {
        
        public UIComboBoxPopupListBoxList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuComboBoxEdit[0]PopupFormComboBoxPopupListBox[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxPopupListBox";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UIArbeidsplanberegningListItem
        {
            get
            {
                if ((this.mUIArbeidsplanberegningListItem == null))
                {
                    this.mUIArbeidsplanberegningListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIArbeidsplanberegningListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuComboBoxEdit[0]PopupFormComboBoxPopupListBox[0]Item[4]";
                    this.mUIArbeidsplanberegningListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxPopupListBoxItem";
                    this.mUIArbeidsplanberegningListItem.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIArbeidsplanberegningListItem.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIArbeidsplanberegningListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUIArbeidsplanberegningListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpRosterPlanRibbonPage : DXRibbonPage
    {
        
        public UIRpRosterPlanRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGrpCloseRibbonPageGroup UIGrpCloseRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpCloseRibbonPageGroup == null))
                {
                    this.mUIGrpCloseRibbonPageGroup = new UIGrpCloseRibbonPageGroup(this);
                }
                return this.mUIGrpCloseRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpCloseRibbonPageGroup mUIGrpCloseRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpCloseRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpCloseRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpClose";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIBtnCloseRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnCloseRibbonBaseButtonItem == null))
                {
                    this.mUIBtnCloseRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnCloseRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
                    this.mUIBtnCloseRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBtnCloseRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIBtnCloseRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIBtnCloseRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIBtnCloseRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow11 : WinWindow
    {
        
        public UIItemWindow11()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIPopupMenuBarControlMenu UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        
        public UISubMenuBarControlMenu UISubMenuBarControlMenu
        {
            get
            {
                if ((this.mUISubMenuBarControlMenu == null))
                {
                    this.mUISubMenuBarControlMenu = new UISubMenuBarControlMenu(this);
                }
                return this.mUISubMenuBarControlMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupMenuBarControlMenu mUIPopupMenuBarControlMenu;
        
        private UISubMenuBarControlMenu mUISubMenuBarControlMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupMenuBarControlMenu : DXMenu
    {
        
        public UIPopupMenuBarControlMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBarButtonItemLink1MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink1MenuBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink1MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink1MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[1]";
                    this.mUIBarButtonItemLink1MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBarButtonItemLink1MenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIBtnSetPhase1MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnSetPhase1MenuBaseButtonItem == null))
                {
                    this.mUIBtnSetPhase1MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnSetPhase1MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSetPhase1";
                    this.mUIBtnSetPhase1MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBtnSetPhase1MenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIBarButtonItemLink5MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink5MenuBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink5MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink5MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[7]";
                    this.mUIBarButtonItemLink5MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBarButtonItemLink5MenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIBtnSetPhase2MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnSetPhase2MenuBaseButtonItem == null))
                {
                    this.mUIBtnSetPhase2MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnSetPhase2MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSetPhase2";
                    this.mUIBtnSetPhase2MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBtnSetPhase2MenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIBarButtonItemLink6MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink6MenuBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink6MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink6MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[7]";
                    this.mUIBarButtonItemLink6MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBarButtonItemLink6MenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIBtnSetPhase3MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnSetPhase3MenuBaseButtonItem == null))
                {
                    this.mUIBtnSetPhase3MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnSetPhase3MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSetPhase3";
                    this.mUIBtnSetPhase3MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBtnSetPhase3MenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIBarButtonItemLink3MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink3MenuBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink3MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink3MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[4]";
                    this.mUIBarButtonItemLink3MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBarButtonItemLink3MenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBarButtonItemLink1MenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIBtnSetPhase1MenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIBarButtonItemLink5MenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIBtnSetPhase2MenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIBarButtonItemLink6MenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIBtnSetPhase3MenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIBarButtonItemLink3MenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISubMenuBarControlMenu : DXMenu
    {
        
        public UISubMenuBarControlMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SubMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SubMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBtnWishEffectuateMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnWishEffectuateMenuBaseButtonItem == null))
                {
                    this.mUIBtnWishEffectuateMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnWishEffectuateMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEffectuateNextPeriod";
                    this.mUIBtnWishEffectuateMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBtnWishEffectuateMenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBtnWishEffectuateMenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILinjeinnstillingerBeWindow : DXWindow
    {
        
        public UILinjeinnstillingerBeWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Linjeinnstillinger - [Beethoven, Ludwig Van ]";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Linjeinnstillinger - [Beethoven, Ludwig Van ]");
            this.WindowTitles.Add("Linjeinnstillinger");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl3Client UIGsPanelControl3Client
        {
            get
            {
                if ((this.mUIGsPanelControl3Client == null))
                {
                    this.mUIGsPanelControl3Client = new UIGsPanelControl3Client(this);
                }
                return this.mUIGsPanelControl3Client;
            }
        }
        
        public UIGsPanelControl2Client UIGsPanelControl2Client
        {
            get
            {
                if ((this.mUIGsPanelControl2Client == null))
                {
                    this.mUIGsPanelControl2Client = new UIGsPanelControl2Client(this);
                }
                return this.mUIGsPanelControl2Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl3Client mUIGsPanelControl3Client;
        
        private UIGsPanelControl2Client mUIGsPanelControl2Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl3Client : DXTestControl
    {
        
        public UIGsPanelControl3Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Linjeinnstillinger - [Beethoven, Ludwig Van ]");
            this.WindowTitles.Add("Linjeinnstillinger");
            #endregion
        }
        
        #region Properties
        public DXRadioGroup UIRgCalculatedTimeRadioGroup
        {
            get
            {
                if ((this.mUIRgCalculatedTimeRadioGroup == null))
                {
                    this.mUIRgCalculatedTimeRadioGroup = new DXRadioGroup(this);
                    #region Search Criteria
                    this.mUIRgCalculatedTimeRadioGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "rgCalculatedTime";
                    this.mUIRgCalculatedTimeRadioGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSRadioGroup";
                    this.mUIRgCalculatedTimeRadioGroup.WindowTitles.Add("Linjeinnstillinger - [Beethoven, Ludwig Van ]");
                    this.mUIRgCalculatedTimeRadioGroup.WindowTitles.Add("Linjeinnstillinger");
                    #endregion
                }
                return this.mUIRgCalculatedTimeRadioGroup;
            }
        }
        #endregion
        
        #region Fields
        private DXRadioGroup mUIRgCalculatedTimeRadioGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl2Client : DXTestControl
    {
        
        public UIGsPanelControl2Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Linjeinnstillinger - [Beethoven, Ludwig Van ]");
            this.WindowTitles.Add("Linjeinnstillinger");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Linjeinnstillinger - [Beethoven, Ludwig Van ]");
                    this.mUIOKButton.WindowTitles.Add("Linjeinnstillinger");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanOmregnettWindow2 : DXWindow
    {
        
        public UIArbeidsplanOmregnettWindow2()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon2 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon2(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        
        public UIPnlRosterPlanClient2 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient2(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon2 mUIRcMenuRibbon;
        
        private UIPnlRosterPlanClient2 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon2 : DXRibbon
    {
        
        public UIRcMenuRibbon2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIRpFilterRibbonPage1 UIRpFilterRibbonPage
        {
            get
            {
                if ((this.mUIRpFilterRibbonPage == null))
                {
                    this.mUIRpFilterRibbonPage = new UIRpFilterRibbonPage1(this);
                }
                return this.mUIRpFilterRibbonPage;
            }
        }
        
        public UIPopupContainerEditPopupEdit UIPopupContainerEditPopupEdit
        {
            get
            {
                if ((this.mUIPopupContainerEditPopupEdit == null))
                {
                    this.mUIPopupContainerEditPopupEdit = new UIPopupContainerEditPopupEdit(this);
                }
                return this.mUIPopupContainerEditPopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIRpFilterRibbonPage1 mUIRpFilterRibbonPage;
        
        private UIPopupContainerEditPopupEdit mUIPopupContainerEditPopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpFilterRibbonPage1 : DXRibbonPage
    {
        
        public UIRpFilterRibbonPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGrpFilterAndVisualRibbonPageGroup UIGrpFilterAndVisualRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpFilterAndVisualRibbonPageGroup == null))
                {
                    this.mUIGrpFilterAndVisualRibbonPageGroup = new UIGrpFilterAndVisualRibbonPageGroup(this);
                }
                return this.mUIGrpFilterAndVisualRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpFilterAndVisualRibbonPageGroup mUIGrpFilterAndVisualRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpFilterAndVisualRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpFilterAndVisualRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpFilterAndVisual";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXRibbonEditItem UIUkesumRibbonEditItem
        {
            get
            {
                if ((this.mUIUkesumRibbonEditItem == null))
                {
                    this.mUIUkesumRibbonEditItem = new DXRibbonEditItem(this);
                    #region Search Criteria
                    this.mUIUkesumRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "beiSumFilter";
                    this.mUIUkesumRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonEditItem";
                    this.mUIUkesumRibbonEditItem.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
                    this.mUIUkesumRibbonEditItem.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIUkesumRibbonEditItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonEditItem mUIUkesumRibbonEditItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupContainerEditPopupEdit : DXPopupEdit
    {
        
        public UIPopupContainerEditPopupEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuPopupContainerEdit[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerEdit";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXButton UIEditorButton0Button
        {
            get
            {
                if ((this.mUIEditorButton0Button == null))
                {
                    this.mUIEditorButton0Button = new DXButton(this);
                    #region Search Criteria
                    this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuPopupContainerEdit[0]Button[0]";
                    this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
                    this.mUIEditorButton0Button.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
                    this.mUIEditorButton0Button.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIEditorButton0Button;
            }
        }
        
        public UIPopupContainerFormWindow UIPopupContainerFormWindow
        {
            get
            {
                if ((this.mUIPopupContainerFormWindow == null))
                {
                    this.mUIPopupContainerFormWindow = new UIPopupContainerFormWindow(this);
                }
                return this.mUIPopupContainerFormWindow;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIEditorButton0Button;
        
        private UIPopupContainerFormWindow mUIPopupContainerFormWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupContainerFormWindow : DXWindow
    {
        
        public UIPopupContainerFormWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuPopupContainerEdit[0]PopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerForm";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIPccSumFilterClient UIPccSumFilterClient
        {
            get
            {
                if ((this.mUIPccSumFilterClient == null))
                {
                    this.mUIPccSumFilterClient = new UIPccSumFilterClient(this);
                }
                return this.mUIPccSumFilterClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPccSumFilterClient mUIPccSumFilterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPccSumFilterClient : DXTestControl
    {
        
        public UIPccSumFilterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pccSumFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerControl";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIPcSumFilterClient UIPcSumFilterClient
        {
            get
            {
                if ((this.mUIPcSumFilterClient == null))
                {
                    this.mUIPcSumFilterClient = new UIPcSumFilterClient(this);
                }
                return this.mUIPcSumFilterClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcSumFilterClient mUIPcSumFilterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcSumFilterClient : DXTestControl
    {
        
        public UIPcSumFilterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcSumFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXRadioGroup UIRgSumFilterRadioGroup
        {
            get
            {
                if ((this.mUIRgSumFilterRadioGroup == null))
                {
                    this.mUIRgSumFilterRadioGroup = new DXRadioGroup(this);
                    #region Search Criteria
                    this.mUIRgSumFilterRadioGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "rgSumFilter";
                    this.mUIRgSumFilterRadioGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RadioGroup";
                    this.mUIRgSumFilterRadioGroup.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
                    this.mUIRgSumFilterRadioGroup.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIRgSumFilterRadioGroup;
            }
        }
        #endregion
        
        #region Fields
        private DXRadioGroup mUIRgSumFilterRadioGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient2 : DXTestControl
    {
        
        public UIPnlRosterPlanClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable2 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable2(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        
        public UIDpnlColumnsDockPanel2 UIDpnlColumnsDockPanel
        {
            get
            {
                if ((this.mUIDpnlColumnsDockPanel == null))
                {
                    this.mUIDpnlColumnsDockPanel = new UIDpnlColumnsDockPanel2(this);
                }
                return this.mUIDpnlColumnsDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable2 mUIGcRosterPlanTable;
        
        private UIDpnlColumnsDockPanel2 mUIDpnlColumnsDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable2 : DXGrid
    {
        
        public UIGcRosterPlanTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIBachJohannSebastianCell
        {
            get
            {
                if ((this.mUIBachJohannSebastianCell == null))
                {
                    this.mUIBachJohannSebastianCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBachJohannSebastianCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_EmployeeName";
                    this.mUIBachJohannSebastianCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBachJohannSebastianCell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
                    this.mUIBachJohannSebastianCell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIBachJohannSebastianCell;
            }
        }
        
        public DXCell UIItem3637Cell
        {
            get
            {
                if ((this.mUIItem3637Cell == null))
                {
                    this.mUIItem3637Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3637Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalSum_1";
                    this.mUIItem3637Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3637Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
                    this.mUIItem3637Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem3637Cell;
            }
        }
        
        public DXCell UIItem3687Cell
        {
            get
            {
                if ((this.mUIItem3687Cell == null))
                {
                    this.mUIItem3687Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3687Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalCalculat" +
                        "edSum_1";
                    this.mUIItem3687Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3687Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
                    this.mUIItem3687Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem3687Cell;
            }
        }
        
        public DXCell UIItem4837Cell
        {
            get
            {
                if ((this.mUIItem4837Cell == null))
                {
                    this.mUIItem4837Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4837Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalSum_2";
                    this.mUIItem4837Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4837Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
                    this.mUIItem4837Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem4837Cell;
            }
        }
        
        public DXCell UIItem567Cell
        {
            get
            {
                if ((this.mUIItem567Cell == null))
                {
                    this.mUIItem567Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem567Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalCalculat" +
                        "edSum_2";
                    this.mUIItem567Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem567Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
                    this.mUIItem567Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem567Cell;
            }
        }
        
        public DXCell UIItem3074Cell
        {
            get
            {
                if ((this.mUIItem3074Cell == null))
                {
                    this.mUIItem3074Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3074Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalSum_3";
                    this.mUIItem3074Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3074Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
                    this.mUIItem3074Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem3074Cell;
            }
        }
        
        public DXCell UIItem3099Cell
        {
            get
            {
                if ((this.mUIItem3099Cell == null))
                {
                    this.mUIItem3099Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3099Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalCalculat" +
                        "edSum_3";
                    this.mUIItem3099Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3099Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
                    this.mUIItem3099Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem3099Cell;
            }
        }
        
        public DXCell UIItem2675Cell
        {
            get
            {
                if ((this.mUIItem2675Cell == null))
                {
                    this.mUIItem2675Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2675Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalSum_4";
                    this.mUIItem2675Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2675Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
                    this.mUIItem2675Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem2675Cell;
            }
        }
        
        public DXCell UIItem3094Cell
        {
            get
            {
                if ((this.mUIItem3094Cell == null))
                {
                    this.mUIItem3094Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3094Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalCalculat" +
                        "edSum_4";
                    this.mUIItem3094Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3094Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
                    this.mUIItem3094Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem3094Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIBachJohannSebastianCell;
        
        private DXCell mUIItem3637Cell;
        
        private DXCell mUIItem3687Cell;
        
        private DXCell mUIItem4837Cell;
        
        private DXCell mUIItem567Cell;
        
        private DXCell mUIItem3074Cell;
        
        private DXCell mUIItem3099Cell;
        
        private DXCell mUIItem2675Cell;
        
        private DXCell mUIItem3094Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDpnlColumnsDockPanel2 : DXDockPanel
    {
        
        public UIDpnlColumnsDockPanel2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlColumns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIDockPanel1_ContainerCustom2 UIDockPanel1_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel1_ContainerCustom == null))
                {
                    this.mUIDockPanel1_ContainerCustom = new UIDockPanel1_ContainerCustom2(this);
                }
                return this.mUIDockPanel1_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel1_ContainerCustom2 mUIDockPanel1_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDockPanel1_ContainerCustom2 : DXTestControl
    {
        
        public UIDockPanel1_ContainerCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcExtraGridTable2 UIGcExtraGridTable
        {
            get
            {
                if ((this.mUIGcExtraGridTable == null))
                {
                    this.mUIGcExtraGridTable = new UIGcExtraGridTable2(this);
                }
                return this.mUIGcExtraGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcExtraGridTable2 mUIGcExtraGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcExtraGridTable2 : DXGrid
    {
        
        public UIGcExtraGridTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem355Cell
        {
            get
            {
                if ((this.mUIItem355Cell == null))
                {
                    this.mUIItem355Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem355Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_HoursPerWeekBasedOnP" +
                        "osition";
                    this.mUIItem355Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem355Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
                    this.mUIItem355Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem355Cell;
            }
        }
        
        public DXCell UIItem3556Cell
        {
            get
            {
                if ((this.mUIItem3556Cell == null))
                {
                    this.mUIItem3556Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3556Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_HoursPerWeekAverage";
                    this.mUIItem3556Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3556Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
                    this.mUIItem3556Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem3556Cell;
            }
        }
        
        public DXCell UIItem142Cell
        {
            get
            {
                if ((this.mUIItem142Cell == null))
                {
                    this.mUIItem142Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem142Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_TotalWorkingHoursBas" +
                        "edOnPosition";
                    this.mUIItem142Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem142Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
                    this.mUIItem142Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem142Cell;
            }
        }
        
        public DXCell UIItem14223Cell
        {
            get
            {
                if ((this.mUIItem14223Cell == null))
                {
                    this.mUIItem14223Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem14223Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_TotalWorkingHoursFor" +
                        "Line";
                    this.mUIItem14223Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem14223Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
                    this.mUIItem14223Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem14223Cell;
            }
        }
        
        public DXCell UIItem1555Cell
        {
            get
            {
                if ((this.mUIItem1555Cell == null))
                {
                    this.mUIItem1555Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1555Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_ActualWorkingHoursAs" +
                        "CalculatatedTime";
                    this.mUIItem1555Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1555Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
                    this.mUIItem1555Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem1555Cell;
            }
        }
        
        public DXCell UIItem3888Cell
        {
            get
            {
                if ((this.mUIItem3888Cell == null))
                {
                    this.mUIItem3888Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3888Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_ActualWeekAverageWor" +
                        "kingHoursAsCalculatedTime";
                    this.mUIItem3888Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3888Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
                    this.mUIItem3888Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem3888Cell;
            }
        }
        
        public DXCell UIItem55Cell
        {
            get
            {
                if ((this.mUIItem55Cell == null))
                {
                    this.mUIItem55Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem55Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_CalculatedTimeReduct" +
                        "ion";
                    this.mUIItem55Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem55Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
                    this.mUIItem55Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem55Cell;
            }
        }
        
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_CalculatedTimeLeftOv" +
                        "er";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItem10016Cell
        {
            get
            {
                if ((this.mUIItem10016Cell == null))
                {
                    this.mUIItem10016Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem10016Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_ActualPositionDiffer" +
                        "ence";
                    this.mUIItem10016Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem10016Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan ");
                    this.mUIItem10016Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem10016Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem355Cell;
        
        private DXCell mUIItem3556Cell;
        
        private DXCell mUIItem142Cell;
        
        private DXCell mUIItem14223Cell;
        
        private DXCell mUIItem1555Cell;
        
        private DXCell mUIItem3888Cell;
        
        private DXCell mUIItem55Cell;
        
        private DXCell mUIItemCell;
        
        private DXCell mUIItem10016Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILinjeinnstillingerBaWindow : DXWindow
    {
        
        public UILinjeinnstillingerBaWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Linjeinnstillinger - [Bach, Johann Sebastian ]";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Linjeinnstillinger - [Bach, Johann Sebastian ]");
            this.WindowTitles.Add("Linjeinnstillinger");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl3Client1 UIGsPanelControl3Client
        {
            get
            {
                if ((this.mUIGsPanelControl3Client == null))
                {
                    this.mUIGsPanelControl3Client = new UIGsPanelControl3Client1(this);
                }
                return this.mUIGsPanelControl3Client;
            }
        }
        
        public UIGSPanelControlClient UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl3Client1 mUIGsPanelControl3Client;
        
        private UIGSPanelControlClient mUIGSPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl3Client1 : DXTestControl
    {
        
        public UIGsPanelControl3Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Linjeinnstillinger - [Bach, Johann Sebastian ]");
            this.WindowTitles.Add("Linjeinnstillinger");
            #endregion
        }
        
        #region Properties
        public DXRadioGroup UIRgCalculatedTimeRadioGroup
        {
            get
            {
                if ((this.mUIRgCalculatedTimeRadioGroup == null))
                {
                    this.mUIRgCalculatedTimeRadioGroup = new DXRadioGroup(this);
                    #region Search Criteria
                    this.mUIRgCalculatedTimeRadioGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "rgCalculatedTime";
                    this.mUIRgCalculatedTimeRadioGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSRadioGroup";
                    this.mUIRgCalculatedTimeRadioGroup.WindowTitles.Add("Linjeinnstillinger - [Bach, Johann Sebastian ]");
                    this.mUIRgCalculatedTimeRadioGroup.WindowTitles.Add("Linjeinnstillinger");
                    #endregion
                }
                return this.mUIRgCalculatedTimeRadioGroup;
            }
        }
        #endregion
        
        #region Fields
        private DXRadioGroup mUIRgCalculatedTimeRadioGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSPanelControlClient : DXTestControl
    {
        
        public UIGSPanelControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Linjeinnstillinger - [Bach, Johann Sebastian ]");
            this.WindowTitles.Add("Linjeinnstillinger");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Linjeinnstillinger - [Bach, Johann Sebastian ]");
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Linjeinnstillinger");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanOmregnettWindow3 : DXWindow
    {
        
        public UIArbeidsplanOmregnettWindow3()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient3 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient3(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        
        public UIRcMenuRibbon3 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon3(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient3 mUIPnlRosterPlanClient;
        
        private UIRcMenuRibbon3 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient3 : DXTestControl
    {
        
        public UIPnlRosterPlanClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Redigeringsmodus [Planen er låst av deg])" +
                    "");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable3 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable3(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable3 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable3 : DXGrid
    {
        
        public UIGcRosterPlanTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Redigeringsmodus [Planen er låst av deg])" +
                    "");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIDCell
        {
            get
            {
                if ((this.mUIDCell == null))
                {
                    this.mUIDCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_2";
                    this.mUIDCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDCell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Redigeringsmodus [Planen er låst av deg])" +
                            "");
                    this.mUIDCell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIDCell;
            }
        }
        
        public DXTextEdit UIRow1ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow1ColumnRosterCellEdit == null))
                {
                    this.mUIRow1ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow1ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]1[Column]RosterCell_2";
                    this.mUIRow1ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow1ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Redigeringsmodus [Planen er låst av deg])" +
                            "");
                    this.mUIRow1ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIRow1ColumnRosterCellEdit;
            }
        }
        
        public DXCell UIACell
        {
            get
            {
                if ((this.mUIACell == null))
                {
                    this.mUIACell = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_1";
                    this.mUIACell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Redigeringsmodus [Planen er låst av deg])" +
                            "");
                    this.mUIACell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIACell;
            }
        }
        
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_7";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Redigeringsmodus [Planen er låst av deg])" +
                            "");
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_13";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Redigeringsmodus [Planen er låst av deg])" +
                            "");
                    this.mUIItemCell1.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_21";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Redigeringsmodus [Planen er låst av deg])" +
                            "");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        
        public DXCell UIItemCell11
        {
            get
            {
                if ((this.mUIItemCell11 == null))
                {
                    this.mUIItemCell11 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell11.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_27";
                    this.mUIItemCell11.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell11.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Redigeringsmodus [Planen er låst av deg])" +
                            "");
                    #endregion
                }
                return this.mUIItemCell11;
            }
        }
        
        public DXCell UIItemCell12
        {
            get
            {
                if ((this.mUIItemCell12 == null))
                {
                    this.mUIItemCell12 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell12.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_27";
                    this.mUIItemCell12.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell12.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Redigeringsmodus [Planen er låst av deg])" +
                            "");
                    #endregion
                }
                return this.mUIItemCell12;
            }
        }
        
        public DXCell UIItem7Cell
        {
            get
            {
                if ((this.mUIItem7Cell == null))
                {
                    this.mUIItem7Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem7Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_Calc_TotalSum_2";
                    this.mUIItem7Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem7Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Redigeringsmodus [Planen er låst av deg])" +
                            "");
                    #endregion
                }
                return this.mUIItem7Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIDCell;
        
        private DXTextEdit mUIRow1ColumnRosterCellEdit;
        
        private DXCell mUIACell;
        
        private DXCell mUIItemCell;
        
        private DXCell mUIItemCell1;
        
        private DXCell mUIItemCell2;
        
        private DXCell mUIItemCell11;
        
        private DXCell mUIItemCell12;
        
        private DXCell mUIItem7Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon3 : DXRibbon
    {
        
        public UIRcMenuRibbon3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Redigeringsmodus [Planen er låst av deg])" +
                    "");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIRpFilterRibbonPage2 UIRpFilterRibbonPage
        {
            get
            {
                if ((this.mUIRpFilterRibbonPage == null))
                {
                    this.mUIRpFilterRibbonPage = new UIRpFilterRibbonPage2(this);
                }
                return this.mUIRpFilterRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpFilterRibbonPage2 mUIRpFilterRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpFilterRibbonPage2 : DXRibbonPage
    {
        
        public UIRpFilterRibbonPage2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Redigeringsmodus [Planen er låst av deg])" +
                    "");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIRibbonPageGroup10RibbonPageGroup1 UIRibbonPageGroup10RibbonPageGroup
        {
            get
            {
                if ((this.mUIRibbonPageGroup10RibbonPageGroup == null))
                {
                    this.mUIRibbonPageGroup10RibbonPageGroup = new UIRibbonPageGroup10RibbonPageGroup1(this);
                }
                return this.mUIRibbonPageGroup10RibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonPageGroup10RibbonPageGroup1 mUIRibbonPageGroup10RibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRibbonPageGroup10RibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIRibbonPageGroup10RibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup10";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Redigeringsmodus [Planen er låst av deg])" +
                    "");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIBtnOkRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnOkRibbonBaseButtonItem == null))
                {
                    this.mUIBtnOkRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnOkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIBtnOkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBtnOkRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Redigeringsmodus [Planen er låst av deg])" +
                            "");
                    this.mUIBtnOkRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIBtnOkRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIBtnOkRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            #endregion
        }
        
        #region Properties
        public UIPopupMenuBarControlMenu1 UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu1(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        
        public UIPopupMenuBarControlMenu11 UIPopupMenuBarControlMenu1
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu1 == null))
                {
                    this.mUIPopupMenuBarControlMenu1 = new UIPopupMenuBarControlMenu11(this);
                }
                return this.mUIPopupMenuBarControlMenu1;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupMenuBarControlMenu1 mUIPopupMenuBarControlMenu;
        
        private UIPopupMenuBarControlMenu11 mUIPopupMenuBarControlMenu1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupMenuBarControlMenu1 : DXMenu
    {
        
        public UIPopupMenuBarControlMenu1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public UIBarSubItemLink10MenuItem UIBarSubItemLink10MenuItem
        {
            get
            {
                if ((this.mUIBarSubItemLink10MenuItem == null))
                {
                    this.mUIBarSubItemLink10MenuItem = new UIBarSubItemLink10MenuItem(this);
                }
                return this.mUIBarSubItemLink10MenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIBarSubItemLink10MenuItem mUIBarSubItemLink10MenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIBarSubItemLink10MenuItem : DXMenuItem
    {
        
        public UIBarSubItemLink10MenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarSubItemLink[10]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBarButtonItemLink2MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink2MenuBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink2MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink2MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[2]";
                    this.mUIBarButtonItemLink2MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBarButtonItemLink2MenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIBarButtonItemLink1MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink1MenuBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink1MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink1MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[1]";
                    this.mUIBarButtonItemLink1MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBarButtonItemLink1MenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBarButtonItemLink2MenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIBarButtonItemLink1MenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupMenuBarControlMenu11 : DXMenu
    {
        
        public UIPopupMenuBarControlMenu11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuItem UIAutomatiskinnsettingMenuItem
        {
            get
            {
                if ((this.mUIAutomatiskinnsettingMenuItem == null))
                {
                    this.mUIAutomatiskinnsettingMenuItem = new DXMenuItem(this);
                    #region Search Criteria
                    this.mUIAutomatiskinnsettingMenuItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarSubItemLink[7]";
                    this.mUIAutomatiskinnsettingMenuItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
                    #endregion
                }
                return this.mUIAutomatiskinnsettingMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuItem mUIAutomatiskinnsettingMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIUtjevningsvaktWindow : DXWindow
    {
        
        public UIUtjevningsvaktWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Utjevningsvakt";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Utjevningsvakt");
            #endregion
        }
        
        #region Properties
        public UIGrpEqualizingClient UIGrpEqualizingClient
        {
            get
            {
                if ((this.mUIGrpEqualizingClient == null))
                {
                    this.mUIGrpEqualizingClient = new UIGrpEqualizingClient(this);
                }
                return this.mUIGrpEqualizingClient;
            }
        }
        
        public UIGSPanelControlClient1 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient1(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpEqualizingClient mUIGrpEqualizingClient;
        
        private UIGSPanelControlClient1 mUIGSPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpEqualizingClient : DXTestControl
    {
        
        public UIGrpEqualizingClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEqualizing";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Utjevningsvakt");
            #endregion
        }
        
        #region Properties
        public DXRadioGroup UIRgrpEqualizationModeRadioGroup
        {
            get
            {
                if ((this.mUIRgrpEqualizationModeRadioGroup == null))
                {
                    this.mUIRgrpEqualizationModeRadioGroup = new DXRadioGroup(this);
                    #region Search Criteria
                    this.mUIRgrpEqualizationModeRadioGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "rgrpEqualizationMode";
                    this.mUIRgrpEqualizationModeRadioGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSRadioGroup";
                    this.mUIRgrpEqualizationModeRadioGroup.WindowTitles.Add("Utjevningsvakt");
                    #endregion
                }
                return this.mUIRgrpEqualizationModeRadioGroup;
            }
        }
        
        public DXRadioGroup UIRgrpEqualizationPlacRadioGroup
        {
            get
            {
                if ((this.mUIRgrpEqualizationPlacRadioGroup == null))
                {
                    this.mUIRgrpEqualizationPlacRadioGroup = new DXRadioGroup(this);
                    #region Search Criteria
                    this.mUIRgrpEqualizationPlacRadioGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "rgrpEqualizationPlacement";
                    this.mUIRgrpEqualizationPlacRadioGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSRadioGroup";
                    this.mUIRgrpEqualizationPlacRadioGroup.WindowTitles.Add("Utjevningsvakt");
                    #endregion
                }
                return this.mUIRgrpEqualizationPlacRadioGroup;
            }
        }
        
        public DXTextEdit UIENumberEdit
        {
            get
            {
                if ((this.mUIENumberEdit == null))
                {
                    this.mUIENumberEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENumberEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "eNumber";
                    this.mUIENumberEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENumberEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIENumberEdit.WindowTitles.Add("Utjevningsvakt");
                    #endregion
                }
                return this.mUIENumberEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXRadioGroup mUIRgrpEqualizationModeRadioGroup;
        
        private DXRadioGroup mUIRgrpEqualizationPlacRadioGroup;
        
        private DXTextEdit mUIENumberEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSPanelControlClient1 : DXTestControl
    {
        
        public UIGSPanelControlClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Utjevningsvakt");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Utjevningsvakt");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanOmregnettWindow4 : DXWindow
    {
        
        public UIArbeidsplanOmregnettWindow4()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient4 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient4(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient4 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient4 : DXTestControl
    {
        
        public UIPnlRosterPlanClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable4 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable4(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable4 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable4 : DXGrid
    {
        
        public UIGcRosterPlanTable4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public DXCell UIItem3198Cell
        {
            get
            {
                if ((this.mUIItem3198Cell == null))
                {
                    this.mUIItem3198Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3198Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalCalculat" +
                        "edSum_1";
                    this.mUIItem3198Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3198Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem3198Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem3198Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILinjeinnstillingerChWindow : DXWindow
    {
        
        public UILinjeinnstillingerChWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Linjeinnstillinger - [Chopin, Frederic ]";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Linjeinnstillinger - [Chopin, Frederic ]");
            this.WindowTitles.Add("Linjeinnstillinger");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl3Client2 UIGsPanelControl3Client
        {
            get
            {
                if ((this.mUIGsPanelControl3Client == null))
                {
                    this.mUIGsPanelControl3Client = new UIGsPanelControl3Client2(this);
                }
                return this.mUIGsPanelControl3Client;
            }
        }
        
        public UIGsPanelControl2Client1 UIGsPanelControl2Client
        {
            get
            {
                if ((this.mUIGsPanelControl2Client == null))
                {
                    this.mUIGsPanelControl2Client = new UIGsPanelControl2Client1(this);
                }
                return this.mUIGsPanelControl2Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl3Client2 mUIGsPanelControl3Client;
        
        private UIGsPanelControl2Client1 mUIGsPanelControl2Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl3Client2 : DXTestControl
    {
        
        public UIGsPanelControl3Client2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Linjeinnstillinger - [Chopin, Frederic ]");
            this.WindowTitles.Add("Linjeinnstillinger");
            #endregion
        }
        
        #region Properties
        public UIRgCalculatedTimeRadioGroup UIRgCalculatedTimeRadioGroup
        {
            get
            {
                if ((this.mUIRgCalculatedTimeRadioGroup == null))
                {
                    this.mUIRgCalculatedTimeRadioGroup = new UIRgCalculatedTimeRadioGroup(this);
                }
                return this.mUIRgCalculatedTimeRadioGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRgCalculatedTimeRadioGroup mUIRgCalculatedTimeRadioGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRgCalculatedTimeRadioGroup : DXRadioGroup
    {
        
        public UIRgCalculatedTimeRadioGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rgCalculatedTime";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSRadioGroup";
            this.WindowTitles.Add("Linjeinnstillinger - [Chopin, Frederic ]");
            this.WindowTitles.Add("Linjeinnstillinger");
            #endregion
        }
        
        #region Properties
        public DXRadioButton UIRadioGroupItemRadioButton
        {
            get
            {
                if ((this.mUIRadioGroupItemRadioButton == null))
                {
                    this.mUIRadioGroupItemRadioButton = new DXRadioButton(this);
                    #region Search Criteria
                    this.mUIRadioGroupItemRadioButton.SearchProperties[DXTestControl.PropertyNames.Name] = "rgCalculatedTimeItem[1]";
                    this.mUIRadioGroupItemRadioButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RadioGroupItem";
                    this.mUIRadioGroupItemRadioButton.WindowTitles.Add("Linjeinnstillinger - [Chopin, Frederic ]");
                    this.mUIRadioGroupItemRadioButton.WindowTitles.Add("Linjeinnstillinger");
                    #endregion
                }
                return this.mUIRadioGroupItemRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private DXRadioButton mUIRadioGroupItemRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl2Client1 : DXTestControl
    {
        
        public UIGsPanelControl2Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Linjeinnstillinger - [Chopin, Frederic ]");
            this.WindowTitles.Add("Linjeinnstillinger");
            #endregion
        }
        
        #region Properties
        public DXButton UIAvbrytButton
        {
            get
            {
                if ((this.mUIAvbrytButton == null))
                {
                    this.mUIAvbrytButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIAvbrytButton.WindowTitles.Add("Linjeinnstillinger - [Chopin, Frederic ]");
                    this.mUIAvbrytButton.WindowTitles.Add("Linjeinnstillinger");
                    #endregion
                }
                return this.mUIAvbrytButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIAvbrytButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanOmregnettWindow5 : DXWindow
    {
        
        public UIArbeidsplanOmregnettWindow5()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient5 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient5(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient5 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient5 : DXTestControl
    {
        
        public UIPnlRosterPlanClient5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable5 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable5(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable5 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable5 : DXGrid
    {
        
        public UIGcRosterPlanTable5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIChopinFredericCell
        {
            get
            {
                if ((this.mUIChopinFredericCell == null))
                {
                    this.mUIChopinFredericCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIChopinFredericCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_EmployeeName";
                    this.mUIChopinFredericCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIChopinFredericCell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIChopinFredericCell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIChopinFredericCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIChopinFredericCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanOmregnettWindow6 : DXWindow
    {
        
        public UIArbeidsplanOmregnettWindow6()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient6 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient6(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient6 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient6 : DXTestControl
    {
        
        public UIPnlRosterPlanClient6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable6 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable6(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable6 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable6 : DXGrid
    {
        
        public UIGcRosterPlanTable6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem3033Cell
        {
            get
            {
                if ((this.mUIItem3033Cell == null))
                {
                    this.mUIItem3033Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3033Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_Calc_TotalSum_1";
                    this.mUIItem3033Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3033Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem3033Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem3033Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem3033Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanOmregnettWindow7 : DXWindow
    {
        
        public UIArbeidsplanOmregnettWindow7()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient7 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient7(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient7 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient7 : DXTestControl
    {
        
        public UIPnlRosterPlanClient7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable7 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable7(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable7 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable7 : DXGrid
    {
        
        public UIGcRosterPlanTable7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public DXCell UIItem3125Cell
        {
            get
            {
                if ((this.mUIItem3125Cell == null))
                {
                    this.mUIItem3125Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3125Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_Calc_TotalCalculat" +
                        "edSum_1";
                    this.mUIItem3125Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3125Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem3125Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem3125Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem3125Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanOmregnettWindow8 : DXWindow
    {
        
        public UIArbeidsplanOmregnettWindow8()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient8 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient8(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient8 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient8 : DXTestControl
    {
        
        public UIPnlRosterPlanClient8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable8 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable8(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable8 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable8 : DXGrid
    {
        
        public UIGcRosterPlanTable8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public DXCell UIItem7Cell
        {
            get
            {
                if ((this.mUIItem7Cell == null))
                {
                    this.mUIItem7Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem7Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_Calc_TotalSum_2";
                    this.mUIItem7Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem7Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem7Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem7Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem7Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanOmregnettWindow9 : DXWindow
    {
        
        public UIArbeidsplanOmregnettWindow9()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient9 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient9(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient9 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient9 : DXTestControl
    {
        
        public UIPnlRosterPlanClient9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable9 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable9(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable9 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable9 : DXGrid
    {
        
        public UIGcRosterPlanTable9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public DXCell UIItem775Cell
        {
            get
            {
                if ((this.mUIItem775Cell == null))
                {
                    this.mUIItem775Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem775Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_Calc_TotalCalculat" +
                        "edSum_2";
                    this.mUIItem775Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem775Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem775Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem775Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem775Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanOmregnettWindow10 : DXWindow
    {
        
        public UIArbeidsplanOmregnettWindow10()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient10 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient10(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient10 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient10 : DXTestControl
    {
        
        public UIPnlRosterPlanClient10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable10 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable10(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable10 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable10 : DXGrid
    {
        
        public UIGcRosterPlanTable10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public DXCell UIItem1922Cell
        {
            get
            {
                if ((this.mUIItem1922Cell == null))
                {
                    this.mUIItem1922Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1922Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_Calc_TotalSum_3";
                    this.mUIItem1922Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1922Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem1922Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem1922Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem1922Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanOmregnettWindow11 : DXWindow
    {
        
        public UIArbeidsplanOmregnettWindow11()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient11 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient11(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient11 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient11 : DXTestControl
    {
        
        public UIPnlRosterPlanClient11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable11 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable11(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable11 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable11 : DXGrid
    {
        
        public UIGcRosterPlanTable11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public DXCell UIItem1922Cell
        {
            get
            {
                if ((this.mUIItem1922Cell == null))
                {
                    this.mUIItem1922Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1922Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_Calc_TotalCalculat" +
                        "edSum_3";
                    this.mUIItem1922Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1922Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem1922Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem1922Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem1922Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanOmregnettWindow12 : DXWindow
    {
        
        public UIArbeidsplanOmregnettWindow12()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient12 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient12(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient12 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient12 : DXTestControl
    {
        
        public UIPnlRosterPlanClient12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable12 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable12(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable12 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable12 : DXGrid
    {
        
        public UIGcRosterPlanTable12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public DXCell UIItem1033Cell
        {
            get
            {
                if ((this.mUIItem1033Cell == null))
                {
                    this.mUIItem1033Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1033Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_Calc_TotalSum_4";
                    this.mUIItem1033Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1033Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem1033Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem1033Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem1033Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanOmregnettWindow13 : DXWindow
    {
        
        public UIArbeidsplanOmregnettWindow13()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient13 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient13(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient13 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient13 : DXTestControl
    {
        
        public UIPnlRosterPlanClient13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable13 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable13(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable13 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable13 : DXGrid
    {
        
        public UIGcRosterPlanTable13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public DXCell UIItem1186Cell
        {
            get
            {
                if ((this.mUIItem1186Cell == null))
                {
                    this.mUIItem1186Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1186Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_Calc_TotalCalculat" +
                        "edSum_4";
                    this.mUIItem1186Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1186Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem1186Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem1186Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem1186Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanOmregnettWindow14 : DXWindow
    {
        
        public UIArbeidsplanOmregnettWindow14()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient14 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient14(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient14 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient14 : DXTestControl
    {
        
        public UIPnlRosterPlanClient14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public UIDpnlColumnsDockPanel3 UIDpnlColumnsDockPanel
        {
            get
            {
                if ((this.mUIDpnlColumnsDockPanel == null))
                {
                    this.mUIDpnlColumnsDockPanel = new UIDpnlColumnsDockPanel3(this);
                }
                return this.mUIDpnlColumnsDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpnlColumnsDockPanel3 mUIDpnlColumnsDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDpnlColumnsDockPanel3 : DXDockPanel
    {
        
        public UIDpnlColumnsDockPanel3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlColumns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIDockPanel1_ContainerCustom3 UIDockPanel1_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel1_ContainerCustom == null))
                {
                    this.mUIDockPanel1_ContainerCustom = new UIDockPanel1_ContainerCustom3(this);
                }
                return this.mUIDockPanel1_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel1_ContainerCustom3 mUIDockPanel1_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDockPanel1_ContainerCustom3 : DXTestControl
    {
        
        public UIDockPanel1_ContainerCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcExtraGridTable3 UIGcExtraGridTable
        {
            get
            {
                if ((this.mUIGcExtraGridTable == null))
                {
                    this.mUIGcExtraGridTable = new UIGcExtraGridTable3(this);
                }
                return this.mUIGcExtraGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcExtraGridTable3 mUIGcExtraGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcExtraGridTable3 : DXGrid
    {
        
        public UIGcExtraGridTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem355Cell
        {
            get
            {
                if ((this.mUIItem355Cell == null))
                {
                    this.mUIItem355Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem355Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_HoursPerWeekBasedOnP" +
                        "osition";
                    this.mUIItem355Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem355Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem355Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem355Cell;
            }
        }
        
        public DXCell UIItem1672Cell
        {
            get
            {
                if ((this.mUIItem1672Cell == null))
                {
                    this.mUIItem1672Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1672Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_HoursPerWeekAverage";
                    this.mUIItem1672Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1672Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem1672Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem1672Cell;
            }
        }
        
        public DXCell UIItem142Cell
        {
            get
            {
                if ((this.mUIItem142Cell == null))
                {
                    this.mUIItem142Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem142Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_TotalWorkingHoursBas" +
                        "edOnPosition";
                    this.mUIItem142Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem142Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem142Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem142Cell;
            }
        }
        
        public DXCell UIItem6689Cell
        {
            get
            {
                if ((this.mUIItem6689Cell == null))
                {
                    this.mUIItem6689Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem6689Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_TotalWorkingHoursFor" +
                        "Line";
                    this.mUIItem6689Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem6689Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem6689Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem6689Cell;
            }
        }
        
        public DXCell UIItem7008Cell
        {
            get
            {
                if ((this.mUIItem7008Cell == null))
                {
                    this.mUIItem7008Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem7008Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_ActualWorkingHoursAs" +
                        "CalculatatedTime";
                    this.mUIItem7008Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem7008Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem7008Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem7008Cell;
            }
        }
        
        public DXCell UIItem1752Cell
        {
            get
            {
                if ((this.mUIItem1752Cell == null))
                {
                    this.mUIItem1752Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1752Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_ActualWeekAverageWor" +
                        "kingHoursAsCalculatedTime";
                    this.mUIItem1752Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1752Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem1752Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem1752Cell;
            }
        }
        
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_CalculatedTimeReduct" +
                        "ion";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItem7992Cell
        {
            get
            {
                if ((this.mUIItem7992Cell == null))
                {
                    this.mUIItem7992Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem7992Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_CalculatedTimeLeftOv" +
                        "er";
                    this.mUIItem7992Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem7992Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem7992Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem7992Cell;
            }
        }
        
        public DXCell UIItem471Cell
        {
            get
            {
                if ((this.mUIItem471Cell == null))
                {
                    this.mUIItem471Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem471Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_ActualPositionDiffer" +
                        "ence";
                    this.mUIItem471Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem471Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUIItem471Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem471Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem355Cell;
        
        private DXCell mUIItem1672Cell;
        
        private DXCell mUIItem142Cell;
        
        private DXCell mUIItem6689Cell;
        
        private DXCell mUIItem7008Cell;
        
        private DXCell mUIItem1752Cell;
        
        private DXCell mUIItemCell;
        
        private DXCell mUIItem7992Cell;
        
        private DXCell mUIItem471Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow3 : DXWindow
    {
        
        public UIItemWindow3()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan:", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public DXButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new DXButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Close";
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleButton";
                    this.mUICloseButton.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Planen er låst av deg)");
                    this.mUICloseButton.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver64339511ASCLAvWindow : WinWindow
    {
        
        public UIGatver64339511ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcMainPanelClient1 UIPcMainPanelClient
        {
            get
            {
                if ((this.mUIPcMainPanelClient == null))
                {
                    this.mUIPcMainPanelClient = new UIPcMainPanelClient1(this);
                }
                return this.mUIPcMainPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcMainPanelClient1 mUIPcMainPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcMainPanelClient1 : DXTestControl
    {
        
        public UIPcMainPanelClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39511 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UITcPanListsTabList1 UITcPanListsTabList
        {
            get
            {
                if ((this.mUITcPanListsTabList == null))
                {
                    this.mUITcPanListsTabList = new UITcPanListsTabList1(this);
                }
                return this.mUITcPanListsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcPanListsTabList1 mUITcPanListsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcPanListsTabList1 : DXTestControl
    {
        
        public UITcPanListsTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcPanLists";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39511 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public DXTestControl UIXtraTabControlHeaderTabPage
        {
            get
            {
                if ((this.mUIXtraTabControlHeaderTabPage == null))
                {
                    this.mUIXtraTabControlHeaderTabPage = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "tcPanListsPageHeader1";
                    this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
                    this.mUIXtraTabControlHeaderTabPage.WindowTitles.Add("Gat ver. 6.4.3.39511 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
                    this.mUIXtraTabControlHeaderTabPage.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIXtraTabControlHeaderTabPage;
            }
        }
        
        public UITpWishPlanListClient UITpWishPlanListClient
        {
            get
            {
                if ((this.mUITpWishPlanListClient == null))
                {
                    this.mUITpWishPlanListClient = new UITpWishPlanListClient(this);
                }
                return this.mUITpWishPlanListClient;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUIXtraTabControlHeaderTabPage;
        
        private UITpWishPlanListClient mUITpWishPlanListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpWishPlanListClient : DXTestControl
    {
        
        public UITpWishPlanListClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpWishPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Gat ver. 6.4.3.39511 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl2Client2 UIGsPanelControl2Client
        {
            get
            {
                if ((this.mUIGsPanelControl2Client == null))
                {
                    this.mUIGsPanelControl2Client = new UIGsPanelControl2Client2(this);
                }
                return this.mUIGsPanelControl2Client;
            }
        }
        
        public UIGsPanelControl1Client UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl2Client2 mUIGsPanelControl2Client;
        
        private UIGsPanelControl1Client mUIGsPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl2Client2 : DXTestControl
    {
        
        public UIGsPanelControl2Client2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.3.39511 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIGcWishPeriodsTable UIGcWishPeriodsTable
        {
            get
            {
                if ((this.mUIGcWishPeriodsTable == null))
                {
                    this.mUIGcWishPeriodsTable = new UIGcWishPeriodsTable(this);
                }
                return this.mUIGcWishPeriodsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcWishPeriodsTable mUIGcWishPeriodsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcWishPeriodsTable : DXGrid
    {
        
        public UIGcWishPeriodsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcWishPeriods";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39511 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public DXButton UIOmregnettidButton
        {
            get
            {
                if ((this.mUIOmregnettidButton == null))
                {
                    this.mUIOmregnettidButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOmregnettidButton.SearchProperties[DXTestControl.PropertyNames.Name] = "gcWishPeriodsGridControlCellButton[View]gvMaster[Row]0[Column]gcolName";
                    this.mUIOmregnettidButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCellButton";
                    this.mUIOmregnettidButton.WindowTitles.Add("Gat ver. 6.4.3.39511 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
                    this.mUIOmregnettidButton.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIOmregnettidButton;
            }
        }
        
        public DXCell UIØnskeplanforOmregnetCell
        {
            get
            {
                if ((this.mUIØnskeplanforOmregnetCell == null))
                {
                    this.mUIØnskeplanforOmregnetCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIØnskeplanforOmregnetCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcWishPeriodsGridControlCell[View]gvDetails[Row]0[Column]gcolPlanName";
                    this.mUIØnskeplanforOmregnetCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIØnskeplanforOmregnetCell.WindowTitles.Add("Gat ver. 6.4.3.39511 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
                    this.mUIØnskeplanforOmregnetCell.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIØnskeplanforOmregnetCell;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOmregnettidButton;
        
        private DXCell mUIØnskeplanforOmregnetCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl1Client : DXTestControl
    {
        
        public UIGsPanelControl1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.3.39511 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public DXButton UIEndreFaseButton
        {
            get
            {
                if ((this.mUIEndreFaseButton == null))
                {
                    this.mUIEndreFaseButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIEndreFaseButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnChangePhase";
                    this.mUIEndreFaseButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDropDownButton";
                    this.mUIEndreFaseButton.WindowTitles.Add("Gat ver. 6.4.3.39511 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
                    this.mUIEndreFaseButton.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIEndreFaseButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIEndreFaseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient15 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient15(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        
        public UIRcMenuRibbon4 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon4(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient15 mUIPnlRosterPlanClient;
        
        private UIRcMenuRibbon4 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient15 : DXTestControl
    {
        
        public UIPnlRosterPlanClient15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable14 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable14(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable14 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable14 : DXGrid
    {
        
        public UIGcRosterPlanTable14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIMozartWolfgangAmadeuCell
        {
            get
            {
                if ((this.mUIMozartWolfgangAmadeuCell == null))
                {
                    this.mUIMozartWolfgangAmadeuCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIMozartWolfgangAmadeuCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_EmployeeName";
                    this.mUIMozartWolfgangAmadeuCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIMozartWolfgangAmadeuCell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
                    this.mUIMozartWolfgangAmadeuCell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIMozartWolfgangAmadeuCell;
            }
        }
        
        public DXCell UISchubertFranzCell
        {
            get
            {
                if ((this.mUISchubertFranzCell == null))
                {
                    this.mUISchubertFranzCell = new DXCell(this);
                    #region Search Criteria
                    this.mUISchubertFranzCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]3[Column]Col_EmployeeName";
                    this.mUISchubertFranzCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUISchubertFranzCell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
                    this.mUISchubertFranzCell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUISchubertFranzCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIMozartWolfgangAmadeuCell;
        
        private DXCell mUISchubertFranzCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon4 : DXRibbon
    {
        
        public UIRcMenuRibbon4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIRpRosterPlanRibbonPage1 UIRpRosterPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpRosterPlanRibbonPage == null))
                {
                    this.mUIRpRosterPlanRibbonPage = new UIRpRosterPlanRibbonPage1(this);
                }
                return this.mUIRpRosterPlanRibbonPage;
            }
        }
        
        public UIRpFilterRibbonPage3 UIRpFilterRibbonPage
        {
            get
            {
                if ((this.mUIRpFilterRibbonPage == null))
                {
                    this.mUIRpFilterRibbonPage = new UIRpFilterRibbonPage3(this);
                }
                return this.mUIRpFilterRibbonPage;
            }
        }
        
        public UIPopupContainerEditPopupEdit1 UIPopupContainerEditPopupEdit
        {
            get
            {
                if ((this.mUIPopupContainerEditPopupEdit == null))
                {
                    this.mUIPopupContainerEditPopupEdit = new UIPopupContainerEditPopupEdit1(this);
                }
                return this.mUIPopupContainerEditPopupEdit;
            }
        }
        
        public UIRpPlanRibbonPage UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new UIRpPlanRibbonPage(this);
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpRosterPlanRibbonPage1 mUIRpRosterPlanRibbonPage;
        
        private UIRpFilterRibbonPage3 mUIRpFilterRibbonPage;
        
        private UIPopupContainerEditPopupEdit1 mUIPopupContainerEditPopupEdit;
        
        private UIRpPlanRibbonPage mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpRosterPlanRibbonPage1 : DXRibbonPage
    {
        
        public UIRpRosterPlanRibbonPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGrpEditRibbonPageGroup UIGrpEditRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpEditRibbonPageGroup == null))
                {
                    this.mUIGrpEditRibbonPageGroup = new UIGrpEditRibbonPageGroup(this);
                }
                return this.mUIGrpEditRibbonPageGroup;
            }
        }
        
        public UIGrpCloseRibbonPageGroup1 UIGrpCloseRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpCloseRibbonPageGroup == null))
                {
                    this.mUIGrpCloseRibbonPageGroup = new UIGrpCloseRibbonPageGroup1(this);
                }
                return this.mUIGrpCloseRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpEditRibbonPageGroup mUIGrpEditRibbonPageGroup;
        
        private UIGrpCloseRibbonPageGroup1 mUIGrpCloseRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpEditRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpEditRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEdit";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIRedigerRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIRedigerRibbonBaseButtonItem == null))
                {
                    this.mUIRedigerRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIRedigerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEditMode";
                    this.mUIRedigerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIRedigerRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
                    this.mUIRedigerRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIRedigerRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIRedigerRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpCloseRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIGrpCloseRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpClose";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIBtnCloseRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnCloseRibbonBaseButtonItem == null))
                {
                    this.mUIBtnCloseRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnCloseRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
                    this.mUIBtnCloseRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBtnCloseRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
                    this.mUIBtnCloseRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIBtnCloseRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIBtnCloseRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpFilterRibbonPage3 : DXRibbonPage
    {
        
        public UIRpFilterRibbonPage3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIRpgFilterRibbonPageGroup1 UIRpgFilterRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgFilterRibbonPageGroup == null))
                {
                    this.mUIRpgFilterRibbonPageGroup = new UIRpgFilterRibbonPageGroup1(this);
                }
                return this.mUIRpgFilterRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgFilterRibbonPageGroup1 mUIRpgFilterRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpgFilterRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIRpgFilterRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXRibbonEditItem UIDdlFilterRibbonEditItem
        {
            get
            {
                if ((this.mUIDdlFilterRibbonEditItem == null))
                {
                    this.mUIDdlFilterRibbonEditItem = new DXRibbonEditItem(this);
                    #region Search Criteria
                    this.mUIDdlFilterRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "ddlFilter";
                    this.mUIDdlFilterRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonEditItem";
                    this.mUIDdlFilterRibbonEditItem.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
                    this.mUIDdlFilterRibbonEditItem.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIDdlFilterRibbonEditItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonEditItem mUIDdlFilterRibbonEditItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupContainerEditPopupEdit1 : DXPopupEdit
    {
        
        public UIPopupContainerEditPopupEdit1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuPopupContainerEdit[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerEdit";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIPopupContainerFormWindow1 UIPopupContainerFormWindow
        {
            get
            {
                if ((this.mUIPopupContainerFormWindow == null))
                {
                    this.mUIPopupContainerFormWindow = new UIPopupContainerFormWindow1(this);
                }
                return this.mUIPopupContainerFormWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupContainerFormWindow1 mUIPopupContainerFormWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupContainerFormWindow1 : DXWindow
    {
        
        public UIPopupContainerFormWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuPopupContainerEdit[0]PopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerForm";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIDdlFilterPopupContaiClient UIDdlFilterPopupContaiClient
        {
            get
            {
                if ((this.mUIDdlFilterPopupContaiClient == null))
                {
                    this.mUIDdlFilterPopupContaiClient = new UIDdlFilterPopupContaiClient(this);
                }
                return this.mUIDdlFilterPopupContaiClient;
            }
        }
        
        public DXButton UIAvbrytButton
        {
            get
            {
                if ((this.mUIAvbrytButton == null))
                {
                    this.mUIAvbrytButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuPopupContainerEdit[0]PopupFormCloseButton[0]";
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CloseButton";
                    this.mUIAvbrytButton.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIAvbrytButton;
            }
        }
        #endregion
        
        #region Fields
        private UIDdlFilterPopupContaiClient mUIDdlFilterPopupContaiClient;
        
        private DXButton mUIAvbrytButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDdlFilterPopupContaiClient : DXTestControl
    {
        
        public UIDdlFilterPopupContaiClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddlFilterPopupContainerControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIDdlFilterTreeListTreeList UIDdlFilterTreeListTreeList
        {
            get
            {
                if ((this.mUIDdlFilterTreeListTreeList == null))
                {
                    this.mUIDdlFilterTreeListTreeList = new UIDdlFilterTreeListTreeList(this);
                }
                return this.mUIDdlFilterTreeListTreeList;
            }
        }
        #endregion
        
        #region Fields
        private UIDdlFilterTreeListTreeList mUIDdlFilterTreeListTreeList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDdlFilterTreeListTreeList : DXTreeList
    {
        
        public UIDdlFilterTreeListTreeList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddlFilterTreeList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTreeList";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UINode2TreeListNode UINode2TreeListNode
        {
            get
            {
                if ((this.mUINode2TreeListNode == null))
                {
                    this.mUINode2TreeListNode = new UINode2TreeListNode(this);
                }
                return this.mUINode2TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode2TreeListNode mUINode2TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINode2TreeListNode : DXTreeListNode
    {
        
        public UINode2TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINode0TreeListNode : DXTreeListNode
    {
        
        public UINode0TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXTestControl UINode0TreeListNodeCheckBox
        {
            get
            {
                if ((this.mUINode0TreeListNodeCheckBox == null))
                {
                    this.mUINode0TreeListNodeCheckBox = new DXTestControl(this);
                    #region Search Criteria
                    this.mUINode0TreeListNodeCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
                    this.mUINode0TreeListNodeCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNodeCheckBox";
                    this.mUINode0TreeListNodeCheckBox.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
                    #endregion
                }
                return this.mUINode0TreeListNodeCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUINode0TreeListNodeCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpPlanRibbonPage : DXRibbonPage
    {
        
        public UIRpPlanRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public UIGrpEffectuateWishRibbonPageGroup UIGrpEffectuateWishRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpEffectuateWishRibbonPageGroup == null))
                {
                    this.mUIGrpEffectuateWishRibbonPageGroup = new UIGrpEffectuateWishRibbonPageGroup(this);
                }
                return this.mUIGrpEffectuateWishRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpEffectuateWishRibbonPageGroup mUIGrpEffectuateWishRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpEffectuateWishRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpEffectuateWishRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEffectuate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public DXRibbonItem UIIverksettingRibbonItem
        {
            get
            {
                if ((this.mUIIverksettingRibbonItem == null))
                {
                    this.mUIIverksettingRibbonItem = new DXRibbonItem(this);
                    #region Search Criteria
                    this.mUIIverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "mnuEffectuateRevolving";
                    this.mUIIverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
                    this.mUIIverksettingRibbonItem.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIIverksettingRibbonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonItem mUIIverksettingRibbonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILinjeinnstillingerMoWindow : DXWindow
    {
        
        public UILinjeinnstillingerMoWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Linjeinnstillinger - [Mozart, Wolfgang Amadeus ]";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Linjeinnstillinger - [Mozart, Wolfgang Amadeus ]");
            this.WindowTitles.Add("Linjeinnstillinger");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl3Client3 UIGsPanelControl3Client
        {
            get
            {
                if ((this.mUIGsPanelControl3Client == null))
                {
                    this.mUIGsPanelControl3Client = new UIGsPanelControl3Client3(this);
                }
                return this.mUIGsPanelControl3Client;
            }
        }
        
        public UIGSPanelControlClient2 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient2(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl3Client3 mUIGsPanelControl3Client;
        
        private UIGSPanelControlClient2 mUIGSPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl3Client3 : DXTestControl
    {
        
        public UIGsPanelControl3Client3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Linjeinnstillinger - [Mozart, Wolfgang Amadeus ]");
            this.WindowTitles.Add("Linjeinnstillinger");
            #endregion
        }
        
        #region Properties
        public DXRadioGroup UIRgCalculatedTimeRadioGroup
        {
            get
            {
                if ((this.mUIRgCalculatedTimeRadioGroup == null))
                {
                    this.mUIRgCalculatedTimeRadioGroup = new DXRadioGroup(this);
                    #region Search Criteria
                    this.mUIRgCalculatedTimeRadioGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "rgCalculatedTime";
                    this.mUIRgCalculatedTimeRadioGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSRadioGroup";
                    this.mUIRgCalculatedTimeRadioGroup.WindowTitles.Add("Linjeinnstillinger - [Mozart, Wolfgang Amadeus ]");
                    this.mUIRgCalculatedTimeRadioGroup.WindowTitles.Add("Linjeinnstillinger");
                    #endregion
                }
                return this.mUIRgCalculatedTimeRadioGroup;
            }
        }
        #endregion
        
        #region Fields
        private DXRadioGroup mUIRgCalculatedTimeRadioGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSPanelControlClient2 : DXTestControl
    {
        
        public UIGSPanelControlClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Linjeinnstillinger - [Mozart, Wolfgang Amadeus ]");
            this.WindowTitles.Add("Linjeinnstillinger");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Linjeinnstillinger - [Mozart, Wolfgang Amadeus ]");
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Linjeinnstillinger");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow1 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient16 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient16(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient16 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient16 : DXTestControl
    {
        
        public UIPnlRosterPlanClient16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable15 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable15(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable15 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable15 : DXGrid
    {
        
        public UIGcRosterPlanTable15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIMozartWolfgangAmadeuCell
        {
            get
            {
                if ((this.mUIMozartWolfgangAmadeuCell == null))
                {
                    this.mUIMozartWolfgangAmadeuCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIMozartWolfgangAmadeuCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_EmployeeName";
                    this.mUIMozartWolfgangAmadeuCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIMozartWolfgangAmadeuCell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIMozartWolfgangAmadeuCell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIMozartWolfgangAmadeuCell;
            }
        }
        
        public DXCell UIDCell
        {
            get
            {
                if ((this.mUIDCell == null))
                {
                    this.mUIDCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_1";
                    this.mUIDCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDCell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIDCell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIDCell;
            }
        }
        
        public DXTextEdit UIRow0ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow0ColumnRosterCellEdit == null))
                {
                    this.mUIRow0ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow0ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]0[Column]RosterCell_1";
                    this.mUIRow0ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow0ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIRow0ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIRow0ColumnRosterCellEdit;
            }
        }
        
        public DXCell UIDCell1
        {
            get
            {
                if ((this.mUIDCell1 == null))
                {
                    this.mUIDCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIDCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_4";
                    this.mUIDCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDCell1.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIDCell1.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIDCell1;
            }
        }
        
        public DXTextEdit UIRow0ColumnRosterCellEdit1
        {
            get
            {
                if ((this.mUIRow0ColumnRosterCellEdit1 == null))
                {
                    this.mUIRow0ColumnRosterCellEdit1 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow0ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]0[Column]RosterCell_4";
                    this.mUIRow0ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow0ColumnRosterCellEdit1.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIRow0ColumnRosterCellEdit1.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIRow0ColumnRosterCellEdit1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIMozartWolfgangAmadeuCell;
        
        private DXCell mUIDCell;
        
        private DXTextEdit mUIRow0ColumnRosterCellEdit;
        
        private DXCell mUIDCell1;
        
        private DXTextEdit mUIRow0ColumnRosterCellEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow2 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow2()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient17 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient17(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient17 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient17 : DXTestControl
    {
        
        public UIPnlRosterPlanClient17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable16 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable16(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable16 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable16 : DXGrid
    {
        
        public UIGcRosterPlanTable16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem285Cell
        {
            get
            {
                if ((this.mUIItem285Cell == null))
                {
                    this.mUIItem285Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem285Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalCalculat" +
                        "edSum_1";
                    this.mUIItem285Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem285Cell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItem285Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem285Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem285Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow3 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow3()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient18 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient18(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient18 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient18 : DXTestControl
    {
        
        public UIPnlRosterPlanClient18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable17 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable17(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable17 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable17 : DXGrid
    {
        
        public UIGcRosterPlanTable17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UINCell
        {
            get
            {
                if ((this.mUINCell == null))
                {
                    this.mUINCell = new DXCell(this);
                    #region Search Criteria
                    this.mUINCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_20";
                    this.mUINCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUINCell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUINCell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUINCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUINCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow4 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow4()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient19 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient19(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient19 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient19 : DXTestControl
    {
        
        public UIPnlRosterPlanClient19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXGrid UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new DXGrid(this);
                    #region Search Criteria
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIGcRosterPlanTable.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIGcRosterPlanTable.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private DXGrid mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow5 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow5()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient20 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient20(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient20 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient20 : DXTestControl
    {
        
        public UIPnlRosterPlanClient20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable18 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable18(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable18 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable18 : DXGrid
    {
        
        public UIGcRosterPlanTable18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIRow0ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow0ColumnRosterCellEdit == null))
                {
                    this.mUIRow0ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow0ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]0[Column]RosterCell_20";
                    this.mUIRow0ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow0ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIRow0ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIRow0ColumnRosterCellEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIRow0ColumnRosterCellEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow6 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow6()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient21 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient21(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient21 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient21 : DXTestControl
    {
        
        public UIPnlRosterPlanClient21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable19 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable19(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable19 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable19 : DXGrid
    {
        
        public UIGcRosterPlanTable19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem4417Cell
        {
            get
            {
                if ((this.mUIItem4417Cell == null))
                {
                    this.mUIItem4417Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4417Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalCalculat" +
                        "edSum_3";
                    this.mUIItem4417Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4417Cell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItem4417Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem4417Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem4417Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow7 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow7()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon5 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon5(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon5 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon5 : DXRibbon
    {
        
        public UIRcMenuRibbon5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIRpFilterRibbonPage4 UIRpFilterRibbonPage
        {
            get
            {
                if ((this.mUIRpFilterRibbonPage == null))
                {
                    this.mUIRpFilterRibbonPage = new UIRpFilterRibbonPage4(this);
                }
                return this.mUIRpFilterRibbonPage;
            }
        }
        
        public UIComboBoxEditComboBox1 UIComboBoxEditComboBox
        {
            get
            {
                if ((this.mUIComboBoxEditComboBox == null))
                {
                    this.mUIComboBoxEditComboBox = new UIComboBoxEditComboBox1(this);
                }
                return this.mUIComboBoxEditComboBox;
            }
        }
        
        public UIRpRosterPlanRibbonPage2 UIRpRosterPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpRosterPlanRibbonPage == null))
                {
                    this.mUIRpRosterPlanRibbonPage = new UIRpRosterPlanRibbonPage2(this);
                }
                return this.mUIRpRosterPlanRibbonPage;
            }
        }
        
        public UIPopupContainerEditPopupEdit2 UIPopupContainerEditPopupEdit
        {
            get
            {
                if ((this.mUIPopupContainerEditPopupEdit == null))
                {
                    this.mUIPopupContainerEditPopupEdit = new UIPopupContainerEditPopupEdit2(this);
                }
                return this.mUIPopupContainerEditPopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIRpFilterRibbonPage4 mUIRpFilterRibbonPage;
        
        private UIComboBoxEditComboBox1 mUIComboBoxEditComboBox;
        
        private UIRpRosterPlanRibbonPage2 mUIRpRosterPlanRibbonPage;
        
        private UIPopupContainerEditPopupEdit2 mUIPopupContainerEditPopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpFilterRibbonPage4 : DXRibbonPage
    {
        
        public UIRpFilterRibbonPage4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIRpgFilterRibbonPageGroup2 UIRpgFilterRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgFilterRibbonPageGroup == null))
                {
                    this.mUIRpgFilterRibbonPageGroup = new UIRpgFilterRibbonPageGroup2(this);
                }
                return this.mUIRpgFilterRibbonPageGroup;
            }
        }
        
        public UIGrpFilterAndVisualRibbonPageGroup1 UIGrpFilterAndVisualRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpFilterAndVisualRibbonPageGroup == null))
                {
                    this.mUIGrpFilterAndVisualRibbonPageGroup = new UIGrpFilterAndVisualRibbonPageGroup1(this);
                }
                return this.mUIGrpFilterAndVisualRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgFilterRibbonPageGroup2 mUIRpgFilterRibbonPageGroup;
        
        private UIGrpFilterAndVisualRibbonPageGroup1 mUIGrpFilterAndVisualRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpgFilterRibbonPageGroup2 : DXRibbonPageGroup
    {
        
        public UIRpgFilterRibbonPageGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXRibbonEditItem UIDdlCustomizeColumnsRibbonEditItem
        {
            get
            {
                if ((this.mUIDdlCustomizeColumnsRibbonEditItem == null))
                {
                    this.mUIDdlCustomizeColumnsRibbonEditItem = new DXRibbonEditItem(this);
                    #region Search Criteria
                    this.mUIDdlCustomizeColumnsRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "ddlCustomizeColumns";
                    this.mUIDdlCustomizeColumnsRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonEditItem";
                    this.mUIDdlCustomizeColumnsRibbonEditItem.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIDdlCustomizeColumnsRibbonEditItem.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIDdlCustomizeColumnsRibbonEditItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonEditItem mUIDdlCustomizeColumnsRibbonEditItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpFilterAndVisualRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIGrpFilterAndVisualRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpFilterAndVisual";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXRibbonEditItem UIUkesumRibbonEditItem
        {
            get
            {
                if ((this.mUIUkesumRibbonEditItem == null))
                {
                    this.mUIUkesumRibbonEditItem = new DXRibbonEditItem(this);
                    #region Search Criteria
                    this.mUIUkesumRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "beiSumFilter";
                    this.mUIUkesumRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonEditItem";
                    this.mUIUkesumRibbonEditItem.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIUkesumRibbonEditItem.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIUkesumRibbonEditItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonEditItem mUIUkesumRibbonEditItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIComboBoxEditComboBox1 : DXComboBox
    {
        
        public UIComboBoxEditComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuComboBoxEdit[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIComboBoxPopupListBoxWindow1 UIComboBoxPopupListBoxWindow
        {
            get
            {
                if ((this.mUIComboBoxPopupListBoxWindow == null))
                {
                    this.mUIComboBoxPopupListBoxWindow = new UIComboBoxPopupListBoxWindow1(this);
                }
                return this.mUIComboBoxPopupListBoxWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIComboBoxPopupListBoxWindow1 mUIComboBoxPopupListBoxWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIComboBoxPopupListBoxWindow1 : DXWindow
    {
        
        public UIComboBoxPopupListBoxWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuComboBoxEdit[0]PopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxPopupListBoxForm";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIComboBoxPopupListBoxList1 UIComboBoxPopupListBoxList
        {
            get
            {
                if ((this.mUIComboBoxPopupListBoxList == null))
                {
                    this.mUIComboBoxPopupListBoxList = new UIComboBoxPopupListBoxList1(this);
                }
                return this.mUIComboBoxPopupListBoxList;
            }
        }
        #endregion
        
        #region Fields
        private UIComboBoxPopupListBoxList1 mUIComboBoxPopupListBoxList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIComboBoxPopupListBoxList1 : DXListBox
    {
        
        public UIComboBoxPopupListBoxList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuComboBoxEdit[0]PopupFormComboBoxPopupListBox[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxPopupListBox";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UIArbeidsplanberegningListItem
        {
            get
            {
                if ((this.mUIArbeidsplanberegningListItem == null))
                {
                    this.mUIArbeidsplanberegningListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIArbeidsplanberegningListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuComboBoxEdit[0]PopupFormComboBoxPopupListBox[0]Item[4]";
                    this.mUIArbeidsplanberegningListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxPopupListBoxItem";
                    this.mUIArbeidsplanberegningListItem.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIArbeidsplanberegningListItem.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIArbeidsplanberegningListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUIArbeidsplanberegningListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpRosterPlanRibbonPage2 : DXRibbonPage
    {
        
        public UIRpRosterPlanRibbonPage2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGrpEditRibbonPageGroup1 UIGrpEditRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpEditRibbonPageGroup == null))
                {
                    this.mUIGrpEditRibbonPageGroup = new UIGrpEditRibbonPageGroup1(this);
                }
                return this.mUIGrpEditRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpEditRibbonPageGroup1 mUIGrpEditRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpEditRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIGrpEditRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEdit";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIBtnOkRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnOkRibbonBaseButtonItem == null))
                {
                    this.mUIBtnOkRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnOkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIBtnOkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBtnOkRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIBtnOkRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIBtnOkRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIBtnOkRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupContainerEditPopupEdit2 : DXPopupEdit
    {
        
        public UIPopupContainerEditPopupEdit2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuPopupContainerEdit[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerEdit";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            #endregion
        }
        
        #region Properties
        public UIPopupContainerFormWindow2 UIPopupContainerFormWindow
        {
            get
            {
                if ((this.mUIPopupContainerFormWindow == null))
                {
                    this.mUIPopupContainerFormWindow = new UIPopupContainerFormWindow2(this);
                }
                return this.mUIPopupContainerFormWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupContainerFormWindow2 mUIPopupContainerFormWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupContainerFormWindow2 : DXWindow
    {
        
        public UIPopupContainerFormWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuPopupContainerEdit[0]PopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerForm";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            #endregion
        }
        
        #region Properties
        public UIPccSumFilterClient1 UIPccSumFilterClient
        {
            get
            {
                if ((this.mUIPccSumFilterClient == null))
                {
                    this.mUIPccSumFilterClient = new UIPccSumFilterClient1(this);
                }
                return this.mUIPccSumFilterClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPccSumFilterClient1 mUIPccSumFilterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPccSumFilterClient1 : DXTestControl
    {
        
        public UIPccSumFilterClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pccSumFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            #endregion
        }
        
        #region Properties
        public UIPcSumFilterClient1 UIPcSumFilterClient
        {
            get
            {
                if ((this.mUIPcSumFilterClient == null))
                {
                    this.mUIPcSumFilterClient = new UIPcSumFilterClient1(this);
                }
                return this.mUIPcSumFilterClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcSumFilterClient1 mUIPcSumFilterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcSumFilterClient1 : DXTestControl
    {
        
        public UIPcSumFilterClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcSumFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            #endregion
        }
        
        #region Properties
        public DXRadioGroup UIRgSumFilterRadioGroup
        {
            get
            {
                if ((this.mUIRgSumFilterRadioGroup == null))
                {
                    this.mUIRgSumFilterRadioGroup = new DXRadioGroup(this);
                    #region Search Criteria
                    this.mUIRgSumFilterRadioGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "rgSumFilter";
                    this.mUIRgSumFilterRadioGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RadioGroup";
                    this.mUIRgSumFilterRadioGroup.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    #endregion
                }
                return this.mUIRgSumFilterRadioGroup;
            }
        }
        #endregion
        
        #region Fields
        private DXRadioGroup mUIRgSumFilterRadioGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow8 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow8()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient22 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient22(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient22 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient22 : DXTestControl
    {
        
        public UIPnlRosterPlanClient22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIDpnlColumnsDockPanel4 UIDpnlColumnsDockPanel
        {
            get
            {
                if ((this.mUIDpnlColumnsDockPanel == null))
                {
                    this.mUIDpnlColumnsDockPanel = new UIDpnlColumnsDockPanel4(this);
                }
                return this.mUIDpnlColumnsDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpnlColumnsDockPanel4 mUIDpnlColumnsDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDpnlColumnsDockPanel4 : DXDockPanel
    {
        
        public UIDpnlColumnsDockPanel4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlColumns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIDockPanel1_ContainerCustom4 UIDockPanel1_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel1_ContainerCustom == null))
                {
                    this.mUIDockPanel1_ContainerCustom = new UIDockPanel1_ContainerCustom4(this);
                }
                return this.mUIDockPanel1_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel1_ContainerCustom4 mUIDockPanel1_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDockPanel1_ContainerCustom4 : DXTestControl
    {
        
        public UIDockPanel1_ContainerCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcExtraGridTable4 UIGcExtraGridTable
        {
            get
            {
                if ((this.mUIGcExtraGridTable == null))
                {
                    this.mUIGcExtraGridTable = new UIGcExtraGridTable4(this);
                }
                return this.mUIGcExtraGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcExtraGridTable4 mUIGcExtraGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcExtraGridTable4 : DXGrid
    {
        
        public UIGcExtraGridTable4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem10167Cell
        {
            get
            {
                if ((this.mUIItem10167Cell == null))
                {
                    this.mUIItem10167Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem10167Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_ActualWorkingHoursAs" +
                        "CalculatatedTime";
                    this.mUIItem10167Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem10167Cell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItem10167Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem10167Cell;
            }
        }
        
        public DXCell UIItem1083Cell
        {
            get
            {
                if ((this.mUIItem1083Cell == null))
                {
                    this.mUIItem1083Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1083Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_CalculatedTimeLeftOv" +
                        "er";
                    this.mUIItem1083Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1083Cell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItem1083Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem1083Cell;
            }
        }
        
        public DXCell UIItem2003Cell
        {
            get
            {
                if ((this.mUIItem2003Cell == null))
                {
                    this.mUIItem2003Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2003Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]Col_ActualWeekAverageWor" +
                        "kingHoursAsCalculatedTime";
                    this.mUIItem2003Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2003Cell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItem2003Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem2003Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem10167Cell;
        
        private DXCell mUIItem1083Cell;
        
        private DXCell mUIItem2003Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow9 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow9()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient23 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient23(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient23 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient23 : DXTestControl
    {
        
        public UIPnlRosterPlanClient23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable20 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable20(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable20 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable20 : DXGrid
    {
        
        public UIGcRosterPlanTable20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_16";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow10 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow10()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient24 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient24(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient24 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient24 : DXTestControl
    {
        
        public UIPnlRosterPlanClient24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXGrid UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new DXGrid(this);
                    #region Search Criteria
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIGcRosterPlanTable.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIGcRosterPlanTable.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private DXGrid mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow11 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow11()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient25 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient25(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient25 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient25 : DXTestControl
    {
        
        public UIPnlRosterPlanClient25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable21 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable21(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable21 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable21 : DXGrid
    {
        
        public UIGcRosterPlanTable21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIRow0ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow0ColumnRosterCellEdit == null))
                {
                    this.mUIRow0ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow0ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]0[Column]RosterCell_16";
                    this.mUIRow0ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow0ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIRow0ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIRow0ColumnRosterCellEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIRow0ColumnRosterCellEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow12 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow12()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient26 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient26(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient26 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient26 : DXTestControl
    {
        
        public UIPnlRosterPlanClient26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable22 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable22(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable22 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable22 : DXGrid
    {
        
        public UIGcRosterPlanTable22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem47Cell
        {
            get
            {
                if ((this.mUIItem47Cell == null))
                {
                    this.mUIItem47Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem47Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalSum_3";
                    this.mUIItem47Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem47Cell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItem47Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem47Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem47Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver64339666ASCLAvWindow : WinWindow
    {
        
        public UIGatver64339666ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcMainPanelClient2 UIPcMainPanelClient
        {
            get
            {
                if ((this.mUIPcMainPanelClient == null))
                {
                    this.mUIPcMainPanelClient = new UIPcMainPanelClient2(this);
                }
                return this.mUIPcMainPanelClient;
            }
        }
        
        public UIItemWindow4 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow4(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow12 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow12(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow21 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow21(this);
                }
                return this.mUIItemWindow2;
            }
        }
        #endregion
        
        #region Fields
        private UIPcMainPanelClient2 mUIPcMainPanelClient;
        
        private UIItemWindow4 mUIItemWindow;
        
        private UIItemWindow12 mUIItemWindow1;
        
        private UIItemWindow21 mUIItemWindow2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcMainPanelClient2 : DXTestControl
    {
        
        public UIPcMainPanelClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39666 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UITcPanListsTabList2 UITcPanListsTabList
        {
            get
            {
                if ((this.mUITcPanListsTabList == null))
                {
                    this.mUITcPanListsTabList = new UITcPanListsTabList2(this);
                }
                return this.mUITcPanListsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcPanListsTabList2 mUITcPanListsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcPanListsTabList2 : DXTestControl
    {
        
        public UITcPanListsTabList2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcPanLists";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39666 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UITpWishPlanListClient1 UITpWishPlanListClient
        {
            get
            {
                if ((this.mUITpWishPlanListClient == null))
                {
                    this.mUITpWishPlanListClient = new UITpWishPlanListClient1(this);
                }
                return this.mUITpWishPlanListClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpWishPlanListClient1 mUITpWishPlanListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpWishPlanListClient1 : DXTestControl
    {
        
        public UITpWishPlanListClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpWishPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Gat ver. 6.4.3.39666 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl1Client1 UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client1(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl1Client1 mUIGsPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl1Client1 : DXTestControl
    {
        
        public UIGsPanelControl1Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.3.39666 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public DXButton UIEndreFaseButton
        {
            get
            {
                if ((this.mUIEndreFaseButton == null))
                {
                    this.mUIEndreFaseButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIEndreFaseButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnChangePhase";
                    this.mUIEndreFaseButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDropDownButton";
                    this.mUIEndreFaseButton.WindowTitles.Add("Gat ver. 6.4.3.39666 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
                    this.mUIEndreFaseButton.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIEndreFaseButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIEndreFaseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow4 : WinWindow
    {
        
        public UIItemWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39666 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver64339666ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver64339666ASCLAvClient == null))
                {
                    this.mUIGatver64339666ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver64339666ASCLAvClient.WindowTitles.Add("Gat ver. 6.4.3.39666 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
                    this.mUIGatver64339666ASCLAvClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIGatver64339666ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver64339666ASCLAvClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow12 : WinWindow
    {
        
        public UIItemWindow12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.3.39666 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Johann Sebastian" +
                    " Bach  (Vaktbokdato: 15.08.2016)");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsattClient
        {
            get
            {
                if ((this.mUIAnsattClient == null))
                {
                    this.mUIAnsattClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsattClient.WindowTitles.Add("Gat ver. 6.4.3.39666 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Johann Sebastian" +
                            " Bach  (Vaktbokdato: 15.08.2016)");
                    this.mUIAnsattClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIAnsattClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsattClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow21 : WinWindow
    {
        
        public UIItemWindow21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxGridSite";
            this.WindowTitles.Add("Gat ver. 6.4.3.39666 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Johann Sebastian" +
                    " Bach  (Vaktbokdato: 15.08.2016)");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsatteClient
        {
            get
            {
                if ((this.mUIAnsatteClient == null))
                {
                    this.mUIAnsatteClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsatteClient.WindowTitles.Add("Gat ver. 6.4.3.39666 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Johann Sebastian" +
                            " Bach  (Vaktbokdato: 15.08.2016)");
                    this.mUIAnsatteClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIAnsatteClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsatteClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow13 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow13()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient27 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient27(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient27 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient27 : DXTestControl
    {
        
        public UIPnlRosterPlanClient27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable23 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable23(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable23 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable23 : DXGrid
    {
        
        public UIGcRosterPlanTable23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_0";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow14 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow14()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient28 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient28(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient28 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient28 : DXTestControl
    {
        
        public UIPnlRosterPlanClient28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable24 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable24(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable24 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable24 : DXGrid
    {
        
        public UIGcRosterPlanTable24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIACell
        {
            get
            {
                if ((this.mUIACell == null))
                {
                    this.mUIACell = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_1";
                    this.mUIACell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    #endregion
                }
                return this.mUIACell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIACell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow15 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow15()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient29 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient29(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient29 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient29 : DXTestControl
    {
        
        public UIPnlRosterPlanClient29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXGrid UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new DXGrid(this);
                    #region Search Criteria
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIGcRosterPlanTable.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIGcRosterPlanTable.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private DXGrid mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow16 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow16()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient30 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient30(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient30 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient30 : DXTestControl
    {
        
        public UIPnlRosterPlanClient30(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable25 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable25(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable25 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable25 : DXGrid
    {
        
        public UIGcRosterPlanTable25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIRow1ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow1ColumnRosterCellEdit == null))
                {
                    this.mUIRow1ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow1ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]1[Column]RosterCell_1";
                    this.mUIRow1ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow1ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIRow1ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIRow1ColumnRosterCellEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIRow1ColumnRosterCellEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow17 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow17()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient31 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient31(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient31 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient31 : DXTestControl
    {
        
        public UIPnlRosterPlanClient31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable26 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable26(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable26 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable26 : DXGrid
    {
        
        public UIGcRosterPlanTable26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIACell1
        {
            get
            {
                if ((this.mUIACell1 == null))
                {
                    this.mUIACell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_4";
                    this.mUIACell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell1.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIACell1.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIACell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIACell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow18 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow18()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient32 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient32(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient32 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient32 : DXTestControl
    {
        
        public UIPnlRosterPlanClient32(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXGrid UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new DXGrid(this);
                    #region Search Criteria
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIGcRosterPlanTable.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIGcRosterPlanTable.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private DXGrid mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow19 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow19()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient33 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient33(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient33 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient33 : DXTestControl
    {
        
        public UIPnlRosterPlanClient33(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable27 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable27(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable27 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable27 : DXGrid
    {
        
        public UIGcRosterPlanTable27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIRow1ColumnRosterCellEdit1
        {
            get
            {
                if ((this.mUIRow1ColumnRosterCellEdit1 == null))
                {
                    this.mUIRow1ColumnRosterCellEdit1 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow1ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]1[Column]RosterCell_4";
                    this.mUIRow1ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow1ColumnRosterCellEdit1.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIRow1ColumnRosterCellEdit1.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIRow1ColumnRosterCellEdit1;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIRow1ColumnRosterCellEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow20 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow20()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient34 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient34(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient34 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient34 : DXTestControl
    {
        
        public UIPnlRosterPlanClient34(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable28 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable28(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable28 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable28 : DXGrid
    {
        
        public UIGcRosterPlanTable28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIACell2
        {
            get
            {
                if ((this.mUIACell2 == null))
                {
                    this.mUIACell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_10";
                    this.mUIACell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell2.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIACell2.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIACell2;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIACell2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow21 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow21()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient35 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient35(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient35 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient35 : DXTestControl
    {
        
        public UIPnlRosterPlanClient35(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXGrid UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new DXGrid(this);
                    #region Search Criteria
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIGcRosterPlanTable.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIGcRosterPlanTable.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        
        public UIDpnlColumnsDockPanel5 UIDpnlColumnsDockPanel
        {
            get
            {
                if ((this.mUIDpnlColumnsDockPanel == null))
                {
                    this.mUIDpnlColumnsDockPanel = new UIDpnlColumnsDockPanel5(this);
                }
                return this.mUIDpnlColumnsDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private DXGrid mUIGcRosterPlanTable;
        
        private UIDpnlColumnsDockPanel5 mUIDpnlColumnsDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDpnlColumnsDockPanel5 : DXDockPanel
    {
        
        public UIDpnlColumnsDockPanel5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlColumns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public UIDockPanel1_ContainerCustom5 UIDockPanel1_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel1_ContainerCustom == null))
                {
                    this.mUIDockPanel1_ContainerCustom = new UIDockPanel1_ContainerCustom5(this);
                }
                return this.mUIDockPanel1_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel1_ContainerCustom5 mUIDockPanel1_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDockPanel1_ContainerCustom5 : DXTestControl
    {
        
        public UIDockPanel1_ContainerCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            #endregion
        }
        
        #region Properties
        public UIGcExtraGridTable5 UIGcExtraGridTable
        {
            get
            {
                if ((this.mUIGcExtraGridTable == null))
                {
                    this.mUIGcExtraGridTable = new UIGcExtraGridTable5(this);
                }
                return this.mUIGcExtraGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcExtraGridTable5 mUIGcExtraGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcExtraGridTable5 : DXGrid
    {
        
        public UIGcExtraGridTable5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            #endregion
        }
        
        #region Properties
        public DXCell UIItem175Cell
        {
            get
            {
                if ((this.mUIItem175Cell == null))
                {
                    this.mUIItem175Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem175Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]Col_ActualTotalDifferenc" +
                        "eForLine";
                    this.mUIItem175Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem175Cell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItem175Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem175Cell;
            }
        }
        
        public DXCell UIItem5164Cell
        {
            get
            {
                if ((this.mUIItem5164Cell == null))
                {
                    this.mUIItem5164Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem5164Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]Col_ActualPositionDiffer" +
                        "ence";
                    this.mUIItem5164Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem5164Cell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItem5164Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem5164Cell;
            }
        }
        
        public DXCell UIItem374Cell
        {
            get
            {
                if ((this.mUIItem374Cell == null))
                {
                    this.mUIItem374Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem374Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]Col_BalanceDiff";
                    this.mUIItem374Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem374Cell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItem374Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem374Cell;
            }
        }
        
        public DXCell UIItem199Cell
        {
            get
            {
                if ((this.mUIItem199Cell == null))
                {
                    this.mUIItem199Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem199Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]Col_CalculatedTimeToTran" +
                        "sferToCompanding";
                    this.mUIItem199Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem199Cell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItem199Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem199Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem175Cell;
        
        private DXCell mUIItem5164Cell;
        
        private DXCell mUIItem374Cell;
        
        private DXCell mUIItem199Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow22 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow22()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient36 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient36(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient36 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient36 : DXTestControl
    {
        
        public UIPnlRosterPlanClient36(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable29 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable29(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable29 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable29 : DXGrid
    {
        
        public UIGcRosterPlanTable29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIRow1ColumnRosterCellEdit2
        {
            get
            {
                if ((this.mUIRow1ColumnRosterCellEdit2 == null))
                {
                    this.mUIRow1ColumnRosterCellEdit2 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow1ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]1[Column]RosterCell_10";
                    this.mUIRow1ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow1ColumnRosterCellEdit2.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIRow1ColumnRosterCellEdit2.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIRow1ColumnRosterCellEdit2;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIRow1ColumnRosterCellEdit2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow23 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow23()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient37 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient37(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient37 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient37 : DXTestControl
    {
        
        public UIPnlRosterPlanClient37(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable30 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable30(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable30 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable30 : DXGrid
    {
        
        public UIGcRosterPlanTable30(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIDCell
        {
            get
            {
                if ((this.mUIDCell == null))
                {
                    this.mUIDCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_20";
                    this.mUIDCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDCell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIDCell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIDCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIDCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow24 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow24()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient38 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient38(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient38 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient38 : DXTestControl
    {
        
        public UIPnlRosterPlanClient38(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXGrid UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new DXGrid(this);
                    #region Search Criteria
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIGcRosterPlanTable.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIGcRosterPlanTable.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private DXGrid mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow25 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow25()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient39 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient39(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient39 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient39 : DXTestControl
    {
        
        public UIPnlRosterPlanClient39(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable31 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable31(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable31 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable31 : DXGrid
    {
        
        public UIGcRosterPlanTable31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIRow1ColumnRosterCellEdit3
        {
            get
            {
                if ((this.mUIRow1ColumnRosterCellEdit3 == null))
                {
                    this.mUIRow1ColumnRosterCellEdit3 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow1ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]1[Column]RosterCell_20";
                    this.mUIRow1ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow1ColumnRosterCellEdit3.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIRow1ColumnRosterCellEdit3.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIRow1ColumnRosterCellEdit3;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIRow1ColumnRosterCellEdit3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow26 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow26()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient40 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient40(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient40 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient40 : DXTestControl
    {
        
        public UIPnlRosterPlanClient40(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable32 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable32(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable32 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable32 : DXGrid
    {
        
        public UIGcRosterPlanTable32(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem34Cell
        {
            get
            {
                if ((this.mUIItem34Cell == null))
                {
                    this.mUIItem34Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem34Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalSum_1";
                    this.mUIItem34Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem34Cell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItem34Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem34Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem34Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow27 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow27()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient41 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient41(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient41 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient41 : DXTestControl
    {
        
        public UIPnlRosterPlanClient41(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable33 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable33(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable33 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable33 : DXGrid
    {
        
        public UIGcRosterPlanTable33(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem38Cell
        {
            get
            {
                if ((this.mUIItem38Cell == null))
                {
                    this.mUIItem38Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem38Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalCalculat" +
                        "edSum_1";
                    this.mUIItem38Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem38Cell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItem38Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem38Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem38Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow28 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow28()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient42 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient42(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient42 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient42 : DXTestControl
    {
        
        public UIPnlRosterPlanClient42(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable34 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable34(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable34 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable34 : DXGrid
    {
        
        public UIGcRosterPlanTable34(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem21Cell
        {
            get
            {
                if ((this.mUIItem21Cell == null))
                {
                    this.mUIItem21Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem21Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalSum_2";
                    this.mUIItem21Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem21Cell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItem21Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem21Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem21Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow29 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow29()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient43 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient43(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient43 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient43 : DXTestControl
    {
        
        public UIPnlRosterPlanClient43(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable35 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable35(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable35 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable35 : DXGrid
    {
        
        public UIGcRosterPlanTable35(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem2175Cell
        {
            get
            {
                if ((this.mUIItem2175Cell == null))
                {
                    this.mUIItem2175Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2175Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalCalculat" +
                        "edSum_2";
                    this.mUIItem2175Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2175Cell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItem2175Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem2175Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem2175Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow30 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow30()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient44 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient44(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient44 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient44 : DXTestControl
    {
        
        public UIPnlRosterPlanClient44(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable36 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable36(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable36 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable36 : DXGrid
    {
        
        public UIGcRosterPlanTable36(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem47Cell
        {
            get
            {
                if ((this.mUIItem47Cell == null))
                {
                    this.mUIItem47Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem47Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalSum_3";
                    this.mUIItem47Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem47Cell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItem47Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem47Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem47Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow31 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow31()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient45 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient45(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient45 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient45 : DXTestControl
    {
        
        public UIPnlRosterPlanClient45(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable37 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable37(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable37 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable37 : DXGrid
    {
        
        public UIGcRosterPlanTable37(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem5625Cell
        {
            get
            {
                if ((this.mUIItem5625Cell == null))
                {
                    this.mUIItem5625Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem5625Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalCalculat" +
                        "edSum_3";
                    this.mUIItem5625Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem5625Cell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItem5625Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem5625Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem5625Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow32 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow32()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient46 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient46(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient46 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient46 : DXTestControl
    {
        
        public UIPnlRosterPlanClient46(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable38 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable38(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable38 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable38 : DXGrid
    {
        
        public UIGcRosterPlanTable38(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_4";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow33 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow33()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient47 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient47(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient47 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient47 : DXTestControl
    {
        
        public UIPnlRosterPlanClient47(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable39 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable39(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable39 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable39 : DXGrid
    {
        
        public UIGcRosterPlanTable39(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIRow2ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow2ColumnRosterCellEdit == null))
                {
                    this.mUIRow2ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow2ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]2[Column]RosterCell_4";
                    this.mUIRow2ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow2ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIRow2ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIRow2ColumnRosterCellEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIRow2ColumnRosterCellEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow34 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow34()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient48 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient48(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient48 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient48 : DXTestControl
    {
        
        public UIPnlRosterPlanClient48(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable40 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable40(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable40 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable40 : DXGrid
    {
        
        public UIGcRosterPlanTable40(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem34Cell
        {
            get
            {
                if ((this.mUIItem34Cell == null))
                {
                    this.mUIItem34Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem34Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_Calc_TotalSum_1";
                    this.mUIItem34Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem34Cell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItem34Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem34Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem34Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow35 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow35()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient49 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient49(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient49 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient49 : DXTestControl
    {
        
        public UIPnlRosterPlanClient49(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable41 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable41(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable41 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable41 : DXGrid
    {
        
        public UIGcRosterPlanTable41(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem38Cell
        {
            get
            {
                if ((this.mUIItem38Cell == null))
                {
                    this.mUIItem38Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem38Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_Calc_TotalCalculat" +
                        "edSum_1";
                    this.mUIItem38Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem38Cell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItem38Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem38Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem38Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow36 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow36()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIDpnlVisualizationDockPanel UIDpnlVisualizationDockPanel
        {
            get
            {
                if ((this.mUIDpnlVisualizationDockPanel == null))
                {
                    this.mUIDpnlVisualizationDockPanel = new UIDpnlVisualizationDockPanel(this);
                }
                return this.mUIDpnlVisualizationDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpnlVisualizationDockPanel mUIDpnlVisualizationDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDpnlVisualizationDockPanel : DXDockPanel
    {
        
        public UIDpnlVisualizationDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlVisualization";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIDockPanel3_ContainerCustom UIDockPanel3_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel3_ContainerCustom == null))
                {
                    this.mUIDockPanel3_ContainerCustom = new UIDockPanel3_ContainerCustom(this);
                }
                return this.mUIDockPanel3_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel3_ContainerCustom mUIDockPanel3_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDockPanel3_ContainerCustom : DXTestControl
    {
        
        public UIDockPanel3_ContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel3_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UITcVisualizationTabList UITcVisualizationTabList
        {
            get
            {
                if ((this.mUITcVisualizationTabList == null))
                {
                    this.mUITcVisualizationTabList = new UITcVisualizationTabList(this);
                }
                return this.mUITcVisualizationTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcVisualizationTabList mUITcVisualizationTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcVisualizationTabList : DXTestControl
    {
        
        public UITcVisualizationTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcVisualization";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
           
        public UITpShiftDetailsClient UITpShiftDetailsClient
        {
            get
            {
                if ((this.mUITpShiftDetailsClient == null))
                {
                    this.mUITpShiftDetailsClient = new UITpShiftDetailsClient(this);
                }
                return this.mUITpShiftDetailsClient;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUIXtraTabControlHeaderTabPage;
        
        private UITpShiftDetailsClient mUITpShiftDetailsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpShiftDetailsClient : DXTestControl
    {
        
        public UITpShiftDetailsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpShiftDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcShiftDetailsTable UIGcShiftDetailsTable
        {
            get
            {
                if ((this.mUIGcShiftDetailsTable == null))
                {
                    this.mUIGcShiftDetailsTable = new UIGcShiftDetailsTable(this);
                }
                return this.mUIGcShiftDetailsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcShiftDetailsTable mUIGcShiftDetailsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcShiftDetailsTable : DXGrid
    {
        
        public UIGcShiftDetailsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UITimerukesumiuke1fradCell
        {
            get
            {
                if ((this.mUITimerukesumiuke1fradCell == null))
                {
                    this.mUITimerukesumiuke1fradCell = new DXCell(this);
                    #region Search Criteria
                    this.mUITimerukesumiuke1fradCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftDetailsGridControlCell[View]gvShiftDetails[Row]7[Column]gridColumnKey";
                    this.mUITimerukesumiuke1fradCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUITimerukesumiuke1fradCell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUITimerukesumiuke1fradCell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUITimerukesumiuke1fradCell;
            }
        }
        
        public DXCell UIItem10Cell
        {
            get
            {
                if ((this.mUIItem10Cell == null))
                {
                    this.mUIItem10Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem10Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftDetailsGridControlCell[View]gvShiftDetails[Row]7[Column]gridColumnValue";
                    this.mUIItem10Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem10Cell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItem10Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem10Cell;
            }
        }
        
        public DXCell UITimerukesumiuke1fradCell1
        {
            get
            {
                if ((this.mUITimerukesumiuke1fradCell1 == null))
                {
                    this.mUITimerukesumiuke1fradCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUITimerukesumiuke1fradCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftDetailsGridControlCell[View]gvShiftDetails[Row]8[Column]gridColumnKey";
                    this.mUITimerukesumiuke1fradCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUITimerukesumiuke1fradCell1.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUITimerukesumiuke1fradCell1.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUITimerukesumiuke1fradCell1;
            }
        }
        
        public DXCell UIItem12Cell
        {
            get
            {
                if ((this.mUIItem12Cell == null))
                {
                    this.mUIItem12Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem12Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftDetailsGridControlCell[View]gvShiftDetails[Row]8[Column]gridColumnValue";
                    this.mUIItem12Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem12Cell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItem12Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem12Cell;
            }
        }
        
        public DXCell UIFaktisklengdeomregneCell
        {
            get
            {
                if ((this.mUIFaktisklengdeomregneCell == null))
                {
                    this.mUIFaktisklengdeomregneCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIFaktisklengdeomregneCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftDetailsGridControlCell[View]gvShiftDetails[Row]2[Column]gridColumnKey";
                    this.mUIFaktisklengdeomregneCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIFaktisklengdeomregneCell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    #endregion
                }
                return this.mUIFaktisklengdeomregneCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUITimerukesumiuke1fradCell;
        
        private DXCell mUIItem10Cell;
        
        private DXCell mUITimerukesumiuke1fradCell1;
        
        private DXCell mUIItem12Cell;
        
        private DXCell mUIFaktisklengdeomregneCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow37 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow37()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient50 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient50(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient50 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient50 : DXTestControl
    {
        
        public UIPnlRosterPlanClient50(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable42 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable42(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable42 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable42 : DXGrid
    {
        
        public UIGcRosterPlanTable42(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]RosterCell_1";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow38 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow38()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient51 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient51(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient51 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient51 : DXTestControl
    {
        
        public UIPnlRosterPlanClient51(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXGrid UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new DXGrid(this);
                    #region Search Criteria
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIGcRosterPlanTable.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIGcRosterPlanTable.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private DXGrid mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow39 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow39()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient52 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient52(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient52 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient52 : DXTestControl
    {
        
        public UIPnlRosterPlanClient52(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable43 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable43(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable43 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable43 : DXGrid
    {
        
        public UIGcRosterPlanTable43(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                    "t av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIRow2ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow2ColumnRosterCellEdit == null))
                {
                    this.mUIRow2ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow2ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]2[Column]RosterCell_1";
                    this.mUIRow2ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow2ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIRow2ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIRow2ColumnRosterCellEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIRow2ColumnRosterCellEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow40 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow40()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIDpnlVisualizationDockPanel1 UIDpnlVisualizationDockPanel
        {
            get
            {
                if ((this.mUIDpnlVisualizationDockPanel == null))
                {
                    this.mUIDpnlVisualizationDockPanel = new UIDpnlVisualizationDockPanel1(this);
                }
                return this.mUIDpnlVisualizationDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpnlVisualizationDockPanel1 mUIDpnlVisualizationDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDpnlVisualizationDockPanel1 : DXDockPanel
    {
        
        public UIDpnlVisualizationDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlVisualization";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIDockPanel3_ContainerCustom1 UIDockPanel3_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel3_ContainerCustom == null))
                {
                    this.mUIDockPanel3_ContainerCustom = new UIDockPanel3_ContainerCustom1(this);
                }
                return this.mUIDockPanel3_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel3_ContainerCustom1 mUIDockPanel3_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDockPanel3_ContainerCustom1 : DXTestControl
    {
        
        public UIDockPanel3_ContainerCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel3_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UITcVisualizationTabList1 UITcVisualizationTabList
        {
            get
            {
                if ((this.mUITcVisualizationTabList == null))
                {
                    this.mUITcVisualizationTabList = new UITcVisualizationTabList1(this);
                }
                return this.mUITcVisualizationTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcVisualizationTabList1 mUITcVisualizationTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcVisualizationTabList1 : DXTestControl
    {
        
        public UITcVisualizationTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcVisualization";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UITpShiftDetailsClient1 UITpShiftDetailsClient
        {
            get
            {
                if ((this.mUITpShiftDetailsClient == null))
                {
                    this.mUITpShiftDetailsClient = new UITpShiftDetailsClient1(this);
                }
                return this.mUITpShiftDetailsClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpShiftDetailsClient1 mUITpShiftDetailsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpShiftDetailsClient1 : DXTestControl
    {
        
        public UITpShiftDetailsClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpShiftDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcShiftDetailsTable1 UIGcShiftDetailsTable
        {
            get
            {
                if ((this.mUIGcShiftDetailsTable == null))
                {
                    this.mUIGcShiftDetailsTable = new UIGcShiftDetailsTable1(this);
                }
                return this.mUIGcShiftDetailsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcShiftDetailsTable1 mUIGcShiftDetailsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcShiftDetailsTable1 : DXGrid
    {
        
        public UIGcShiftDetailsTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem12Cell
        {
            get
            {
                if ((this.mUIItem12Cell == null))
                {
                    this.mUIItem12Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem12Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftDetailsGridControlCell[View]gvShiftDetails[Row]2[Column]gridColumnValue";
                    this.mUIItem12Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem12Cell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItem12Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem12Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem12Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow41 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow41()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient53 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient53(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient53 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient53 : DXTestControl
    {
        
        public UIPnlRosterPlanClient53(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIDpnlColumnsDockPanel6 UIDpnlColumnsDockPanel
        {
            get
            {
                if ((this.mUIDpnlColumnsDockPanel == null))
                {
                    this.mUIDpnlColumnsDockPanel = new UIDpnlColumnsDockPanel6(this);
                }
                return this.mUIDpnlColumnsDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpnlColumnsDockPanel6 mUIDpnlColumnsDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDpnlColumnsDockPanel6 : DXDockPanel
    {
        
        public UIDpnlColumnsDockPanel6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlColumns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIDockPanel1_ContainerCustom6 UIDockPanel1_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel1_ContainerCustom == null))
                {
                    this.mUIDockPanel1_ContainerCustom = new UIDockPanel1_ContainerCustom6(this);
                }
                return this.mUIDockPanel1_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel1_ContainerCustom6 mUIDockPanel1_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDockPanel1_ContainerCustom6 : DXTestControl
    {
        
        public UIDockPanel1_ContainerCustom6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcExtraGridTable6 UIGcExtraGridTable
        {
            get
            {
                if ((this.mUIGcExtraGridTable == null))
                {
                    this.mUIGcExtraGridTable = new UIGcExtraGridTable6(this);
                }
                return this.mUIGcExtraGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcExtraGridTable6 mUIGcExtraGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcExtraGridTable6 : DXGrid
    {
        
        public UIGcExtraGridTable6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem3867Cell
        {
            get
            {
                if ((this.mUIItem3867Cell == null))
                {
                    this.mUIItem3867Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3867Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_ActualWeekAverageWor" +
                        "kingHoursAsCalculatedTime";
                    this.mUIItem3867Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3867Cell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItem3867Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem3867Cell;
            }
        }
        
        public DXCell UIItem45Cell
        {
            get
            {
                if ((this.mUIItem45Cell == null))
                {
                    this.mUIItem45Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem45Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_ActualTotalDifferenc" +
                        "eForLine";
                    this.mUIItem45Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem45Cell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItem45Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem45Cell;
            }
        }
        
        public DXCell UIItem9577Cell
        {
            get
            {
                if ((this.mUIItem9577Cell == null))
                {
                    this.mUIItem9577Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem9577Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_ActualPositionDiffer" +
                        "ence";
                    this.mUIItem9577Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem9577Cell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItem9577Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem9577Cell;
            }
        }
        
        public DXCell UIItem096Cell
        {
            get
            {
                if ((this.mUIItem096Cell == null))
                {
                    this.mUIItem096Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem096Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_BalanceDiff";
                    this.mUIItem096Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem096Cell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItem096Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem096Cell;
            }
        }
        
        public DXCell UIItem546Cell
        {
            get
            {
                if ((this.mUIItem546Cell == null))
                {
                    this.mUIItem546Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem546Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_CalculatedTimeToTran" +
                        "sferToCompanding";
                    this.mUIItem546Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem546Cell.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Redigeringsmodus [Planen er lås" +
                            "t av deg])");
                    this.mUIItem546Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem546Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem3867Cell;
        
        private DXCell mUIItem45Cell;
        
        private DXCell mUIItem9577Cell;
        
        private DXCell mUIItem096Cell;
        
        private DXCell mUIItem546Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILinjeinnstillingerScWindow : DXWindow
    {
        
        public UILinjeinnstillingerScWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Linjeinnstillinger - [Schubert, Franz ]";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Linjeinnstillinger - [Schubert, Franz ]");
            this.WindowTitles.Add("Linjeinnstillinger");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl3Client4 UIGsPanelControl3Client
        {
            get
            {
                if ((this.mUIGsPanelControl3Client == null))
                {
                    this.mUIGsPanelControl3Client = new UIGsPanelControl3Client4(this);
                }
                return this.mUIGsPanelControl3Client;
            }
        }
        
        public UIGSPanelControlClient3 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient3(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl3Client4 mUIGsPanelControl3Client;
        
        private UIGSPanelControlClient3 mUIGSPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl3Client4 : DXTestControl
    {
        
        public UIGsPanelControl3Client4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Linjeinnstillinger - [Schubert, Franz ]");
            this.WindowTitles.Add("Linjeinnstillinger");
            #endregion
        }
        
        #region Properties
        public DXRadioGroup UIRgCalculatedTimeRadioGroup
        {
            get
            {
                if ((this.mUIRgCalculatedTimeRadioGroup == null))
                {
                    this.mUIRgCalculatedTimeRadioGroup = new DXRadioGroup(this);
                    #region Search Criteria
                    this.mUIRgCalculatedTimeRadioGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "rgCalculatedTime";
                    this.mUIRgCalculatedTimeRadioGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSRadioGroup";
                    this.mUIRgCalculatedTimeRadioGroup.WindowTitles.Add("Linjeinnstillinger - [Schubert, Franz ]");
                    this.mUIRgCalculatedTimeRadioGroup.WindowTitles.Add("Linjeinnstillinger");
                    #endregion
                }
                return this.mUIRgCalculatedTimeRadioGroup;
            }
        }
        #endregion
        
        #region Fields
        private DXRadioGroup mUIRgCalculatedTimeRadioGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSPanelControlClient3 : DXTestControl
    {
        
        public UIGSPanelControlClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Linjeinnstillinger - [Schubert, Franz ]");
            this.WindowTitles.Add("Linjeinnstillinger");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Linjeinnstillinger - [Schubert, Franz ]");
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Linjeinnstillinger");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIIverksetteWindow : DXWindow
    {
        
        public UIIverksetteWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Iverksette";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Iverksette");
            #endregion
        }
        
        #region Properties
        public UIPnlButtonsClient UIPnlButtonsClient
        {
            get
            {
                if ((this.mUIPnlButtonsClient == null))
                {
                    this.mUIPnlButtonsClient = new UIPnlButtonsClient(this);
                }
                return this.mUIPnlButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlButtonsClient mUIPnlButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlButtonsClient : DXTestControl
    {
        
        public UIPnlButtonsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Iverksette");
            #endregion
        }
        
        #region Properties
        public DXButton UIIverksett2linjerButton
        {
            get
            {
                if ((this.mUIIverksett2linjerButton == null))
                {
                    this.mUIIverksett2linjerButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIIverksett2linjerButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEffectuate";
                    this.mUIIverksett2linjerButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIIverksett2linjerButton.WindowTitles.Add("Iverksette");
                    #endregion
                }
                return this.mUIIverksett2linjerButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIIverksett2linjerButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow111 : DXWindow
    {
        
        public UIItemWindow111()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RPL-4044 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("RPL-4044 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("RPL-4044 - Informasjon");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow211 : DXWindow
    {
        
        public UIItemWindow211()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Lønnsberegning ved iverksetting";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Lønnsberegning ved iverksetting");
            this.WindowTitles.Add("Lønnsberegning");
            #endregion
        }
        
        #region Properties
        public UIGSPanelControlClient4 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient4(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGSPanelControlClient4 mUIGSPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSPanelControlClient4 : DXTestControl
    {
        
        public UIGSPanelControlClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcButtonPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Lønnsberegning ved iverksetting");
            this.WindowTitles.Add("Lønnsberegning");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Lønnsberegning ved iverksetting");
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Lønnsberegning");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver64339666ASCLAvWindow1 : WinWindow
    {
        
        public UIGatver64339666ASCLAvWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIBankBalanceListContrCustom UIBankBalanceListContrCustom
        {
            get
            {
                if ((this.mUIBankBalanceListContrCustom == null))
                {
                    this.mUIBankBalanceListContrCustom = new UIBankBalanceListContrCustom(this);
                }
                return this.mUIBankBalanceListContrCustom;
            }
        }
        
        public UIItemWindow5 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow5(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIBankBalanceListContrCustom mUIBankBalanceListContrCustom;
        
        private UIItemWindow5 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIBankBalanceListContrCustom : DXTestControl
    {
        
        public UIBankBalanceListContrCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BankBalanceListControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BankBalanceListControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39666 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Wolfgang Amadeus" +
                    " Mozart  (Vaktbokdato: 15.08.2016)");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIGcBankBalancesTable UIGcBankBalancesTable
        {
            get
            {
                if ((this.mUIGcBankBalancesTable == null))
                {
                    this.mUIGcBankBalancesTable = new UIGcBankBalancesTable(this);
                }
                return this.mUIGcBankBalancesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcBankBalancesTable mUIGcBankBalancesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcBankBalancesTable : DXGrid
    {
        
        public UIGcBankBalancesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalances";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39666 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Wolfgang Amadeus" +
                    " Mozart  (Vaktbokdato: 15.08.2016)");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public DXButton UISaldotidButton
        {
            get
            {
                if ((this.mUISaldotidButton == null))
                {
                    this.mUISaldotidButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISaldotidButton.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalancesGridControlCellButton[View]gvBankBalances[Row]10[Column]colBankName" +
                        "1";
                    this.mUISaldotidButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCellButton";
                    this.mUISaldotidButton.WindowTitles.Add("Gat ver. 6.4.3.39666 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Wolfgang Amadeus" +
                            " Mozart  (Vaktbokdato: 15.08.2016)");
                    this.mUISaldotidButton.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUISaldotidButton;
            }
        }
        
        public DXCell UIItem096Cell
        {
            get
            {
                if ((this.mUIItem096Cell == null))
                {
                    this.mUIItem096Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem096Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalancesGridControlCell[View]gvBankBalances[Row]10[Column]colBalance1";
                    this.mUIItem096Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem096Cell.WindowTitles.Add("Gat ver. 6.4.3.39666 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Wolfgang Amadeus" +
                            " Mozart  (Vaktbokdato: 15.08.2016)");
                    this.mUIItem096Cell.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIItem096Cell;
            }
        }
        
        public DXCell UIItem450Cell
        {
            get
            {
                if ((this.mUIItem450Cell == null))
                {
                    this.mUIItem450Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem450Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalancesGridControlCell[View]gvTransactions[Row]1[Column]colValue";
                    this.mUIItem450Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem450Cell.WindowTitles.Add("Gat ver. 6.4.3.39666 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Wolfgang Amadeus" +
                            " Mozart  (Vaktbokdato: 15.08.2016)");
                    this.mUIItem450Cell.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIItem450Cell;
            }
        }
        
        public DXCell UIItem546Cell
        {
            get
            {
                if ((this.mUIItem546Cell == null))
                {
                    this.mUIItem546Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem546Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalancesGridControlCell[View]gvTransactions[Row]0[Column]colValue";
                    this.mUIItem546Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem546Cell.WindowTitles.Add("Gat ver. 6.4.3.39666 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Wolfgang Amadeus" +
                            " Mozart  (Vaktbokdato: 15.08.2016)");
                    this.mUIItem546Cell.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIItem546Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUISaldotidButton;
        
        private DXCell mUIItem096Cell;
        
        private DXCell mUIItem450Cell;
        
        private DXCell mUIItem546Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow5 : WinWindow
    {
        
        public UIItemWindow5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxGridSite";
            this.WindowTitles.Add("Gat ver. 6.4.3.39666 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Wolfgang Amadeus" +
                    " Mozart  (Vaktbokdato: 15.08.2016)");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsatteClient
        {
            get
            {
                if ((this.mUIAnsatteClient == null))
                {
                    this.mUIAnsatteClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsatteClient.WindowTitles.Add("Gat ver. 6.4.3.39666 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Wolfgang Amadeus" +
                            " Mozart  (Vaktbokdato: 15.08.2016)");
                    this.mUIAnsatteClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIAnsatteClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsatteClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver64339666ASCLAvWindow2 : WinWindow
    {
        
        public UIGatver64339666ASCLAvWindow2()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIBankBalanceListContrCustom1 UIBankBalanceListContrCustom
        {
            get
            {
                if ((this.mUIBankBalanceListContrCustom == null))
                {
                    this.mUIBankBalanceListContrCustom = new UIBankBalanceListContrCustom1(this);
                }
                return this.mUIBankBalanceListContrCustom;
            }
        }
        
        public UIGatver64339666ASCLAvTitleBar UIGatver64339666ASCLAvTitleBar
        {
            get
            {
                if ((this.mUIGatver64339666ASCLAvTitleBar == null))
                {
                    this.mUIGatver64339666ASCLAvTitleBar = new UIGatver64339666ASCLAvTitleBar(this);
                }
                return this.mUIGatver64339666ASCLAvTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIBankBalanceListContrCustom1 mUIBankBalanceListContrCustom;
        
        private UIGatver64339666ASCLAvTitleBar mUIGatver64339666ASCLAvTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIBankBalanceListContrCustom1 : DXTestControl
    {
        
        public UIBankBalanceListContrCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BankBalanceListControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BankBalanceListControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39666 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Franz Schubert  " +
                    "(Vaktbokdato: 15.08.2016)");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIGcBankBalancesTable1 UIGcBankBalancesTable
        {
            get
            {
                if ((this.mUIGcBankBalancesTable == null))
                {
                    this.mUIGcBankBalancesTable = new UIGcBankBalancesTable1(this);
                }
                return this.mUIGcBankBalancesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcBankBalancesTable1 mUIGcBankBalancesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcBankBalancesTable1 : DXGrid
    {
        
        public UIGcBankBalancesTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalances";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39666 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Franz Schubert  " +
                    "(Vaktbokdato: 15.08.2016)");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public DXButton UISaldotidButton
        {
            get
            {
                if ((this.mUISaldotidButton == null))
                {
                    this.mUISaldotidButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISaldotidButton.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalancesGridControlCellButton[View]gvBankBalances[Row]10[Column]colBankName" +
                        "1";
                    this.mUISaldotidButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCellButton";
                    this.mUISaldotidButton.WindowTitles.Add("Gat ver. 6.4.3.39666 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Franz Schubert  " +
                            "(Vaktbokdato: 15.08.2016)");
                    this.mUISaldotidButton.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUISaldotidButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUISaldotidButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver64339666ASCLAvTitleBar : WinTitleBar
    {
        
        public UIGatver64339666ASCLAvTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Gat ver. 6.4.3.39666 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Franz Schubert  " +
                    "(Vaktbokdato: 15.08.2016)");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Gat ver. 6.4.3.39666 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Franz Schubert  " +
                            "(Vaktbokdato: 15.08.2016)");
                    this.mUICloseButton.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGT4000BekreftWindow : WinWindow
    {
        
        public UIGT4000BekreftWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "GT-4000 - Bekreft";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfmMessage";
            this.WindowTitles.Add("GT-4000 - Bekreft");
            #endregion
        }
        
        #region Properties
        public UIItemWindow6 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow6(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow6 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow6 : WinWindow
    {
        
        public UIItemWindow6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.WindowTitles.Add("GT-4000 - Bekreft");
            #endregion
        }
        
        #region Properties
        public UIGT4000BekreftClient UIGT4000BekreftClient
        {
            get
            {
                if ((this.mUIGT4000BekreftClient == null))
                {
                    this.mUIGT4000BekreftClient = new UIGT4000BekreftClient(this);
                }
                return this.mUIGT4000BekreftClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGT4000BekreftClient mUIGT4000BekreftClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGT4000BekreftClient : WinClient
    {
        
        public UIGT4000BekreftClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("GT-4000 - Bekreft");
            #endregion
        }
        
        #region Properties
        public WinButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[WinButton.PropertyNames.Name] = "Ja";
                    this.mUIJAButton.WindowTitles.Add("GT-4000 - Bekreft");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIFraværiarbeidsplanWindow : DXWindow
    {
        
        public UIFraværiarbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Fravær i arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Fravær i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINbcAbsenceNavBar UINbcAbsenceNavBar
        {
            get
            {
                if ((this.mUINbcAbsenceNavBar == null))
                {
                    this.mUINbcAbsenceNavBar = new UINbcAbsenceNavBar(this);
                }
                return this.mUINbcAbsenceNavBar;
            }
        }
        
        public UIGSPanelControlClient5 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient5(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UINbcAbsenceNavBar mUINbcAbsenceNavBar;
        
        private UIGSPanelControlClient5 mUIGSPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINbcAbsenceNavBar : DXNavBar
    {
        
        public UINbcAbsenceNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbcAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Fravær i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINavBarGroupControlCoScrollableControl UINavBarGroupControlCoScrollableControl
        {
            get
            {
                if ((this.mUINavBarGroupControlCoScrollableControl == null))
                {
                    this.mUINavBarGroupControlCoScrollableControl = new UINavBarGroupControlCoScrollableControl(this);
                }
                return this.mUINavBarGroupControlCoScrollableControl;
            }
        }
        
        public DXNavBarGroup UIAnnetNavBarGroup
        {
            get
            {
                if ((this.mUIAnnetNavBarGroup == null))
                {
                    this.mUIAnnetNavBarGroup = new DXNavBarGroup(this);
                    #region Search Criteria
                    this.mUIAnnetNavBarGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "Annet";
                    this.mUIAnnetNavBarGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
                    this.mUIAnnetNavBarGroup.WindowTitles.Add("Fravær i arbeidsplan");
                    #endregion
                }
                return this.mUIAnnetNavBarGroup;
            }
        }
        
        public UINavBarGroupControlCoScrollableControl1 UINavBarGroupControlCoScrollableControl1
        {
            get
            {
                if ((this.mUINavBarGroupControlCoScrollableControl1 == null))
                {
                    this.mUINavBarGroupControlCoScrollableControl1 = new UINavBarGroupControlCoScrollableControl1(this);
                }
                return this.mUINavBarGroupControlCoScrollableControl1;
            }
        }
        #endregion
        
        #region Fields
        private UINavBarGroupControlCoScrollableControl mUINavBarGroupControlCoScrollableControl;
        
        private DXNavBarGroup mUIAnnetNavBarGroup;
        
        private UINavBarGroupControlCoScrollableControl1 mUINavBarGroupControlCoScrollableControl1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINavBarGroupControlCoScrollableControl : DXScrollableControl
    {
        
        public UINavBarGroupControlCoScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarGroupControlContainer2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Fravær i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIDdlAbsCodeLookUpEdit UIDdlAbsCodeLookUpEdit
        {
            get
            {
                if ((this.mUIDdlAbsCodeLookUpEdit == null))
                {
                    this.mUIDdlAbsCodeLookUpEdit = new UIDdlAbsCodeLookUpEdit(this);
                }
                return this.mUIDdlAbsCodeLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIDdlAbsCodeLookUpEdit mUIDdlAbsCodeLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDdlAbsCodeLookUpEdit : DXLookUpEdit
    {
        
        public UIDdlAbsCodeLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddlAbsCode";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
            this.WindowTitles.Add("Fravær i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXWindow UIPopupLookUpEditFormWindow
        {
            get
            {
                if ((this.mUIPopupLookUpEditFormWindow == null))
                {
                    this.mUIPopupLookUpEditFormWindow = new DXWindow(this);
                    #region Search Criteria
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.Name] = "ddlAbsCodePopupForm";
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupLookUpEditForm";
                    this.mUIPopupLookUpEditFormWindow.WindowTitles.Add("Fravær i arbeidsplan");
                    #endregion
                }
                return this.mUIPopupLookUpEditFormWindow;
            }
        }
        #endregion
        
        #region Fields
        private DXWindow mUIPopupLookUpEditFormWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINavBarGroupControlCoScrollableControl1 : DXScrollableControl
    {
        
        public UINavBarGroupControlCoScrollableControl1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarGroupControlContainer6";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public UIGrpBankClient UIGrpBankClient
        {
            get
            {
                if ((this.mUIGrpBankClient == null))
                {
                    this.mUIGrpBankClient = new UIGrpBankClient(this);
                }
                return this.mUIGrpBankClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpBankClient mUIGrpBankClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpBankClient : DXTestControl
    {
        
        public UIGrpBankClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpBank";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIENumberEdit
        {
            get
            {
                if ((this.mUIENumberEdit == null))
                {
                    this.mUIENumberEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENumberEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "eNumber";
                    this.mUIENumberEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENumberEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIENumberEdit.WindowTitles.Add("Fravær i arbeidsplan");
                    #endregion
                }
                return this.mUIENumberEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIENumberEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSPanelControlClient5 : DXTestControl
    {
        
        public UIGSPanelControlClient5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fravær i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSave";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Fravær i arbeidsplan");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow121 : WinWindow
    {
        
        public UIItemWindow121()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIFunksjonerMenuItem UIFunksjonerMenuItem
        {
            get
            {
                if ((this.mUIFunksjonerMenuItem == null))
                {
                    this.mUIFunksjonerMenuItem = new UIFunksjonerMenuItem(this);
                }
                return this.mUIFunksjonerMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIFunksjonerMenuItem mUIFunksjonerMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIFunksjonerMenuItem : WinMenuItem
    {
        
        public UIFunksjonerMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "Funksjoner";
            #endregion
        }
        
        #region Properties
        public WinButton UISettinnfraværButton
        {
            get
            {
                if ((this.mUISettinnfraværButton == null))
                {
                    this.mUISettinnfraværButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISettinnfraværButton.SearchProperties[WinButton.PropertyNames.Name] = "Sett inn fravær...";
                    this.mUISettinnfraværButton.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mUISettinnfraværButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISettinnfraværButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIFraværiarbeidsplanWindow1 : WinWindow
    {
        
        public UIFraværiarbeidsplanWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Fravær i arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Fravær i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINbcAbsenceNavBar1 UINbcAbsenceNavBar
        {
            get
            {
                if ((this.mUINbcAbsenceNavBar == null))
                {
                    this.mUINbcAbsenceNavBar = new UINbcAbsenceNavBar1(this);
                }
                return this.mUINbcAbsenceNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UINbcAbsenceNavBar1 mUINbcAbsenceNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINbcAbsenceNavBar1 : DXNavBar
    {
        
        public UINbcAbsenceNavBar1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbcAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public UINavBarGroupControlCoScrollableControl2 UINavBarGroupControlCoScrollableControl
        {
            get
            {
                if ((this.mUINavBarGroupControlCoScrollableControl == null))
                {
                    this.mUINavBarGroupControlCoScrollableControl = new UINavBarGroupControlCoScrollableControl2(this);
                }
                return this.mUINavBarGroupControlCoScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINavBarGroupControlCoScrollableControl2 mUINavBarGroupControlCoScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINavBarGroupControlCoScrollableControl2 : DXScrollableControl
    {
        
        public UINavBarGroupControlCoScrollableControl2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarGroupControlContainer6";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public UIGrpBankClient1 UIGrpBankClient
        {
            get
            {
                if ((this.mUIGrpBankClient == null))
                {
                    this.mUIGrpBankClient = new UIGrpBankClient1(this);
                }
                return this.mUIGrpBankClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpBankClient1 mUIGrpBankClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpBankClient1 : DXTestControl
    {
        
        public UIGrpBankClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpBank";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Fravær i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public WinClient UINeBankValueClient
        {
            get
            {
                if ((this.mUINeBankValueClient == null))
                {
                    this.mUINeBankValueClient = new WinClient(this);
                    #region Search Criteria
                    this.mUINeBankValueClient.WindowTitles.Add("Fravær i arbeidsplan");
                    #endregion
                }
                return this.mUINeBankValueClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUINeBankValueClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanOmregnettWindow15 : DXWindow
    {
        
        public UIArbeidsplanOmregnettWindow15()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient54 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient54(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient54 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient54 : DXTestControl
    {
        
        public UIPnlRosterPlanClient54(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable44 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable44(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        
        public UIDpnlColumnsDockPanel7 UIDpnlColumnsDockPanel
        {
            get
            {
                if ((this.mUIDpnlColumnsDockPanel == null))
                {
                    this.mUIDpnlColumnsDockPanel = new UIDpnlColumnsDockPanel7(this);
                }
                return this.mUIDpnlColumnsDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable44 mUIGcRosterPlanTable;
        
        private UIDpnlColumnsDockPanel7 mUIDpnlColumnsDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable44 : DXGrid
    {
        
        public UIGcRosterPlanTable44(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public DXCell UIItem775Cell
        {
            get
            {
                if ((this.mUIItem775Cell == null))
                {
                    this.mUIItem775Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem775Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_Calc_TotalCalculat" +
                        "edSum_2";
                    this.mUIItem775Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem775Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Redigeringsmodus [Planen er låst av deg])" +
                            "");
                    #endregion
                }
                return this.mUIItem775Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem775Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDpnlColumnsDockPanel7 : DXDockPanel
    {
        
        public UIDpnlColumnsDockPanel7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlColumns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Redigeringsmodus [Planen er låst av deg])" +
                    "");
            #endregion
        }
        
        #region Properties
        public UIDockPanel1_ContainerCustom7 UIDockPanel1_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel1_ContainerCustom == null))
                {
                    this.mUIDockPanel1_ContainerCustom = new UIDockPanel1_ContainerCustom7(this);
                }
                return this.mUIDockPanel1_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel1_ContainerCustom7 mUIDockPanel1_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDockPanel1_ContainerCustom7 : DXTestControl
    {
        
        public UIDockPanel1_ContainerCustom7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Redigeringsmodus [Planen er låst av deg])" +
                    "");
            #endregion
        }
        
        #region Properties
        public UIGcExtraGridTable7 UIGcExtraGridTable
        {
            get
            {
                if ((this.mUIGcExtraGridTable == null))
                {
                    this.mUIGcExtraGridTable = new UIGcExtraGridTable7(this);
                }
                return this.mUIGcExtraGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcExtraGridTable7 mUIGcExtraGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcExtraGridTable7 : DXGrid
    {
        
        public UIGcExtraGridTable7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Redigeringsmodus [Planen er låst av deg])" +
                    "");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem17Cell
        {
            get
            {
                if ((this.mUIItem17Cell == null))
                {
                    this.mUIItem17Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem17Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_HoursPerWeekAverage";
                    this.mUIItem17Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem17Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Redigeringsmodus [Planen er låst av deg])" +
                            "");
                    #endregion
                }
                return this.mUIItem17Cell;
            }
        }
        
        public DXCell UIItem68Cell
        {
            get
            {
                if ((this.mUIItem68Cell == null))
                {
                    this.mUIItem68Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem68Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_TotalWorkingHoursFor" +
                        "Line";
                    this.mUIItem68Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem68Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Redigeringsmodus [Planen er låst av deg])" +
                            "");
                    #endregion
                }
                return this.mUIItem68Cell;
            }
        }
        
        public DXCell UIItem7119Cell
        {
            get
            {
                if ((this.mUIItem7119Cell == null))
                {
                    this.mUIItem7119Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem7119Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_ActualWorkingHoursAs" +
                        "CalculatatedTime";
                    this.mUIItem7119Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem7119Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Redigeringsmodus [Planen er låst av deg])" +
                            "");
                    #endregion
                }
                return this.mUIItem7119Cell;
            }
        }
        
        public DXCell UIItem178Cell
        {
            get
            {
                if ((this.mUIItem178Cell == null))
                {
                    this.mUIItem178Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem178Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_ActualWeekAverageWor" +
                        "kingHoursAsCalculatedTime";
                    this.mUIItem178Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem178Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Redigeringsmodus [Planen er låst av deg])" +
                            "");
                    #endregion
                }
                return this.mUIItem178Cell;
            }
        }
        
        public DXCell UIItem7881Cell
        {
            get
            {
                if ((this.mUIItem7881Cell == null))
                {
                    this.mUIItem7881Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem7881Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_CalculatedTimeLeftOv" +
                        "er";
                    this.mUIItem7881Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem7881Cell.WindowTitles.Add("Arbeidsplan: Omregnet tid Kalenderplan (Redigeringsmodus [Planen er låst av deg])" +
                            "");
                    #endregion
                }
                return this.mUIItem7881Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem17Cell;
        
        private DXCell mUIItem68Cell;
        
        private DXCell mUIItem7119Cell;
        
        private DXCell mUIItem178Cell;
        
        private DXCell mUIItem7881Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver64339716ASCLAvWindow : WinWindow
    {
        
        public UIGatver64339716ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow7 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow7(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow13 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow13(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIBankBalanceListContrCustom2 UIBankBalanceListContrCustom
        {
            get
            {
                if ((this.mUIBankBalanceListContrCustom == null))
                {
                    this.mUIBankBalanceListContrCustom = new UIBankBalanceListContrCustom2(this);
                }
                return this.mUIBankBalanceListContrCustom;
            }
        }
        
        public UIItemWindow22 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow22(this);
                }
                return this.mUIItemWindow2;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow7 mUIItemWindow;
        
        private UIItemWindow13 mUIItemWindow1;
        
        private UIBankBalanceListContrCustom2 mUIBankBalanceListContrCustom;
        
        private UIItemWindow22 mUIItemWindow2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow7 : WinWindow
    {
        
        public UIItemWindow7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.3.39716 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Johann Sebastian" +
                    " Bach  (Vaktbokdato: 16.08.2016)");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsattClient
        {
            get
            {
                if ((this.mUIAnsattClient == null))
                {
                    this.mUIAnsattClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsattClient.WindowTitles.Add("Gat ver. 6.4.3.39716 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Johann Sebastian" +
                            " Bach  (Vaktbokdato: 16.08.2016)");
                    this.mUIAnsattClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIAnsattClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsattClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow13 : WinWindow
    {
        
        public UIItemWindow13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxGridSite";
            this.WindowTitles.Add("Gat ver. 6.4.3.39716 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Johann Sebastian" +
                    " Bach  (Vaktbokdato: 16.08.2016)");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsatteClient
        {
            get
            {
                if ((this.mUIAnsatteClient == null))
                {
                    this.mUIAnsatteClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsatteClient.WindowTitles.Add("Gat ver. 6.4.3.39716 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Johann Sebastian" +
                            " Bach  (Vaktbokdato: 16.08.2016)");
                    this.mUIAnsatteClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIAnsatteClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsatteClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIBankBalanceListContrCustom2 : DXTestControl
    {
        
        public UIBankBalanceListContrCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BankBalanceListControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BankBalanceListControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39716 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Frederic Chopin " +
                    " (Vaktbokdato: 16.08.2016)");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIGcBankBalancesTable2 UIGcBankBalancesTable
        {
            get
            {
                if ((this.mUIGcBankBalancesTable == null))
                {
                    this.mUIGcBankBalancesTable = new UIGcBankBalancesTable2(this);
                }
                return this.mUIGcBankBalancesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcBankBalancesTable2 mUIGcBankBalancesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcBankBalancesTable2 : DXGrid
    {
        
        public UIGcBankBalancesTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalances";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39716 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Frederic Chopin " +
                    " (Vaktbokdato: 16.08.2016)");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public DXButton UIAvspaseringButton
        {
            get
            {
                if ((this.mUIAvspaseringButton == null))
                {
                    this.mUIAvspaseringButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAvspaseringButton.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalancesGridControlCellButton[View]gvBankBalances[Row]1[Column]colBankName1" +
                        "";
                    this.mUIAvspaseringButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCellButton";
                    this.mUIAvspaseringButton.WindowTitles.Add("Gat ver. 6.4.3.39716 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Frederic Chopin " +
                            " (Vaktbokdato: 16.08.2016)");
                    this.mUIAvspaseringButton.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIAvspaseringButton;
            }
        }
        
        public DXCell UIItem775Cell
        {
            get
            {
                if ((this.mUIItem775Cell == null))
                {
                    this.mUIItem775Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem775Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalancesGridControlCell[View]gvTransactions[Row]0[Column]colValue";
                    this.mUIItem775Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem775Cell.WindowTitles.Add("Gat ver. 6.4.3.39716 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Frederic Chopin " +
                            " (Vaktbokdato: 16.08.2016)");
                    this.mUIItem775Cell.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIItem775Cell;
            }
        }
        
        public DXCell UIItem1182Cell
        {
            get
            {
                if ((this.mUIItem1182Cell == null))
                {
                    this.mUIItem1182Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1182Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalancesGridControlCell[View]gvTransactions[Row]2[Column]colValue";
                    this.mUIItem1182Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1182Cell.WindowTitles.Add("Gat ver. 6.4.3.39716 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Frederic Chopin " +
                            " (Vaktbokdato: 16.08.2016)");
                    this.mUIItem1182Cell.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIItem1182Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIAvspaseringButton;
        
        private DXCell mUIItem775Cell;
        
        private DXCell mUIItem1182Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow22 : WinWindow
    {
        
        public UIItemWindow22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39716 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Frederic Chopin " +
                    " (Vaktbokdato: 16.08.2016)");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver64339716ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver64339716ASCLAvClient == null))
                {
                    this.mUIGatver64339716ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver64339716ASCLAvClient.WindowTitles.Add("Gat ver. 6.4.3.39716 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Frederic Chopin " +
                            " (Vaktbokdato: 16.08.2016)");
                    this.mUIGatver64339716ASCLAvClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIGatver64339716ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver64339716ASCLAvClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver64339716ASCLAvWindow1 : WinWindow
    {
        
        public UIGatver64339716ASCLAvWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIBankBalanceListContrCustom3 UIBankBalanceListContrCustom
        {
            get
            {
                if ((this.mUIBankBalanceListContrCustom == null))
                {
                    this.mUIBankBalanceListContrCustom = new UIBankBalanceListContrCustom3(this);
                }
                return this.mUIBankBalanceListContrCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIBankBalanceListContrCustom3 mUIBankBalanceListContrCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIBankBalanceListContrCustom3 : DXTestControl
    {
        
        public UIBankBalanceListContrCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BankBalanceListControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BankBalanceListControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39716 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Wolfgang Amadeus" +
                    " Mozart  (Vaktbokdato: 16.08.2016)");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIGcBankBalancesTable3 UIGcBankBalancesTable
        {
            get
            {
                if ((this.mUIGcBankBalancesTable == null))
                {
                    this.mUIGcBankBalancesTable = new UIGcBankBalancesTable3(this);
                }
                return this.mUIGcBankBalancesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcBankBalancesTable3 mUIGcBankBalancesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcBankBalancesTable3 : DXGrid
    {
        
        public UIGcBankBalancesTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalances";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39716 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Wolfgang Amadeus" +
                    " Mozart  (Vaktbokdato: 16.08.2016)");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public DXCell UIIverksettingavarbeidCell
        {
            get
            {
                if ((this.mUIIverksettingavarbeidCell == null))
                {
                    this.mUIIverksettingavarbeidCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIIverksettingavarbeidCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalancesGridControlCell[View]gvTransactions-2[Row]0[Column]colComment";
                    this.mUIIverksettingavarbeidCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIverksettingavarbeidCell.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIIverksettingavarbeidCell;
            }
        }
        
        public DXCell UIItem450Cell
        {
            get
            {
                if ((this.mUIItem450Cell == null))
                {
                    this.mUIItem450Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem450Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalancesGridControlCell[View]gvTransactions-2[Row]0[Column]colValue";
                    this.mUIItem450Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem450Cell.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIItem450Cell;
            }
        }
        
        public DXCell UIIverksettingavarbeidCell1
        {
            get
            {
                if ((this.mUIIverksettingavarbeidCell1 == null))
                {
                    this.mUIIverksettingavarbeidCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIIverksettingavarbeidCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalancesGridControlCell[View]gvTransactions-2[Row]1[Column]colComment";
                    this.mUIIverksettingavarbeidCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIverksettingavarbeidCell1.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIIverksettingavarbeidCell1;
            }
        }
        
        public DXCell UIItem546Cell
        {
            get
            {
                if ((this.mUIItem546Cell == null))
                {
                    this.mUIItem546Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem546Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalancesGridControlCell[View]gvTransactions-2[Row]1[Column]colValue";
                    this.mUIItem546Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    #endregion
                }
                return this.mUIItem546Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIIverksettingavarbeidCell;
        
        private DXCell mUIItem450Cell;
        
        private DXCell mUIIverksettingavarbeidCell1;
        
        private DXCell mUIItem546Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver65041137ASCLAvWindow : WinWindow
    {
        
        public UIGatver65041137ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIBankBalanceListContrCustom4 UIBankBalanceListContrCustom
        {
            get
            {
                if ((this.mUIBankBalanceListContrCustom == null))
                {
                    this.mUIBankBalanceListContrCustom = new UIBankBalanceListContrCustom4(this);
                }
                return this.mUIBankBalanceListContrCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIBankBalanceListContrCustom4 mUIBankBalanceListContrCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIBankBalanceListContrCustom4 : DXTestControl
    {
        
        public UIBankBalanceListContrCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BankBalanceListControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BankBalanceListControl";
            this.WindowTitles.Add("Gat ver. 6.5.0.41137 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Frederic Chopin " +
                    " (Vaktbokdato: 25.10.2016)");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UICeExpandRowsCheckBox
        {
            get
            {
                if ((this.mUICeExpandRowsCheckBox == null))
                {
                    this.mUICeExpandRowsCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUICeExpandRowsCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "ceExpandRows";
                    this.mUICeExpandRowsCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUICeExpandRowsCheckBox.WindowTitles.Add("Gat ver. 6.5.0.41137 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Frederic Chopin " +
                            " (Vaktbokdato: 25.10.2016)");
                    #endregion
                }
                return this.mUICeExpandRowsCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUICeExpandRowsCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver65041137ASCLAvWindow1 : WinWindow
    {
        
        public UIGatver65041137ASCLAvWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcMainPanelClient3 UIPcMainPanelClient
        {
            get
            {
                if ((this.mUIPcMainPanelClient == null))
                {
                    this.mUIPcMainPanelClient = new UIPcMainPanelClient3(this);
                }
                return this.mUIPcMainPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcMainPanelClient3 mUIPcMainPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcMainPanelClient3 : DXTestControl
    {
        
        public UIPcMainPanelClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat ver. 6.5.0.41137 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UITcPanListsTabList3 UITcPanListsTabList
        {
            get
            {
                if ((this.mUITcPanListsTabList == null))
                {
                    this.mUITcPanListsTabList = new UITcPanListsTabList3(this);
                }
                return this.mUITcPanListsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcPanListsTabList3 mUITcPanListsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcPanListsTabList3 : DXTestControl
    {
        
        public UITcPanListsTabList3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcPanLists";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Gat ver. 6.5.0.41137 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UITpWishPlanListClient2 UITpWishPlanListClient
        {
            get
            {
                if ((this.mUITpWishPlanListClient == null))
                {
                    this.mUITpWishPlanListClient = new UITpWishPlanListClient2(this);
                }
                return this.mUITpWishPlanListClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpWishPlanListClient2 mUITpWishPlanListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpWishPlanListClient2 : DXTestControl
    {
        
        public UITpWishPlanListClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpWishPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Gat ver. 6.5.0.41137 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UIWishPlanListCustom UIWishPlanListCustom
        {
            get
            {
                if ((this.mUIWishPlanListCustom == null))
                {
                    this.mUIWishPlanListCustom = new UIWishPlanListCustom(this);
                }
                return this.mUIWishPlanListCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIWishPlanListCustom mUIWishPlanListCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIWishPlanListCustom : DXTestControl
    {
        
        public UIWishPlanListCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "wishPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WishPlanList";
            this.WindowTitles.Add("Gat ver. 6.5.0.41137 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl2Client3 UIGsPanelControl2Client
        {
            get
            {
                if ((this.mUIGsPanelControl2Client == null))
                {
                    this.mUIGsPanelControl2Client = new UIGsPanelControl2Client3(this);
                }
                return this.mUIGsPanelControl2Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl2Client3 mUIGsPanelControl2Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl2Client3 : DXTestControl
    {
        
        public UIGsPanelControl2Client3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat ver. 6.5.0.41137 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UIRibbonControl1Ribbon UIRibbonControl1Ribbon
        {
            get
            {
                if ((this.mUIRibbonControl1Ribbon == null))
                {
                    this.mUIRibbonControl1Ribbon = new UIRibbonControl1Ribbon(this);
                }
                return this.mUIRibbonControl1Ribbon;
            }
        }
        
        public UIGcWishPeriodsTable1 UIGcWishPeriodsTable
        {
            get
            {
                if ((this.mUIGcWishPeriodsTable == null))
                {
                    this.mUIGcWishPeriodsTable = new UIGcWishPeriodsTable1(this);
                }
                return this.mUIGcWishPeriodsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonControl1Ribbon mUIRibbonControl1Ribbon;
        
        private UIGcWishPeriodsTable1 mUIGcWishPeriodsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRibbonControl1Ribbon : DXRibbon
    {
        
        public UIRibbonControl1Ribbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Gat ver. 6.5.0.41137 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UIRpHomeRibbonPage UIRpHomeRibbonPage
        {
            get
            {
                if ((this.mUIRpHomeRibbonPage == null))
                {
                    this.mUIRpHomeRibbonPage = new UIRpHomeRibbonPage(this);
                }
                return this.mUIRpHomeRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpHomeRibbonPage mUIRpHomeRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpHomeRibbonPage : DXRibbonPage
    {
        
        public UIRpHomeRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpHome";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat ver. 6.5.0.41137 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UIRpgPeriodRibbonPageGroup UIRpgPeriodRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgPeriodRibbonPageGroup == null))
                {
                    this.mUIRpgPeriodRibbonPageGroup = new UIRpgPeriodRibbonPageGroup(this);
                }
                return this.mUIRpgPeriodRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgPeriodRibbonPageGroup mUIRpgPeriodRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpgPeriodRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgPeriodRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat ver. 6.5.0.41137 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIEndretilfase1RibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIEndretilfase1RibbonBaseButtonItem == null))
                {
                    this.mUIEndretilfase1RibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIEndretilfase1RibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiChangeToPhase1";
                    this.mUIEndretilfase1RibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIEndretilfase1RibbonBaseButtonItem.WindowTitles.Add("Gat ver. 6.5.0.41137 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
                    #endregion
                }
                return this.mUIEndretilfase1RibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIÅpneRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIÅpneRibbonBaseButtonItem == null))
                {
                    this.mUIÅpneRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIÅpneRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiOpenPeriod";
                    this.mUIÅpneRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIÅpneRibbonBaseButtonItem.WindowTitles.Add("Gat ver. 6.5.0.41137 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
                    #endregion
                }
                return this.mUIÅpneRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIEndretilfase2RibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIEndretilfase2RibbonBaseButtonItem == null))
                {
                    this.mUIEndretilfase2RibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIEndretilfase2RibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiChangeToPhase2";
                    this.mUIEndretilfase2RibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIEndretilfase2RibbonBaseButtonItem.WindowTitles.Add("Gat ver. 6.5.0.41137 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
                    #endregion
                }
                return this.mUIEndretilfase2RibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIEndretilfase3RibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIEndretilfase3RibbonBaseButtonItem == null))
                {
                    this.mUIEndretilfase3RibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIEndretilfase3RibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiChangeToPhase3";
                    this.mUIEndretilfase3RibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIEndretilfase3RibbonBaseButtonItem.WindowTitles.Add("Gat ver. 6.5.0.41137 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
                    #endregion
                }
                return this.mUIEndretilfase3RibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIEndretilfase1RibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIÅpneRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIEndretilfase2RibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIEndretilfase3RibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcWishPeriodsTable1 : DXGrid
    {
        
        public UIGcWishPeriodsTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcWishPeriods";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Gat ver. 6.5.0.41137 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public DXCell UIØnskeplanforOmregnetCell
        {
            get
            {
                if ((this.mUIØnskeplanforOmregnetCell == null))
                {
                    this.mUIØnskeplanforOmregnetCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIØnskeplanforOmregnetCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcWishPeriodsGridControlCell[View]gvDetails[Row]0[Column]gcolPlanName";
                    this.mUIØnskeplanforOmregnetCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIØnskeplanforOmregnetCell.WindowTitles.Add("Gat ver. 6.5.0.41137 - (ASCL - Avd: 5140-Omregnet tid) - Vaktbok");
                    #endregion
                }
                return this.mUIØnskeplanforOmregnetCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIØnskeplanforOmregnetCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanØnskeplanWindow42 : DXWindow
    {
        
        public UIArbeidsplanØnskeplanWindow42()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon6 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon6(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon6 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon6 : DXRibbon
    {
        
        public UIRcMenuRibbon6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public UIPopupContainerEditPopupEdit3 UIPopupContainerEditPopupEdit
        {
            get
            {
                if ((this.mUIPopupContainerEditPopupEdit == null))
                {
                    this.mUIPopupContainerEditPopupEdit = new UIPopupContainerEditPopupEdit3(this);
                }
                return this.mUIPopupContainerEditPopupEdit;
            }
        }
        
        public UIRpFilterRibbonPage5 UIRpFilterRibbonPage
        {
            get
            {
                if ((this.mUIRpFilterRibbonPage == null))
                {
                    this.mUIRpFilterRibbonPage = new UIRpFilterRibbonPage5(this);
                }
                return this.mUIRpFilterRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupContainerEditPopupEdit3 mUIPopupContainerEditPopupEdit;
        
        private UIRpFilterRibbonPage5 mUIRpFilterRibbonPage;
        #endregion
    }

    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupContainerEditPopupEdit3 : DXPopupEdit
    {

        public UIPopupContainerEditPopupEdit3(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuPopupContainerEdit[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerEdit";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
            #endregion
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupContainerFormWindow3 : DXWindow
    {
        
        public UIPopupContainerFormWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuPopupContainerEdit[0]PopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerForm";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public UIDdlFilterPopupContaiClient1 UIDdlFilterPopupContaiClient
        {
            get
            {
                if ((this.mUIDdlFilterPopupContaiClient == null))
                {
                    this.mUIDdlFilterPopupContaiClient = new UIDdlFilterPopupContaiClient1(this);
                }
                return this.mUIDdlFilterPopupContaiClient;
            }
        }
        #endregion
        
        #region Fields
        private UIDdlFilterPopupContaiClient1 mUIDdlFilterPopupContaiClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDdlFilterPopupContaiClient1 : DXTestControl
    {
        
        public UIDdlFilterPopupContaiClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddlFilterPopupContainerControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerControl";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public UIDdlFilterTreeListTreeList1 UIDdlFilterTreeListTreeList
        {
            get
            {
                if ((this.mUIDdlFilterTreeListTreeList == null))
                {
                    this.mUIDdlFilterTreeListTreeList = new UIDdlFilterTreeListTreeList1(this);
                }
                return this.mUIDdlFilterTreeListTreeList;
            }
        }
        #endregion
        
        #region Fields
        private UIDdlFilterTreeListTreeList1 mUIDdlFilterTreeListTreeList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDdlFilterTreeListTreeList1 : DXTreeList
    {
        
        public UIDdlFilterTreeListTreeList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddlFilterTreeList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTreeList";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public UINode2TreeListNode2 UINode2TreeListNode
        {
            get
            {
                if ((this.mUINode2TreeListNode == null))
                {
                    this.mUINode2TreeListNode = new UINode2TreeListNode2(this);
                }
                return this.mUINode2TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode2TreeListNode2 mUINode2TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINode2TreeListNode2 : DXTreeListNode
    {
        
        public UINode2TreeListNode2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode1 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode1(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        
        public DXTreeListNode UINode3TreeListNode
        {
            get
            {
                if ((this.mUINode3TreeListNode == null))
                {
                    this.mUINode3TreeListNode = new DXTreeListNode(this);
                    #region Search Criteria
                    this.mUINode3TreeListNode.SearchProperties[DXTestControl.PropertyNames.Name] = "Node3";
                    this.mUINode3TreeListNode.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
                    this.mUINode3TreeListNode.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
                    #endregion
                }
                return this.mUINode3TreeListNode;
            }
        }
        
        public DXTreeListNode UINode2TreeListNode1
        {
            get
            {
                if ((this.mUINode2TreeListNode1 == null))
                {
                    this.mUINode2TreeListNode1 = new DXTreeListNode(this);
                    #region Search Criteria
                    this.mUINode2TreeListNode1.SearchProperties[DXTestControl.PropertyNames.Name] = "Node2";
                    this.mUINode2TreeListNode1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
                    this.mUINode2TreeListNode1.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUINode2TreeListNode1.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
                    #endregion
                }
                return this.mUINode2TreeListNode1;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode1 mUINode0TreeListNode;
        
        private DXTreeListNode mUINode3TreeListNode;
        
        private DXTreeListNode mUINode2TreeListNode1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINode0TreeListNode1 : DXTreeListNode
    {
        
        public UINode0TreeListNode1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public DXTestControl UINode0TreeListNodeCheckBox
        {
            get
            {
                if ((this.mUINode0TreeListNodeCheckBox == null))
                {
                    this.mUINode0TreeListNodeCheckBox = new DXTestControl(this);
                    #region Search Criteria
                    this.mUINode0TreeListNodeCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
                    this.mUINode0TreeListNodeCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNodeCheckBox";
                    this.mUINode0TreeListNodeCheckBox.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
                    #endregion
                }
                return this.mUINode0TreeListNodeCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUINode0TreeListNodeCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpFilterRibbonPage5 : DXRibbonPage
    {
        
        public UIRpFilterRibbonPage5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public UIRpgFilterRibbonPageGroup3 UIRpgFilterRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgFilterRibbonPageGroup == null))
                {
                    this.mUIRpgFilterRibbonPageGroup = new UIRpgFilterRibbonPageGroup3(this);
                }
                return this.mUIRpgFilterRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgFilterRibbonPageGroup3 mUIRpgFilterRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpgFilterRibbonPageGroup3 : DXRibbonPageGroup
    {
        
        public UIRpgFilterRibbonPageGroup3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public DXRibbonEditItem UIDdlFilterRibbonEditItem
        {
            get
            {
                if ((this.mUIDdlFilterRibbonEditItem == null))
                {
                    this.mUIDdlFilterRibbonEditItem = new DXRibbonEditItem(this);
                    #region Search Criteria
                    this.mUIDdlFilterRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "ddlFilter";
                    this.mUIDdlFilterRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonEditItem";
                    this.mUIDdlFilterRibbonEditItem.WindowTitles.Add("Arbeidsplan: Ønskeplan for Omregnet tid Baseplan (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIDdlFilterRibbonEditItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonEditItem mUIDdlFilterRibbonEditItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver65142408ASCLAvWindow : WinWindow
    {
        
        public UIGatver65142408ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIBankBalanceListContrCustom5 UIBankBalanceListContrCustom
        {
            get
            {
                if ((this.mUIBankBalanceListContrCustom == null))
                {
                    this.mUIBankBalanceListContrCustom = new UIBankBalanceListContrCustom5(this);
                }
                return this.mUIBankBalanceListContrCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIBankBalanceListContrCustom5 mUIBankBalanceListContrCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIBankBalanceListContrCustom5 : DXTestControl
    {
        
        public UIBankBalanceListContrCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BankBalanceListControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BankBalanceListControl";
            this.WindowTitles.Add("Gat ver. 6.5.1.42408 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Frederic Chopin " +
                    " (Vaktbokdato: 21.12.2016)");
            #endregion
        }
        
        #region Properties
        public UIGcBankBalancesTable4 UIGcBankBalancesTable
        {
            get
            {
                if ((this.mUIGcBankBalancesTable == null))
                {
                    this.mUIGcBankBalancesTable = new UIGcBankBalancesTable4(this);
                }
                return this.mUIGcBankBalancesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcBankBalancesTable4 mUIGcBankBalancesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcBankBalancesTable4 : DXGrid
    {
        
        public UIGcBankBalancesTable4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalances";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Gat ver. 6.5.1.42408 - (ASCL - Avd: 5140-Omregnet tid) - Ansatt: Frederic Chopin " +
                    " (Vaktbokdato: 21.12.2016)");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem1182Cell
        {
            get
            {
                if ((this.mUIItem1182Cell == null))
                {
                    this.mUIItem1182Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1182Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalancesGridControlCell[View]gvTransactions[Row]0[Column]colValue";
                    this.mUIItem1182Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    #endregion
                }
                return this.mUIItem1182Cell;
            }
        }
        
        public DXCell UIItem775Cell
        {
            get
            {
                if ((this.mUIItem775Cell == null))
                {
                    this.mUIItem775Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem775Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalancesGridControlCell[View]gvTransactions[Row]1[Column]colValue";
                    this.mUIItem775Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    #endregion
                }
                return this.mUIItem775Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem1182Cell;
        
        private DXCell mUIItem775Cell;
        #endregion
    }
}
