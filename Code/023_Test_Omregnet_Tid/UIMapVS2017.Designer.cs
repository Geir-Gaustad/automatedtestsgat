// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _023_Test_Omregnet_Tid.UIMapVS2017Classes
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v19_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMapVS2017
    {
        
        /// <summary>
        /// CheckBachLine2_step_6_Calculations - Use 'CheckBachLine2_step_6_CalculationsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckBachLine2_step_6_Calculations()
        {
            #region Variable Declarations
            DXCell uIItem355Cell4 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem355Cell4;
            DXCell uIItem3556Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3556Cell1;
            DXCell uIItem3556Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3556Cell;
            DXCell uIItem006Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem006Cell;
            DXCell uIItem14223Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem14223Cell;
            DXCell uIItem14223Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem14223Cell1;
            DXCell uIItem3888Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3888Cell;
            DXCell uIItem10367Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem10367Cell;
            DXCell uIItem023Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem023Cell;
            #endregion

            // Verify that the 'Text' property of '35,5' cell equals '35,5'
            Assert.AreEqual(this.CheckBachLine2_step_6_CalculationsExpectedValues.UIItem355Cell4Text, uIItem355Cell4.Text);

            // Verify that the 'Text' property of '35,56' cell equals '35,56'
            Assert.AreEqual(this.CheckBachLine2_step_6_CalculationsExpectedValues.UIItem3556Cell1Text, uIItem3556Cell1.Text);

            // Verify that the 'Text' property of '35,56' cell equals '142'
            Assert.AreEqual(this.CheckBachLine2_step_6_CalculationsExpectedValues.UIItem3556CellText, uIItem3556Cell.Text);

            // Verify that the 'Text' property of '0,06' cell equals '142,23'
            Assert.AreEqual(this.CheckBachLine2_step_6_CalculationsExpectedValues.UIItem006CellText, uIItem006Cell.Text);

            // Verify that the 'Text' property of '142,23' cell equals '155,5'
            Assert.AreEqual(this.CheckBachLine2_step_6_CalculationsExpectedValues.UIItem14223CellText, uIItem14223Cell.Text);

            // Verify that the 'Text' property of '142,23' cell equals '38,88'
            Assert.AreEqual(this.CheckBachLine2_step_6_CalculationsExpectedValues.UIItem14223Cell1Text, uIItem14223Cell1.Text);

            // Verify that the 'Text' property of '38,88' cell equals '-5,5'
            Assert.AreEqual(this.CheckBachLine2_step_6_CalculationsExpectedValues.UIItem3888CellText, uIItem3888Cell.Text);

            // Verify that the 'Text' property of '103,67' cell equals '-'
            Assert.AreEqual(this.CheckBachLine2_step_6_CalculationsExpectedValues.UIItem10367CellText, uIItem10367Cell.Text);

            // Verify that the 'Text' property of '0,23' cell equals '100,16%'
            Assert.AreEqual(this.CheckBachLine2_step_6_CalculationsExpectedValues.UIItem023CellText, uIItem023Cell.Text);
        }
        
        /// <summary>
        /// CheckBachLine2Week1_step_7_Calculations - Use 'CheckBachLine2Week1_step_7_CalculationsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckBachLine2Week1_step_7_Calculations()
        {
            #region Variable Declarations
            DXCell uIItem3556Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3556Cell1;
            DXCell uIItem006Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem006Cell;
            DXCell uIItem14223Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem14223Cell;
            DXCell uIItem14223Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem14223Cell1;
            DXCell uIItem10367Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem10367Cell;
            DXCell uIItem023Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem023Cell;
            #endregion

            // Verify that the 'Text' property of '35,56' cell equals '33,92'
            Assert.AreEqual(this.CheckBachLine2Week1_step_7_CalculationsExpectedValues.UIItem3556Cell1Text, uIItem3556Cell1.Text);

            // Verify that the 'Text' property of '0,06' cell equals '135,67'
            Assert.AreEqual(this.CheckBachLine2Week1_step_7_CalculationsExpectedValues.UIItem006CellText, uIItem006Cell.Text);

            // Verify that the 'Text' property of '142,23' cell equals '149,44'
            Assert.AreEqual(this.CheckBachLine2Week1_step_7_CalculationsExpectedValues.UIItem14223CellText, uIItem14223Cell.Text);

            // Verify that the 'Text' property of '142,23' cell equals '37,36'
            Assert.AreEqual(this.CheckBachLine2Week1_step_7_CalculationsExpectedValues.UIItem14223Cell1Text, uIItem14223Cell1.Text);

            // Verify that the 'Text' property of '103,67' cell equals '0,56'
            Assert.AreEqual(this.CheckBachLine2Week1_step_7_CalculationsExpectedValues.UIItem10367CellText, uIItem10367Cell.Text);

            // Verify that the 'Text' property of '0,23' cell equals '95,54%'
            Assert.AreEqual(this.CheckBachLine2Week1_step_7_CalculationsExpectedValues.UIItem023CellText, uIItem023Cell.Text);
        }
        
        /// <summary>
        /// CheckBeethovenLine1_step_1 - Use 'CheckBeethovenLine1_step_1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckBeethovenLine1_step_1()
        {
            #region Variable Declarations
            DXCell uIItem0Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem0Cell;
            DXCell uIItem0Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem0Cell1;
            DXCell uIItem4417Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem4417Cell;
            DXCell uIItem0Cell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem0Cell2;
            DXCell uIItem1345Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1345Cell;
            DXCell uIItem1345Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1345Cell1;
            DXCell uIItem3699Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3699Cell;
            DXCell uIItemCell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItemCell2;
            #endregion

            // Verify that the 'Text' property of '0' cell equals '0'
            Assert.AreEqual(this.CheckBeethovenLine1_step_1ExpectedValues.UIItem0CellText, uIItem0Cell.Text);

            // Verify that the 'Text' property of '0' cell equals '0'
            Assert.AreEqual(this.CheckBeethovenLine1_step_1ExpectedValues.UIItem0Cell1Text, uIItem0Cell1.Text);

            // Verify that the 'Text' property of '44,17' cell equals '0'
            Assert.AreEqual(this.CheckBeethovenLine1_step_1ExpectedValues.UIItem4417CellText, uIItem4417Cell.Text);

            // Verify that the 'Text' property of '0' cell equals '0'
            Assert.AreEqual(this.CheckBeethovenLine1_step_1ExpectedValues.UIItem0Cell2Text, uIItem0Cell2.Text);

            // Verify that the 'Text' property of '134,5' cell equals '-'
            Assert.AreEqual(this.CheckBeethovenLine1_step_1ExpectedValues.UIItem1345CellText, uIItem1345Cell.Text);

            // Verify that the 'Text' property of '134,5' cell equals '-'
            Assert.AreEqual(this.CheckBeethovenLine1_step_1ExpectedValues.UIItem1345Cell1Text, uIItem1345Cell1.Text);

            // Verify that the 'Text' property of '36,99' cell equals ''
            Assert.AreEqual(this.CheckBeethovenLine1_step_1ExpectedValues.UIItem3699CellText, uIItem3699Cell.Text);

            // Verify that the 'Text' property of '-' cell equals '-'
            Assert.AreEqual(this.CheckBeethovenLine1_step_1ExpectedValues.UIItemCell2Text, uIItemCell2.Text);
        }
        
        /// <summary>
        /// CheckBeethovenLine1_step_2 - Use 'CheckBeethovenLine1_step_2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckBeethovenLine1_step_2()
        {
            #region Variable Declarations
            DXCell uIItem1345Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1345Cell;
            DXCell uIItem1345Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1345Cell1;
            DXCell uIItem3699Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3699Cell;
            DXCell uIItemCell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItemCell2;
            #endregion

            // Verify that the 'Text' property of '134,5' cell equals '147,96'
            Assert.AreEqual(this.CheckBeethovenLine1_step_2ExpectedValues.UIItem1345CellText, uIItem1345Cell.Text);

            // Verify that the 'Text' property of '134,5' cell equals '36,99'
            Assert.AreEqual(this.CheckBeethovenLine1_step_2ExpectedValues.UIItem1345Cell1Text, uIItem1345Cell1.Text);

            // Verify that the 'Text' property of '36,99' cell equals '-'
            Assert.AreEqual(this.CheckBeethovenLine1_step_2ExpectedValues.UIItem3699CellText, uIItem3699Cell.Text);

            // Verify that the 'Text' property of '-' cell equals '2,04'
            Assert.AreEqual(this.CheckBeethovenLine1_step_2ExpectedValues.UIItemCell2Text, uIItemCell2.Text);
        }
        
        /// <summary>
        /// CheckBeethovenLine1_step_4_Calculations - Use 'CheckBeethovenLine1_step_4_CalculationsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckBeethovenLine1_step_4_Calculations()
        {
            #region Variable Declarations
            DXCell uIItem355Cell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem355Cell3;
            DXCell uIItem3363Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3363Cell1;
            DXCell uIItem3363Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3363Cell;
            DXCell uIItem188Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem188Cell;
            DXCell uIItem1345Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1345Cell;
            DXCell uIItem1345Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1345Cell1;
            DXCell uIItem3699Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3699Cell;
            DXCell uIItemCell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItemCell2;
            DXCell uIItem75Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem75Cell;
            #endregion

            // Verify that the 'Text' property of '35,5' cell equals '35,5'
            Assert.AreEqual(this.CheckBeethovenLine1_step_4_CalculationsExpectedValues.UIItem355Cell3Text, uIItem355Cell3.Text);

            // Verify that the 'Text' property of '33,63' cell equals '33,63'
            Assert.AreEqual(this.CheckBeethovenLine1_step_4_CalculationsExpectedValues.UIItem3363Cell1Text, uIItem3363Cell1.Text);

            // Verify that the 'Text' property of '33,63' cell equals '142'
            Assert.AreEqual(this.CheckBeethovenLine1_step_4_CalculationsExpectedValues.UIItem3363CellText, uIItem3363Cell.Text);

            // Verify that the 'Text' property of '-1,88' cell equals '134,5'
            Assert.AreEqual(this.CheckBeethovenLine1_step_4_CalculationsExpectedValues.UIItem188CellText, uIItem188Cell.Text);

            // Verify that the 'Text' property of '134,5' cell equals '147,96'
            Assert.AreEqual(this.CheckBeethovenLine1_step_4_CalculationsExpectedValues.UIItem1345CellText, uIItem1345Cell.Text);

            // Verify that the 'Text' property of '134,5' cell equals '36,99'
            Assert.AreEqual(this.CheckBeethovenLine1_step_4_CalculationsExpectedValues.UIItem1345Cell1Text, uIItem1345Cell1.Text);

            // Verify that the 'Text' property of '36,99' cell equals '-'
            Assert.AreEqual(this.CheckBeethovenLine1_step_4_CalculationsExpectedValues.UIItem3699CellText, uIItem3699Cell.Text);

            // Verify that the 'Text' property of '-' cell equals '2,04'
            Assert.AreEqual(this.CheckBeethovenLine1_step_4_CalculationsExpectedValues.UIItemCell2Text, uIItemCell2.Text);

            // Verify that the 'Text' property of '-7,5' cell equals '94,72%'
            Assert.AreEqual(this.CheckBeethovenLine1_step_4_CalculationsExpectedValues.UIItem75CellText, uIItem75Cell.Text);
        }
        
        /// <summary>
        /// CheckChopinLine3_step_12_Calculations - Use 'CheckChopinLine3_step_12_CalculationsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckChopinLine3_step_12_Calculations()
        {
            #region Variable Declarations
            DXCell uIItem1672Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1672Cell1;
            DXCell uIItem1878Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1878Cell;
            DXCell uIItem6689Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem6689Cell;
            DXCell uIItem6689Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem6689Cell1;
            DXCell uIItem4935Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem4935Cell;
            DXCell uIItem7511Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem7511Cell;
            #endregion

            // Verify that the 'Text' property of '16,72' cell equals '17'
            Assert.AreEqual(this.CheckChopinLine3_step_12_CalculationsExpectedValues.UIItem1672Cell1Text, uIItem1672Cell1.Text);

            // Verify that the 'Text' property of '-18,78' cell equals '68'
            Assert.AreEqual(this.CheckChopinLine3_step_12_CalculationsExpectedValues.UIItem1878CellText, uIItem1878Cell.Text);

            // Verify that the 'Text' property of '66,89' cell equals '71,19'
            Assert.AreEqual(this.CheckChopinLine3_step_12_CalculationsExpectedValues.UIItem6689CellText, uIItem6689Cell.Text);

            // Verify that the 'Text' property of '66,89' cell equals '17,8'
            Assert.AreEqual(this.CheckChopinLine3_step_12_CalculationsExpectedValues.UIItem6689Cell1Text, uIItem6689Cell1.Text);

            // Verify that the 'Text' property of '49,35' cell equals '78,81'
            Assert.AreEqual(this.CheckChopinLine3_step_12_CalculationsExpectedValues.UIItem4935CellText, uIItem4935Cell.Text);

            // Verify that the 'Text' property of '-75,11' cell equals '47,88%'
            Assert.AreEqual(this.CheckChopinLine3_step_12_CalculationsExpectedValues.UIItem7511CellText, uIItem7511Cell.Text);
        }
        
        /// <summary>
        /// CheckChopinLine3Week1_step_10_Calculations - Use 'CheckChopinLine3Week1_step_10_CalculationsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckChopinLine3Week1_step_10_Calculations()
        {
            #region Variable Declarations
            DXCell uIItem355Cell5 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem355Cell5;
            DXCell uIItem1672Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1672Cell1;
            DXCell uIItem1672Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1672Cell;
            DXCell uIItem1878Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1878Cell;
            DXCell uIItem6689Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem6689Cell;
            DXCell uIItem6689Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem6689Cell1;
            DXCell uIItem1752Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1752Cell;
            DXCell uIItem4935Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem4935Cell;
            DXCell uIItem7511Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem7511Cell;
            #endregion

            // Verify that the 'Text' property of '35,5' cell equals '35,5'
            Assert.AreEqual(this.CheckChopinLine3Week1_step_10_CalculationsExpectedValues.UIItem355Cell5Text, uIItem355Cell5.Text);

            // Verify that the 'Text' property of '16,72' cell equals '16,72'
            Assert.AreEqual(this.CheckChopinLine3Week1_step_10_CalculationsExpectedValues.UIItem1672Cell1Text, uIItem1672Cell1.Text);

            // Verify that the 'Text' property of '16,72' cell equals '142'
            Assert.AreEqual(this.CheckChopinLine3Week1_step_10_CalculationsExpectedValues.UIItem1672CellText, uIItem1672Cell.Text);

            // Verify that the 'Text' property of '-18,78' cell equals '66,89'
            Assert.AreEqual(this.CheckChopinLine3Week1_step_10_CalculationsExpectedValues.UIItem1878CellText, uIItem1878Cell.Text);

            // Verify that the 'Text' property of '66,89' cell equals '70,08'
            Assert.AreEqual(this.CheckChopinLine3Week1_step_10_CalculationsExpectedValues.UIItem6689CellText, uIItem6689Cell.Text);

            // Verify that the 'Text' property of '66,89' cell equals '17,52'
            Assert.AreEqual(this.CheckChopinLine3Week1_step_10_CalculationsExpectedValues.UIItem6689Cell1Text, uIItem6689Cell1.Text);

            // Verify that the 'Text' property of '17,52' cell equals '-'
            Assert.AreEqual(this.CheckChopinLine3Week1_step_10_CalculationsExpectedValues.UIItem1752CellText, uIItem1752Cell.Text);

            // Verify that the 'Text' property of '49,35' cell equals '79,92'
            Assert.AreEqual(this.CheckChopinLine3Week1_step_10_CalculationsExpectedValues.UIItem4935CellText, uIItem4935Cell.Text);

            // Verify that the 'Text' property of '-75,11' cell equals '47,1%'
            Assert.AreEqual(this.CheckChopinLine3Week1_step_10_CalculationsExpectedValues.UIItem7511CellText, uIItem7511Cell.Text);
        }
        
        /// <summary>
        /// CheckMozartLine1_step_16_Calculations - Use 'CheckMozartLine1_step_16_CalculationsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckMozartLine1_step_16_Calculations()
        {
            #region Variable Declarations
            DXCell uIItem4417Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem4417Cell;
            DXCell uIItem355Cell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem355Cell3;
            DXCell uIItem3363Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3363Cell1;
            DXCell uIItem355Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem355Cell1;
            DXCell uIItem3363Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3363Cell;
            DXCell uIItem188Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem188Cell;
            DXCell uIItem142Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem142Cell1;
            DXCell uIItem1345Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1345Cell;
            #endregion

            // Verify that the 'Text' property of '44,17' cell equals '44,17'
            Assert.AreEqual(this.CheckMozartLine1_step_16_CalculationsExpectedValues.UIItem4417CellText, uIItem4417Cell.Text);

            // Verify that the 'Text' property of '35,5' cell equals '101,67'
            Assert.AreEqual(this.CheckMozartLine1_step_16_CalculationsExpectedValues.UIItem355Cell3Text, uIItem355Cell3.Text);

            // Verify that the 'Text' property of '33,63' cell equals '33,89'
            Assert.AreEqual(this.CheckMozartLine1_step_16_CalculationsExpectedValues.UIItem3363Cell1Text, uIItem3363Cell1.Text);

            // Verify that the 'Text' property of '35,5' cell equals '10,83'
            Assert.AreEqual(this.CheckMozartLine1_step_16_CalculationsExpectedValues.UIItem355Cell1Text, uIItem355Cell1.Text);

            // Verify that the 'Text' property of '33,63' cell equals '-13,5'
            Assert.AreEqual(this.CheckMozartLine1_step_16_CalculationsExpectedValues.UIItem3363CellText, uIItem3363Cell.Text);

            // Verify that the 'Text' property of '-1,88' cell equals '87,32%'
            Assert.AreEqual(this.CheckMozartLine1_step_16_CalculationsExpectedValues.UIItem188CellText, uIItem188Cell.Text);

            // Verify that the 'Text' property of '142' cell equals '-10,07'
            Assert.AreEqual(this.CheckMozartLine1_step_16_CalculationsExpectedValues.UIItem142Cell1Text, uIItem142Cell1.Text);

            // Verify that the 'Text' property of '134,5' cell equals '3,43'
            Assert.AreEqual(this.CheckMozartLine1_step_16_CalculationsExpectedValues.UIItem1345CellText, uIItem1345Cell.Text);
        }
        
        /// <summary>
        /// CheckMozartLine1_step_23_Calculations - Use 'CheckMozartLine1_step_23_CalculationsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckMozartLine1_step_23_Calculations()
        {
            #region Variable Declarations
            DXCell uIItem38Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem38Cell;
            DXCell uIItem2175Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem2175Cell;
            DXCell uIItem5625Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem5625Cell;
            DXCell uIItem3556Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3556Cell1;
            DXCell uIItem3556Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3556Cell;
            DXCell uIItem006Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem006Cell;
            DXCell uIItem142Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem142Cell;
            DXCell uIItem14223Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem14223Cell;
            #endregion

            // Verify that the 'Text' property of '38' cell equals '38'
            Assert.AreEqual(this.CheckMozartLine1_step_23_CalculationsExpectedValues.UIItem38CellText, uIItem38Cell.Text);

            // Verify that the 'Text' property of '21,75' cell equals '21,75'
            Assert.AreEqual(this.CheckMozartLine1_step_23_CalculationsExpectedValues.UIItem2175CellText, uIItem2175Cell.Text);

            // Verify that the 'Text' property of '56,25' cell equals '56,25'
            Assert.AreEqual(this.CheckMozartLine1_step_23_CalculationsExpectedValues.UIItem5625CellText, uIItem5625Cell.Text);

            // Verify that the 'Text' property of '35,56' cell equals '38,67'
            Assert.AreEqual(this.CheckMozartLine1_step_23_CalculationsExpectedValues.UIItem3556Cell1Text, uIItem3556Cell1.Text);

            // Verify that the 'Text' property of '35,56' cell equals '-4,5'
            Assert.AreEqual(this.CheckMozartLine1_step_23_CalculationsExpectedValues.UIItem3556CellText, uIItem3556Cell.Text);

            // Verify that the 'Text' property of '0,06' cell equals '95,77%'
            Assert.AreEqual(this.CheckMozartLine1_step_23_CalculationsExpectedValues.UIItem006CellText, uIItem006Cell.Text);

            // Verify that the 'Text' property of '142' cell equals '0,96'
            Assert.AreEqual(this.CheckMozartLine1_step_23_CalculationsExpectedValues.UIItem142CellText, uIItem142Cell.Text);

            // Verify that the 'Text' property of '142,23' cell equals '5,46'
            Assert.AreEqual(this.CheckMozartLine1_step_23_CalculationsExpectedValues.UIItem14223CellText, uIItem14223Cell.Text);
        }
        
        /// <summary>
        /// CheckSchubertBankValues_step_25 - Use 'CheckSchubertBankValues_step_25ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSchubertBankValues_step_25()
        {
            #region Variable Declarations
            DXCell uIItem175Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIBankBalanceListContrCustom.UIGcBankBalancesTable.UIItem175Cell;
            DXCell uIItem198Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIBankBalanceListContrCustom.UIGcBankBalancesTable.UIItem198Cell;
            #endregion

            // Verify that the 'Text' property of '1,75' cell equals '1,98'
            Assert.AreEqual(this.CheckSchubertBankValues_step_25ExpectedValues.UIItem175CellText, uIItem175Cell.Text);

            // Verify that the 'Text' property of '1,98' cell equals '1,75'
            Assert.AreEqual(this.CheckSchubertBankValues_step_25ExpectedValues.UIItem198CellText, uIItem198Cell.Text);
        }
        
        /// <summary>
        /// CheckSchubertLine2_step_24_Calculations - Use 'CheckSchubertLine2_step_24_CalculationsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSchubertLine2_step_24_Calculations()
        {
            #region Variable Declarations
            DXCell uIItem14Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem14Cell;
            DXCell uIItem2175Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem2175Cell1;
            DXCell uIItem2433Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem2433Cell;
            DXCell uIItem2003Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem2003Cell1;
            DXCell uIItem2003Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem2003Cell;
            DXCell uIItemCell7 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItemCell7;
            DXCell uIItem175Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem175Cell;
            DXCell uIItem5164Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem5164Cell;
            #endregion

            // Verify that the 'Text' property of '14' cell equals '14'
            Assert.AreEqual(this.CheckSchubertLine2_step_24_CalculationsExpectedValues.UIItem14CellText, uIItem14Cell.Text);

            // Verify that the 'Text' property of '21,75' cell equals '21,75'
            Assert.AreEqual(this.CheckSchubertLine2_step_24_CalculationsExpectedValues.UIItem2175Cell1Text, uIItem2175Cell1.Text);

            // Verify that the 'Text' property of '24,33' cell equals '24,33'
            Assert.AreEqual(this.CheckSchubertLine2_step_24_CalculationsExpectedValues.UIItem2433CellText, uIItem2433Cell.Text);

            // Verify that the 'Text' property of '20,03' cell equals '20,03'
            Assert.AreEqual(this.CheckSchubertLine2_step_24_CalculationsExpectedValues.UIItem2003Cell1Text, uIItem2003Cell1.Text);

            // Verify that the 'Text' property of '20,03' cell equals '1,75'
            Assert.AreEqual(this.CheckSchubertLine2_step_24_CalculationsExpectedValues.UIItem2003CellText, uIItem2003Cell.Text);

            // Verify that the 'Text' property of '-' cell equals '51,64%'
            Assert.AreEqual(this.CheckSchubertLine2_step_24_CalculationsExpectedValues.UIItemCell7Text, uIItemCell7.Text);

            // Verify that the 'Text' property of '1,75' cell equals '3,73'
            Assert.AreEqual(this.CheckSchubertLine2_step_24_CalculationsExpectedValues.UIItem175CellText, uIItem175Cell.Text);

            // Verify that the 'Text' property of '51,64%' cell equals '1,98'
            Assert.AreEqual(this.CheckSchubertLine2_step_24_CalculationsExpectedValues.UIItem5164CellText, uIItem5164Cell.Text);
        }
        
        /// <summary>
        /// RightClickBachCell
        /// </summary>
        public void RightClickBachCell()
        {
            #region Variable Declarations
            DXCell uIBachJohannSebastianCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIBachJohannSebastianCell1;
            #endregion

            // Right-Click 'Bach, Johann Sebastian' cell
            Mouse.Click(uIBachJohannSebastianCell1, MouseButtons.Right, ModifierKeys.None, new Point(76, 10));
        }
        
        /// <summary>
        /// RightClickBeethovenCell
        /// </summary>
        public void RightClickBeethovenCell()
        {
            #region Variable Declarations
            DXCell uIBeethovenLudwigVanCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIBeethovenLudwigVanCell1;
            #endregion

            // Right-Click 'Beethoven, Ludwig Van' cell
            Mouse.Click(uIBeethovenLudwigVanCell1, MouseButtons.Right, ModifierKeys.None, new Point(113, 10));
        }
        
        /// <summary>
        /// RightClickChopinCell
        /// </summary>
        public void RightClickChopinCell()
        {
            #region Variable Declarations
            DXCell uIChopinFredericCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIChopinFredericCell1;
            #endregion

            // Right-Click 'Chopin, Frederic' cell
            Mouse.Click(uIChopinFredericCell1, MouseButtons.Right, ModifierKeys.None, new Point(72, 13));
        }
        
        /// <summary>
        /// RightClickMozartCell
        /// </summary>
        public void RightClickMozartCell()
        {
            #region Variable Declarations
            DXCell uIBeethovenLudwigVanCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIBeethovenLudwigVanCell1;
            #endregion

            // Right-Click 'Beethoven, Ludwig Van' cell
            Mouse.Click(uIBeethovenLudwigVanCell1, MouseButtons.Right, ModifierKeys.None, new Point(98, 11));
        }
        
        /// <summary>
        /// RightClickSchubertCell
        /// </summary>
        public void RightClickSchubertCell()
        {
            #region Variable Declarations
            DXCell uISchubertFranzCell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UISchubertFranzCell2;
            #endregion

            // Right-Click 'Schubert, Franz' cell
            Mouse.Click(uISchubertFranzCell2, MouseButtons.Right, ModifierKeys.None, new Point(147, 8));
        }
        
        /// <summary>
        /// CheckMozartDetailsTabPhase3_step_21 - Use 'CheckMozartDetailsTabPhase3_step_21ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckMozartDetailsTabPhase3_step_21()
        {
            #region Variable Declarations
            DXCell uITimerukesumiuke1fradCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIShiftDetailsViewCustom.UIGcShiftDetailsTable.UITimerukesumiuke1fradCell;
            DXCell uIItem10Cell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIShiftDetailsViewCustom.UIGcShiftDetailsTable.UIItem10Cell;
            DXCell uITimerukesumiuke1fradCell1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIShiftDetailsViewCustom.UIGcShiftDetailsTable.UITimerukesumiuke1fradCell1;
            DXCell uIItem10Cell1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIShiftDetailsViewCustom.UIGcShiftDetailsTable.UIItem10Cell1;
            DXCell uITotaltomregnettidsomCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIShiftDetailsViewCustom.UIGcShiftDetailsTable.UITotaltomregnettidsomCell;
            DXCell uIItem546Cell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIShiftDetailsViewCustom.UIGcShiftDetailsTable.UIItem546Cell;
            #endregion

            // Verify that the 'Text' property of 'Timer ukesum i uke 1 fra denne vakten (ink faktor, uten omregnet tid)' cell equals 'Timer ukesum i uke 1 fra denne vakten (ink faktor, uten omregnet tid)'
            Assert.AreEqual(this.CheckMozartDetailsTabPhase3_step_21ExpectedValues.UITimerukesumiuke1fradCellText, uITimerukesumiuke1fradCell.Text);

            // Verify that the 'Text' property of '10' cell equals '10'
            Assert.AreEqual(this.CheckMozartDetailsTabPhase3_step_21ExpectedValues.UIItem10CellText, uIItem10Cell.Text);

            // Verify that the 'Text' property of 'Timer ukesum i uke 1 fra denne vakten (ink faktor, omregnet tid)' cell equals 'Timer ukesum i uke 1 fra denne vakten (ink faktor, omregnet tid)'
            Assert.AreEqual(this.CheckMozartDetailsTabPhase3_step_21ExpectedValues.UITimerukesumiuke1fradCell1Text, uITimerukesumiuke1fradCell1.Text);

            // Verify that the 'Text' property of '10' cell equals '12'
            Assert.AreEqual(this.CheckMozartDetailsTabPhase3_step_21ExpectedValues.UIItem10Cell1Text, uIItem10Cell1.Text);

            // Verify that the 'Text' property of 'Totalt omregnet tid som skal i bank' cell equals 'Totalt omregnet tid som skal i bank'
            Assert.AreEqual(this.CheckMozartDetailsTabPhase3_step_21ExpectedValues.UITotaltomregnettidsomCellText, uITotaltomregnettidsomCell.Text);

            // Verify that the 'Text' property of '5,46' cell equals '5,46'
            Assert.AreEqual(this.CheckMozartDetailsTabPhase3_step_21ExpectedValues.UIItem546CellText, uIItem546Cell.Text);
        }
        
        /// <summary>
        /// CheckMozartBankValues_step_25 - Use 'CheckMozartBankValues_step_25ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckMozartBankValues_step_25()
        {
            #region Variable Declarations
            DXCell uIItem450Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIBankBalanceListContrCustom.UIGcBankBalancesTable.UIItem450Cell;
            DXCell uIItem425Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIBankBalanceListContrCustom.UIGcBankBalancesTable.UIItem425Cell;
            DXCell uIIverksettingavarbeidCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIBankBalanceListContrCustom.UIGcBankBalancesTable.UIIverksettingavarbeidCell;
            DXCell uIIverksettingavarbeidCell1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIBankBalanceListContrCustom.UIGcBankBalancesTable.UIIverksettingavarbeidCell1;
            #endregion

            // Verify that the 'Text' property of '-4,50' cell equals '5,46'
            Assert.AreEqual(this.CheckMozartBankValues_step_25ExpectedValues.UIItem450CellText, uIItem450Cell.Text);

            // Verify that the 'Text' property of '4,25' cell equals '-4,50'
            Assert.AreEqual(this.CheckMozartBankValues_step_25ExpectedValues.UIItem425CellText, uIItem425Cell.Text);

            // Verify that the 'Text' property of 'Iverksetting av arbeidsplan linje nr #1, plan 'Ønskeplan for Omregnet tid Baseplan'. Overført omregnet tid.' cell equals 'Iverksetting av arbeidsplan linje nr #1, plan 'Ønskeplan for Omregnet tid Baseplan'. Overført omregnet tid.'
            Assert.AreEqual(this.CheckMozartBankValues_step_25ExpectedValues.UIIverksettingavarbeidCellText, uIIverksettingavarbeidCell.Text);

            // Verify that the 'Text' property of 'Iverksetting av arbeidsplan linje nr #1, plan 'Ønskeplan for Omregnet tid Baseplan'.' cell equals 'Iverksetting av arbeidsplan linje nr #1, plan 'Ønskeplan for Omregnet tid Baseplan'.'
            Assert.AreEqual(this.CheckMozartBankValues_step_25ExpectedValues.UIIverksettingavarbeidCell1Text, uIIverksettingavarbeidCell1.Text);
        }
        
        /// <summary>
        /// CheckMozartBankValues_step_25_2 - Use 'CheckMozartBankValues_step_25_2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckMozartBankValues_step_25_2()
        {
            #region Variable Declarations
            DXCell uIItem450Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIBankBalanceListContrCustom.UIGcBankBalancesTable.UIItem450Cell;
            DXCell uIIverksettingavarbeidCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIBankBalanceListContrCustom.UIGcBankBalancesTable.UIIverksettingavarbeidCell;
            DXCell uIItem425Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIBankBalanceListContrCustom.UIGcBankBalancesTable.UIItem425Cell;
            DXCell uIIverksettingavarbeidCell1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIBankBalanceListContrCustom.UIGcBankBalancesTable.UIIverksettingavarbeidCell1;
            #endregion

            // Verify that the 'Text' property of '-4,50' cell equals '-4,50'
            Assert.AreEqual(this.CheckMozartBankValues_step_25_2ExpectedValues.UIItem450CellText, uIItem450Cell.Text);

            // Verify that the 'Text' property of 'Iverksetting av arbeidsplan linje nr #1, plan 'Ønskeplan for Omregnet tid Baseplan'. Overført omregnet tid.' cell equals 'Iverksetting av arbeidsplan linje nr #1, plan 'Ønskeplan for Omregnet tid Baseplan'.'
            Assert.AreEqual(this.CheckMozartBankValues_step_25_2ExpectedValues.UIIverksettingavarbeidCellText, uIIverksettingavarbeidCell.Text);

            // Verify that the 'Text' property of '4,25' cell equals '5,46'
            Assert.AreEqual(this.CheckMozartBankValues_step_25_2ExpectedValues.UIItem425CellText, uIItem425Cell.Text);

            // Verify that the 'Text' property of 'Iverksetting av arbeidsplan linje nr #1, plan 'Ønskeplan for Omregnet tid Baseplan'.' cell equals 'Iverksetting av arbeidsplan linje nr #1, plan 'Ønskeplan for Omregnet tid Baseplan'. Overført omregnet tid.'
            Assert.AreEqual(this.CheckMozartBankValues_step_25_2ExpectedValues.UIIverksettingavarbeidCell1Text, uIIverksettingavarbeidCell1.Text);
        }
        
        /// <summary>
        /// CheckSchubertBankValues_step_25_2 - Use 'CheckSchubertBankValues_step_25_2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSchubertBankValues_step_25_2()
        {
            #region Variable Declarations
            DXCell uIItem175Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIBankBalanceListContrCustom.UIGcBankBalancesTable.UIItem175Cell;
            DXCell uIIverksettingavarbeidCell2 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIBankBalanceListContrCustom.UIGcBankBalancesTable.UIIverksettingavarbeidCell2;
            DXCell uIItem198Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIBankBalanceListContrCustom.UIGcBankBalancesTable.UIItem198Cell;
            DXCell uIIverksettingavarbeidCell3 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIBankBalanceListContrCustom.UIGcBankBalancesTable.UIIverksettingavarbeidCell3;
            #endregion

            // Verify that the 'Text' property of '1,75' cell equals '1,75'
            Assert.AreEqual(this.CheckSchubertBankValues_step_25_2ExpectedValues.UIItem175CellText, uIItem175Cell.Text);

            // Verify that the 'Text' property of 'Iverksetting av arbeidsplan linje nr #2, plan 'Ønskeplan for Omregnet tid Baseplan'.' cell equals 'Iverksetting av arbeidsplan linje nr #2, plan 'Ønskeplan for Omregnet tid Baseplan'.'
            Assert.AreEqual(this.CheckSchubertBankValues_step_25_2ExpectedValues.UIIverksettingavarbeidCell2Text, uIIverksettingavarbeidCell2.Text);

            // Verify that the 'Text' property of '1,98' cell equals '1,98'
            Assert.AreEqual(this.CheckSchubertBankValues_step_25_2ExpectedValues.UIItem198CellText, uIItem198Cell.Text);

            // Verify that the 'Text' property of 'Iverksetting av arbeidsplan linje nr #2, plan 'Ønskeplan for Omregnet tid Baseplan'. Overført omregnet tid.' cell equals 'Iverksetting av arbeidsplan linje nr #2, plan 'Ønskeplan for Omregnet tid Baseplan'. Overført omregnet tid.'
            Assert.AreEqual(this.CheckSchubertBankValues_step_25_2ExpectedValues.UIIverksettingavarbeidCell3Text, uIIverksettingavarbeidCell3.Text);
        }
        
        #region Properties
        public virtual CheckBachLine2_step_6_CalculationsExpectedValues CheckBachLine2_step_6_CalculationsExpectedValues
        {
            get
            {
                if ((this.mCheckBachLine2_step_6_CalculationsExpectedValues == null))
                {
                    this.mCheckBachLine2_step_6_CalculationsExpectedValues = new CheckBachLine2_step_6_CalculationsExpectedValues();
                }
                return this.mCheckBachLine2_step_6_CalculationsExpectedValues;
            }
        }
        
        public virtual CheckBachLine2Week1_step_7_CalculationsExpectedValues CheckBachLine2Week1_step_7_CalculationsExpectedValues
        {
            get
            {
                if ((this.mCheckBachLine2Week1_step_7_CalculationsExpectedValues == null))
                {
                    this.mCheckBachLine2Week1_step_7_CalculationsExpectedValues = new CheckBachLine2Week1_step_7_CalculationsExpectedValues();
                }
                return this.mCheckBachLine2Week1_step_7_CalculationsExpectedValues;
            }
        }
        
        public virtual CheckBeethovenLine1_step_1ExpectedValues CheckBeethovenLine1_step_1ExpectedValues
        {
            get
            {
                if ((this.mCheckBeethovenLine1_step_1ExpectedValues == null))
                {
                    this.mCheckBeethovenLine1_step_1ExpectedValues = new CheckBeethovenLine1_step_1ExpectedValues();
                }
                return this.mCheckBeethovenLine1_step_1ExpectedValues;
            }
        }
        
        public virtual CheckBeethovenLine1_step_2ExpectedValues CheckBeethovenLine1_step_2ExpectedValues
        {
            get
            {
                if ((this.mCheckBeethovenLine1_step_2ExpectedValues == null))
                {
                    this.mCheckBeethovenLine1_step_2ExpectedValues = new CheckBeethovenLine1_step_2ExpectedValues();
                }
                return this.mCheckBeethovenLine1_step_2ExpectedValues;
            }
        }
        
        public virtual CheckBeethovenLine1_step_4_CalculationsExpectedValues CheckBeethovenLine1_step_4_CalculationsExpectedValues
        {
            get
            {
                if ((this.mCheckBeethovenLine1_step_4_CalculationsExpectedValues == null))
                {
                    this.mCheckBeethovenLine1_step_4_CalculationsExpectedValues = new CheckBeethovenLine1_step_4_CalculationsExpectedValues();
                }
                return this.mCheckBeethovenLine1_step_4_CalculationsExpectedValues;
            }
        }
        
        public virtual CheckChopinLine3_step_12_CalculationsExpectedValues CheckChopinLine3_step_12_CalculationsExpectedValues
        {
            get
            {
                if ((this.mCheckChopinLine3_step_12_CalculationsExpectedValues == null))
                {
                    this.mCheckChopinLine3_step_12_CalculationsExpectedValues = new CheckChopinLine3_step_12_CalculationsExpectedValues();
                }
                return this.mCheckChopinLine3_step_12_CalculationsExpectedValues;
            }
        }
        
        public virtual CheckChopinLine3Week1_step_10_CalculationsExpectedValues CheckChopinLine3Week1_step_10_CalculationsExpectedValues
        {
            get
            {
                if ((this.mCheckChopinLine3Week1_step_10_CalculationsExpectedValues == null))
                {
                    this.mCheckChopinLine3Week1_step_10_CalculationsExpectedValues = new CheckChopinLine3Week1_step_10_CalculationsExpectedValues();
                }
                return this.mCheckChopinLine3Week1_step_10_CalculationsExpectedValues;
            }
        }
        
        public virtual CheckMozartLine1_step_16_CalculationsExpectedValues CheckMozartLine1_step_16_CalculationsExpectedValues
        {
            get
            {
                if ((this.mCheckMozartLine1_step_16_CalculationsExpectedValues == null))
                {
                    this.mCheckMozartLine1_step_16_CalculationsExpectedValues = new CheckMozartLine1_step_16_CalculationsExpectedValues();
                }
                return this.mCheckMozartLine1_step_16_CalculationsExpectedValues;
            }
        }
        
        public virtual CheckMozartLine1_step_23_CalculationsExpectedValues CheckMozartLine1_step_23_CalculationsExpectedValues
        {
            get
            {
                if ((this.mCheckMozartLine1_step_23_CalculationsExpectedValues == null))
                {
                    this.mCheckMozartLine1_step_23_CalculationsExpectedValues = new CheckMozartLine1_step_23_CalculationsExpectedValues();
                }
                return this.mCheckMozartLine1_step_23_CalculationsExpectedValues;
            }
        }
        
        public virtual CheckSchubertBankValues_step_25ExpectedValues CheckSchubertBankValues_step_25ExpectedValues
        {
            get
            {
                if ((this.mCheckSchubertBankValues_step_25ExpectedValues == null))
                {
                    this.mCheckSchubertBankValues_step_25ExpectedValues = new CheckSchubertBankValues_step_25ExpectedValues();
                }
                return this.mCheckSchubertBankValues_step_25ExpectedValues;
            }
        }
        
        public virtual CheckSchubertLine2_step_24_CalculationsExpectedValues CheckSchubertLine2_step_24_CalculationsExpectedValues
        {
            get
            {
                if ((this.mCheckSchubertLine2_step_24_CalculationsExpectedValues == null))
                {
                    this.mCheckSchubertLine2_step_24_CalculationsExpectedValues = new CheckSchubertLine2_step_24_CalculationsExpectedValues();
                }
                return this.mCheckSchubertLine2_step_24_CalculationsExpectedValues;
            }
        }
        
        public virtual CheckMozartDetailsTabPhase3_step_21ExpectedValues CheckMozartDetailsTabPhase3_step_21ExpectedValues
        {
            get
            {
                if ((this.mCheckMozartDetailsTabPhase3_step_21ExpectedValues == null))
                {
                    this.mCheckMozartDetailsTabPhase3_step_21ExpectedValues = new CheckMozartDetailsTabPhase3_step_21ExpectedValues();
                }
                return this.mCheckMozartDetailsTabPhase3_step_21ExpectedValues;
            }
        }
        
        public virtual CheckMozartBankValues_step_25ExpectedValues CheckMozartBankValues_step_25ExpectedValues
        {
            get
            {
                if ((this.mCheckMozartBankValues_step_25ExpectedValues == null))
                {
                    this.mCheckMozartBankValues_step_25ExpectedValues = new CheckMozartBankValues_step_25ExpectedValues();
                }
                return this.mCheckMozartBankValues_step_25ExpectedValues;
            }
        }
        
        public virtual CheckMozartBankValues_step_25_2ExpectedValues CheckMozartBankValues_step_25_2ExpectedValues
        {
            get
            {
                if ((this.mCheckMozartBankValues_step_25_2ExpectedValues == null))
                {
                    this.mCheckMozartBankValues_step_25_2ExpectedValues = new CheckMozartBankValues_step_25_2ExpectedValues();
                }
                return this.mCheckMozartBankValues_step_25_2ExpectedValues;
            }
        }
        
        public virtual CheckSchubertBankValues_step_25_2ExpectedValues CheckSchubertBankValues_step_25_2ExpectedValues
        {
            get
            {
                if ((this.mCheckSchubertBankValues_step_25_2ExpectedValues == null))
                {
                    this.mCheckSchubertBankValues_step_25_2ExpectedValues = new CheckSchubertBankValues_step_25_2ExpectedValues();
                }
                return this.mCheckSchubertBankValues_step_25_2ExpectedValues;
            }
        }
        
        public UIArbeidsplanWindow UIArbeidsplanWindow
        {
            get
            {
                if ((this.mUIArbeidsplanWindow == null))
                {
                    this.mUIArbeidsplanWindow = new UIArbeidsplanWindow();
                }
                return this.mUIArbeidsplanWindow;
            }
        }
        
        public UIGatWindow UIGatWindow
        {
            get
            {
                if ((this.mUIGatWindow == null))
                {
                    this.mUIGatWindow = new UIGatWindow();
                }
                return this.mUIGatWindow;
            }
        }
        #endregion
        
        #region Fields
        private CheckBachLine2_step_6_CalculationsExpectedValues mCheckBachLine2_step_6_CalculationsExpectedValues;
        
        private CheckBachLine2Week1_step_7_CalculationsExpectedValues mCheckBachLine2Week1_step_7_CalculationsExpectedValues;
        
        private CheckBeethovenLine1_step_1ExpectedValues mCheckBeethovenLine1_step_1ExpectedValues;
        
        private CheckBeethovenLine1_step_2ExpectedValues mCheckBeethovenLine1_step_2ExpectedValues;
        
        private CheckBeethovenLine1_step_4_CalculationsExpectedValues mCheckBeethovenLine1_step_4_CalculationsExpectedValues;
        
        private CheckChopinLine3_step_12_CalculationsExpectedValues mCheckChopinLine3_step_12_CalculationsExpectedValues;
        
        private CheckChopinLine3Week1_step_10_CalculationsExpectedValues mCheckChopinLine3Week1_step_10_CalculationsExpectedValues;
        
        private CheckMozartLine1_step_16_CalculationsExpectedValues mCheckMozartLine1_step_16_CalculationsExpectedValues;
        
        private CheckMozartLine1_step_23_CalculationsExpectedValues mCheckMozartLine1_step_23_CalculationsExpectedValues;
        
        private CheckSchubertBankValues_step_25ExpectedValues mCheckSchubertBankValues_step_25ExpectedValues;
        
        private CheckSchubertLine2_step_24_CalculationsExpectedValues mCheckSchubertLine2_step_24_CalculationsExpectedValues;
        
        private CheckMozartDetailsTabPhase3_step_21ExpectedValues mCheckMozartDetailsTabPhase3_step_21ExpectedValues;
        
        private CheckMozartBankValues_step_25ExpectedValues mCheckMozartBankValues_step_25ExpectedValues;
        
        private CheckMozartBankValues_step_25_2ExpectedValues mCheckMozartBankValues_step_25_2ExpectedValues;
        
        private CheckSchubertBankValues_step_25_2ExpectedValues mCheckSchubertBankValues_step_25_2ExpectedValues;
        
        private UIArbeidsplanWindow mUIArbeidsplanWindow;
        
        private UIGatWindow mUIGatWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckBachLine2_step_6_Calculations'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckBachLine2_step_6_CalculationsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '35,5' cell equals '35,5'
        /// </summary>
        public string UIItem355Cell4Text = "35,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '35,56' cell equals '35,56'
        /// </summary>
        public string UIItem3556Cell1Text = "35,56";
        
        /// <summary>
        /// Verify that the 'Text' property of '35,56' cell equals '142'
        /// </summary>
        public string UIItem3556CellText = "142";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,06' cell equals '142,23'
        /// </summary>
        public string UIItem006CellText = "142,23";
        
        /// <summary>
        /// Verify that the 'Text' property of '142,23' cell equals '155,5'
        /// </summary>
        public string UIItem14223CellText = "155,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '142,23' cell equals '38,88'
        /// </summary>
        public string UIItem14223Cell1Text = "38,88";
        
        /// <summary>
        /// Verify that the 'Text' property of '38,88' cell equals '-5,5'
        /// </summary>
        public string UIItem3888CellText = "-5,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '103,67' cell equals '-'
        /// </summary>
        public string UIItem10367CellText = "-";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,23' cell equals '100,16%'
        /// </summary>
        public string UIItem023CellText = "100,16%";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckBachLine2Week1_step_7_Calculations'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckBachLine2Week1_step_7_CalculationsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '35,56' cell equals '33,92'
        /// </summary>
        public string UIItem3556Cell1Text = "33,92";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,06' cell equals '135,67'
        /// </summary>
        public string UIItem006CellText = "135,67";
        
        /// <summary>
        /// Verify that the 'Text' property of '142,23' cell equals '149,44'
        /// </summary>
        public string UIItem14223CellText = "149,44";
        
        /// <summary>
        /// Verify that the 'Text' property of '142,23' cell equals '37,36'
        /// </summary>
        public string UIItem14223Cell1Text = "37,36";
        
        /// <summary>
        /// Verify that the 'Text' property of '103,67' cell equals '0,56'
        /// </summary>
        public string UIItem10367CellText = "0,56";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,23' cell equals '95,54%'
        /// </summary>
        public string UIItem023CellText = "95,54%";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckBeethovenLine1_step_1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckBeethovenLine1_step_1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0CellText = "0";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0Cell1Text = "0";
        
        /// <summary>
        /// Verify that the 'Text' property of '44,17' cell equals '0'
        /// </summary>
        public string UIItem4417CellText = "0";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0Cell2Text = "0";
        
        /// <summary>
        /// Verify that the 'Text' property of '134,5' cell equals '-'
        /// </summary>
        public string UIItem1345CellText = "-";
        
        /// <summary>
        /// Verify that the 'Text' property of '134,5' cell equals '-'
        /// </summary>
        public string UIItem1345Cell1Text = "-";
        
        /// <summary>
        /// Verify that the 'Text' property of '36,99' cell equals ''
        /// </summary>
        public string UIItem3699CellText = "";
        
        /// <summary>
        /// Verify that the 'Text' property of '-' cell equals '-'
        /// </summary>
        public string UIItemCell2Text = "-";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckBeethovenLine1_step_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckBeethovenLine1_step_2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '134,5' cell equals '147,96'
        /// </summary>
        public string UIItem1345CellText = "147,96";
        
        /// <summary>
        /// Verify that the 'Text' property of '134,5' cell equals '36,99'
        /// </summary>
        public string UIItem1345Cell1Text = "36,99";
        
        /// <summary>
        /// Verify that the 'Text' property of '36,99' cell equals '-'
        /// </summary>
        public string UIItem3699CellText = "-";
        
        /// <summary>
        /// Verify that the 'Text' property of '-' cell equals '2,04'
        /// </summary>
        public string UIItemCell2Text = "2,04";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckBeethovenLine1_step_4_Calculations'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckBeethovenLine1_step_4_CalculationsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '35,5' cell equals '35,5'
        /// </summary>
        public string UIItem355Cell3Text = "35,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '33,63' cell equals '33,63'
        /// </summary>
        public string UIItem3363Cell1Text = "33,63";
        
        /// <summary>
        /// Verify that the 'Text' property of '33,63' cell equals '142'
        /// </summary>
        public string UIItem3363CellText = "142";
        
        /// <summary>
        /// Verify that the 'Text' property of '-1,88' cell equals '134,5'
        /// </summary>
        public string UIItem188CellText = "134,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '134,5' cell equals '147,96'
        /// </summary>
        public string UIItem1345CellText = "147,96";
        
        /// <summary>
        /// Verify that the 'Text' property of '134,5' cell equals '36,99'
        /// </summary>
        public string UIItem1345Cell1Text = "36,99";
        
        /// <summary>
        /// Verify that the 'Text' property of '36,99' cell equals '-'
        /// </summary>
        public string UIItem3699CellText = "-";
        
        /// <summary>
        /// Verify that the 'Text' property of '-' cell equals '2,04'
        /// </summary>
        public string UIItemCell2Text = "2,04";
        
        /// <summary>
        /// Verify that the 'Text' property of '-7,5' cell equals '94,72%'
        /// </summary>
        public string UIItem75CellText = "94,72%";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckChopinLine3_step_12_Calculations'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckChopinLine3_step_12_CalculationsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '16,72' cell equals '17'
        /// </summary>
        public string UIItem1672Cell1Text = "17";
        
        /// <summary>
        /// Verify that the 'Text' property of '-18,78' cell equals '68'
        /// </summary>
        public string UIItem1878CellText = "68";
        
        /// <summary>
        /// Verify that the 'Text' property of '66,89' cell equals '71,19'
        /// </summary>
        public string UIItem6689CellText = "71,19";
        
        /// <summary>
        /// Verify that the 'Text' property of '66,89' cell equals '17,8'
        /// </summary>
        public string UIItem6689Cell1Text = "17,8";
        
        /// <summary>
        /// Verify that the 'Text' property of '49,35' cell equals '78,81'
        /// </summary>
        public string UIItem4935CellText = "78,81";
        
        /// <summary>
        /// Verify that the 'Text' property of '-75,11' cell equals '47,88%'
        /// </summary>
        public string UIItem7511CellText = "47,88%";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckChopinLine3Week1_step_10_Calculations'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckChopinLine3Week1_step_10_CalculationsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '35,5' cell equals '35,5'
        /// </summary>
        public string UIItem355Cell5Text = "35,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '16,72' cell equals '16,72'
        /// </summary>
        public string UIItem1672Cell1Text = "16,72";
        
        /// <summary>
        /// Verify that the 'Text' property of '16,72' cell equals '142'
        /// </summary>
        public string UIItem1672CellText = "142";
        
        /// <summary>
        /// Verify that the 'Text' property of '-18,78' cell equals '66,89'
        /// </summary>
        public string UIItem1878CellText = "66,89";
        
        /// <summary>
        /// Verify that the 'Text' property of '66,89' cell equals '70,08'
        /// </summary>
        public string UIItem6689CellText = "70,08";
        
        /// <summary>
        /// Verify that the 'Text' property of '66,89' cell equals '17,52'
        /// </summary>
        public string UIItem6689Cell1Text = "17,52";
        
        /// <summary>
        /// Verify that the 'Text' property of '17,52' cell equals '-'
        /// </summary>
        public string UIItem1752CellText = "-";
        
        /// <summary>
        /// Verify that the 'Text' property of '49,35' cell equals '79,92'
        /// </summary>
        public string UIItem4935CellText = "79,92";
        
        /// <summary>
        /// Verify that the 'Text' property of '-75,11' cell equals '47,1%'
        /// </summary>
        public string UIItem7511CellText = "47,1%";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckMozartLine1_step_16_Calculations'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckMozartLine1_step_16_CalculationsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '44,17' cell equals '44,17'
        /// </summary>
        public string UIItem4417CellText = "44,17";
        
        /// <summary>
        /// Verify that the 'Text' property of '35,5' cell equals '101,67'
        /// </summary>
        public string UIItem355Cell3Text = "101,67";
        
        /// <summary>
        /// Verify that the 'Text' property of '33,63' cell equals '33,89'
        /// </summary>
        public string UIItem3363Cell1Text = "33,89";
        
        /// <summary>
        /// Verify that the 'Text' property of '35,5' cell equals '10,83'
        /// </summary>
        public string UIItem355Cell1Text = "10,83";
        
        /// <summary>
        /// Verify that the 'Text' property of '33,63' cell equals '-13,5'
        /// </summary>
        public string UIItem3363CellText = "-13,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '-1,88' cell equals '87,32%'
        /// </summary>
        public string UIItem188CellText = "87,32%";
        
        /// <summary>
        /// Verify that the 'Text' property of '142' cell equals '-10,07'
        /// </summary>
        public string UIItem142Cell1Text = "-10,07";
        
        /// <summary>
        /// Verify that the 'Text' property of '134,5' cell equals '3,43'
        /// </summary>
        public string UIItem1345CellText = "3,43";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckMozartLine1_step_23_Calculations'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckMozartLine1_step_23_CalculationsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '38' cell equals '38'
        /// </summary>
        public string UIItem38CellText = "38";
        
        /// <summary>
        /// Verify that the 'Text' property of '21,75' cell equals '21,75'
        /// </summary>
        public string UIItem2175CellText = "21,75";
        
        /// <summary>
        /// Verify that the 'Text' property of '56,25' cell equals '56,25'
        /// </summary>
        public string UIItem5625CellText = "56,25";
        
        /// <summary>
        /// Verify that the 'Text' property of '35,56' cell equals '38,67'
        /// </summary>
        public string UIItem3556Cell1Text = "38,67";
        
        /// <summary>
        /// Verify that the 'Text' property of '35,56' cell equals '-4,5'
        /// </summary>
        public string UIItem3556CellText = "-4,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,06' cell equals '95,77%'
        /// </summary>
        public string UIItem006CellText = "95,77%";
        
        /// <summary>
        /// Verify that the 'Text' property of '142' cell equals '0,96'
        /// </summary>
        public string UIItem142CellText = "0,96";
        
        /// <summary>
        /// Verify that the 'Text' property of '142,23' cell equals '5,46'
        /// </summary>
        public string UIItem14223CellText = "5,46";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSchubertBankValues_step_25'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckSchubertBankValues_step_25ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '1,75' cell equals '1,98'
        /// </summary>
        public string UIItem175CellText = "1,98";
        
        /// <summary>
        /// Verify that the 'Text' property of '1,98' cell equals '1,75'
        /// </summary>
        public string UIItem198CellText = "1,75";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSchubertLine2_step_24_Calculations'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckSchubertLine2_step_24_CalculationsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '14' cell equals '14'
        /// </summary>
        public string UIItem14CellText = "14";
        
        /// <summary>
        /// Verify that the 'Text' property of '21,75' cell equals '21,75'
        /// </summary>
        public string UIItem2175Cell1Text = "21,75";
        
        /// <summary>
        /// Verify that the 'Text' property of '24,33' cell equals '24,33'
        /// </summary>
        public string UIItem2433CellText = "24,33";
        
        /// <summary>
        /// Verify that the 'Text' property of '20,03' cell equals '20,03'
        /// </summary>
        public string UIItem2003Cell1Text = "20,03";
        
        /// <summary>
        /// Verify that the 'Text' property of '20,03' cell equals '1,75'
        /// </summary>
        public string UIItem2003CellText = "1,75";
        
        /// <summary>
        /// Verify that the 'Text' property of '-' cell equals '51,64%'
        /// </summary>
        public string UIItemCell7Text = "51,64%";
        
        /// <summary>
        /// Verify that the 'Text' property of '1,75' cell equals '3,73'
        /// </summary>
        public string UIItem175CellText = "3,73";
        
        /// <summary>
        /// Verify that the 'Text' property of '51,64%' cell equals '1,98'
        /// </summary>
        public string UIItem5164CellText = "1,98";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckMozartDetailsTabPhase3_step_21'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckMozartDetailsTabPhase3_step_21ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Timer ukesum i uke 1 fra denne vakten (ink faktor, uten omregnet tid)' cell equals 'Timer ukesum i uke 1 fra denne vakten (ink faktor, uten omregnet tid)'
        /// </summary>
        public string UITimerukesumiuke1fradCellText = "Timer ukesum i uke 1 fra denne vakten (ink faktor, uten omregnet tid)";
        
        /// <summary>
        /// Verify that the 'Text' property of '10' cell equals '10'
        /// </summary>
        public string UIItem10CellText = "10";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Timer ukesum i uke 1 fra denne vakten (ink faktor, omregnet tid)' cell equals 'Timer ukesum i uke 1 fra denne vakten (ink faktor, omregnet tid)'
        /// </summary>
        public string UITimerukesumiuke1fradCell1Text = "Timer ukesum i uke 1 fra denne vakten (ink faktor, omregnet tid)";
        
        /// <summary>
        /// Verify that the 'Text' property of '10' cell equals '12'
        /// </summary>
        public string UIItem10Cell1Text = "12";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Totalt omregnet tid som skal i bank' cell equals 'Totalt omregnet tid som skal i bank'
        /// </summary>
        public string UITotaltomregnettidsomCellText = "Totalt omregnet tid som skal i bank";
        
        /// <summary>
        /// Verify that the 'Text' property of '5,46' cell equals '5,46'
        /// </summary>
        public string UIItem546CellText = "5,46";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckMozartBankValues_step_25'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckMozartBankValues_step_25ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '-4,50' cell equals '5,46'
        /// </summary>
        public string UIItem450CellText = "5,46";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,25' cell equals '-4,50'
        /// </summary>
        public string UIItem425CellText = "-4,50";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Iverksetting av arbeidsplan linje nr #1, plan 'Ønskeplan for Omregnet tid Baseplan'. Overført omregnet tid.' cell equals 'Iverksetting av arbeidsplan linje nr #1, plan 'Ønskeplan for Omregnet tid Baseplan'. Overført omregnet tid.'
        /// </summary>
        public string UIIverksettingavarbeidCellText = "Iverksetting av arbeidsplan linje nr #1, plan \'Ønskeplan for Omregnet tid Basepla" +
            "n\'. Overført omregnet tid.";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Iverksetting av arbeidsplan linje nr #1, plan 'Ønskeplan for Omregnet tid Baseplan'.' cell equals 'Iverksetting av arbeidsplan linje nr #1, plan 'Ønskeplan for Omregnet tid Baseplan'.'
        /// </summary>
        public string UIIverksettingavarbeidCell1Text = "Iverksetting av arbeidsplan linje nr #1, plan \'Ønskeplan for Omregnet tid Basepla" +
            "n\'.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckMozartBankValues_step_25_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckMozartBankValues_step_25_2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '-4,50' cell equals '-4,50'
        /// </summary>
        public string UIItem450CellText = "-4,50";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Iverksetting av arbeidsplan linje nr #1, plan 'Ønskeplan for Omregnet tid Baseplan'. Overført omregnet tid.' cell equals 'Iverksetting av arbeidsplan linje nr #1, plan 'Ønskeplan for Omregnet tid Baseplan'.'
        /// </summary>
        public string UIIverksettingavarbeidCellText = "Iverksetting av arbeidsplan linje nr #1, plan \'Ønskeplan for Omregnet tid Basepla" +
            "n\'.";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,25' cell equals '5,46'
        /// </summary>
        public string UIItem425CellText = "5,46";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Iverksetting av arbeidsplan linje nr #1, plan 'Ønskeplan for Omregnet tid Baseplan'.' cell equals 'Iverksetting av arbeidsplan linje nr #1, plan 'Ønskeplan for Omregnet tid Baseplan'. Overført omregnet tid.'
        /// </summary>
        public string UIIverksettingavarbeidCell1Text = "Iverksetting av arbeidsplan linje nr #1, plan \'Ønskeplan for Omregnet tid Basepla" +
            "n\'. Overført omregnet tid.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSchubertBankValues_step_25_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckSchubertBankValues_step_25_2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '1,75' cell equals '1,75'
        /// </summary>
        public string UIItem175CellText = "1,75";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Iverksetting av arbeidsplan linje nr #2, plan 'Ønskeplan for Omregnet tid Baseplan'.' cell equals 'Iverksetting av arbeidsplan linje nr #2, plan 'Ønskeplan for Omregnet tid Baseplan'.'
        /// </summary>
        public string UIIverksettingavarbeidCell2Text = "Iverksetting av arbeidsplan linje nr #2, plan \'Ønskeplan for Omregnet tid Basepla" +
            "n\'.";
        
        /// <summary>
        /// Verify that the 'Text' property of '1,98' cell equals '1,98'
        /// </summary>
        public string UIItem198CellText = "1,98";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Iverksetting av arbeidsplan linje nr #2, plan 'Ønskeplan for Omregnet tid Baseplan'. Overført omregnet tid.' cell equals 'Iverksetting av arbeidsplan linje nr #2, plan 'Ønskeplan for Omregnet tid Baseplan'. Overført omregnet tid.'
        /// </summary>
        public string UIIverksettingavarbeidCell3Text = "Iverksetting av arbeidsplan linje nr #2, plan \'Ønskeplan for Omregnet tid Basepla" +
            "n\'. Overført omregnet tid.";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIArbeidsplanWindow : DXWindow
    {
        
        public UIArbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        
        public UIDpnlVisualizationDockPanel UIDpnlVisualizationDockPanel
        {
            get
            {
                if ((this.mUIDpnlVisualizationDockPanel == null))
                {
                    this.mUIDpnlVisualizationDockPanel = new UIDpnlVisualizationDockPanel(this);
                }
                return this.mUIDpnlVisualizationDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient mUIPnlRosterPlanClient;
        
        private UIDpnlVisualizationDockPanel mUIDpnlVisualizationDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlRosterPlanClient : DXTestControl
    {
        
        public UIPnlRosterPlanClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRosterPlanGrid1Custom UIRosterPlanGrid1Custom
        {
            get
            {
                if ((this.mUIRosterPlanGrid1Custom == null))
                {
                    this.mUIRosterPlanGrid1Custom = new UIRosterPlanGrid1Custom(this);
                }
                return this.mUIRosterPlanGrid1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIRosterPlanGrid1Custom mUIRosterPlanGrid1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRosterPlanGrid1Custom : DXTestControl
    {
        
        public UIRosterPlanGrid1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rosterPlanGrid1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RosterPlanGrid";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        
        public UIDpnlColumnsDockPanel UIDpnlColumnsDockPanel
        {
            get
            {
                if ((this.mUIDpnlColumnsDockPanel == null))
                {
                    this.mUIDpnlColumnsDockPanel = new UIDpnlColumnsDockPanel(this);
                }
                return this.mUIDpnlColumnsDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable mUIGcRosterPlanTable;
        
        private UIDpnlColumnsDockPanel mUIDpnlColumnsDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRosterPlanTable : DXGrid
    {
        
        public UIGcRosterPlanTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIBeethovenLudwigVanCell
        {
            get
            {
                if ((this.mUIBeethovenLudwigVanCell == null))
                {
                    this.mUIBeethovenLudwigVanCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBeethovenLudwigVanCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]ColumnHandle1";
                    this.mUIBeethovenLudwigVanCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBeethovenLudwigVanCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIBeethovenLudwigVanCell;
            }
        }
        
        public DXCell UIBachJohannSebastianCell
        {
            get
            {
                if ((this.mUIBachJohannSebastianCell == null))
                {
                    this.mUIBachJohannSebastianCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBachJohannSebastianCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]ColumnHandle1";
                    this.mUIBachJohannSebastianCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBachJohannSebastianCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIBachJohannSebastianCell;
            }
        }
        
        public DXCell UIChopinFredericCell
        {
            get
            {
                if ((this.mUIChopinFredericCell == null))
                {
                    this.mUIChopinFredericCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIChopinFredericCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]ColumnHandle1";
                    this.mUIChopinFredericCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIChopinFredericCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIChopinFredericCell;
            }
        }
        
        public DXCell UIItem4417Cell
        {
            get
            {
                if ((this.mUIItem4417Cell == null))
                {
                    this.mUIItem4417Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4417Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalCalculat" +
                        "edSum_3";
                    this.mUIItem4417Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4417Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem4417Cell;
            }
        }
        
        public DXCell UISchubertFranzCell
        {
            get
            {
                if ((this.mUISchubertFranzCell == null))
                {
                    this.mUISchubertFranzCell = new DXCell(this);
                    #region Search Criteria
                    this.mUISchubertFranzCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]3[Column]ColumnHandle1";
                    this.mUISchubertFranzCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUISchubertFranzCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUISchubertFranzCell;
            }
        }
        
        public DXCell UIItem0Cell
        {
            get
            {
                if ((this.mUIItem0Cell == null))
                {
                    this.mUIItem0Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalCalculat" +
                        "edSum_1";
                    this.mUIItem0Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell;
            }
        }
        
        public DXCell UIItem0Cell1
        {
            get
            {
                if ((this.mUIItem0Cell1 == null))
                {
                    this.mUIItem0Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalCalculat" +
                        "edSum_2";
                    this.mUIItem0Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell1;
            }
        }
        
        public DXCell UIItem0Cell2
        {
            get
            {
                if ((this.mUIItem0Cell2 == null))
                {
                    this.mUIItem0Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalCalculat" +
                        "edSum_4";
                    this.mUIItem0Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell2;
            }
        }
        
        public DXCell UIItem38Cell
        {
            get
            {
                if ((this.mUIItem38Cell == null))
                {
                    this.mUIItem38Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem38Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalCalculat" +
                        "edSum_1";
                    this.mUIItem38Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem38Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem38Cell;
            }
        }
        
        public DXCell UIItem2175Cell
        {
            get
            {
                if ((this.mUIItem2175Cell == null))
                {
                    this.mUIItem2175Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2175Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalCalculat" +
                        "edSum_2";
                    this.mUIItem2175Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2175Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2175Cell;
            }
        }
        
        public DXCell UIItem5625Cell
        {
            get
            {
                if ((this.mUIItem5625Cell == null))
                {
                    this.mUIItem5625Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem5625Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalCalculat" +
                        "edSum_3";
                    this.mUIItem5625Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem5625Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem5625Cell;
            }
        }
        
        public DXCell UIItem14Cell
        {
            get
            {
                if ((this.mUIItem14Cell == null))
                {
                    this.mUIItem14Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem14Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]3[Column]Col_Calc_TotalCalculat" +
                        "edSum_1";
                    this.mUIItem14Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem14Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem14Cell;
            }
        }
        
        public DXCell UIItem2175Cell1
        {
            get
            {
                if ((this.mUIItem2175Cell1 == null))
                {
                    this.mUIItem2175Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2175Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]3[Column]Col_Calc_TotalCalculat" +
                        "edSum_2";
                    this.mUIItem2175Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2175Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2175Cell1;
            }
        }
        
        public DXCell UIItem2433Cell
        {
            get
            {
                if ((this.mUIItem2433Cell == null))
                {
                    this.mUIItem2433Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2433Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]3[Column]Col_Calc_TotalCalculat" +
                        "edSum_3";
                    this.mUIItem2433Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2433Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2433Cell;
            }
        }
        
        public DXCell UIBeethovenLudwigVanCell1
        {
            get
            {
                if ((this.mUIBeethovenLudwigVanCell1 == null))
                {
                    this.mUIBeethovenLudwigVanCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIBeethovenLudwigVanCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]EmployeeName";
                    this.mUIBeethovenLudwigVanCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBeethovenLudwigVanCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIBeethovenLudwigVanCell1;
            }
        }
        
        public DXCell UIBachJohannSebastianCell1
        {
            get
            {
                if ((this.mUIBachJohannSebastianCell1 == null))
                {
                    this.mUIBachJohannSebastianCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIBachJohannSebastianCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]EmployeeName";
                    this.mUIBachJohannSebastianCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBachJohannSebastianCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIBachJohannSebastianCell1;
            }
        }
        
        public DXCell UIChopinFredericCell1
        {
            get
            {
                if ((this.mUIChopinFredericCell1 == null))
                {
                    this.mUIChopinFredericCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIChopinFredericCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]EmployeeName";
                    this.mUIChopinFredericCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIChopinFredericCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIChopinFredericCell1;
            }
        }
        
        public DXCell UISchubertFranzCell1
        {
            get
            {
                if ((this.mUISchubertFranzCell1 == null))
                {
                    this.mUISchubertFranzCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUISchubertFranzCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]EmployeeName";
                    this.mUISchubertFranzCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUISchubertFranzCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUISchubertFranzCell1;
            }
        }
        
        public DXCell UISchubertFranzCell2
        {
            get
            {
                if ((this.mUISchubertFranzCell2 == null))
                {
                    this.mUISchubertFranzCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUISchubertFranzCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]3[Column]EmployeeName";
                    this.mUISchubertFranzCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUISchubertFranzCell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUISchubertFranzCell2;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIBeethovenLudwigVanCell;
        
        private DXCell mUIBachJohannSebastianCell;
        
        private DXCell mUIChopinFredericCell;
        
        private DXCell mUIItem4417Cell;
        
        private DXCell mUISchubertFranzCell;
        
        private DXCell mUIItem0Cell;
        
        private DXCell mUIItem0Cell1;
        
        private DXCell mUIItem0Cell2;
        
        private DXCell mUIItem38Cell;
        
        private DXCell mUIItem2175Cell;
        
        private DXCell mUIItem5625Cell;
        
        private DXCell mUIItem14Cell;
        
        private DXCell mUIItem2175Cell1;
        
        private DXCell mUIItem2433Cell;
        
        private DXCell mUIBeethovenLudwigVanCell1;
        
        private DXCell mUIBachJohannSebastianCell1;
        
        private DXCell mUIChopinFredericCell1;
        
        private DXCell mUISchubertFranzCell1;
        
        private DXCell mUISchubertFranzCell2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpnlColumnsDockPanel : DXDockPanel
    {
        
        public UIDpnlColumnsDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlColumns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIDockPanel1_ContainerCustom UIDockPanel1_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel1_ContainerCustom == null))
                {
                    this.mUIDockPanel1_ContainerCustom = new UIDockPanel1_ContainerCustom(this);
                }
                return this.mUIDockPanel1_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel1_ContainerCustom mUIDockPanel1_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel1_ContainerCustom : DXTestControl
    {
        
        public UIDockPanel1_ContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcExtraGridTable UIGcExtraGridTable
        {
            get
            {
                if ((this.mUIGcExtraGridTable == null))
                {
                    this.mUIGcExtraGridTable = new UIGcExtraGridTable(this);
                }
                return this.mUIGcExtraGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcExtraGridTable mUIGcExtraGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcExtraGridTable : DXGrid
    {
        
        public UIGcExtraGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem355Cell
        {
            get
            {
                if ((this.mUIItem355Cell == null))
                {
                    this.mUIItem355Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem355Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]ColumnHandle42";
                    this.mUIItem355Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem355Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem355Cell;
            }
        }
        
        public DXCell UIItem3556Cell
        {
            get
            {
                if ((this.mUIItem3556Cell == null))
                {
                    this.mUIItem3556Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3556Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]ColumnHandle43";
                    this.mUIItem3556Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3556Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3556Cell;
            }
        }
        
        public DXCell UIItem006Cell
        {
            get
            {
                if ((this.mUIItem006Cell == null))
                {
                    this.mUIItem006Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem006Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]ColumnHandle44";
                    this.mUIItem006Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem006Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem006Cell;
            }
        }
        
        public DXCell UIItem142Cell
        {
            get
            {
                if ((this.mUIItem142Cell == null))
                {
                    this.mUIItem142Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem142Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]ColumnHandle45";
                    this.mUIItem142Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem142Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem142Cell;
            }
        }
        
        public DXCell UIItem14223Cell
        {
            get
            {
                if ((this.mUIItem14223Cell == null))
                {
                    this.mUIItem14223Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem14223Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]ColumnHandle46";
                    this.mUIItem14223Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem14223Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem14223Cell;
            }
        }
        
        public DXCell UIItem14223Cell1
        {
            get
            {
                if ((this.mUIItem14223Cell1 == null))
                {
                    this.mUIItem14223Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem14223Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]ColumnHandle47";
                    this.mUIItem14223Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem14223Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem14223Cell1;
            }
        }
        
        public DXCell UIItem1555Cell
        {
            get
            {
                if ((this.mUIItem1555Cell == null))
                {
                    this.mUIItem1555Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1555Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]ColumnHandle48";
                    this.mUIItem1555Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1555Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1555Cell;
            }
        }
        
        public DXCell UIItem3888Cell
        {
            get
            {
                if ((this.mUIItem3888Cell == null))
                {
                    this.mUIItem3888Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3888Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]ColumnHandle49";
                    this.mUIItem3888Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3888Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3888Cell;
            }
        }
        
        public DXCell UIItem10367Cell
        {
            get
            {
                if ((this.mUIItem10367Cell == null))
                {
                    this.mUIItem10367Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem10367Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]ColumnHandle50";
                    this.mUIItem10367Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem10367Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem10367Cell;
            }
        }
        
        public DXCell UIItem55Cell
        {
            get
            {
                if ((this.mUIItem55Cell == null))
                {
                    this.mUIItem55Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem55Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]ColumnHandle51";
                    this.mUIItem55Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem55Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem55Cell;
            }
        }
        
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]ColumnHandle52";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]ColumnHandle53";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXCell UIItem023Cell
        {
            get
            {
                if ((this.mUIItem023Cell == null))
                {
                    this.mUIItem023Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem023Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]ColumnHandle54";
                    this.mUIItem023Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem023Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem023Cell;
            }
        }
        
        public DXCell UIItem023Cell1
        {
            get
            {
                if ((this.mUIItem023Cell1 == null))
                {
                    this.mUIItem023Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem023Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]ColumnHandle55";
                    this.mUIItem023Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem023Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem023Cell1;
            }
        }
        
        public DXCell UIItem10016Cell
        {
            get
            {
                if ((this.mUIItem10016Cell == null))
                {
                    this.mUIItem10016Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem10016Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]ColumnHandle56";
                    this.mUIItem10016Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem10016Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem10016Cell;
            }
        }
        
        public DXCell UIItem355Cell1
        {
            get
            {
                if ((this.mUIItem355Cell1 == null))
                {
                    this.mUIItem355Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem355Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle42";
                    this.mUIItem355Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem355Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem355Cell1;
            }
        }
        
        public DXCell UIItem3363Cell
        {
            get
            {
                if ((this.mUIItem3363Cell == null))
                {
                    this.mUIItem3363Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3363Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle43";
                    this.mUIItem3363Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3363Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3363Cell;
            }
        }
        
        public DXCell UIItem188Cell
        {
            get
            {
                if ((this.mUIItem188Cell == null))
                {
                    this.mUIItem188Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem188Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle44";
                    this.mUIItem188Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem188Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem188Cell;
            }
        }
        
        public DXCell UIItem142Cell1
        {
            get
            {
                if ((this.mUIItem142Cell1 == null))
                {
                    this.mUIItem142Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem142Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle45";
                    this.mUIItem142Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem142Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem142Cell1;
            }
        }
        
        public DXCell UIItem1345Cell
        {
            get
            {
                if ((this.mUIItem1345Cell == null))
                {
                    this.mUIItem1345Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1345Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle46";
                    this.mUIItem1345Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1345Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1345Cell;
            }
        }
        
        public DXCell UIItem1345Cell1
        {
            get
            {
                if ((this.mUIItem1345Cell1 == null))
                {
                    this.mUIItem1345Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1345Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle47";
                    this.mUIItem1345Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1345Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1345Cell1;
            }
        }
        
        public DXCell UIItem14796Cell
        {
            get
            {
                if ((this.mUIItem14796Cell == null))
                {
                    this.mUIItem14796Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem14796Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle48";
                    this.mUIItem14796Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem14796Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem14796Cell;
            }
        }
        
        public DXCell UIItem3699Cell
        {
            get
            {
                if ((this.mUIItem3699Cell == null))
                {
                    this.mUIItem3699Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3699Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle49";
                    this.mUIItem3699Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3699Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3699Cell;
            }
        }
        
        public DXCell UIItem204Cell
        {
            get
            {
                if ((this.mUIItem204Cell == null))
                {
                    this.mUIItem204Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem204Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle52";
                    this.mUIItem204Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem204Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem204Cell;
            }
        }
        
        public DXCell UIItem75Cell
        {
            get
            {
                if ((this.mUIItem75Cell == null))
                {
                    this.mUIItem75Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem75Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle54";
                    this.mUIItem75Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem75Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem75Cell;
            }
        }
        
        public DXCell UIItem75Cell1
        {
            get
            {
                if ((this.mUIItem75Cell1 == null))
                {
                    this.mUIItem75Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem75Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle55";
                    this.mUIItem75Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem75Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem75Cell1;
            }
        }
        
        public DXCell UIItem9472Cell
        {
            get
            {
                if ((this.mUIItem9472Cell == null))
                {
                    this.mUIItem9472Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem9472Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle56";
                    this.mUIItem9472Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem9472Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem9472Cell;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle50";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        
        public DXCell UIItemCell3
        {
            get
            {
                if ((this.mUIItemCell3 == null))
                {
                    this.mUIItemCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle51";
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell3;
            }
        }
        
        public DXCell UIItemCell4
        {
            get
            {
                if ((this.mUIItemCell4 == null))
                {
                    this.mUIItemCell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle53";
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell4.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell4;
            }
        }
        
        public DXCell UIItem355Cell2
        {
            get
            {
                if ((this.mUIItem355Cell2 == null))
                {
                    this.mUIItem355Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem355Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle42";
                    this.mUIItem355Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem355Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem355Cell2;
            }
        }
        
        public DXCell UIItem1672Cell
        {
            get
            {
                if ((this.mUIItem1672Cell == null))
                {
                    this.mUIItem1672Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1672Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle43";
                    this.mUIItem1672Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1672Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1672Cell;
            }
        }
        
        public DXCell UIItem1878Cell
        {
            get
            {
                if ((this.mUIItem1878Cell == null))
                {
                    this.mUIItem1878Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1878Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle44";
                    this.mUIItem1878Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1878Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1878Cell;
            }
        }
        
        public DXCell UIItem142Cell2
        {
            get
            {
                if ((this.mUIItem142Cell2 == null))
                {
                    this.mUIItem142Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem142Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle45";
                    this.mUIItem142Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem142Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem142Cell2;
            }
        }
        
        public DXCell UIItem6689Cell
        {
            get
            {
                if ((this.mUIItem6689Cell == null))
                {
                    this.mUIItem6689Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem6689Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle46";
                    this.mUIItem6689Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem6689Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem6689Cell;
            }
        }
        
        public DXCell UIItem6689Cell1
        {
            get
            {
                if ((this.mUIItem6689Cell1 == null))
                {
                    this.mUIItem6689Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem6689Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle47";
                    this.mUIItem6689Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem6689Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem6689Cell1;
            }
        }
        
        public DXCell UIItem7008Cell
        {
            get
            {
                if ((this.mUIItem7008Cell == null))
                {
                    this.mUIItem7008Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem7008Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle48";
                    this.mUIItem7008Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem7008Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem7008Cell;
            }
        }
        
        public DXCell UIItem1752Cell
        {
            get
            {
                if ((this.mUIItem1752Cell == null))
                {
                    this.mUIItem1752Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1752Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle49";
                    this.mUIItem1752Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1752Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1752Cell;
            }
        }
        
        public DXCell UIItem4935Cell
        {
            get
            {
                if ((this.mUIItem4935Cell == null))
                {
                    this.mUIItem4935Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4935Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle50";
                    this.mUIItem4935Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4935Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem4935Cell;
            }
        }
        
        public DXCell UIItemCell5
        {
            get
            {
                if ((this.mUIItemCell5 == null))
                {
                    this.mUIItemCell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle51";
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell5.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell5;
            }
        }
        
        public DXCell UIItem7992Cell
        {
            get
            {
                if ((this.mUIItem7992Cell == null))
                {
                    this.mUIItem7992Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem7992Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle52";
                    this.mUIItem7992Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem7992Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem7992Cell;
            }
        }
        
        public DXCell UIItemCell6
        {
            get
            {
                if ((this.mUIItemCell6 == null))
                {
                    this.mUIItemCell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle53";
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell6.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell6;
            }
        }
        
        public DXCell UIItem7511Cell
        {
            get
            {
                if ((this.mUIItem7511Cell == null))
                {
                    this.mUIItem7511Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem7511Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle54";
                    this.mUIItem7511Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem7511Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem7511Cell;
            }
        }
        
        public DXCell UIItem7511Cell1
        {
            get
            {
                if ((this.mUIItem7511Cell1 == null))
                {
                    this.mUIItem7511Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem7511Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle55";
                    this.mUIItem7511Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem7511Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem7511Cell1;
            }
        }
        
        public DXCell UIItem471Cell
        {
            get
            {
                if ((this.mUIItem471Cell == null))
                {
                    this.mUIItem471Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem471Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle56";
                    this.mUIItem471Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem471Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem471Cell;
            }
        }
        
        public DXCell UIItem6008Cell
        {
            get
            {
                if ((this.mUIItem6008Cell == null))
                {
                    this.mUIItem6008Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem6008Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]ColumnHandle42";
                    this.mUIItem6008Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem6008Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem6008Cell;
            }
        }
        
        public DXCell UIItem2003Cell
        {
            get
            {
                if ((this.mUIItem2003Cell == null))
                {
                    this.mUIItem2003Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2003Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]3[Column]ColumnHandle43";
                    this.mUIItem2003Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2003Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2003Cell;
            }
        }
        
        public DXCell UIItemCell7
        {
            get
            {
                if ((this.mUIItemCell7 == null))
                {
                    this.mUIItemCell7 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]3[Column]ColumnHandle44";
                    this.mUIItemCell7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell7.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell7;
            }
        }
        
        public DXCell UIItem175Cell
        {
            get
            {
                if ((this.mUIItem175Cell == null))
                {
                    this.mUIItem175Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem175Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]3[Column]ColumnHandle45";
                    this.mUIItem175Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem175Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem175Cell;
            }
        }
        
        public DXCell UIItem5164Cell
        {
            get
            {
                if ((this.mUIItem5164Cell == null))
                {
                    this.mUIItem5164Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem5164Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]3[Column]ColumnHandle46";
                    this.mUIItem5164Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem5164Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem5164Cell;
            }
        }
        
        public DXCell UIItem374Cell
        {
            get
            {
                if ((this.mUIItem374Cell == null))
                {
                    this.mUIItem374Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem374Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]ColumnHandle47";
                    this.mUIItem374Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem374Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem374Cell;
            }
        }
        
        public DXCell UIItem199Cell
        {
            get
            {
                if ((this.mUIItem199Cell == null))
                {
                    this.mUIItem199Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem199Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]ColumnHandle48";
                    this.mUIItem199Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem199Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem199Cell;
            }
        }
        
        public DXCell UIItem355Cell3
        {
            get
            {
                if ((this.mUIItem355Cell3 == null))
                {
                    this.mUIItem355Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem355Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle40";
                    this.mUIItem355Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem355Cell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem355Cell3;
            }
        }
        
        public DXCell UIItem3363Cell1
        {
            get
            {
                if ((this.mUIItem3363Cell1 == null))
                {
                    this.mUIItem3363Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3363Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle41";
                    this.mUIItem3363Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3363Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3363Cell1;
            }
        }
        
        public DXCell UIItem355Cell4
        {
            get
            {
                if ((this.mUIItem355Cell4 == null))
                {
                    this.mUIItem355Cell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem355Cell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]ColumnHandle40";
                    this.mUIItem355Cell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem355Cell4.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem355Cell4;
            }
        }
        
        public DXCell UIItem3556Cell1
        {
            get
            {
                if ((this.mUIItem3556Cell1 == null))
                {
                    this.mUIItem3556Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3556Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]ColumnHandle41";
                    this.mUIItem3556Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3556Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3556Cell1;
            }
        }
        
        public DXCell UIItem355Cell5
        {
            get
            {
                if ((this.mUIItem355Cell5 == null))
                {
                    this.mUIItem355Cell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem355Cell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle40";
                    this.mUIItem355Cell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem355Cell5.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem355Cell5;
            }
        }
        
        public DXCell UIItem1672Cell1
        {
            get
            {
                if ((this.mUIItem1672Cell1 == null))
                {
                    this.mUIItem1672Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1672Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle41";
                    this.mUIItem1672Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1672Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1672Cell1;
            }
        }
        
        public DXCell UIItem2003Cell1
        {
            get
            {
                if ((this.mUIItem2003Cell1 == null))
                {
                    this.mUIItem2003Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2003Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]3[Column]ColumnHandle41";
                    this.mUIItem2003Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2003Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2003Cell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem355Cell;
        
        private DXCell mUIItem3556Cell;
        
        private DXCell mUIItem006Cell;
        
        private DXCell mUIItem142Cell;
        
        private DXCell mUIItem14223Cell;
        
        private DXCell mUIItem14223Cell1;
        
        private DXCell mUIItem1555Cell;
        
        private DXCell mUIItem3888Cell;
        
        private DXCell mUIItem10367Cell;
        
        private DXCell mUIItem55Cell;
        
        private DXCell mUIItemCell;
        
        private DXCell mUIItemCell1;
        
        private DXCell mUIItem023Cell;
        
        private DXCell mUIItem023Cell1;
        
        private DXCell mUIItem10016Cell;
        
        private DXCell mUIItem355Cell1;
        
        private DXCell mUIItem3363Cell;
        
        private DXCell mUIItem188Cell;
        
        private DXCell mUIItem142Cell1;
        
        private DXCell mUIItem1345Cell;
        
        private DXCell mUIItem1345Cell1;
        
        private DXCell mUIItem14796Cell;
        
        private DXCell mUIItem3699Cell;
        
        private DXCell mUIItem204Cell;
        
        private DXCell mUIItem75Cell;
        
        private DXCell mUIItem75Cell1;
        
        private DXCell mUIItem9472Cell;
        
        private DXCell mUIItemCell2;
        
        private DXCell mUIItemCell3;
        
        private DXCell mUIItemCell4;
        
        private DXCell mUIItem355Cell2;
        
        private DXCell mUIItem1672Cell;
        
        private DXCell mUIItem1878Cell;
        
        private DXCell mUIItem142Cell2;
        
        private DXCell mUIItem6689Cell;
        
        private DXCell mUIItem6689Cell1;
        
        private DXCell mUIItem7008Cell;
        
        private DXCell mUIItem1752Cell;
        
        private DXCell mUIItem4935Cell;
        
        private DXCell mUIItemCell5;
        
        private DXCell mUIItem7992Cell;
        
        private DXCell mUIItemCell6;
        
        private DXCell mUIItem7511Cell;
        
        private DXCell mUIItem7511Cell1;
        
        private DXCell mUIItem471Cell;
        
        private DXCell mUIItem6008Cell;
        
        private DXCell mUIItem2003Cell;
        
        private DXCell mUIItemCell7;
        
        private DXCell mUIItem175Cell;
        
        private DXCell mUIItem5164Cell;
        
        private DXCell mUIItem374Cell;
        
        private DXCell mUIItem199Cell;
        
        private DXCell mUIItem355Cell3;
        
        private DXCell mUIItem3363Cell1;
        
        private DXCell mUIItem355Cell4;
        
        private DXCell mUIItem3556Cell1;
        
        private DXCell mUIItem355Cell5;
        
        private DXCell mUIItem1672Cell1;
        
        private DXCell mUIItem2003Cell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpnlVisualizationDockPanel : DXDockPanel
    {
        
        public UIDpnlVisualizationDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlVisualization";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIDockPanel3_ContainerCustom UIDockPanel3_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel3_ContainerCustom == null))
                {
                    this.mUIDockPanel3_ContainerCustom = new UIDockPanel3_ContainerCustom(this);
                }
                return this.mUIDockPanel3_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel3_ContainerCustom mUIDockPanel3_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel3_ContainerCustom : DXTestControl
    {
        
        public UIDockPanel3_ContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel3_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UITcSubtabsTabList UITcSubtabsTabList
        {
            get
            {
                if ((this.mUITcSubtabsTabList == null))
                {
                    this.mUITcSubtabsTabList = new UITcSubtabsTabList(this);
                }
                return this.mUITcSubtabsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcSubtabsTabList mUITcSubtabsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcSubtabsTabList : DXTestControl
    {
        
        public UITcSubtabsTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcSubtabs";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TabControlViewHost";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIViewTabPageClient UIViewTabPageClient
        {
            get
            {
                if ((this.mUIViewTabPageClient == null))
                {
                    this.mUIViewTabPageClient = new UIViewTabPageClient(this);
                }
                return this.mUIViewTabPageClient;
            }
        }
        #endregion
        
        #region Fields
        private UIViewTabPageClient mUIViewTabPageClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewTabPageClient : DXTestControl
    {
        
        public UIViewTabPageClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcSubtabsViewTabPage[7]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewTabPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIShiftDetailsViewCustom UIShiftDetailsViewCustom
        {
            get
            {
                if ((this.mUIShiftDetailsViewCustom == null))
                {
                    this.mUIShiftDetailsViewCustom = new UIShiftDetailsViewCustom(this);
                }
                return this.mUIShiftDetailsViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIShiftDetailsViewCustom mUIShiftDetailsViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIShiftDetailsViewCustom : DXTestControl
    {
        
        public UIShiftDetailsViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ShiftDetailsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ShiftDetailsView";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcShiftDetailsTable UIGcShiftDetailsTable
        {
            get
            {
                if ((this.mUIGcShiftDetailsTable == null))
                {
                    this.mUIGcShiftDetailsTable = new UIGcShiftDetailsTable(this);
                }
                return this.mUIGcShiftDetailsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcShiftDetailsTable mUIGcShiftDetailsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcShiftDetailsTable : DXGrid
    {
        
        public UIGcShiftDetailsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIFaktisklengdeomregneCell
        {
            get
            {
                if ((this.mUIFaktisklengdeomregneCell == null))
                {
                    this.mUIFaktisklengdeomregneCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIFaktisklengdeomregneCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftDetailsGridControlCell[View]gvShiftDetails[Row]4[Column]gridColumnKey";
                    this.mUIFaktisklengdeomregneCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIFaktisklengdeomregneCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIFaktisklengdeomregneCell;
            }
        }
        
        public DXCell UIItem12Cell
        {
            get
            {
                if ((this.mUIItem12Cell == null))
                {
                    this.mUIItem12Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem12Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftDetailsGridControlCell[View]gvShiftDetails[Row]4[Column]gridColumnValue";
                    this.mUIItem12Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem12Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem12Cell;
            }
        }
        
        public DXCell UITimerukesumiuke1fradCell
        {
            get
            {
                if ((this.mUITimerukesumiuke1fradCell == null))
                {
                    this.mUITimerukesumiuke1fradCell = new DXCell(this);
                    #region Search Criteria
                    this.mUITimerukesumiuke1fradCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftDetailsGridControlCell[View]gvShiftDetails[Row]7[Column]gridColumnKey";
                    this.mUITimerukesumiuke1fradCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUITimerukesumiuke1fradCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUITimerukesumiuke1fradCell;
            }
        }
        
        public DXCell UIItem10Cell
        {
            get
            {
                if ((this.mUIItem10Cell == null))
                {
                    this.mUIItem10Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem10Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftDetailsGridControlCell[View]gvShiftDetails[Row]7[Column]gridColumnValue";
                    this.mUIItem10Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem10Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem10Cell;
            }
        }
        
        public DXCell UITimerukesumiuke1fradCell1
        {
            get
            {
                if ((this.mUITimerukesumiuke1fradCell1 == null))
                {
                    this.mUITimerukesumiuke1fradCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUITimerukesumiuke1fradCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftDetailsGridControlCell[View]gvShiftDetails[Row]8[Column]gridColumnKey";
                    this.mUITimerukesumiuke1fradCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUITimerukesumiuke1fradCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUITimerukesumiuke1fradCell1;
            }
        }
        
        public DXCell UIItem10Cell1
        {
            get
            {
                if ((this.mUIItem10Cell1 == null))
                {
                    this.mUIItem10Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem10Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftDetailsGridControlCell[View]gvShiftDetails[Row]8[Column]gridColumnValue";
                    this.mUIItem10Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem10Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem10Cell1;
            }
        }
        
        public DXCell UITotaltomregnettidsomCell
        {
            get
            {
                if ((this.mUITotaltomregnettidsomCell == null))
                {
                    this.mUITotaltomregnettidsomCell = new DXCell(this);
                    #region Search Criteria
                    this.mUITotaltomregnettidsomCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftDetailsGridControlCell[View]gvShiftDetails[Row]10[Column]gridColumnKey";
                    this.mUITotaltomregnettidsomCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUITotaltomregnettidsomCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUITotaltomregnettidsomCell;
            }
        }
        
        public DXCell UIItem546Cell
        {
            get
            {
                if ((this.mUIItem546Cell == null))
                {
                    this.mUIItem546Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem546Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftDetailsGridControlCell[View]gvShiftDetails[Row]10[Column]gridColumnValue";
                    this.mUIItem546Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem546Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem546Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIFaktisklengdeomregneCell;
        
        private DXCell mUIItem12Cell;
        
        private DXCell mUITimerukesumiuke1fradCell;
        
        private DXCell mUIItem10Cell;
        
        private DXCell mUITimerukesumiuke1fradCell1;
        
        private DXCell mUIItem10Cell1;
        
        private DXCell mUITotaltomregnettidsomCell;
        
        private DXCell mUIItem546Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGatWindow : WinWindow
    {
        
        public UIGatWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom mUIViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHostCustom : DXTestControl
    {
        
        public UIViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient : DXTestControl
    {
        
        public UIPcViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIBankBalanceListContrCustom UIBankBalanceListContrCustom
        {
            get
            {
                if ((this.mUIBankBalanceListContrCustom == null))
                {
                    this.mUIBankBalanceListContrCustom = new UIBankBalanceListContrCustom(this);
                }
                return this.mUIBankBalanceListContrCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIBankBalanceListContrCustom mUIBankBalanceListContrCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIBankBalanceListContrCustom : DXTestControl
    {
        
        public UIBankBalanceListContrCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BankBalanceListControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BankBalanceListControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcBankBalancesTable UIGcBankBalancesTable
        {
            get
            {
                if ((this.mUIGcBankBalancesTable == null))
                {
                    this.mUIGcBankBalancesTable = new UIGcBankBalancesTable(this);
                }
                return this.mUIGcBankBalancesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcBankBalancesTable mUIGcBankBalancesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcBankBalancesTable : DXGrid
    {
        
        public UIGcBankBalancesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalances";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem450Cell
        {
            get
            {
                if ((this.mUIItem450Cell == null))
                {
                    this.mUIItem450Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem450Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalancesGridControlCell[View]gvTransactions-2[Row]0[Column]colValue";
                    this.mUIItem450Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem450Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem450Cell;
            }
        }
        
        public DXCell UIItem425Cell
        {
            get
            {
                if ((this.mUIItem425Cell == null))
                {
                    this.mUIItem425Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem425Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalancesGridControlCell[View]gvTransactions-2[Row]1[Column]colValue";
                    this.mUIItem425Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem425Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem425Cell;
            }
        }
        
        public DXCell UIItem175Cell
        {
            get
            {
                if ((this.mUIItem175Cell == null))
                {
                    this.mUIItem175Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem175Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalancesGridControlCell[View]gvTransactions[Row]0[Column]colValue";
                    this.mUIItem175Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem175Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem175Cell;
            }
        }
        
        public DXCell UIItem198Cell
        {
            get
            {
                if ((this.mUIItem198Cell == null))
                {
                    this.mUIItem198Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem198Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalancesGridControlCell[View]gvTransactions[Row]1[Column]colValue";
                    this.mUIItem198Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem198Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem198Cell;
            }
        }
        
        public DXCell UIIverksettingavarbeidCell
        {
            get
            {
                if ((this.mUIIverksettingavarbeidCell == null))
                {
                    this.mUIIverksettingavarbeidCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIIverksettingavarbeidCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalancesGridControlCell[View]gvTransactions-2[Row]0[Column]colComment";
                    this.mUIIverksettingavarbeidCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIverksettingavarbeidCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIIverksettingavarbeidCell;
            }
        }
        
        public DXCell UIIverksettingavarbeidCell1
        {
            get
            {
                if ((this.mUIIverksettingavarbeidCell1 == null))
                {
                    this.mUIIverksettingavarbeidCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIIverksettingavarbeidCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalancesGridControlCell[View]gvTransactions-2[Row]1[Column]colComment";
                    this.mUIIverksettingavarbeidCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIverksettingavarbeidCell1.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIIverksettingavarbeidCell1;
            }
        }
        
        public DXCell UIIverksettingavarbeidCell2
        {
            get
            {
                if ((this.mUIIverksettingavarbeidCell2 == null))
                {
                    this.mUIIverksettingavarbeidCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIIverksettingavarbeidCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalancesGridControlCell[View]gvTransactions[Row]0[Column]colComment";
                    this.mUIIverksettingavarbeidCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIverksettingavarbeidCell2.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIIverksettingavarbeidCell2;
            }
        }
        
        public DXCell UIIverksettingavarbeidCell3
        {
            get
            {
                if ((this.mUIIverksettingavarbeidCell3 == null))
                {
                    this.mUIIverksettingavarbeidCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIIverksettingavarbeidCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBankBalancesGridControlCell[View]gvTransactions[Row]1[Column]colComment";
                    this.mUIIverksettingavarbeidCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIverksettingavarbeidCell3.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIIverksettingavarbeidCell3;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem450Cell;
        
        private DXCell mUIItem425Cell;
        
        private DXCell mUIItem175Cell;
        
        private DXCell mUIItem198Cell;
        
        private DXCell mUIIverksettingavarbeidCell;
        
        private DXCell mUIIverksettingavarbeidCell1;
        
        private DXCell mUIIverksettingavarbeidCell2;
        
        private DXCell mUIIverksettingavarbeidCell3;
        #endregion
    }
}
